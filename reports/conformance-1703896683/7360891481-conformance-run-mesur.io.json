{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f4123666-6f1c-4234-96a1-d9fcc53cb999",
        "name": "Clear Cache",
        "item": [
          {
            "id": "55acbef3-d84c-49ff-b938-c4a4d93cb944",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a52d7b3a-790c-4dab-b4a8-b59757c38873",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9cf176cd-0bb7-4c92-9611-e091645a09f3"
                }
              }
            ]
          },
          {
            "id": "285df2b7-65b5-4dd2-a102-b0f5d1b73d21",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1052480f-5ac4-4b81-850a-8e58e8fcc595",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "43f3abed-f01b-4209-913f-16c64eac166f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "0b9432dc-c343-4400-977c-61e719c49730",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "4ce92d21-fd79-4db7-942d-f75c19705583",
            "name": "Positive Testing",
            "item": [
              {
                "id": "98db883d-4c9d-499b-87a8-fd3a217498cf",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb265076-8d8b-40ec-bfa9-46b838db1082",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "74e42037-9332-4135-8d55-ce93f5bebaaf"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3a8c4087-72ee-43f7-a5ec-05aaa8674a5c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5eb5e59d-1182-4e65-ae03-adae5980317b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b5fe293e-6df7-47dc-b00d-e17b52877ab7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e9d8b8c2-d8dc-4552-9d35-7f15aebc791a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "381b7845-d4a2-4576-b028-10ccc1527ea3",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9780c83a-3960-48aa-b6c8-3d138ea773ab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4bb594f3-49e1-4f02-bb12-529bb2a54bf2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9abd400d-2c6a-46af-903b-82d53fb90c90"
            }
          }
        ]
      },
      {
        "id": "2449c263-6f55-4a0c-8cd9-6afc40cbbd3f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "aa60664f-3f70-465f-b1ae-0967c9dd723b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fdcdfdcf-4d73-4f4c-8803-4022d3458ca9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2e59fe69-afe2-4d20-8fc0-369baf480cd8",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d472a1f-2523-4928-b03d-692547e43674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "473a9f3d-47b2-495f-ba3e-7fdf52e48c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "805f250c-a155-4d47-af9a-6749af71f6f6",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94bfc799-9fed-410e-87fc-525bde4db351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f6f6825-1579-40bb-baa7-dd68c6bab8ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b40bc3c7-7dae-4168-a491-f23f300b3fed",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "509b41a3-3e73-468a-afff-a17a1d0d81d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f9aa2de7-d7f3-4c06-8967-2c1ea3f8afd4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d6d25c93-6056-48b3-8c37-78fea687b1d9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f37891bc-4bfa-410f-82b3-26b3138f9d7f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c00a1922-d235-407f-93f2-b737fed0d35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a431f4c0-8d99-4d19-832e-ef1090056189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66d72105-940b-4a28-b1a1-4da6a2782479",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "babc6a07-f9ab-4515-b402-bddc3ae7e138"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ec686066-4bbc-4a2c-89a4-d763c604b048",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4e195559-6711-4083-854c-30000cba5444",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9117289c-acf8-4db2-844c-19c70fdbdca0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b819d561-362b-4170-b3c9-c28a3788cb03"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "06b84723-581e-439f-a782-78803f567c32",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e9423dc4-9c9d-49ab-980c-2831f4aba099"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1790df4a-a84d-4ecd-ab28-36078e24fc07",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "63cbe3d0-7b58-48af-be3e-c70dbbb353b9"
            }
          }
        ]
      },
      {
        "id": "c47010a5-e1bb-4725-a677-cfb90948b526",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "67afc743-3cfb-4106-bd4a-f46c1b66b32f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "44678060-9376-4666-92fb-3d52d1112eb3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a1d225a7-dfe8-4ee2-b699-0f40468081cc",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd7c2aa-a54d-468b-8e52-5d485a653671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f5126fe-1ed1-4513-b0ab-0b33f94af67b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b07ad996-5fa0-40ab-837d-1071aa43bafb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a1ee9cc-35bc-4276-b4eb-4c4a17e3c869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce863ae-511d-4645-8bb2-a0495e2c668a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a65ffd-8990-4a1d-9a3f-00119dbb6f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1132827-0768-4e02-be0f-618ebe4aa8ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce28027-1dba-46ff-9c52-fe01b6a39ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d16e2e89-20a4-42b4-9d83-bf4784a112fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a810bd6-52e5-4f30-8c9a-e4923e08ad28",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d4a294d-21a1-4ff7-b4d6-9764baa332f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f68e05e1-be4d-4257-8a13-09cdbc2ab05f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6985af64-248a-4e79-977c-55a05a2b08b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24314b6b-7174-44bd-b25b-a0f9f60512a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97542d74-ffea-4fd2-8d79-7683aeee888f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be2f3f0-5c84-459c-8ebe-846c9618ef84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbe493f4-a3d1-4533-a818-d20276459ac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28da785-d4d0-4956-b05b-9bab94c2cdf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22720593-6a3b-4bad-9257-5031392ee20e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43893945-3eca-4323-bccf-0440b20d19cc",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df399b7-95ea-4a86-a4cb-63d8e34c56b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bbf846b-6c2d-43de-b46d-1b30b34ddef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e96d1cec-145f-400b-8464-be1457b2aa37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1152273a-825d-4f96-ba4b-55e9a023d4c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dcc4326-b43c-49af-ba18-326ebfbfcfe9",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb8924b-864f-48d8-b5a8-ae756851d56c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6f606a9-d421-4965-94a1-ed5345a21850"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6717e115-592c-49fe-a432-ab1bbf029c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93bc7dba-71a6-45e7-9b7f-931e36983973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "007a3791-67c1-453b-8cab-828f7b20ee9d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03fa7588-4788-4103-9969-06c314693885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45d451e7-1be8-4c36-b57e-a0444a0392f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22725a0c-cd7e-4ea3-8353-0d909ad20f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bea6e58e-d307-45f5-91e7-1fb108f92ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb0dcb5-170c-4a3f-a3aa-d025a4fb6fb0",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e05fb4-c720-478c-bd0c-3ed99894ce7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d1d227e-baff-416d-bf27-e4cb163e99a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc6a399-82e5-48a3-96d5-bccc7e894cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43faa6e5-4730-4fd8-88f1-5eda8818e0f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9675b194-a3aa-446c-95df-50ea4509b93f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "009f8ea5-1801-4ade-85fe-2fc27c78eb85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07b22bb6-f8fb-4e8b-8487-1da41d823cf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "966fe65b-8a7e-4e51-a404-cf593abdeabc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21df3393-ee48-42cb-9df5-08e16ac0c427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20346700-71bc-4ee9-adc5-a0141c17f854",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c016b1f-79cf-40a7-a093-dc93e2350c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4bcfe63-3bfb-4cac-9d6e-7792006811af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "384702e2-cb07-4002-a7ca-7462869efe5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "887127c6-f9e0-4122-a67e-803571a381f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd16834-4f9d-42d8-a7f8-0310e840417d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "411852ef-b051-4788-99cc-66343159525d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aecd41d-5474-4b5c-9947-ed89c9973185"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c14bd21c-ae7f-4ecc-a08a-6e3a3b30da19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f04fdaef-b233-4868-8a50-67f5d92eaece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a50987-16ef-4719-a89e-8da51115893d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "829d7ca4-fe93-427f-b9e4-8729ff93d2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d42e43bf-be03-4869-8d41-56a9f37eabd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd61e84-23bb-40e4-beb9-4d2837e672f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c797e3f-07fc-4d23-813f-5ed9adbd8464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f8c5c1-2ac3-433e-aa59-5c8d255fd3c9",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25938707-7b38-4e49-bad5-71f0020263b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc94908b-84d2-4533-a64a-513eb0fd528f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa8d6ea2-8c63-4958-ae0e-6b68fa1e5b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19fc16cc-d973-4cdf-9fc4-a26338fc066d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031028bd-0ae9-4a2e-9ba3-ac85c98dc78a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c58328b4-c430-4ef9-94e6-cc5d13eda207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4b78bbc-1f7a-4dc6-ba9c-2236537eb48e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e357e117-9e62-4f67-a1ec-8a2d5d218027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "147d5bd7-a89f-46de-9a74-58cb6d6d7c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2743c05f-628d-447f-91ac-d5c856d41680",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c36904-a1aa-4ff2-a336-affb3d81091b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46d93253-25a0-4d3d-8b1a-f61722401cf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f34c31-b03f-4547-b6cb-911aa7542766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ffaf57e-dd49-4bb0-aa6d-2028b3a99a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1610fc5a-6139-4292-a9f1-22f299c5a073",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a131bd1-cc4d-44af-ab0e-f83a89bb64a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29c5d228-cd68-49de-a322-e03c3a710dd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4bf1cd9-4b51-4729-af90-1ff588e46014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42dcf5e7-6816-4cdf-bdb5-26051070324a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cff2f0d-9958-4477-ab6b-9701ddeaf0fe",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e2df48a-6d04-439b-b074-c45a0b29a621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8fefba1-f431-437b-9f7c-61fa30472538"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37fd62eb-771b-44ff-aa55-a16bf98f401f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da4ca13e-0e41-46d1-95dd-1357ce91dbc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b181a084-af50-45dc-b676-cacc5cba9b40",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2107b16-ee28-49b0-a8c3-0838cbd5ee48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aee0727-70b9-4fc5-9973-3a429771b8ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10517875-84cd-4b1e-a9cb-36e916e36bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2474ca9e-25cc-400d-8108-5fcbbce20f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c495082-6eb0-4ac8-92e4-67bdbf1fc43b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "795bb4ad-6bce-407a-afde-e97aeb962a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55e74075-476d-404e-9f7d-642084de0382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a3b6c20-17bc-4cd6-9181-4dd9e3d1a4bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aff9322b-5989-45ff-9055-608b69a76ee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0771bdb0-aa55-48b4-b2eb-f8e017f60aaf",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bce911dc-f363-4537-814d-412a6ed77c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cc3ec63-4d01-45b4-9950-3c0c2db4fb50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65452abf-7ae4-4f4a-8b6b-80b18e834ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1239170b-99ce-47ce-a78c-303b571a44a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2599b62-3eee-4496-977e-bfab8348d6d4",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70925ca-ddd5-4b88-82c4-e0a8b13ae14c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b9df4a3-98bf-48d2-ac01-5dda13ecc114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef8ed05-a02a-4971-83d0-6053aed697d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "68b9f03c-5fdd-4d1c-a189-8e11bf071cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07adc8d7-38a5-495d-8e50-84192fc87b74",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73f1c41a-4742-4c59-9c4d-04852355d164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aed3cb22-906d-4025-9a6a-9150b83a6d5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bbeca36-c47f-4b31-85be-72bfe8eca55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a82212c-6a1d-4abe-a029-4b128e3a3c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c34d4e01-a682-4cca-9fac-fd48c508b360",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbac8078-37ec-4627-bf0c-7cf00da45126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0d900c0-a6f1-4b8f-b902-f0f477b8bc35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aacffd54-3b58-40b3-977b-643c7c8e3c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d1d9b40d-57ef-43d9-b581-d18f85d8590d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e669c97-8f54-4c25-b417-a5c89cb7cdf9",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2417f899-4b35-4163-ba42-f65f34087cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6032cd0d-261f-451d-ade9-5f2ef68690cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c26c32e4-da5c-46b2-9b90-f864eaf00105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7922e9c-ef5c-42ff-be3a-232c9f52805e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e74d5418-b71f-468d-96b7-0ac9341abed7",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc2fba94-4835-4a89-8475-432219eef19b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "631c6321-d3de-4b87-92f0-b907b5a72fde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9af4ccc6-7293-4370-b9b2-273cf283b187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "94975f12-42bc-4b1b-889a-4a84476856c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ce9f54a-d7cf-4088-b69e-1b7323ac8b9f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23dcb4da-1ddd-4014-a7c3-11a327d0b328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa33779c-ed17-4c44-b276-8f35ccc3bd5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf0077a6-c8f6-429f-8b38-981a723b45ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "23478303-c802-45ea-a0c5-6e3edfaf7db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9857d34f-0132-4ee2-9cd2-69418b2c2cd8",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c1e7fd9-4341-4e3b-86ec-452fb9ffda05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "387a4fda-fe25-4447-a013-eae311ff30f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26adac00-e2b2-4468-80f6-9849a52197cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e108c952-13db-4048-924d-f3dd0ef64d0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81842038-db04-466e-aa6c-f926d21734e0",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "793f48e6-9ac5-4d09-84a7-1dc48ddcb3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a41c569-bec9-41c7-a35a-b6a975f3976d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95797df-b4f6-4ae1-bd6c-20f85146cab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c353a71-a640-4368-a4c7-0b05048b2abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b73a17b-6c04-4b19-86d8-f2a09a388329",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd03e1b1-d32d-478e-99b3-3803c99bb1dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e7e594e-b0f4-49c4-a4c6-f0fdb4eead6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77260ed4-fd33-4027-ab6e-acfca7e2a6bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b70ae3e-34c3-464a-9aef-22569e9203f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd4add8-b899-42ed-9af4-2188812f3fea",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aabf8e65-0e24-4f78-952b-52db79f3c6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "359069b0-0576-4fa2-af03-727bee513245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28986f5d-d3c2-4d60-8238-fd92e7acf58f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "58c48b0d-1565-430c-a32e-e5ba7151e4d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a0d0e1-a816-492c-a494-a84476f76ec5",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d65436e8-a810-4554-ae09-7daa06854655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51e11362-91be-4603-8feb-ab61d1654cf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b43565c-ef64-4310-8139-ccee3222043a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "37faa703-5bdc-4220-81d9-adae3432878c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71dcfbf7-0eb8-4b77-a979-204f9c983cdd",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1669ec-3daa-4d82-b561-08989c71a3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26342066-9648-4605-9cfd-152c0787f10d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d37e0a66-3a87-420d-8e7d-2aaa19f99d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c305af27-e5b1-4136-8506-47e4f525ca56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a2525da-e9ce-403d-9636-8dc61781145e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ab22f7-664e-4a50-8a46-ad7e0c3e7bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a372bd17-be7d-4c06-bd6e-20db3c0f6029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25e030f-f717-4c41-950e-c221021dc90e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "322a6a7c-9eb2-4f72-b181-d29d39330dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07083b5b-1ea7-446b-a428-b771ee279073",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "497874fc-a51f-499f-80c6-9a7385f4869b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "713584da-53de-4db5-b494-c677069c8bdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6055ff2d-3bc5-4e90-aaf3-f82c844d1b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0358b69-ea97-44b1-a9bc-1a17b528e181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "427673ec-2a5d-446d-8b04-0850510236c7",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ff34d1-ac62-4a95-ae0b-11b99daa80c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34723c06-709e-40c8-a9e0-74247121725b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d79e425-9edb-4c0f-ac05-0440a5275476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "2727120b-65ec-4be3-af85-440e21c6baf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5a6909-cbfe-4ebc-9e2f-979fe915dfb8",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a0be7dd-9099-42d7-8b00-dd4f4e89b798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0958ba26-11aa-4c16-b34f-5adc2bb501c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6480e9f8-445f-4381-b0fe-69de8cced4d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b98413b8-a17b-4cdd-96f4-4eff90976cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd7b3a71-5a0f-4cb9-b5a1-b7fc2bd9f061",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "167a14ed-496a-44ee-a3f2-b66e7d27918e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b02348e0-f5f9-4eec-bc11-bfa0538c2f45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebfa8421-af63-4e2a-b6d2-86657e446e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "07bbccd8-0ddb-4e27-8115-6dfe28f51170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c77abd-b985-4eb4-a8d6-344da5228b06",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67cbfc8b-8a28-4d38-8197-2123d811f6b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c546dc7-3f0d-4bc2-b115-51336c32fdc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f325250-2acc-43d7-8401-e287b119964b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "67e5c01c-d71d-4aa0-939a-4cc1a229e291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b0c9f99-4884-472c-95f6-173e06b001e6",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "689a8aa4-063b-41eb-aebe-c33ae4a982e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16c75500-5e80-48cf-8100-9e1de26f3efe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c80d9cb-38a1-488c-b008-cfcf7108e328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a622a489-a0ce-4fa4-8622-634ce30d17c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a5a415c-26b8-44be-9bdb-f3ecb1387497",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea1c9ba-a3d4-4f4c-b5b7-a326baf8f5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e47fdd5-a580-460f-b86a-324198b23e47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a58d756-6460-4a48-a689-4434fda2a37a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a5bb43d-3e88-4f09-9341-e211336f412a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92caefa6-26b7-44ac-a027-bc92922c9dd2",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "812ea2cd-071a-4641-9a6a-636601408885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1502ca65-8fc3-4364-a3db-8dc0cb5853c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99540aed-6be5-4582-b142-9452867ff29e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8f4e0f7-213f-4d66-a651-2ad727b76c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba04f82f-72c5-4508-a9a6-7b13078d911d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d0011cd-69ef-4df2-b605-d2a38cd041bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4187d77-6fac-4ba2-b070-1db85ca5226a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb811a25-dfb2-4d5b-884d-79145a0dcbcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "be712c99-ab3b-4079-9185-3cc081a34ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b940ad9-86b7-46ec-891e-108fbc32828d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da5ead5e-4d2b-4b7b-b7a5-f467afe7da83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0eccd10-2b52-41a3-a4c3-7c215c1cbe9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca94957-9206-4372-a06b-d1e81ddfba95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "17cce101-26d6-46ff-ba8b-13155f50ed53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f0d18c-2148-439a-9893-6228061cd692",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a02fa5b-ea67-4adc-be53-6290848cf907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88abeb43-1eed-4c1d-8310-5285b072c2f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82aed68c-5868-44a8-9913-04e4872dcca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb075d59-29d9-42f4-8949-a1eb628621f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27979df0-a358-45bf-ac0f-d8713ffe000d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2efb72-931b-43b2-a9e4-ca802c34bbd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3ef5179-9406-4593-a341-0f546e63f2bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b8fe2b-3f8a-4194-a1bc-624e4483e96c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "42aa661e-e3f6-4f8e-84bc-07305072c2d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f67b2d2-e967-45d5-9fec-4108e26cdb45",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2eb014a-78a3-4372-8b39-d8e0b35114e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51789604-768e-40ce-97be-859dab8c9156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e3322e-88b5-4be4-a537-9ab1f5ce06fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca246829-f832-460e-b71e-6b8c27816fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8149579-55ae-40a3-850e-1292787b9759",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74831c31-9a16-4064-8cd0-1d572435a81f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30a1dfe5-4551-46c7-9657-3401a492026a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b6d3aa-d827-4bfc-9815-bb2a1bb90d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bc5ff5a-90a0-4717-9b5a-571d0d15c79b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e3cf8a-c3ac-4cda-a7b5-03ec04d8645b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a305d3-dc4d-4261-9d56-5e39eeb5b367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52ff9c5e-556e-4a67-a542-3b7e4b037e5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d583b64-f332-45e6-950d-476cb80f15c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a49379a4-99ed-4117-ab18-40dae3a81bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f60e82-f546-433d-9312-3abb9fb0c0fa",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc8907f6-9a4d-4941-aa1e-4fc1d2f59b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4413e743-f361-4d5a-bfeb-a25ec663b94f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2009ad8d-4eb3-4110-b786-6d00307610d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b1edb6b-4af1-4516-babd-ce99e5830a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe01a1e-c0b8-4b06-be9f-d53c840878fb",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "497bf731-1d37-4f36-87af-65177ceb6429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "499d264b-6db1-462f-8b5f-bde46bd71c81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28adfc7e-b02f-4e55-90be-01343610004d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e3cce13a-211d-4874-a8fe-49bdd6d28991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b16c3d4-b161-4dc6-9e15-6876ae4d3d2f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2754cc5-a512-4867-916f-89e94cdb9adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed2c80da-5b59-43fd-8cfa-a58568466121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06c58b6-02c4-4bc1-a7cf-efc49a249a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "173473ef-9191-467f-bc66-209e0659995e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1bf981a-ee93-4c2b-9e46-2d4706974691",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "468a3321-2102-4b2e-9bf1-3f960e9e6f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "788c0ef7-68cf-4a24-bd38-6dde4faff9a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60826cf9-d63d-4b3d-a939-96b2150e826e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad817b49-66af-41d7-a358-d8f26cbf8bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af46e1e9-23de-4960-b6ac-51d6f0b2c71e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e2d9dd-b56d-4aff-81ef-05a6aeeafa63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8d3b9d4-632a-48a5-9c25-314f2c5339ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b60e8cc6-4bcb-4403-8a70-b4af8b109c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2389c436-6ce5-492a-91ce-63eec63546fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1ae8755-9b8c-4739-ab54-4bae522f3e76",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0839a517-529f-4a3e-a852-469bcb744d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85ac627f-cd73-4734-8c6c-8f6d9f2e6fca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1740c2b8-db16-4e42-970e-df83228cd78f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b130164-98ef-49eb-9185-76c1005648a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "740ee68a-6c40-4e89-8079-977dd08fc8a1",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee80e51-7c86-4f52-b7ce-9842ed287564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b89327f5-0469-435b-85ca-929824734d2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb1f734-7b08-4f63-8895-860acc350f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "79deb871-acbc-4de8-84c3-fa9f3ad7fe00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e9ba90-c507-4ed1-be6d-adfca2fe3653",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a934317-c524-4350-ba90-91bab21795ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b492a663-ea04-4780-9473-e06781d94bfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed73292-b103-4a6e-ba67-86e31d191981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f573080f-0689-436f-8688-5af0f6c600d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b691fa21-489c-4a0d-b9e7-ecc73f5a99ba",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc9778e1-6be1-4e38-8cdd-17ebf9deeb74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4968a19c-9efe-45c3-a77b-c0532871c294"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23120306-0769-4e8a-ad73-0ae721ff1134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d7e45cf-a517-47a8-9154-32abb90a984d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9391ffb6-ab6c-4cb3-b408-d67d6bf1ab26",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced3ed70-cdce-4e53-980d-2558e1b300dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc576651-8399-468c-be27-7dbc19f3f64a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c762e631-3523-4c47-8f46-b1c5c40ee17d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "689dbb18-e5c5-45b3-a823-5b51bc1e8be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1719dd59-7ff5-4b00-94d9-8a9549aee0aa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f6f0c1-4f4c-47ab-b1bf-d4e6beb9be1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b8416dc-29f5-4e28-a611-8c8692a0fdcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0dc5fee-e0e7-4ed4-8d56-df028ed4f017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6727131-1d7e-44d2-95e5-144e5e073a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "996a248d-fd5f-426d-9e5f-39d3104992ed",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91663dba-bb0d-490a-8810-4811147c85f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9959431-e99a-4827-ab82-72d815d937a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ebb576b-5c6e-4388-b75f-376725b5e93c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5310b17-e243-43e4-884e-ca8608b971f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c397311-e098-4d4d-b309-aea1da6728c3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a87b8bef-ab56-4de6-a0c8-c59c1e619fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4df96b95-7ac5-4f66-be02-716b5afaf6dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e5295a3-c488-4926-9449-05b48916be29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a396070e-a6ff-4337-a9a9-291336b6c54d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "768ac1ec-518a-4ac1-a025-403d212ddbf6",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a0cf52-f16e-4616-9710-e0cbd1100971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc2e67d3-64fa-4429-8b07-66bf10852226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11203686-c0eb-4342-8688-517d59918744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8dba86f-6458-4f14-9a8d-3158a8f20fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82e9bf54-cb18-4a00-be6d-910f025f88ed",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b336d6eb-0c6c-49e3-ad8c-05f3baec23c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c47aaf5b-c5b9-408c-9a3f-202c70474f15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db41fafc-3550-4beb-a7fd-e7f4b7b14f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a1fabf6-cc9b-48be-abf2-d4c3c02e3832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09340a0a-1589-4efe-9f3d-ddff177245b7",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1199d200-6c3c-4f0d-bc4c-55b057e8db95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55d1040f-3e09-4307-9345-db116f699fe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a42fa7fb-6cd9-4b76-9e53-5a07aa7f95ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "767e5bc3-587c-4259-bfd3-9323a24bfc36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9072db6d-d74a-4ca3-bfbd-854b08e7ca6e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c40a04-d32c-4452-b393-7730627633d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0629e09e-ea63-4194-a6f2-1405a6299f29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c64e5cb-c3d4-4b62-ad26-0ed0b4b49e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1eb345c-5530-490e-984a-9821555b8cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9585d8c0-231b-4195-8144-330c2885f3a8",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df68fa6-ce5b-4f42-904d-426ac8151057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beed833c-6e22-411a-950f-579a6269e7ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c93d926-1a1f-4ce7-9d4b-1d7905fab385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "134b6558-e6ae-4712-be52-54cf30121f2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a83a11-a81f-4676-b333-c4d6c338782d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95abe528-4062-4542-a584-b1bd618c6fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ad1cd3a-701c-4f17-b02a-0edb2ee54f31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2083c82-72df-431c-b111-09e323ea81e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "86ea4361-b2e0-4118-aa8c-9795d5aed94e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649e6119-c010-4cb4-a3f9-d2762141fa5d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2eaa71e-0e0d-4a47-9074-7f5cb2980200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d7328e1-b7fe-4ea7-be4d-c8e053bb4892"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb5c51b9-9cc6-4145-ae87-5f9474becb4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2392d29-b7bb-4f9f-9363-4b46345fd078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39262f89-c9a1-4492-b10c-88aff567a98c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7e89282-8739-4959-ba18-f6896bf21eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "044fdb45-3296-41f1-90cb-f6ba63f71b8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2fba7ac-c874-4fa9-ab1c-fbf1b300d964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4aa46d89-e16e-4f0c-b7d5-5ab0ecb0f284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dcbec1c-cce7-4abe-8138-3dde40515cb9",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5af455b-27c8-4c9f-9661-80f98f94d15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65195eb0-c813-445a-b611-521fbab02b65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56aff0e9-eba4-4a48-8505-94977e9f7789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "db3cd78c-5d95-4f60-9e86-0a2bad019847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bdfd7ae-394d-4d23-91f4-59d7a0b0b7c3",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a31b633-ea06-4250-9a68-dceda8999d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c746d5b-1428-4194-9cc0-ab1484cdbe83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8679645-dabd-4e22-a791-afa3b0c5f92d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd81115a-ace0-4d3d-bd88-27ae9110a58e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38168272-24a3-41f9-a6a7-c25b8285a4f0",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "148bfcb5-0a69-4fa0-b9bc-cdd3dea6a51b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11a4f18d-c922-4d32-b978-85105754baa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41e9791-31c1-4193-8b0a-432105b75581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "49b67628-ca18-4ac5-814d-b74bbeb57d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b161076-29bb-457b-ab2a-3465b52a43e1",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1896c100-50bd-4300-ad9d-783bd3dabb2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0304e8a4-a2d8-4f8a-8fb0-68efb0fee991"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5329c0cc-77b2-4d07-b3bf-1e8ca12f595e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "99206fab-dc88-4466-b2ec-2591c0347892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91db0ec8-09bd-46df-b79f-16ef7efdb21a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1925956c-70df-4d2e-90b9-234d693cede8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c34516e8-906e-44f7-ae52-462e9c2c5ea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30126dd6-b8a0-48b6-9587-e3b3a43bc263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9d2f35d5-d8d7-4dc6-9bb4-6fd110fcbcb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef50bd05-bd2f-4cf5-8c2e-7082575467cb",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bfb0c9c-a0b0-44e6-8e16-47fa3132af15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e1e74ca-0a8a-4c70-85ba-c813a7db5a39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0afbc3e3-ca70-42e4-84d2-2f677958af93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "033ecf27-ef3e-405f-b3bd-76127774b3f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "497ed17f-42b8-4a15-9aec-b4c6e16c9cb7",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "888a3841-b1be-4694-91b6-d7ed8bbbed34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "737249b7-3d15-4f6a-9483-c40c6601d33b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a6bd4da-27f5-4fce-a99c-028264ac51a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c21d729-4c58-4b30-96ab-2c22ecaffbc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b1e98a8-150f-4565-a04a-83d17f0c410a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d525ee1-770b-4dfc-9fbf-1a35ae978513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfd4a641-62ff-4952-ac79-6f58953ffdee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73073375-13ab-43c4-bf18-8bf705e56ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff06110a-295b-4801-83b4-3716abbff311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ac1cb8-b731-4f8d-8532-79f5d728da3a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d46d13a7-d185-4dfb-ba38-c29ea0b09b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40f59f8b-4a7c-463f-9eae-47abfb9c90c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2298f9-c88f-400d-8b5f-5ff9b2789e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb5c817c-23bd-4c9d-8d19-06c3edf38187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58a71213-439b-48de-9c7b-64595c95dd79",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9975913a-0236-4030-b527-951b6c2f1ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "477ff50d-3c16-492d-9f27-55324b65ea8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e16b2d-155b-4634-a3a0-0c3e27deeb42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "66348e74-2406-419a-ba23-5fc6d94bea62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec7b62a-4ada-4861-b852-c156d0540296",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51463908-ef3a-4567-a941-206041715304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f930ee9-e1cc-4d8e-be76-53b32ed6b131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4300c0b9-fd88-41f5-9f4c-1aa374cff3a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b9549c40-7d70-44ec-a5b2-bb707133f471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39b5f2dc-9421-4090-b76c-1ff93d6afa35",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14e3d05d-50f4-4eb7-9c56-1ca81cdfdb45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67790ade-d71e-49c7-a6ce-b67215cc80ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca38a37-29da-483f-9c43-6a74cc281b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "778c4070-38c4-49b8-ba89-a858a6c32c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9059f562-7cf7-4428-befa-8e0fe207b682",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06eb778b-1c3c-492b-90d1-f4a828b68946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78b3e5d2-ceaa-42a3-80d4-b4ea6d584e38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32aed72e-adf1-47b3-9769-d88670c70046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "07eed7ea-678b-411c-9802-21da851833b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195584f7-99de-4870-9a21-de8b4a14519d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "981e14ad-97f3-4c80-81f7-bb2431c1fc68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39f1817b-370f-4749-8074-9ba162268dee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad3c23b1-5d79-4023-81d6-82024de8b81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed2eed30-b94f-41e5-ae36-d017ecf86d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e4cce93-6c68-4300-b723-50a5af53610e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "417a4c6e-5fa6-4d2c-af9f-b5e5a08c50e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04adeaec-ee44-4812-af8b-1c3be8141cb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f3b481-a547-4e24-b746-3162caac0cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4395b8ea-a17c-467d-ab19-2a9b4dfe26a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f0b5e5-6066-4cfd-b744-739da6a7067a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de3e072-2d40-4dca-b970-4293e80ff36f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "158721b8-831f-4fff-aeb5-ec98bc180930"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d823b95a-9179-4d54-ae87-6ad69582070d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f0efc409-cef1-4fbd-ba79-6793b9d8f9a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ded22bb-fd45-416c-91a9-0f57dbff8066",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "522fe571-e7a6-4003-91df-7531616193cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db53e527-8a8b-4bb3-8c8a-84d52a109855"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "624118b3-cae0-4745-8ce1-3d2ecd4a165f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "143e27c6-3f92-4099-b8cf-4d5328206c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "479f21bc-e7f6-47ed-a784-0d16fdf294ce",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d9825aa-0b50-4977-9b3b-6d0ca58dcd71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73acec1c-23d9-45b9-8413-c3cf8341508d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83016f04-af51-43a9-930e-2b298316a364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d9b765f-9056-4aa2-9fda-e780d2668f1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "583edffd-ebc3-4e89-a95f-1a96d3e0f13c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f170e8a6-2db5-45a7-a72c-66abd0fb787f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1b279a8-3d72-4fc5-b6c8-332c2e9255fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e32709-ecd7-45b6-a69c-876879f1a71e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6910bb8-d657-4eb8-a7ce-407b75f08902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc5f671-8010-444c-8235-af781ee68ec2",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a68c0b-16e5-4936-825d-b10d9a13ec96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "153f7734-b08e-40ea-8914-595976adbc3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b1e38cb-03de-4502-8cba-5cff88373373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "68ebab48-db5e-4d4c-82f5-e158f25b0de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32c9b463-b820-4294-bcd9-3fa56a53d498",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69eb0a9a-2c40-4b7a-ac28-3d608e4b9c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f721bb3b-95b0-4b73-9447-6fa9d87b51f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55685d1f-ec78-4b09-b882-8b95d519ed2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "13482488-6626-4a96-93da-d948f2f7f2f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0175452-5fe9-4c0e-8baa-ced7663caca4",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b8a3aad-e1fc-4a34-b5c6-323499ddda3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c533250-769f-41da-a9bc-8b9a51e843af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2027390-811e-4e1c-9200-32b8beee8086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf8b5a33-ec6a-493a-bd07-c9645e108160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7edefbc6-8c93-4dc0-924a-c4e7b0da0abc",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6805d10b-d0a3-4d70-b66c-e7cfef1712e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d0195d2f-90e0-42e9-a289-41f203d7f0f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a842d5a-7d37-46e4-8a01-98c10164ce08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7cda8b48-a813-4509-9541-352388ec4b4a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5b7fa95b-ec99-4b23-a165-f1681c21342b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "91f27c15-c7b3-4519-b070-d4a4f94c9c11",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a12303d-2c49-4fff-8329-76c8fabed1f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b866c29-a820-47d6-a87c-0d42a42d5e2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea76962-bc03-4219-9a88-1f84b4ed1d73",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ea92ad3-d97b-430b-905c-5311bae7c610"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "985699a1-9d58-4ec4-8074-c93a4fdea278",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68bddcf6-4907-4b0c-a5b8-d01a1198c79b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "96d45e6b-a0e4-400c-94ba-7768e171d1f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac3a20dc-ef7d-4426-a9b1-59e2741414c5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1c9c5160-11ed-41f8-9ad8-d1060d146ed1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7c7aab43-807b-4b7c-ae2e-3a96bb5feb7f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "feae9719-39d5-46c7-9956-f3d4140e394c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8fb54d43-0425-43a7-b438-996bba7d743a"
                }
              }
            ]
          },
          {
            "id": "ab56fe03-8640-47dd-a11e-4f72f6206a9f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d917aded-2f92-4a7f-b293-2ff530154314",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "36343a42-7b35-4783-b8bf-fd2f447a65a7",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "253e4c8a-5e72-4944-afa6-d185a9a5d8db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9b9d1ff6-3b09-49a2-b693-b489a0fb2f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bafb3bf0-d563-4ea4-a2e4-b68b53364478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb1888da-d284-4430-aac4-a3603c8e7399"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "744544e6-ce65-4684-8f8d-bb40693f77d7",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8acb5ab4-3d0b-4ead-8f7f-45f5cc5284ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8470ba44-1b52-4717-9fb1-e03d92b27dc9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04fefb56-e679-4523-aa1e-71a9ef3ca15e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2808a595-af40-4a85-8d84-317b0399e5a8"
                    }
                  }
                ]
              },
              {
                "id": "27c525ca-5cc9-4872-aa27-2f2fa1694dcd",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b3859a2-eefc-47f7-86e6-dc263f09db5b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "56ea224c-0c39-4b1f-998c-d289222c5fd1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f3d8892-17ab-4541-8309-b382198ef4d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c39be1d6-becf-424f-9c16-1cbfd86435fa"
                    }
                  }
                ]
              },
              {
                "id": "d3c83ac5-d3ed-482f-bf14-af807d7993ca",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8dcc5b59-76be-4998-ad9a-9617556d8ffb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9af059ae-3e16-43c7-84a8-8bf6affeb17c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "710ca576-0de4-44cc-8b74-a7f2f6d85f0e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f1a6eaf8-58a8-49b9-b732-99d002b2a7d0"
                    }
                  }
                ]
              },
              {
                "id": "bab7d45a-9f8b-4840-bd6c-755c4aac91d4",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "78b0ed94-2b63-4b40-8bce-9ec3ea4fef6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b3f6c57c-628b-4f15-b2a9-cb9a6c5e3fdf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "76ae6dd7-1fa1-4ded-9bf5-20a901830fc7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d4dbbb6b-f853-4b5d-a170-aad7e951f1c9"
                    }
                  }
                ]
              },
              {
                "id": "921b4102-fa7b-4682-8e0b-9d12fc089c26",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e56cfd9-eaad-4fde-9691-e4d174a31467",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "573c6e23-31e5-43d5-957d-b964db50d0c6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0c2421c-da48-4366-ac80-dff39cb9895e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "68121606-b569-427b-b250-87ef3add91f7"
                    }
                  }
                ]
              },
              {
                "id": "2d246f97-fcab-4b30-b174-4d8dfaf4d471",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d960c6cb-3958-4832-8c0b-982ede767041",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "962a3103-558d-45ba-88bd-8a875cf797ac"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ebf2da9d-5942-4344-8a4e-6a7180529705",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b1b1838d-51d8-41f4-a73a-9f89887e1a54"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "00481c9e-84d6-4f9f-85cb-7132bd3e32e2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4ae13d19-94ad-4add-bcb8-513a45a11500"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f6225871-ae49-4848-9531-0f60578f1f8a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "833911a4-4a4e-4ea6-aacd-842910f3ff89"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "89407de4-1b64-4a9c-9188-a86ea17fff7d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "053526ee-18ea-4237-94e0-aa3a25f48e51"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fc9addb6-c8ca-4b3d-906c-3d1c3e176459",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9c2a4a3b-0f47-4e5f-9149-f5dd953d0539"
            }
          }
        ]
      },
      {
        "id": "9cc022cf-aac7-48b4-9d9e-70e186ba5beb",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "da56dee4-2abd-48ef-80d9-a82f564b388d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "66f7cd71-7699-43e2-9cf4-379b29b90b8f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "885c503e-f91b-4eed-9344-0179cffae700",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b199fe8c-fa2e-4caf-9c70-08dfb396ef01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "885ac8dc-5fd2-4dfb-b96e-7e1b382ad566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba1152a-0d9f-49b1-a169-09c5a655b653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "22f62a3b-9fb4-4da5-afd7-26256377acd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa50cbb-4a4e-47ff-a070-ba3bbcba7e51",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b50096fc-0b54-4f4d-8e21-d7e982e96752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a7c9dc5-4db2-4dc0-aef3-a99e141a76b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3564d362-ef1d-404c-8458-1059386f1721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "65f737e9-3a26-429f-b9f7-027a428b747a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ffe3a1-0979-433e-9c95-c98d06a28aa4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d106a9ca-c6d9-49e7-8e0f-06e1c5b0d8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4033833-d851-4c55-9685-65b98edcc646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab9894b-9791-43f1-93ef-d3bfb7209fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc34bc6b-2c18-45a4-9d98-9485ac973634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e63a61-234e-4b90-b0be-f25c6db26dad",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d2d567-e6c1-4118-89da-9b9b23ed17ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8f70bb7-51b9-45fe-b7d1-e28c17accab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0108158e-4b8d-40d8-867c-9607f091d317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "21676dbc-27fa-4ea1-b10b-93d3a51e0cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5890c17f-6e69-4db0-8a75-a74aeb858a78",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6279adeb-a4b3-4029-9819-5f4380fb10d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44c187a0-46c1-4b8a-973c-32d7535d6ba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7ae8a5-3b77-4db9-bfc3-ca35a38f160d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "39a18927-06bf-476b-a707-aeb57d4f4d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2222d8ba-9426-479c-aac0-861cf74a4ccb",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2c03ea-e052-4e67-abab-fd49ec7ee4bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f417941-667b-4661-8a35-efea23ad511f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a6dfc0-6ffc-4558-a416-4e4d8fee9258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4430ccd7-4365-4f30-9ec6-cd882e882531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d98d76-8c26-4c44-8057-fc3390662001",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb76a48b-52ad-4c31-88f7-5237b13416c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a8c954a-9b3e-4842-ab58-ab00d5980b89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14401a9c-3bbd-4b45-9742-41a5f34f7caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "013c99e8-82f2-4772-a92a-27c229f6733d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19267436-77d8-450c-85b7-a426af10f5ff",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a799fce-3dcb-4938-bc1a-2336f8fe1f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0954e18d-a7aa-4f03-a7e1-e420a7625a80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef0b91a5-95c2-4b1b-942b-b829480e3559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "49d4177d-2fcc-4cd3-ab80-b9fe0f3f36ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc3beba1-7788-44ec-9685-588c7001416a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "795e1766-1091-432b-986e-63b129e7c764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86bf6066-82ea-4e4e-a142-b258e0e4b15d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36889727-f54e-4366-96bf-3c17011c7b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "920959ec-2a53-4bc2-913f-4b8a22ba7756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cb7a6a9-4779-45eb-9fc1-ff4958f567ae",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c0c417a-2ec0-4ecd-a830-515159031319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98adc864-6e13-4c27-8998-bb1e60739214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "527bb6a2-5a1b-48b7-b67a-254485f4d3fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c15ea9e4-5557-4bbb-8c74-b6cd0e539982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "599be9d8-70fb-40ad-bea7-5bc708d9dff4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc0ffae-e5ad-4457-8213-20d617eb99ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec5d171e-1697-45c7-b745-1d16e53bcfe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc4a4d1f-9a90-4be1-9dbb-0defa01bb016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "55685dc5-4c70-494f-bc12-c0f1f07890fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b72829-d78a-4113-bbd5-fa6e5cd022e2",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05c3af01-8262-47cb-905f-527edf608bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f474ef8f-65b2-4a35-861d-299bad687a68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fceabbcc-9e47-4db7-b8f2-878cb5631681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a77d81a9-7b84-4c3c-877a-4309d1524707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c7fe52-c35e-4ca3-b18f-c0567caf1ae3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e60cf2-7aaa-48cf-8a03-1f419d163480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ad62105-6ad1-4ca7-9cb8-fd76361dc2d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1864303-980a-4e50-9a1a-401a01a56386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb07f82a-0dad-4b0b-af8b-fb328695146d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "406aa800-0abf-48cc-ace8-2cda78a97b10",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40365061-382c-48f7-881f-e26a1a174434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86857147-bc61-4885-bf82-2029d2b083b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a0193d-fd93-4053-850b-17cca16ef770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "279665e5-8da1-41a0-b24d-5fbc3abf9a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15b2d137-16e3-43d5-8740-14ffc65be5e5",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e135ccf-55de-4de0-9dd8-e74447c31e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a6162af-21f4-4439-a2bc-f4d491fbc6ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b868664a-f4d9-487b-aa2c-5844d0097f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e21f8892-e700-4fb0-8959-e82df2260c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b92cbaee-dbd3-493a-8ecb-c72c476550f5",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b46561-7bc5-4628-bee0-6b0d3167c9e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e72918b-fc72-4407-b88a-d01df975e75c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b9cc57c-ecb3-42b7-88b6-a5dd1bc67a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2abed9c0-22a0-4917-aac8-d6ccd6185480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd57bd1-c976-4c98-8f79-7370687d5b0a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e224ceb-6d71-4486-bda5-b7a6b2220a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f96d2d0-18cd-470c-91ce-685b41a770b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2a4a075-2d41-4aa4-bfb8-6ba45ec54209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "64e39f6c-163c-40ba-bfd7-b1ba13af9d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a2ca02-433e-4691-989c-65582cf49e30",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "782bc856-868c-49b6-a4ab-eb44507a3261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ced679ad-6195-4d1c-86c6-aab4cebaf53b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9cae3ef-12a9-4b96-bad1-91192967dff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "130384ff-e967-4262-a28a-75474351ef0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef0fe1b-08bd-4a66-83f3-8a2772d85c4f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be06e368-ac40-4a50-b782-6a3babdb21db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed89b1e8-06ca-4a37-bb7a-93c5679ff324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb7f8c7-2ac0-477b-8e90-a68ef0fdbc23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfb20fae-27a2-4cf1-8013-52859bfb8da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd2ef8d-b1ab-4712-a461-24d531c35e8f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2277554-cb51-4b88-ac6a-2d9a53a6716a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65560e04-4fe3-4fe8-9769-8fc9b819669d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cc4c2de-de17-428d-bccb-4d9852f1fce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d758e511-1876-475f-a8d1-bcc43435e279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7486441-41a7-44ba-b487-26ca4cea7d99",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a62748-e546-4d5c-a8c2-842b25cdcd69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8db0cfd9-5417-4cd9-b5d8-7ab308b464d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b6b7416-0170-4ae1-b711-73c41ce6553c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30747af3-0cba-458a-8cba-b9096acb56f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e8a8c7-ca01-4672-9be4-e4b040ba0f21",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "634a5b61-a4f3-40c3-811f-13f253e2c691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "181635dc-ee63-4092-869d-3520dfdb08b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "346b4158-8c45-4e59-bab7-c2d710feb98a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a74566b5-643a-4e3c-866d-d60270b286bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "239168ed-1ac0-49d6-b738-f3e00652573c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be7b267-414f-4537-a04f-a60a08b2d785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db27289e-b4a2-4516-ba1d-251e082d2b26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "289ecf53-afc1-4381-bef0-e7f8914aa721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5748e9a4-3353-47c8-97e0-83e7a1c87822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34c9f21-0a10-4d00-aa09-4f49fd0b3f42",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a393a39f-072d-4d6e-abc6-811bcb6cb25b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8809be7c-784c-4df9-b5d4-496a417fb8e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2514c3fa-378d-4558-a6bb-1ca191aae547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a42abf9b-c421-4d8f-8190-695318ca21b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d4b3101-e89e-47cc-8a92-9e0634e9adde",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d66ad95d-7070-4ade-acfb-e8306b1cd03f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f78a2e8-1bd2-4eff-b560-56b4065d3b4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59df50b7-5e3c-4e09-804d-ea60a8ebc5d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aff3d77d-1a2c-4a19-8e80-7f1a65000f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea9aea3-3f1c-42c4-a475-6d5dd71a1107",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2075bfa8-2950-422f-bbbf-89463b267c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33e1fc10-6d60-49ac-b6ef-8620c15998d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd8461c-36b4-464a-9385-45ed7809c1af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7ae4686-b322-4254-a68b-1253f48b76dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "817532c2-e46c-4af4-9df1-80fa564871dc",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "419d9300-1f9a-4739-907f-1d499d46182f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08ef735b-ccf5-41a3-b9a1-573f4095499f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a322ea78-7a91-4780-9f16-af933d98f29e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cd0bcf1-dca3-4d66-9814-90e5c9e6d3bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "982025db-699b-4d24-954b-aac529a46730",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5986fa6c-cc16-4f2c-a18d-87793a19ed73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a19ac36-eb44-4f20-be3c-e34363e22e10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d10e19-f73c-423c-adea-ff90317b1d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca156fec-dd52-479d-8819-0f5b3a9405cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dafe1707-3bcc-4856-adce-86ed0cbbaf90",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ed5020e-e3e6-454d-8c4e-35dfca7818a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b81b0504-05b1-479a-89cb-07c87aee029a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72778015-25f5-4ead-b8a9-870d2b2e58d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cf2903c-9e09-4a7c-9c75-30947a68f84b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2e8dcbb-9ca7-4ab5-805d-0c6c525ecebe",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90fbb909-b8fa-4fdf-9c08-dc121bef7e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d58c602b-ab47-413b-bf8d-733b8174462d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13a4290e-aafb-4853-8ff9-6dbdbd695c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66d04160-2431-42e1-b984-0f745dacbd5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "447991a7-3567-4b32-813d-2a4787da01c5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e2b4235-1d6e-49f7-9239-4813f6400ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1860857d-9a6c-4405-9140-58a6f9c17fac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bef3e37-8e89-49c1-9b2e-73e0d96293c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c628006f-6552-43ef-99c6-4d83a664ac10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43eecc8a-3fd4-412e-aeed-93db8df5f16f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d801394-c8f8-4662-b91b-8bd48368ae0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03df33f9-3f7a-4802-8f2d-fc8586ff8244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4463cd26-2892-4aaf-ac32-640170cdc44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "864d2065-4f42-48c2-9e30-a5f6b60ca24d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ca19549e-ab49-4642-af0f-1327645e66a4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3db00897-a7a5-4958-a0c5-9fd644060e9d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b9d7bb6-ad53-4f27-be1c-fc565ce7ac1d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b229fe89-bea8-43f0-a525-2e5056429024"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82df8062-ea20-4aed-8ea5-d58ff23b742a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0861d9b7-707f-4f0d-b517-2ef66a0adc94"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "90f4a729-419d-43cb-9759-ee837cde6515",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f1478f7f-400f-4656-9972-c9a558ca3d85"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6583a59a-06e8-4dfa-aba7-46a20e8f5295",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "512e7106-4851-49c2-9603-0b512c0b7bcb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ea9928e9-f853-4627-b733-69dbb4b5611d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ea56b20a-0060-43fc-ba14-54d44c8f3c28"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "43f053bc-3210-4a97-a939-a00ec4002192",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6c5bacd5-5a3c-4233-80a6-193790eaa896"
            }
          }
        ]
      },
      {
        "id": "30c2c372-6fa3-48a2-836d-b23e93627d02",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "5d5553c5-7c41-4628-ae35-e12dae1b3138",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ca73c58a-4eb4-4ffa-9cf0-ed8437d0b4a5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "105ac8af-da2f-4139-9408-4d434feda788",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "743f5020-5a13-464a-baec-1bed55fca196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee78c4ed-a373-42cb-9002-cd4c1c85ca09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6b9c57-86d0-44db-be4b-c1dcbd838ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c19bd755-1a91-420c-91e5-b44b68c89310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6ad10ca-afe1-47ab-9212-95f9d9bcfa79",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f89ea25f-c505-46c7-a69f-eca0dbfdc85d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7101cce-0c59-4ec9-8df9-32b381d558c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4b5f2f-2e48-43b5-b688-b25574b1921f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e88acde9-0c1b-4ad8-86f8-da8fbff35d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ed0591-bbe5-428e-bf6a-1c1be8ee7e5d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94121297-cb13-457e-93a6-3ecee5eaee71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8960a5ea-cda2-4db8-bf00-a7bdb33428a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af7ec49d-8dcd-4502-ba8e-3df0c241e6de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba69b8f0-38d3-45b8-a4df-7cd3646d01eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88df1fb4-a32c-4bdb-aa3e-6ea2db2a218b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c47861d3-1d5f-45cc-a22b-d8fddc3b9d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f142ebc-7252-411b-ac12-bcbf1755a96c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b09b72ad-3ef0-4f30-910e-15c3fec24b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3910d05b-9ecd-40b6-b880-26847435be31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "081031e1-0ded-4426-82ae-e82b86604ac7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94057377-2fdd-47d5-bc69-9c33b70feedc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12a9087b-4bc9-46b1-9fdd-baa8e34a2618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dca33f7-bde0-4a79-838d-54ff3069446f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d59c3441-cdfd-45ae-8a62-1da35ee360f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3eb3b3-324d-44ad-809e-cb30ca6c263e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa50dca-67ab-498b-9927-7803185dace7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96362fb9-68ce-4df8-a278-2ea94004eadf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "764509a6-44f3-4d02-8e9d-7107edad3ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7200b455-05e4-4f89-8856-e9729668076c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c19d6caf-02b0-47c5-b464-a6cef673d704",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73fed34e-1941-4e26-921a-ff6af0b9b2a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56894b2f-0c35-4103-a6d0-5dba684fa5fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b24a5f26-9dd9-4c17-af09-ab85ace4b3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8b3d813-e498-4d67-8e88-ec7f959a4323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f6659e5-1c61-4c72-9854-32e76c09fead",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa97d61-2e0c-46a6-85a8-c43085dfb800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48c18fba-95cf-4483-8155-14d8fb733bda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62abc722-f7be-43ad-987c-5ced93b6a510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf4b0e0a-4ce5-4c40-8fd6-885d2cfbe73e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "123364ad-9b8e-4434-ab3b-4a33901d2bbd",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "497c6cad-0c02-4545-9e11-d918c16515ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aea6613-487c-43a0-8840-53132f3ba272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f87e11a-2a8c-4e13-a4f4-b354f45f38f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bab37cb0-fa7b-4903-b69d-e02d006af642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e741df14-3a53-474b-8196-6eb4f8864a6d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b835936-58c3-4ebd-9c1a-02a462369b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed5e741f-f36c-480b-855e-8a3ece306763"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26711164-45d2-469e-b053-7d005fd26c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "440febd8-fa5c-4247-bc6b-935c7c697ee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b863e17-324a-4539-8ca5-f08cb12d94f1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d4733a5-aabd-47d6-9645-a5239d770c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39f116ab-255e-49cc-82d2-64f4b1b6f19f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2bea45f-d518-4c55-9cd7-bf5f02081039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "07f0d043-bc30-44de-8c07-9f3e2a39b523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "109f37c0-c2b0-4640-8c32-ec42d3d55743",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "489e51e8-0409-473d-8787-009656fad99f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "143c8565-7fa7-4dd1-9256-cf411e6f42de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a6f96c-0215-4fa8-9b1d-38d1567319ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a7ceec1b-0397-4b6f-b7f6-9998fd7dba69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418d0260-8d77-4e7b-b615-976392d5728d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e0582e-a539-45dc-a327-a2899bc862ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc191436-b038-4efa-9190-0aa6c3d3bcf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d29eab7-5b2a-47b3-b5cb-dc4989d91ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aab71f70-7dc0-4335-ad10-9c2a099df2ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b74f05-c485-45bc-8403-3ea454d5ebe3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa2ccfb-00a1-4408-857c-0174e2c9b37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cb7cf4d-e782-4c3f-a9d6-4efaaf0bad80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17047c0c-386f-4315-b061-0cd8d029eaf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "29e93fbb-80df-4e06-b326-6aaabcb3fa34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b430a70-81db-45a6-a256-569305d48b95",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ccf4aea-bc18-46e8-b640-b370c089a75d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d18f7b16-5120-4a51-8717-dec1fbab5978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff2c7e3-0af8-4828-9e0d-1affae657591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a89c4286-8639-4c60-b17b-b3dd25019465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa5e3aa-ee69-4c90-bffd-4d3ef8b7b606",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "575a39af-92c7-4b64-8098-994714a243be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cb7903a-0e7c-4fb6-a75d-da3f1ec2954e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ed318d-511d-48a4-80fe-fb400a750795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "db5f3a2b-0f76-45e5-a041-759c434fc3f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e74269b6-5a8e-49f7-bf2c-e410d5917997",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ade964-f0ed-4eec-abd4-d6ee4a3893b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32c1de5e-85ce-4530-8c5c-9c11183d1996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "302405c1-85bb-495c-b1b8-d421610d658d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "59d6d749-d2d8-4635-9b3a-a139b6a9a5b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52d1fa6-b344-44ba-81c1-dc9d6524bace",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74344ee8-4fe8-4f00-bbb1-7a0cc9fe5916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "963c4376-03fc-4cae-93a5-3e17843ba123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8271856c-0d0c-4424-a63e-0e0fde02c19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1eec418e-44b9-4f3c-a5c5-fb49136799fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b78767e1-c9bd-479a-9f33-debaf3eadc64",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94f8391b-0b06-4cfc-8027-17946ac9c223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55f511ff-bdbe-4632-9495-799af70ec287"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e5276b-44df-4f4b-b2d9-0a09b3f12028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fc50542-2982-49bf-baf1-c0eb79508d26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2955f611-0dd6-4730-a1cb-193d13a54456",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "791721f8-dc33-4b28-9967-5e440330a99f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d36f559d-29fa-46e7-b791-b3c7f7011e5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "784e04de-7dd2-4c18-b127-cad99df80eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66b6e81f-ed11-464d-88d0-1e0c2662d743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65880304-e25b-4ba0-9164-118315833e0e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f6ac38d-779a-4d54-a27a-50523f3140a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bc84316-c19c-447d-bfc5-f078041fb0e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014bcc46-61f3-4477-9671-974cf951f7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ef62ebe-161d-4fe2-8975-0c4cfc7010cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8eb6ed2-5b4f-4319-9580-aedce09e48cc",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ceb7a0-a423-458d-816c-14208feee34e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1e349cd-02f1-43c7-9345-1c2b2437982c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44e8a70-1f38-4dcd-89cc-9538b3c52f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69cd6a9a-1dcf-4bf3-b2f8-b8146099c021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "533eddff-6aa9-4231-8d2c-101ffed87c2c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "251ff8c3-8f38-446c-8ee3-8318192911e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a2069f6-23df-44f9-b835-9d1ea8efb4be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bdee4a9-d9b1-4c0b-a492-82edda681d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d3280a0-a619-49d4-9a0e-193213efc012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99478f09-8ab6-4f0b-b8d4-ff95d5643589",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd491d27-e92c-4d13-bc06-350ab462728a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "403f28fe-bd44-4568-a8ec-d13616c58a2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf20f31-3461-4bf3-8512-c836d9e016da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70abb748-d771-41ff-8c21-ed42b9c52472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe46765-2ee3-43ae-9a5d-f37ecb050429",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab46dc5-0a8d-41fc-9012-74a5886577d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcd032d0-efac-41da-af1a-7190d5535e65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f42fe1b-6538-47f2-ac65-f79739e7b3d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8b03ee4-093e-40c0-8b72-b56e5dfa5cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69512a63-7389-4d44-9150-16dfa85e0f60",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a545922a-23dc-483a-8341-a44852b4d26e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2181c54-674c-49e9-9c6b-0c5de69025b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce715a97-0ee5-4c3d-ace3-15f5a473de6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96d59016-a067-411c-afa6-0f74dd1208b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "421197cb-2933-48ff-919f-618b20cb3933",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a9d806c-d278-48ed-847d-4b9a3fb00675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b93f7be-19aa-4d77-a132-a5cf8a5faabb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4cef359-e097-4b63-ac35-4b7951b9dbbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "315f109d-4228-4971-be3e-887c8db2028c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0b5b578-8054-4ad0-9489-f0ec16b40d5c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e925c7aa-8e2a-4600-8e32-72d6bf7520b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44975998-c234-4a03-80e9-9ee1f299e63a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85bd3708-5d9d-4ed3-8623-64ae923f90dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f31f6084-f562-4a4b-93ec-8faabe09f9fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b73240-e33c-4f87-b346-5d7c0b7b57d2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7710192-dc6c-4b44-83ed-51edebebeda3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53f6424c-710f-4ba7-ae19-a30c76252230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f415065a-9605-42b0-9c17-34bbdfe23faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8912f10-b236-4563-a8ce-29eccb6e5a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf97e60e-3433-4380-a352-4021c21b8a12",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b95d171-4d4a-4a40-9353-98768e68711c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9218fc4-177c-47d0-8af4-f3894a171c72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e76b5ef-3efe-4a93-908a-32b3a746ece1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ce26f3c-99da-4d2a-a9b9-fb7ac30f79ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b813da45-6010-40c3-9c69-adbd57c3d498",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "615facea-d44d-4b54-9de7-e82ff2cb0386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72e7fe5a-4a5a-47ea-8c0a-b63b3f931c8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5067140f-d203-4cd1-8cd6-15eaef46fb5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "364a48b0-a847-462e-9f04-5d8d59ff3b29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36980d4d-0e5f-4a6d-a459-7702efd4af8f",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "081840ac-b363-40b1-9b0f-a1f8ca627d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c8c37f7-2122-4831-816a-53ff3dab11a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaea19a3-c02d-4c83-9129-ed5bd6a6cf50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "138755d0-6961-4097-8388-b9db5743a8f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409e2de1-ba5a-4289-96f9-6c2ca07b3e8a",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f764b33-850c-4020-901c-9afa93d737ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c722c361-c0f8-4f28-8c9c-688073efc6dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d23038bd-e07f-4ee0-85d9-0bc45b4154d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f28a209-718f-41f2-b4a8-7a7d48a20f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fce562b-a5e9-4c0e-af35-c3ac18808725",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef8df9b-9b61-4553-a3f7-3c3d18b01cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef6bc001-5f23-4a3d-8e5d-b3a0f46a4c7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841ea228-4d27-4eea-a57f-0e380e9e7b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "835b9f83-7ee0-46bf-8da3-fc4eaee0237d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c9ce494-6e63-484e-8b65-4d51ad19a791",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c97f67-bda2-4686-b62b-9167c515160f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d57a8f46-7202-47b5-8e17-af4ac61f5adb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "933f5ce2-9349-4887-a79e-b1bed11018cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50b604ff-1161-43e4-bd3d-7971cb92362c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed78d88-b42c-4150-9c08-f0fdf2d4fac1",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ddd2a21-5cbf-4e8d-ba72-a09d0d1b6f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba32f167-e22f-4131-9c60-ce45c347e19c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b7d6db-277b-4cca-9909-6146a9d812c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1354a85-b142-4c11-bf09-c692f38d5f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6339a9a-cd5c-4cbc-8866-037bf823652e",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fbeb060-40c2-4c3f-ac52-8aa650a25f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41edc0e0-ee3e-4106-a164-7d4e2d89ec76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b94f0aa8-6750-47f2-a869-91ad5c586849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b582dc0-f711-4a96-bcf0-4442ba20f340"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8737b00c-4072-4259-9388-36d2184827a4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2c2cecdb-356c-4219-9de6-c1ffee52b4f6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15a815ba-8332-4fcb-80c6-6fb0df4cc8e2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3dac9d17-6d2d-46fd-8e40-6705d01f79e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c800b1-4792-4c86-9c9b-7f5613c00c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01349176-5832-49db-9337-a12914f6354d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e02b81a2-3a9a-4d82-a75b-4ec71a3c2d57",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3903eb07-eb50-456a-903a-5e387cd348ff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c025cd9-518e-4472-8aa5-d63134be01c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fbd7159a-86ee-4b23-b347-4a8eba1f5acc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f9f92192-b378-405d-88b1-73b0f7e26c60",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "da2e3820-d2ee-46b4-bef2-4d16e2786b56"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "be93596d-179f-4f8e-968b-e5c71611d6dd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4a012d15-fc91-46db-8d3c-26fed043dcda"
            }
          }
        ]
      },
      {
        "id": "cb3654c8-157d-4061-a3d8-35fb732f0e84",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b2f49cdc-19ed-4be3-8dc5-e69a8e0ccb3b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c3c11c18-5ad0-43db-9ba9-3c6da29c6592",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ad48f131-01e6-452b-80f7-2dfa9b87913f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43bedbc3-16ba-4138-b89a-aba443511e41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb4ab0b2-eae4-46b5-9c69-e628c2e10f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e47538e7-e414-4c89-a85d-027ae6231df0",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a31ca2b1-3d84-4fd5-953b-d0bf07363d31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95ea3078-e3d5-45a0-a188-f6a06b5bd3a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c95a0bc6-ed6d-4c00-9bb3-358934edad01",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b1acccc-df7e-4167-8a3a-e7d27fb5a451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b065596-e108-4496-a8c8-750eeb39a2d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c9e146-faff-4ddc-ae3b-184a4a585eaa",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2571842c-3164-4df3-87ed-a6c4262d512b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38486652-f79d-44b3-8733-b0654b913799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a61ed6bd-3525-44b0-bf7d-a5f141cf1a79",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "907dc4ad-3bf4-4e70-8705-cabff5cc6f4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "061684dc-2bb8-4360-8f43-2b3b8fa0238c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b4db2f9-19ca-4292-b3fa-60caac971265",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7b28d5-afab-4612-98db-5ec1a2db5477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d98ae15-198d-47a8-8192-d9ec693a78b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f45e822-4579-4b07-b3bf-1b88036e1574",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63a344e-e48c-4412-a56e-effa0d715093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4514ad18-b142-4f0e-86e5-52b217dabc0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88306f0-7edb-4bd1-acb8-2a087cbe2c4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0aee634-5829-4b9c-8724-1beee72ab2da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff47852-d315-428d-b63f-27853d286d14",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273d5138-dbe1-481b-8542-a0cd1059adb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3944198-63a3-4162-af31-60728812390e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "755958f4-57f7-441a-a784-8e4ff6de0d24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3ea8e95-b2b2-4a72-8245-c1de7bfa2e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d32e2c6d-43cd-49f1-9ac6-3906e4397892",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c9ba58-27c4-4189-b6e0-75fcbe3dab71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21af3a42-7802-4845-ab9e-432e83269903"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c14bf28-b797-467a-b6a9-e58bb986d3fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b4a7891-894b-4469-9f0a-32b7aac4677b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6ae33f-b41b-4934-a51b-c8dee0d56d3d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df7702d-64ab-4c3a-bbf0-fc2fbcedb5f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "795e409c-1710-47fe-99af-8433365d1016"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a85dba3f-fddb-42b8-b14d-37521fc9b25f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "587e0eee-546b-45e6-81d2-4d9c312cac7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d84f8f8-7fba-4662-9fdd-7e4054a9cdc2",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28cba1d-5321-485c-8f7c-2d6920cea2f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bad28b9-a9b6-4f84-87d9-74ced104cb01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc43491-18ed-4f07-9c70-73d439d3eec6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de953768-d686-4785-b241-a11975b4f463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e3bd29c-e780-43fc-8c97-010506c7fe31",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4698e864-9da0-4bb2-aef0-8359b240786d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7fe38b9-7de8-4367-b3be-35eed23b47e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eaee4b0-bdbf-4023-bc70-ecd5fad291bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c9f2729-9729-424e-854c-8d89f732c122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ffff93d-aacd-4b1a-99c3-16bdc0f632c3",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c31f11-bd0f-40b6-bcd8-20f5a70bb632",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9400224f-ed7d-49b9-a13a-94960ae589ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97468963-ce00-4c36-ad47-9ba177bfd49b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6384bb32-1061-4177-b961-3c395b3376a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea63f83b-951a-41bb-bf08-9663d6e1b41a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55085ed0-5abf-4094-86bc-30474e4033cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0828c6f-6dce-47f7-95d7-fcc454ed718d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "223a164f-5892-452e-980d-48bc8f00d0a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "287daf06-1ba2-4f50-873f-b4ee35ca450e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d59a16cd-aa9c-4749-ab9a-dffd4d3d28d3",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c7ea8f-de5c-4712-9a34-e675d585cefa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bdac9dd-dba0-487b-ba10-22455bc0af7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb86722-ab62-4977-bb15-5165d8ab58e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36e737c7-f7e1-4376-820a-ad9f8491213a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48384d7-fa01-4277-be9f-b611ea6dce59",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a31a99-efa3-4da8-9287-310c673931b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1645200b-c2b3-4a67-bf63-c4c08691f2ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c833ac-979d-48f1-8ec2-1bcdb747e5a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f355c460-0ed6-4fb6-90bb-36b3172c2ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9fe0e3a-ec2c-4fd8-b2c0-9e13cddc4fd6",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d7a1b2e-64c3-439a-b67d-7dd8d163da2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39fe8e14-cad8-4a96-973d-d570bdee4b92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba3063b-bf5b-4e7b-9b87-fbbfec205779",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26094582-eebd-44f9-a2d2-1acf2c777d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4844fed-cc40-430b-87af-9ab54180f130",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75eae3a3-22b4-4bff-8f4c-fbf91abf90ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cae908fb-50dd-4f3c-a778-0759356947f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "076ec6c1-58e4-4dd1-a4d4-9479db0acc3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "762dc62a-b0c2-40f9-9ba6-41f592d63228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb5fbd71-74a7-4b7c-b67e-ce245245c14b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6420795d-e1b7-43dd-b5b1-e4c5e5cee2a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1e3e1e0-fd46-4040-930c-39cb15bb2e19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb39523-aa9e-4be9-8626-5b76d2220084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e619b3a-46ca-4897-9c54-7b78f34c2bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a916ee-33a0-4388-9af1-16156a4a61bd",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f10727b-4123-4a89-9b90-c1dbc2e7cfde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33ba02e8-23eb-4e32-917c-411a76b6af2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1413bea6-1061-43c9-842c-94195453629c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85c21101-9ef0-437e-8846-1ae20fbded64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb5e6a66-e703-4bb6-ab58-9a4270aa88d8",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b743cc-70d2-4dab-9ef1-732e3dbb8af0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20268180-f083-48a5-931f-a546b708f9f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f68fa5-16d1-4583-8802-0a870531e6ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ca7fc74-36d6-4392-ae85-611f9e473f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6082a71c-3864-43c4-9518-7fa0adcc09bb",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e43d480f-8ff7-496c-b59c-dfd748913f83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0064b12-fa03-41cb-baea-fbe3a9726f46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1b4ac8-69c3-4556-8608-2236cd64bf85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cfada85-d7a2-485a-93ee-70d41340ac34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd6f4f3-a611-4c43-bf4d-289a61d52bbb",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca2f4b0-80b3-4164-8787-aa1876aeab22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aa9c7fd-fe65-4f11-89ec-414ea0c90606"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c4ec94-1934-453d-b079-130e32905b1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a000091-2852-4767-bc23-68ed6dc8f03e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47246e5b-fe13-4aeb-abfd-ff74ab28f915",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a23bec4-7eb5-49fd-9507-43d19f90bc1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2549290-e6ef-4ddb-9ead-a1583f8d6cf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a0e4412-de3f-42ff-a607-6d2a8d6678a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d7bfa75-500f-4334-abb2-6ffe4d93142e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d5b70b6-dbf3-4844-abc7-46b3c0319388",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6833743d-3e4c-4475-a747-7ba54bc09a98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a0f293c-a797-402c-9966-a7861c0dc46b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2500b39-591d-46ab-9b71-041afa08ae9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "393ea7d1-11d9-41dd-ba88-db4d4641c4b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "533740a3-594b-4ec0-a389-7f0a041a3c8f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d09e1a67-259f-41a8-96e3-879c5d71267b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aee1c5ce-fafa-43a1-9b77-bd9fbc7f9c70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d622c0fc-b0c0-4426-947a-389f4833b13e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16d8d118-57df-44ea-8113-d5393f84e760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7863283f-df08-4f9d-8a75-4dd40071ff9c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8058c365-4dde-486b-b637-69a8782d514a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b5282c0-97f4-427a-a39b-2ce7dd319154"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "705f2f6d-4957-409a-8376-f4f29bf53e36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6e354ee-35da-419a-9260-f8ff48a6c9d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a117b8-055e-43b8-b5aa-8783a0e815fc",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bffd7559-c7f0-47ad-8b4d-a28103d395a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd29dab0-ee93-43d5-8db4-ad5ef8d68a32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ee3871-c51b-438d-bee5-4463cf4148ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36ef7818-b0a6-45df-9f01-2f49568100f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717f9999-9b0f-4966-ba17-fbcb33790111",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba309ad-c6c4-4634-9962-d51064873a08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3917ea2b-8be1-4d23-89b3-46c0909a6a4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29201b67-b0b8-45e1-b692-99f6d95e3c3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6b12dfa-9bc1-4dff-a7ac-220261d012b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56479d57-f300-4ae0-8605-b4d9188b990d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a7470dc-eadc-4619-aebb-4ebd32b4185b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4c56ec6-86e4-442c-b404-def17f7124c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d14809ae-769b-429c-94f0-cab876fbe559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51586845-e7d0-4ae7-b02b-7d3dde08eeb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ebacc1-a384-40af-9199-c9ce4b75d58c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c1316f-519c-4054-81f0-13f2e0f8042d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29075bec-5297-4a6c-ad65-9cc1867bee1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6d0898-a324-4799-8935-c96f484985b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d5b8108-2b8e-4317-9e7e-b23354b912ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "421400f2-3879-491c-a045-488395096e37",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "102351cc-92ba-4c0d-89fb-0eb1857f2bb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48365afa-a648-4402-9e84-935ba769a080"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feccdd9f-c0ca-4034-a57a-8c7441bcecfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d0d21e8-e31e-431b-bfaa-198351a8e2ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d649f4-7f60-4ba0-a79b-c453e41b969a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71400cf3-4f33-4e6f-a4f8-d5e27e0f1bfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d22ac873-7ba3-465e-b61f-d56a87062622"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f48ca38-e317-4a21-8f70-07bae850da3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e4062cf-d41d-4826-b9cc-4d278c6b2617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a77f9db0-32ea-4cdd-9ca9-41094ff781ff",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a9b3264-ff13-4f5f-bc1e-b326125ca405",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3de6d90-5b57-4570-931f-8260d99e5ab0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0070f834-090f-41ca-93a6-b79f77c847e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40654ef1-8542-40fd-bfc2-64effdc2c632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6603183a-89b1-44c4-8dff-02b9a3e6db03",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffee8cef-36dc-4c6b-8891-65c0fc31921f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b400f4e-ec1d-41dd-acf5-3f9860f0d199"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a542579-7ec0-40d5-a0ee-0bebd3f778d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fb97c6d-d36e-488b-bf94-b7632b3e6bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "957a9f50-71e4-4fd3-8571-283646db99d7",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "594a4c04-b4a4-49bd-9a8e-e6f85e5b8700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3024aa8e-1c1a-4754-a492-8f84a488de63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f878351-bd0b-4ace-bc1c-a3dc16c84196",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3347625-2b79-4876-ba43-be8fb49bd2c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "369bcf73-ecca-4dd0-a4f6-d81226f99398",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c530127-0ea6-4683-b1bf-d9bf0454ae20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18a96b48-6bdf-4ede-9dcc-03f25145624a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "682315e2-c58a-4956-8316-620a8f1df6f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb10ccc2-a071-48eb-a8a8-c8f2fe53cfc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb8cfd2-c22c-4bd5-ba6b-455b5f64977b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4afb1884-9bab-4549-a8fd-e89ec306459d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26414520-4655-4994-80b0-a7b965345a4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c437f546-4500-4136-af00-44c63cadf542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05c22d92-e497-4ad7-becf-8586fd95b0a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f581233-34e7-4655-8bb3-a1eda180f9b8",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "287611fb-2fc9-4128-965d-1cfc63d6e726",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de7d44fe-d289-4030-a75e-2d31bec872ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f4b9ec-6d79-4243-b748-a8f256e63289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93e39d31-5f1f-4514-afec-e0dde04953cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0924216-c50a-4c23-8f3a-651c7fe14af9",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf7d080-1f13-4ff2-a2f6-ef58d0908d82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7da2c2b-c7c8-468b-a2d3-d71c57fd2bba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b45ff342-2b67-4cbb-ab28-effd1501fbc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae94a054-a7a1-4faa-9f7d-3fa6db0ba51f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0976139-a137-41b5-8fe6-517a714958dd",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e12b6c-0794-49ba-b7c0-851d9a43cc17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7318a9e4-db0b-41dc-9a86-95d8843bc707"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be8a7204-e28c-4b79-a940-5d3fcf3acaf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bea7017-e61e-4fc5-9058-65764317a0ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e214834-c594-4357-aba9-60aaf2135926",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d57c61a-6f6d-49ce-807c-0b31f0c20b7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dae1462-0c8e-4c5c-89db-f9af254accac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8281cbe2-0126-4683-8d95-f4869d814b90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2be5336d-38e3-48c9-a54f-76654f9184fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd0a9b0-f5e7-4a6a-bcaa-8f4279e3710a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11eeecc3-f26a-43d1-9964-68936042a38f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc21a29e-54b7-420a-9b72-dc42b0b91519"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a8f6c0-554c-48bf-85dc-5c92425a711f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e58d075-76c9-46f9-99d7-5e61972ce52e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca5f0b9-f6b1-4bab-8869-9c7dcd0fbb93",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e07b043-8735-4387-9af0-a26f87b01ca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbe7ea0d-0e73-4eb5-becf-2e5ad6a46b16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7db343c-1a8a-4514-af9b-6aaee3c9d30a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "225f1324-8fd2-40af-accb-e4fb47d16f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32629faf-3d61-45b5-8e21-25c12a4fe736",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed57c8b-3a1f-4b11-be9a-1bb3278bf705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55066e31-4ac1-4bb7-a805-c93b5ee1fd67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba4a2384-4a7e-4353-8367-ba0ed8ccf7a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "466be817-9b2c-401d-bc15-1a6fceae8fa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d54af1-f79e-4330-9aa1-d50e673f4d49",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75fb81c6-37c6-4e36-bae8-5a1f968aebde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bdc3afd-039d-4fc7-b300-e1bf4bf3f155"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff93e30f-fa0c-432e-9c7d-7167a2cf5bdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d6386cd-46a3-4918-85ea-8bc3b5765238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "222156ca-4f3d-4a9f-a344-71bbea3b22c5",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9261d293-4271-432f-8376-74a4f6fc1064",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff57c6cd-2644-4cd5-8b96-1c00cb6cb952"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eeb1ec3-f266-4b48-b0ba-bdbc406c65c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beac96cf-5e3b-4380-9eb2-dbc1ec16b6ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64fd10ca-712e-442d-b685-a723fd578a9d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f3cd70d-7c7d-426f-b862-19338656efc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e13998e0-0501-45cf-9d63-c311e64a79c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5e216d-066c-4dbf-8b73-1adcaa781213",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "652f7984-824b-4c0f-b533-ed816794ca30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e37f82d0-5c7a-4fed-b6a9-b038e003144d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de54a1e1-1967-4ea4-8f69-c916a1d9fe71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9be3873e-66f1-4dfc-8882-786855a5614a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0642895-130d-49bf-ab7c-6e42cf78b25f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7285b22-56e9-44d2-af45-a5118faa7a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c93ccb20-610a-4bf2-b14a-716a54d0bca7",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c22af0df-ec57-4fc6-b0f4-e40bf087ac8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26c1ca8b-b957-4838-8159-7bafb30463f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd3fa543-9b89-43ab-89c5-1d2cbda75c2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eb78358-2dfb-40ec-aa19-dda99d10576c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a54038a-dbbd-428c-8c0d-713ee0a69c7c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e50379-8789-44c1-8047-7493524ad455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c98d8ef5-8fbb-4e3c-91dd-2f6aa2e5cf28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "660b9a70-2d02-4928-b71c-b0d7f89a8862",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63ef7ee6-2d26-4cd5-8864-22f04d6286a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a1fe5a3-9dd4-4e96-8990-c74ece76eec9",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3856bdc-429e-4219-8e10-55cf3661a9a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1a02b10-4f53-43ca-b6a7-7576ae807f4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "356c860e-5976-4ea8-a28d-55a79dbc5f61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec341648-442a-4df4-88f4-1a4fc41d8c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348e79a6-e28e-4778-b5fd-977ab5a591b2",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17921b81-8559-41f0-9aa6-63d359eb3e3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3828e20-3e3e-4d08-acad-862a35295dc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5105fa-511d-4b38-88da-2660a9666419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa90488f-b8ac-46cf-9845-75eea7e8ffe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b2945e-3155-43c2-a4ab-3f92103e6a1a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86dec853-9457-49e6-a4f5-7f44166c63b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "609148ec-b69c-4296-8f0c-c33ad02b6355"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6cb1998-2153-416e-b672-7ef0d71cb195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "100941c9-ea31-4a9c-8e83-a16f6867bed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4378ca-9c36-4221-bca8-f59496263064",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feeab3bb-c65a-43d9-9552-cc8241ea837e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "096bc3ff-b615-44b4-8364-f8d23d095dc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18316eb7-4c88-49f5-bab1-814e18cf3383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78fad2d5-e1d6-4d33-a848-de75ebfa83b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62611b10-0f72-4b0a-9681-23b97e0db719",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da20f22-1d29-4bd1-85e0-e7deaa4f5a61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b4eeafc-b2f4-4f2a-a05a-475fef401616"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85dda696-36d9-4431-9736-3acbaa0ad279",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "106c6e80-3348-4c15-bf8b-0abf7fa7ce8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bafcf62-d5e2-4e75-a386-27b6a3c3ec6d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19717873-ebb6-470b-b1e6-d7b905f4d45a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5c25d1d-79f7-4f3a-8793-2e871f712eff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a39837-71fd-44b2-ad79-1dcee75d8c9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eb5298f-febf-413e-b27d-cf903714e51e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62414d55-0718-48d9-a41d-f029cf6ab93a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "784453ff-a834-433e-a8ad-970d3084b488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a1dcdf3-43a4-4f72-98ca-48bbe959b26b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a41b6af-078f-4eaf-9a9a-9c8d1c9048cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0c7a2f5-621e-4079-8915-c0a5a22f6f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45735834-7c53-4c50-a487-4ef699749a51",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd613a7c-65a0-4159-8f70-78abf2b102ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "918d745c-d719-4eb5-a914-b95049b8366d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8935e73f-a590-4fe6-abd0-d285bf1e4107",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba09924c-a244-49e6-adc0-ecaeed8e8bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c010880-853a-4b1a-80f2-5094d9afdaaf",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e94c31b-2583-41be-a70e-a7a7b445aa51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b46ab75-137a-4450-b018-c9a2477cb240"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50478fc4-7681-4444-aa38-bc2b9271c0ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a11c81c2-3b88-4442-886f-59576812b868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe3f2def-3abc-420f-9185-2b4457c26ac0",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4a4fab-00da-4414-9ba9-fe7580fdc6a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f59adb7-6baf-4fec-8852-2ba290b06037"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca36055-b9db-4d29-a2b3-e59fb5e5b576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86dedb91-4461-46c4-b031-4c8a11e12c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee38877e-e40d-4e6e-a12f-5c34050d572b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9664769-4ee9-4c5e-aa59-d912ac9ce228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbca1bf0-c1be-483e-99d0-553035801572"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c81463-b9c5-4195-872f-7de83d8a34f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac93a800-1ca0-4dba-8fe4-f12b5473547e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31eb37d2-9739-4f90-9ce3-6067f63df921",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af8c605-db37-4cc7-8718-3547558896e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ac1e14d-dc65-4e8d-84dc-194f1b07184e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7faaec38-493f-405e-b88e-6bcd3ec183aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df39a97e-51bf-47b4-b635-b951fed240ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51523ad3-fca0-4de7-b2a3-6181af13356e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e26760-5c50-4a54-a466-69944bcd3b69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a65a523-db1c-4b85-9e06-6b2aae5ef9f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e08d6f0-d8d1-4f37-8b4e-afbc04ecf02e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f22acd9f-f3aa-4bf0-889c-be3616949224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c1547d-8c3f-4e3f-80cf-dc227f290112",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "796e1720-f623-4da5-83b2-f689fcc76045",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c84126ac-cd76-4f09-b8c3-4a6765a99cc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d942a901-4d64-41e9-a7a4-5d6d6f5bebfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34d0cf40-9b83-4743-a10f-653840808e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f62861-6ff5-460b-a80e-b12d7fea6df7",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51cb2bee-d02e-4aa8-89b7-595e11f5d093",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5ff81d8-3b14-4538-82d5-16b61820a51c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30eb18f8-725b-4b00-a114-8d244840f195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b86ce3c-c077-4202-ae9d-3e1aa7759f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d785845c-f225-4a98-b558-6ac3431c08db",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f71552-8441-41bd-a661-b1b087ff415f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea8d5107-578f-4f3d-8360-3a0a3d6a8798"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b640707-18ce-4482-9906-cd2a38d30b03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb7b9b17-97df-4ed2-8783-78035d08ba28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccdce6ca-68b4-4763-8011-d0e8a8b57a03",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d044b9da-39ee-4f22-a3a0-c25a2f902805",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a7dae81-3ad9-451e-b453-b4b3c9e0e511"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e64da9e5-876a-4dc7-8799-ac891d59d089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f9e776b-6fcf-4c03-a6f1-cdc3d7866287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f598e66-1c3a-4586-8c3e-b7a7ee51be63",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab57bc0e-9913-4c25-b642-1e7de375fbc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ba8e010-019f-4afb-a8e1-658f914e6c4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a24cea87-e892-46c9-a139-932eb56b2997",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3637525d-810c-4a97-8a35-cae4aeffb19b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3408a0e2-fe56-4922-81f9-d05e1bc51488",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee18280e-5c98-402d-a9e0-79193cd8260c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "851ca8f5-7f7b-4e71-a1b6-6def8f543884"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d07bf1-db46-4b86-a168-9c1b48c0d2bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4a5cb76-a135-44fe-bbcd-c39d4c9cd7da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc995cb-2439-40b6-bee4-50ca53e1d2e3",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46aefe25-813c-4ef7-80fb-61ba9acfc117",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f04ee909-8a4d-45f6-aa58-9bd85c024a5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b2a616-d554-4545-b376-76fb9cb99622",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b116b8b-3d03-4008-8ddf-5fc9a9561599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64df27ce-2af3-4820-aab6-eff3ec1d666f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e69bc8-3051-48d6-ba02-33cd5d9861a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea98993e-2284-4312-8649-70263c1a6b3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8616aef5-9955-48fb-a459-7b97c3ce0b1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c4c0d32-1bc2-48ac-95c4-c350f3fbf623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d07dc897-2154-45cc-af09-8a19e4e6ea18",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206d61ee-0365-41c0-a1b7-e98c4a2ae269",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8c9f103-1a11-4d2c-a2b6-4a03eb149a46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c18f8d29-b92e-4e38-a202-3d0bdb1631c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1bbf749-7a7a-4014-8724-d219268879b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b71a30c3-0ec5-401f-9b64-8b91bef8b7eb",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c29547b-06d9-4173-a26b-7a6494a83ba7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "499e8df8-0e8e-406f-bd80-50c8ee2bdaa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66eef96d-1d82-4bbb-9325-b9ad2038e322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ac841e1-1160-4ccd-abb9-eda3aed8b874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ecb477a-7d41-4752-b2d7-4c1fc7851458",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f539e44e-2b31-4a3c-ba52-5e9f9c555ca7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58b88e2e-dba9-46cb-af90-4aa788a82065"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34eeddc-3516-4970-b9ac-71b175414828",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e7d189c-55e3-441c-b7bf-8144f239b6e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a10846-6033-43bb-8ebd-f869ae813fca",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c752ca-5f9f-44d0-8d9c-ee478247fed8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfa8b240-75f7-48d4-a9db-0512a7c1237f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade74f8f-3071-4825-8b82-04e387be2faf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a065f8ed-5317-46e2-b7a4-84ff7a7cea8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ef297f2-a859-4333-8c0e-3a59484252f8",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa6cd779-6501-44b6-8db3-6a207d3576b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24187866-2868-433d-8643-ddeca35a1be5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "423d0f8c-7cf9-47a9-a2da-b39fe97524b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae1d1c8b-1ef7-4c02-b531-bc1ae19a67d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b54030-c744-4616-b4c2-f2e559f25dac",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d97a2f-3652-4d18-9f2a-023532240528",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2d795dc-8005-4092-8a84-cb1299410d2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b8cf07-556f-45d6-8b86-2ce0b5da0f06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56dee999-8970-411a-91c3-6d7c20e07cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ebbc6b-e7f3-4213-8dee-0ceb76a80db6",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67ee354-4601-4e70-a439-5e04f1eb328f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e712d5f1-eb85-4313-bf94-650bbe13a2da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b4869f0-e83b-4772-b504-d059afbf1792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3fefd21-6ef7-4ccf-8632-c546edc6beb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dca79ac-63a9-4fb7-a529-801b44e4a32c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7cd16bf-c4a3-4648-b2a8-224881899d99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db58cc64-c5c2-4553-a1f5-ce38c1f3a31e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee88846-6fd5-42f4-b5be-12059aa3911f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13f7dd2c-9f14-479c-a4ee-1db259152c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840da274-25bd-4cd1-89b7-7deff7e55095",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a4abbb3-f573-422d-944e-78076709f9ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a15783b8-5fea-4e9f-9db3-c1b33f7fe78d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05116edf-bf26-4cbc-aa24-f0d5fb7410af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab999c1d-1ff1-46c5-8ef9-512892d9710c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca1d13b-d782-4199-8820-0c1b94caf221",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14216adb-4ab6-4dcd-9659-1fd57e98d32b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26a1365f-c841-47b4-9390-c7971422ce90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e76b65c-1a7d-42db-bfc0-4d49cb1f3d2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb4e5dea-747d-4be1-86cf-be5991a4a826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02686fb2-59d9-4038-9664-a9dcbc394eef",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6353e80-f032-4dfb-aec1-7e26d55d71a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "361214c7-94ec-4e3d-8328-8d25ae04ea0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99426586-fd41-4196-b12f-70a3eb630e1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8a0a54b-2368-441f-886d-4a76146567ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e1a0266-acd4-459c-8424-c294142893eb",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01925c18-0e3f-4b5b-ad20-f9543e76cabb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d70f1b03-acf0-47a9-8cce-b28d8850a964"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ddb13c3-f50a-4d68-8dd3-be40788f99ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02dfd9b7-7871-40f0-a275-d8b06740e5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c13b715-479a-4a7d-a6f1-75d9fc45daf6",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4916248-04eb-4a3d-a4f7-77e75dff4d80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63c674d4-d3c3-4f93-aaf6-b49adb1a903b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da9c437-9efa-4fc7-8463-7a30b17e8971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe3b49db-c358-4e9d-80fa-82deb2fdad3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07a15b5e-6209-4736-b0f4-e2e99223e2ac",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1156ba5f-e6af-43ba-a80a-95fc902ff42d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0212be8b-188d-476e-83cf-14dc9a15a066"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e01eb65-6cf0-4d85-9919-9463dfb76c98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "accec95a-fad6-4542-b652-f1234a0a0a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43515f5e-fb7d-42dd-ac79-d9d49ceadf9f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c14df5-cf6c-4a7f-bd53-06ecce5957ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "822c80d4-14d6-466d-baeb-3410ffdbb7d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7036296f-a2ac-407d-b3ec-1aebd28d5305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc988a19-25f6-42df-bd9c-f68266456e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b0a740c-a685-4a74-9247-c8481f9eb1d5",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6003fcfe-b952-4a35-9380-fc7b87fbbd9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e1e72f6-f47d-4fbe-941e-a0da4178dcbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef0eb4b-d6c2-43a4-a30b-90469f6e20ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07cbc176-4cfb-453a-92b4-c677ca71c713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5181772d-37b7-46eb-a16a-d7516ea60bf6",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1d71015-5e6f-410e-b876-4ac8369e7d14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bb2f142-990d-4529-9861-197305117984"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb792007-6040-4f5a-a490-aa00981583cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f3fa934-1977-4316-be80-c661261172e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "810f9072-71f6-4094-9660-ac1337ce9a0a",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76dd0a1f-be93-46a1-abdb-03b715bd86eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "432c1c52-aa70-4c55-98f2-5be0122a10c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e2c6a0-9615-44b8-8420-c01672186518",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d752eba-4c3c-4e34-a055-bbd56a322ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75cbd531-c34e-4e82-b731-597168a8e952",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13891688-d591-4d79-ba4b-cc587893e672",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f6a1674-eb5a-442d-9bce-6e5ecf5c8eda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ddef67-e04a-4c1b-89b6-d18c12460c61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a9fec8f-1dd2-4cf1-acaf-f8114f9cbb99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9af88b-da86-48b3-be2a-f00d966f66c3",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449b09d6-4b18-4d74-b3eb-88ded354ed4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06bb51b6-8173-4e78-b83c-adaa73a72117"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac9915e2-7410-4fe4-89fc-26cc4c0cc9e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "669e7a4c-0639-49db-bc9f-60f17d876b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a9ba7f0-ecdc-4534-b8f6-cbeafdc4fe38",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f16f91-f141-4202-b398-baef4ef3cf80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eccb4427-1f9b-454a-9bae-125057eeaabc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf9460cc-689d-45a8-9db3-3977aa875a2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85d309ef-e3f1-4151-b39c-79668c645f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecba3ddb-9dba-4e80-9e0d-dfe376067de0",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db8933a-cf24-463a-9a8d-6c763413ce45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d550be5a-e43f-4490-a674-ecf41d01080f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61196a02-e8e4-45e5-9b04-0f1be3fabb51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "941b31c1-84f6-44db-828b-0607317f3bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f03eee-7129-436c-ad0b-ba642cfb9269",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d221680-a1fb-4d3e-851e-75b0068d7791",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "248ed397-4ca6-492a-978b-e24f26eeeeec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "955613f9-6b72-4efd-95db-53e9c56fd7c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d64b228-abb8-4243-bfbc-d12272ca28c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e221baf2-74e4-4a38-844e-d675417c6f9d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de91bbcb-7f51-432f-a3c9-eb522a8b7f0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa22c54f-28e8-4923-867a-e525c907b3df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b27e70da-8afe-4f56-94f2-ae90bf405946",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78831440-4d5f-42a5-b445-8f79a46c15ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "776de8c4-cb09-4a58-b700-cf3554b5869c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3044cd4-3b94-4f7f-b140-c2f6f38fd835",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8df3c0d-6bc2-4264-b180-bbbed6ead547"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7971ecbc-f9bf-43ec-a895-057ce0237114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53246590-8278-48b3-9ed0-66a70d39f588"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4570eba-4877-449e-9b69-d10486e8f06c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d0bb22ec-e179-4581-95d8-1c9a6d118c10"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b37696cb-38fd-4aee-806f-49f8bfb95f9e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c4f46d00-b508-4a8b-aa5f-03c5c6628607"
                    }
                  }
                ]
              },
              {
                "id": "0d8e298a-eb2e-420c-b040-d35033ac4480",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "96766407-fb8c-44f8-89ee-39e995ab378c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4381d6b7-7a72-43da-9018-2cdac3c15b3b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8d9007db-bc38-40ca-a77c-2eae67b6857a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e32d40-9c44-4e6a-8872-8d7f17c41a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a11bc396-2616-4ce4-91c8-25c7e5e0ba14"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a51659d8-dcae-4baf-b0b0-5edcaddd63a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95945eb9-a23f-47df-b2aa-177d39b97570"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cab0df34-3485-41aa-9aa7-849e98286c08",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8dbc8e22-1151-4e94-a49d-ab41035e451b"
                    }
                  }
                ]
              },
              {
                "id": "8e1c0e59-e6fe-4aac-9525-747668f1d901",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "12ddde80-57b1-416f-bd76-82237aa18b22",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f382a8-7454-465d-87e0-c2b18f72bf83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b5ae88a5-75d8-46aa-801c-888b5efb3024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de476115-c9bb-47a8-8f81-f1ff1d0e15d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70c9f63d-5576-47b3-9c23-d4000f665850"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e882f40c-2364-483c-9e51-ca425bb91dab",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7a852a01-bbd4-45b6-adb2-8ea703e63413",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "80e3674a-eb56-43cd-869f-986336dd4b8a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4ba8c045-108c-41c9-b6be-9d9c60d19dd9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6219cd8a-2218-4deb-8a79-8e2b14801c13",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a1f10b5a-7bca-4bc3-ae1e-e2c9fa25e09d"
                    }
                  }
                ]
              },
              {
                "id": "480b7371-14be-4e7a-b92c-a4727e5bafc8",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a12649cb-a5e9-4ff4-a8f1-053f520eef38",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e7abebfe-aca4-4b64-82b1-11c6d0953200"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "853d60cd-e14a-42bc-ae43-a3a9bc2793bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e32d0be6-0e26-46b8-b81e-336bb4860f01"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "47cdac17-0674-4e65-bd29-aecc55e93001",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "39b7a853-e36a-41cc-804c-b379b9167697"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a2677ea8-f028-4015-ba6a-339340164723",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5b92e373-6072-4e48-bcc4-9d4f35700a47"
            }
          }
        ]
      },
      {
        "id": "e2e0ebe7-efbb-4701-97c9-677a7cc29568",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "0449a170-4f5b-44db-a374-c20a5b887a8c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7753b9be-b99d-4b15-b26f-e39beedf419f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "75720bb1-66a7-4d00-a178-63f34d16461b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4a4b5e-7ca7-47ce-b680-8b0c94fed0da",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2d1d5788-3b6c-4623-94e6-50dc90c21947"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da0f259f-4db8-4e4f-8813-1136cf0ef5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a9b915e6-25e6-484f-9b59-618b5fe6701a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "536f7b4a-2e97-44c8-952a-ccdd397cfb07",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8ca1b2e-808f-4245-a447-a0ce07935537"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "888926e7-4e99-463b-9241-23056ff033d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba041445-52e1-4fec-aa99-d6f1c1f7d53d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e4917548-f9e1-4f99-b517-fc8301bd606e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "50487b7b-7481-439e-96f0-5bfcaf84e1c8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b71e8b55-c5c6-4afd-a141-7ec496fa02e2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5d4fa298-148d-4914-80a4-6bb29bc79f1f"
            }
          }
        ]
      },
      {
        "id": "e79eadd2-8051-406a-bb62-8142bcc4face",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c5eda359-709a-4e5d-b9b2-697f4206a861",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1e554379-29fb-4aae-bb64-b384d8359026",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cb3f2607-8ad7-400d-a37f-afa6ec8e6f40",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a254f6-e778-4bc6-8a44-7b8b8bdf8b61",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bee125d8-adb9-49fe-b5fa-44f03db30fe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4620d2d-4c8c-4d3b-aefe-387f6f5adcbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "469cc071-6695-4f1e-96d6-ec233bedf8ac"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af64e788-a638-47a5-bb59-642ec3eb6b8b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9197c4e1-3e9d-4ef4-9934-bbff520c0088"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c3b93519-ea9f-46e9-b22e-aed7245d83ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ed58005-63a9-42e6-aa80-4a278339a018"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1aa1de48-2ab9-45fd-94e2-ef45da9a3452",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e44cc707-2c78-4b9b-8a6a-8d5e07b6685e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b2056b5d-acdd-4a46-ac98-0cfe99d33d9d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "43006203-8ac8-4149-be2d-b3bf312a4976"
            }
          }
        ]
      },
      {
        "id": "8aea44d0-0320-4e63-aaab-b3658fe55e14",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0dae76c2-c076-426d-af22-652e3a9594d0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "73a4c6f7-f8ea-4a03-acc2-d4e1d4e9f3d0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b3899e50-618e-4ac7-9e1d-7f0e2bfb2964",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eef2c83-7843-4e68-9514-38a48ad161d2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c86393dd-f485-493c-a976-ce189a3272e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f9cc74-c9d5-4cc0-b8a1-186c8cba1a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6524096b-18c1-40f0-9a4f-b3389b8f6d04"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cfdc4406-e37a-4f67-8b0a-57b9d7a72302",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb8c853e-68a7-4073-9813-91480e69da05"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e7495ff-2fc1-41fa-9571-d5a214f901b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "61879d32-e6d6-46a1-b94d-174867e4acb6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "67a3ee37-b8eb-4258-a778-ba2c02fd9bfb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7548131c-ff74-4331-a9ce-5ccca512d651"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "52083c65-7719-458b-b543-dc69623a2639",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f8b1cd5f-ff8e-4964-9cf8-2548a69694bc"
            }
          }
        ]
      },
      {
        "id": "3fb0f05d-0cf9-4066-94eb-eddb0be0e2b2",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b6e5a8a5-9a6d-4b06-8350-f16ac8abbe37",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "79c33ce8-77d8-493a-8df9-fa089b786d81",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "90ff7b43-e933-4ad0-b6c2-c84072964818",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "deadf312-a4df-45bf-af18-1deaf16300ec",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "27cb46d8-bf46-4140-9372-faddce1cb308",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 50.16842105263158,
      "responseMin": 19,
      "responseMax": 251,
      "responseSd": 17.060256038624285,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1703896465491,
      "completed": 1703896488657
    },
    "executions": [
      {
        "id": "55acbef3-d84c-49ff-b938-c4a4d93cb944",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "81dc3eb4-3133-4884-94e4-f0579a47c910",
          "httpRequestId": "8d17d326-6e78-4ee3-a066-91b974d848ac"
        },
        "item": {
          "id": "55acbef3-d84c-49ff-b938-c4a4d93cb944",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "5a63fec9-a12b-4a53-be31-af13979f3e40",
          "status": "OK",
          "code": 200,
          "responseTime": 79,
          "responseSize": 0
        }
      },
      {
        "id": "285df2b7-65b5-4dd2-a102-b0f5d1b73d21",
        "cursor": {
          "ref": "b866821a-34ee-4e4d-bbf1-dec163df1565",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "adf96045-d430-4174-8211-d3e30e44b490"
        },
        "item": {
          "id": "285df2b7-65b5-4dd2-a102-b0f5d1b73d21",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ae9a6c58-df8e-4085-abf4-cfc3e9d397d7",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "98db883d-4c9d-499b-87a8-fd3a217498cf",
        "cursor": {
          "ref": "29929017-fde6-41c9-b515-ec824fa05b67",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "0c967c52-7b65-459f-88e7-0e01ebc813e2"
        },
        "item": {
          "id": "98db883d-4c9d-499b-87a8-fd3a217498cf",
          "name": "did_json"
        },
        "response": {
          "id": "e7703d00-581b-4bb2-b822-8c8ffea26597",
          "status": "OK",
          "code": 200,
          "responseTime": 165,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e59fe69-afe2-4d20-8fc0-369baf480cd8",
        "cursor": {
          "ref": "ec7e8238-35e6-482b-a4e8-9143feffcd15",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c0a95246-c7ff-418d-963d-a9f57d58a6df"
        },
        "item": {
          "id": "2e59fe69-afe2-4d20-8fc0-369baf480cd8",
          "name": "did:invalid"
        },
        "response": {
          "id": "7763411a-c674-41d1-807f-575763439efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e59fe69-afe2-4d20-8fc0-369baf480cd8",
        "cursor": {
          "ref": "ec7e8238-35e6-482b-a4e8-9143feffcd15",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c0a95246-c7ff-418d-963d-a9f57d58a6df"
        },
        "item": {
          "id": "2e59fe69-afe2-4d20-8fc0-369baf480cd8",
          "name": "did:invalid"
        },
        "response": {
          "id": "7763411a-c674-41d1-807f-575763439efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "805f250c-a155-4d47-af9a-6749af71f6f6",
        "cursor": {
          "ref": "d2938802-8eac-4b74-8b52-4e0f52abe283",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e4f9b36f-d1a8-447c-8fd1-6656c2e1d14a"
        },
        "item": {
          "id": "805f250c-a155-4d47-af9a-6749af71f6f6",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d44d8bf8-573b-458d-874c-a5afb4e0446e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 79,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b40bc3c7-7dae-4168-a491-f23f300b3fed",
        "cursor": {
          "ref": "5e6c0b1f-4334-44be-85be-4a9c4a336632",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "6d3790bb-afa4-4d56-84bc-0980a68e0db2"
        },
        "item": {
          "id": "b40bc3c7-7dae-4168-a491-f23f300b3fed",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "85073055-135a-40c4-9e5e-8908f0b9a562",
          "status": "Not Found",
          "code": 404,
          "responseTime": 49,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f37891bc-4bfa-410f-82b3-26b3138f9d7f",
        "cursor": {
          "ref": "11e7b0ea-30d8-4a8b-820a-09b7fbf571db",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "dcffb7bf-e9de-4169-baf7-5b8e843159e5"
        },
        "item": {
          "id": "f37891bc-4bfa-410f-82b3-26b3138f9d7f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "56b1b50f-f204-4175-9f44-c6f4b6369e1f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e195559-6711-4083-854c-30000cba5444",
        "cursor": {
          "ref": "0355d39a-0364-49e1-a00b-ff78f04a625d",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3b39c658-9114-4293-b7e3-2e4131dbd056"
        },
        "item": {
          "id": "4e195559-6711-4083-854c-30000cba5444",
          "name": "identifiers"
        },
        "response": {
          "id": "966d4403-6334-47c8-9a07-8e3446f0bc48",
          "status": "OK",
          "code": 200,
          "responseTime": 86,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d225a7-dfe8-4ee2-b699-0f40468081cc",
        "cursor": {
          "ref": "74cbfd36-f1a5-4126-bdec-cad45a2e177b",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "dd1fc5eb-b7e5-4b09-aa32-6861cfbf0752"
        },
        "item": {
          "id": "a1d225a7-dfe8-4ee2-b699-0f40468081cc",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "cfd7d486-60b0-4572-8d1d-3506bf1b50a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce863ae-511d-4645-8bb2-a0495e2c668a",
        "cursor": {
          "ref": "baed9b13-5f3b-4ff1-8e10-88c2009eeeda",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "bac059b9-0ba2-4201-9f32-1a3bc204ed12"
        },
        "item": {
          "id": "1ce863ae-511d-4645-8bb2-a0495e2c668a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "7f719343-db95-47d8-931a-fd4890ee1d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a810bd6-52e5-4f30-8c9a-e4923e08ad28",
        "cursor": {
          "ref": "a23e4875-996d-491b-ad49-cb6d6f3477c1",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "fda18e5c-0a47-47fd-946c-8ce289ab6595"
        },
        "item": {
          "id": "0a810bd6-52e5-4f30-8c9a-e4923e08ad28",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "2e0532ae-abeb-4e1c-8da2-dad40e6b5072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97542d74-ffea-4fd2-8d79-7683aeee888f",
        "cursor": {
          "ref": "729b8db1-8f43-46a1-8772-ffdbd661f373",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "8a73f55e-c00f-4972-81fa-1111229f48e0"
        },
        "item": {
          "id": "97542d74-ffea-4fd2-8d79-7683aeee888f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b9336e74-a66e-4f0e-9286-304dd22c3ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43893945-3eca-4323-bccf-0440b20d19cc",
        "cursor": {
          "ref": "88d8db32-f306-442e-9a85-d7b0f2062b8d",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "09b6d17c-635a-4204-91e6-fde375cfaad2"
        },
        "item": {
          "id": "43893945-3eca-4323-bccf-0440b20d19cc",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "dad58435-094b-46b3-a8e1-8bc255801e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dcc4326-b43c-49af-ba18-326ebfbfcfe9",
        "cursor": {
          "ref": "6cafaffc-a57b-40a0-b43b-2df71af736ff",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ceb1197b-5635-42c1-91d1-6534de1e2bcf"
        },
        "item": {
          "id": "8dcc4326-b43c-49af-ba18-326ebfbfcfe9",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "0b978388-3e91-4319-b7b9-503f7430ea68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "007a3791-67c1-453b-8cab-828f7b20ee9d",
        "cursor": {
          "ref": "d55c3bae-b2bb-4f0a-b083-60a2408882fb",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "6dbf6edc-fc7e-47ff-9983-a423863e9e07"
        },
        "item": {
          "id": "007a3791-67c1-453b-8cab-828f7b20ee9d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "04d84bc0-7b35-4cde-a37d-784d4d57da3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb0dcb5-170c-4a3f-a3aa-d025a4fb6fb0",
        "cursor": {
          "ref": "7168174a-8949-4907-b872-b26b719ab315",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "3d8617b3-8bca-4934-83ea-7175b12157b6"
        },
        "item": {
          "id": "8eb0dcb5-170c-4a3f-a3aa-d025a4fb6fb0",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "a6183215-2c58-4e86-8505-ed0787072fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9675b194-a3aa-446c-95df-50ea4509b93f",
        "cursor": {
          "ref": "287e3aa9-37d4-41c7-86f2-d6d67b62d68e",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e4575b26-28b6-4cab-a4ff-b97c318284df"
        },
        "item": {
          "id": "9675b194-a3aa-446c-95df-50ea4509b93f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e213031d-7c25-45e6-b4c0-bf53e1e8ad82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20346700-71bc-4ee9-adc5-a0141c17f854",
        "cursor": {
          "ref": "ef67d7d4-afeb-494a-9de6-50aac130c582",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "722b8d51-6120-4930-a546-43860d9c1052"
        },
        "item": {
          "id": "20346700-71bc-4ee9-adc5-a0141c17f854",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c738125a-542d-4f95-ac5c-f172f314d1e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd16834-4f9d-42d8-a7f8-0310e840417d",
        "cursor": {
          "ref": "5693168d-5ad3-4ae3-905c-ec54978449bd",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "be9214a4-dd33-4b10-bd20-6db4eb1c9cb9"
        },
        "item": {
          "id": "5fd16834-4f9d-42d8-a7f8-0310e840417d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "72c8dfbe-f74d-4a6c-ac47-2fdc1dfdecfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a50987-16ef-4719-a89e-8da51115893d",
        "cursor": {
          "ref": "8a33ae99-7b24-4de7-b4de-831d729008e2",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "9716cb6e-0a11-4362-af23-6a63400a7f8a"
        },
        "item": {
          "id": "d6a50987-16ef-4719-a89e-8da51115893d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a2248c93-7b0f-494f-b7b2-171154f5a592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f8c5c1-2ac3-433e-aa59-5c8d255fd3c9",
        "cursor": {
          "ref": "428c2eb9-387c-4e7e-aecd-0680762c1d9d",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "2a92839d-84c0-454f-b275-2e891388e6c2"
        },
        "item": {
          "id": "a5f8c5c1-2ac3-433e-aa59-5c8d255fd3c9",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "4b93643d-adcd-4537-9280-404c99a01ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031028bd-0ae9-4a2e-9ba3-ac85c98dc78a",
        "cursor": {
          "ref": "90a7ebe8-dd47-42f0-9941-ab73da6d290f",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4162e6be-8e78-4e8c-93bc-7494e2a79d8b"
        },
        "item": {
          "id": "031028bd-0ae9-4a2e-9ba3-ac85c98dc78a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c35c8310-8468-41df-bf71-951e9bf7b383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2743c05f-628d-447f-91ac-d5c856d41680",
        "cursor": {
          "ref": "52ba4b31-66d8-43ec-9d61-64ea10685afd",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "156c3b35-0b8f-4a83-b66f-dddf076973f2"
        },
        "item": {
          "id": "2743c05f-628d-447f-91ac-d5c856d41680",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f2061c6d-e155-4bb5-9981-d0b442fa8c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1610fc5a-6139-4292-a9f1-22f299c5a073",
        "cursor": {
          "ref": "d4896ecd-8830-45bf-95ef-f25d89aecf66",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "054e9a9d-080a-4b2a-9a87-ecac64ed6915"
        },
        "item": {
          "id": "1610fc5a-6139-4292-a9f1-22f299c5a073",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "482d2b4e-ba53-4f2d-9f88-2d2b5f21ff9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cff2f0d-9958-4477-ab6b-9701ddeaf0fe",
        "cursor": {
          "ref": "5f3eeec2-0733-4843-b3af-f710364742ff",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ff7c7922-0e36-4f09-8dbb-5350f5d92df8"
        },
        "item": {
          "id": "1cff2f0d-9958-4477-ab6b-9701ddeaf0fe",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "07ec43f9-34f6-4904-af40-aeb8bfafdf80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b181a084-af50-45dc-b676-cacc5cba9b40",
        "cursor": {
          "ref": "837395ec-77f9-47c3-a5cf-038eb27853aa",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7fbfb1a3-e249-407f-a554-cf8f67d025bd"
        },
        "item": {
          "id": "b181a084-af50-45dc-b676-cacc5cba9b40",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2c804439-1443-4814-ad86-eb05e63c1f30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c495082-6eb0-4ac8-92e4-67bdbf1fc43b",
        "cursor": {
          "ref": "ce7cc5cb-3319-4559-9a61-d3ecc81632f4",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "9c112ce6-f366-455d-800b-7f68ce18ac73"
        },
        "item": {
          "id": "9c495082-6eb0-4ac8-92e4-67bdbf1fc43b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "7718be2f-26f0-4c03-8436-5c73b815639e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0771bdb0-aa55-48b4-b2eb-f8e017f60aaf",
        "cursor": {
          "ref": "0a576ea3-32c8-4c71-a9d8-e6db549069ee",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "b57077f1-2f13-4329-afe6-0d00e7caea78"
        },
        "item": {
          "id": "0771bdb0-aa55-48b4-b2eb-f8e017f60aaf",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f904969e-85cf-4617-a960-f9900e14829d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2599b62-3eee-4496-977e-bfab8348d6d4",
        "cursor": {
          "ref": "78c65307-434d-4825-8c35-416d0d1f11c3",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "82f9a4d0-5ca5-446a-bcf2-3ecdca84a60b"
        },
        "item": {
          "id": "f2599b62-3eee-4496-977e-bfab8348d6d4",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d31d7223-e47a-44bc-8184-3aadbc1639fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07adc8d7-38a5-495d-8e50-84192fc87b74",
        "cursor": {
          "ref": "3b80e405-5817-41f7-ae71-729b9dbd57a2",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "87d3dfcd-5ceb-4b95-93a6-5af94f772a01"
        },
        "item": {
          "id": "07adc8d7-38a5-495d-8e50-84192fc87b74",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "1aaad7c7-3cd7-4cef-b8f6-159f258689a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c34d4e01-a682-4cca-9fac-fd48c508b360",
        "cursor": {
          "ref": "42aee1d5-6fd1-4b86-a0f5-30f69fbc56f9",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6e9bc0f6-0901-4b2b-b957-dc0ed7065986"
        },
        "item": {
          "id": "c34d4e01-a682-4cca-9fac-fd48c508b360",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "477ae772-587b-4abd-b243-546fd08ffd6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e669c97-8f54-4c25-b417-a5c89cb7cdf9",
        "cursor": {
          "ref": "0e18df41-5706-4af0-8c79-86320397b809",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "30fff6db-9343-4e9e-976e-3571c8ecccdf"
        },
        "item": {
          "id": "1e669c97-8f54-4c25-b417-a5c89cb7cdf9",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f8ff7be7-d808-4bc8-b529-79142baad1db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e74d5418-b71f-468d-96b7-0ac9341abed7",
        "cursor": {
          "ref": "8ce6f072-a545-40ce-bd3f-575ba9e165d8",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "8bb5e20d-f2ba-4e11-aeca-d0a564d5072a"
        },
        "item": {
          "id": "e74d5418-b71f-468d-96b7-0ac9341abed7",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d94e5006-4bce-4b58-b843-643369441f51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce9f54a-d7cf-4088-b69e-1b7323ac8b9f",
        "cursor": {
          "ref": "52a70e83-4dc5-4f9d-8ad9-cd2425fb123e",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "5f3b69c9-e5cf-47b0-a89c-7d89e0da19ac"
        },
        "item": {
          "id": "2ce9f54a-d7cf-4088-b69e-1b7323ac8b9f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "4888295e-57fd-472e-8254-a09e48d8fab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9857d34f-0132-4ee2-9cd2-69418b2c2cd8",
        "cursor": {
          "ref": "bd2d6e1f-6251-4031-9fa9-77e8c9199fc5",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f2f2066b-ce53-47b6-9484-3198a013c50d"
        },
        "item": {
          "id": "9857d34f-0132-4ee2-9cd2-69418b2c2cd8",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "1957bd56-1af8-41d0-bf8d-1dc3e13ba7ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81842038-db04-466e-aa6c-f926d21734e0",
        "cursor": {
          "ref": "67f90bb9-52ce-4ee7-be24-d558ec698963",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "4a9eae86-a5e0-4b72-a0c2-0848438dfe15"
        },
        "item": {
          "id": "81842038-db04-466e-aa6c-f926d21734e0",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "35d8a127-625e-40ea-81ca-0ef840ec253b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b73a17b-6c04-4b19-86d8-f2a09a388329",
        "cursor": {
          "ref": "76ee430c-d429-4c23-8a18-5003fcd8bee4",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "98124d51-463b-47f9-961e-e395aaafc24a"
        },
        "item": {
          "id": "7b73a17b-6c04-4b19-86d8-f2a09a388329",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "03f91e8f-74d1-4640-8ae9-7a61d154328a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd4add8-b899-42ed-9af4-2188812f3fea",
        "cursor": {
          "ref": "fc9573c1-9279-497b-a0aa-6a44a16f00db",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1c1e574d-e4d6-411d-b406-0801245a4c45"
        },
        "item": {
          "id": "8bd4add8-b899-42ed-9af4-2188812f3fea",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "fdf898cd-1f4f-4db9-87d7-435a4d687377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a0d0e1-a816-492c-a494-a84476f76ec5",
        "cursor": {
          "ref": "5c8d2759-5256-494b-a6ef-f3767c3dc9d8",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a6ef68d7-77cb-4645-80ed-51b284936469"
        },
        "item": {
          "id": "b2a0d0e1-a816-492c-a494-a84476f76ec5",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "94466e65-f98f-4b04-9741-10792aa6ea44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71dcfbf7-0eb8-4b77-a979-204f9c983cdd",
        "cursor": {
          "ref": "d36e97d3-f906-4921-9c45-889261d7259a",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "22327a37-ab06-4155-9b31-d1ad5f851aa6"
        },
        "item": {
          "id": "71dcfbf7-0eb8-4b77-a979-204f9c983cdd",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "bf7431a1-fd16-4edb-bdba-51caeadae484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a2525da-e9ce-403d-9636-8dc61781145e",
        "cursor": {
          "ref": "2ffab780-6aff-4984-99af-db18b9903b43",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "be37d398-eba2-4faa-8500-51079e3334a7"
        },
        "item": {
          "id": "5a2525da-e9ce-403d-9636-8dc61781145e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e470c228-019f-442f-8471-6c900a40089f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07083b5b-1ea7-446b-a428-b771ee279073",
        "cursor": {
          "ref": "2e780cc5-df9f-4cc0-93fc-917d85d52c84",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d410d85d-9e89-4181-b27b-225d1bfa170d"
        },
        "item": {
          "id": "07083b5b-1ea7-446b-a428-b771ee279073",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "d666c4cc-f4c5-4437-abba-80350e9279cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "427673ec-2a5d-446d-8b04-0850510236c7",
        "cursor": {
          "ref": "53eb79a6-7504-440b-ab47-da3eddb319fa",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "80d91440-f0a7-40e5-83c1-c0e2c08752e8"
        },
        "item": {
          "id": "427673ec-2a5d-446d-8b04-0850510236c7",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "950894d5-9b71-45f5-ade0-4d1d307be66a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5a6909-cbfe-4ebc-9e2f-979fe915dfb8",
        "cursor": {
          "ref": "b91b1252-545c-465b-95ee-7fdd9dd0ab4d",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "78af388a-526e-4258-a185-bcc75a1ff53d"
        },
        "item": {
          "id": "7b5a6909-cbfe-4ebc-9e2f-979fe915dfb8",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0b104790-aa0d-40f6-8e91-88d7e99d079b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd7b3a71-5a0f-4cb9-b5a1-b7fc2bd9f061",
        "cursor": {
          "ref": "9e45d7e4-122b-4785-8ba5-bb926808266d",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "dc10f51c-4825-4b57-b0c4-b6f1faef32ce"
        },
        "item": {
          "id": "dd7b3a71-5a0f-4cb9-b5a1-b7fc2bd9f061",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "1144a9c6-4fa6-4321-afdd-89f40d87f0a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c77abd-b985-4eb4-a8d6-344da5228b06",
        "cursor": {
          "ref": "3e0ee3fb-6953-41a4-938f-780fb82045bd",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "32e6fb59-6864-4f5e-b62c-307c8cbe28de"
        },
        "item": {
          "id": "f7c77abd-b985-4eb4-a8d6-344da5228b06",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "6ae75706-3bfd-4664-aa49-068539aaa00a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b0c9f99-4884-472c-95f6-173e06b001e6",
        "cursor": {
          "ref": "e152ee5b-f3b0-4440-8f5d-c412c59d3ba3",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e64a42bf-50b1-475c-9963-754f36e28e57"
        },
        "item": {
          "id": "8b0c9f99-4884-472c-95f6-173e06b001e6",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c8d4e563-07cf-4e0c-9e05-094812848113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5a415c-26b8-44be-9bdb-f3ecb1387497",
        "cursor": {
          "ref": "a3224419-88d2-4c8f-a19c-47743ca9262f",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4f63758c-ac78-444d-bdc0-c90c6d278d58"
        },
        "item": {
          "id": "5a5a415c-26b8-44be-9bdb-f3ecb1387497",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "50974681-2a56-4df1-9b6a-0563b437b479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92caefa6-26b7-44ac-a027-bc92922c9dd2",
        "cursor": {
          "ref": "4fe49950-9b98-4538-b796-a5a5f97db683",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c49f6f0c-9880-440e-80ae-531b03ed5193"
        },
        "item": {
          "id": "92caefa6-26b7-44ac-a027-bc92922c9dd2",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "68bb690d-ecb4-4460-a8bb-dae6fac8c6c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba04f82f-72c5-4508-a9a6-7b13078d911d",
        "cursor": {
          "ref": "22c207ac-53c7-4dde-83d3-3be36f6c71d6",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "2d06eb64-aea0-4f27-bcb3-e38d3e2f5f54"
        },
        "item": {
          "id": "ba04f82f-72c5-4508-a9a6-7b13078d911d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "2e764e70-2823-4cab-a87d-75a2ffd3938e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b940ad9-86b7-46ec-891e-108fbc32828d",
        "cursor": {
          "ref": "5a0f37dd-3e55-4daf-b093-1c6d2addcd03",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9bd3ac5e-cbaa-4e97-94d1-f7fe48afa5bf"
        },
        "item": {
          "id": "1b940ad9-86b7-46ec-891e-108fbc32828d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6f73692e-14d3-4295-a10a-4956c34461a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f0d18c-2148-439a-9893-6228061cd692",
        "cursor": {
          "ref": "a43a257e-5aa5-4b44-b232-8d142fddb540",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7d98ec1e-6f11-49ef-9d56-acdfab6071b2"
        },
        "item": {
          "id": "88f0d18c-2148-439a-9893-6228061cd692",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e47d6fb4-b826-432a-8f66-51330fb4acdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27979df0-a358-45bf-ac0f-d8713ffe000d",
        "cursor": {
          "ref": "be97a73a-6a7e-4f47-82ae-f4e64c9a7078",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "7a2b235a-7eb2-4bcf-8696-54c5c29dce82"
        },
        "item": {
          "id": "27979df0-a358-45bf-ac0f-d8713ffe000d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "cece71bb-b706-44ba-a58e-80bc01fb4a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f67b2d2-e967-45d5-9fec-4108e26cdb45",
        "cursor": {
          "ref": "5bd58510-3732-4695-813e-862e77ff4455",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c02f0ea3-4236-402a-b436-751ae4c9a141"
        },
        "item": {
          "id": "7f67b2d2-e967-45d5-9fec-4108e26cdb45",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d51a048d-d4f0-404a-b716-e9302c964e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8149579-55ae-40a3-850e-1292787b9759",
        "cursor": {
          "ref": "b90ddca6-2313-4da1-ad6a-fb3dc93532d2",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "fdf1a576-1868-4469-9098-0598cdabb1bf"
        },
        "item": {
          "id": "d8149579-55ae-40a3-850e-1292787b9759",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "73fd8793-f965-4395-9ff2-0e8b707c0200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e3cf8a-c3ac-4cda-a7b5-03ec04d8645b",
        "cursor": {
          "ref": "fb561c56-fcef-4b2f-8213-c2431a0adaee",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "352e744f-2447-421d-9492-4393ec104a7b"
        },
        "item": {
          "id": "36e3cf8a-c3ac-4cda-a7b5-03ec04d8645b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c5c615fd-9365-4f69-aa8e-6a2e7c6bc156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f60e82-f546-433d-9312-3abb9fb0c0fa",
        "cursor": {
          "ref": "be5b9279-0c21-4b9c-b231-33f9ec60dea9",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "03f928ce-e897-4b1f-b8c5-335f0f468723"
        },
        "item": {
          "id": "d7f60e82-f546-433d-9312-3abb9fb0c0fa",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ca96bc4d-63ff-4b5d-bf2c-97035adb87c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe01a1e-c0b8-4b06-be9f-d53c840878fb",
        "cursor": {
          "ref": "b33278e3-6155-48ad-8b03-d9205f919768",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "872099e6-be69-4e9f-8656-d0a3e92844e6"
        },
        "item": {
          "id": "dfe01a1e-c0b8-4b06-be9f-d53c840878fb",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "5a243f1f-5b25-427b-8abf-60e1febdd89d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b16c3d4-b161-4dc6-9e15-6876ae4d3d2f",
        "cursor": {
          "ref": "4b314518-582b-41e3-9a55-08ed82ffd1b6",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6c7ac19a-c586-42c8-971f-f06fd59b9c39"
        },
        "item": {
          "id": "0b16c3d4-b161-4dc6-9e15-6876ae4d3d2f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f0f70b42-ba65-4e29-9328-db697c894570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1bf981a-ee93-4c2b-9e46-2d4706974691",
        "cursor": {
          "ref": "31fdebfd-ebdd-47aa-9b44-9a5ce3c78628",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "df0396c3-8a19-4d8b-8188-ca9108983a69"
        },
        "item": {
          "id": "f1bf981a-ee93-4c2b-9e46-2d4706974691",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "61346dab-3f41-4632-aa9e-0c95c1b5f488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af46e1e9-23de-4960-b6ac-51d6f0b2c71e",
        "cursor": {
          "ref": "e278db86-5551-4935-9ba4-4b0ce8c52cf2",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7ee6f5b4-f2a7-43b3-b008-051787e767ff"
        },
        "item": {
          "id": "af46e1e9-23de-4960-b6ac-51d6f0b2c71e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d94c92aa-03d3-4efb-8e90-d81e134840d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1ae8755-9b8c-4739-ab54-4bae522f3e76",
        "cursor": {
          "ref": "49b7e0fa-8e0d-4076-9157-68194f9b1f5a",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "438ae9cf-07ff-4ee2-b466-1721b4f9c751"
        },
        "item": {
          "id": "c1ae8755-9b8c-4739-ab54-4bae522f3e76",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "60752959-52a1-4ad2-8bf6-ff8f0d691be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740ee68a-6c40-4e89-8079-977dd08fc8a1",
        "cursor": {
          "ref": "9d75e6fa-1360-4184-b631-c6560eae066b",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6557d869-e9c7-4f9a-aec4-64ad48c16461"
        },
        "item": {
          "id": "740ee68a-6c40-4e89-8079-977dd08fc8a1",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f1d64d25-b3b3-409a-8820-7e425034f7ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e9ba90-c507-4ed1-be6d-adfca2fe3653",
        "cursor": {
          "ref": "2ae1ec41-f5fa-4e86-9fbf-f63a4b0bb056",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "6839d34a-6e90-45f9-a5e9-16e803a249a7"
        },
        "item": {
          "id": "e7e9ba90-c507-4ed1-be6d-adfca2fe3653",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "2a61a3ad-3d9c-4538-abba-212efeb406c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b691fa21-489c-4a0d-b9e7-ecc73f5a99ba",
        "cursor": {
          "ref": "71f06a42-701b-4053-82ea-b8e953358393",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9ce8beeb-038b-4ffc-9cca-7e57488e55c1"
        },
        "item": {
          "id": "b691fa21-489c-4a0d-b9e7-ecc73f5a99ba",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b276e4f2-b97d-482d-905d-dd148e860057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9391ffb6-ab6c-4cb3-b408-d67d6bf1ab26",
        "cursor": {
          "ref": "9cb28c0e-5019-4634-a792-b0713252bf63",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "477b9459-18fe-496c-8c2f-30f7a5b36252"
        },
        "item": {
          "id": "9391ffb6-ab6c-4cb3-b408-d67d6bf1ab26",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "1564b257-667a-4c4f-a1cd-5a738ea69719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1719dd59-7ff5-4b00-94d9-8a9549aee0aa",
        "cursor": {
          "ref": "9007356d-c20e-4303-b4d7-7bdf0ef866c1",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "3c7776ae-7dcb-49da-b993-a3f4ba93d3c4"
        },
        "item": {
          "id": "1719dd59-7ff5-4b00-94d9-8a9549aee0aa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "aceada91-5e20-4e04-a6a8-77e561e33ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "996a248d-fd5f-426d-9e5f-39d3104992ed",
        "cursor": {
          "ref": "96f04f1e-2c16-4c89-ac65-4b4da9be705c",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6e2a20bb-cfee-4fc0-bbb8-decf036edea3"
        },
        "item": {
          "id": "996a248d-fd5f-426d-9e5f-39d3104992ed",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "cb102d68-aade-497e-87b5-6bc0a89d3cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c397311-e098-4d4d-b309-aea1da6728c3",
        "cursor": {
          "ref": "0f33242e-57bd-46db-9ade-6931483ba0a9",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f001e315-98d8-4246-be9a-c2536cb1b9db"
        },
        "item": {
          "id": "6c397311-e098-4d4d-b309-aea1da6728c3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "239e9297-4bb5-4273-98a5-5dd9e467b2c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "768ac1ec-518a-4ac1-a025-403d212ddbf6",
        "cursor": {
          "ref": "02e2c7e8-8c18-4cd2-b068-02e87a3a3611",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "69dfadce-101a-4abc-b30d-29cd0e6419fe"
        },
        "item": {
          "id": "768ac1ec-518a-4ac1-a025-403d212ddbf6",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "566ba692-9670-4438-80ea-69219227d56e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82e9bf54-cb18-4a00-be6d-910f025f88ed",
        "cursor": {
          "ref": "d4a0f108-f9bc-46bf-8cdc-de14ac30ec82",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f7f962e7-cf60-426d-972e-9586842a8738"
        },
        "item": {
          "id": "82e9bf54-cb18-4a00-be6d-910f025f88ed",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "29b6ffc1-41da-47ea-aea1-d4086f3cbce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09340a0a-1589-4efe-9f3d-ddff177245b7",
        "cursor": {
          "ref": "62a668fd-dd25-4eee-b4ed-35877d90c8d9",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "96b37105-2c59-4fda-b882-f9c177eb8f97"
        },
        "item": {
          "id": "09340a0a-1589-4efe-9f3d-ddff177245b7",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "3eb99c1f-25d7-4b1e-b0bb-1c33c371403e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9072db6d-d74a-4ca3-bfbd-854b08e7ca6e",
        "cursor": {
          "ref": "0e50ea1d-bbde-4215-9d03-add2305054a1",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "636214c0-2cf3-4b06-8066-3f1f576f7650"
        },
        "item": {
          "id": "9072db6d-d74a-4ca3-bfbd-854b08e7ca6e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e8b55ab1-743a-4fde-af0d-0b5f1fdf1fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9585d8c0-231b-4195-8144-330c2885f3a8",
        "cursor": {
          "ref": "dfef9f6e-0fed-4d77-b324-85443ede12b6",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "884ad45f-96fb-4f7a-b4fe-a8daa9a1e176"
        },
        "item": {
          "id": "9585d8c0-231b-4195-8144-330c2885f3a8",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "75e2d055-dc3e-42f9-8d53-77f98d42a322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a83a11-a81f-4676-b333-c4d6c338782d",
        "cursor": {
          "ref": "9416652a-3422-4ae6-b45b-335f3b046ed3",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "cb2234ab-7829-4211-b813-a5eb75435e45"
        },
        "item": {
          "id": "49a83a11-a81f-4676-b333-c4d6c338782d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b5bfed49-319b-478a-8258-46fc71af8c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649e6119-c010-4cb4-a3f9-d2762141fa5d",
        "cursor": {
          "ref": "209f6804-97dd-4a16-b609-f8030128d1d0",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "27fdca8a-91ec-4408-9ee1-4a66a6bbe4db"
        },
        "item": {
          "id": "649e6119-c010-4cb4-a3f9-d2762141fa5d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "85b864ab-8ff2-496a-8645-1f2fd3ea73af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39262f89-c9a1-4492-b10c-88aff567a98c",
        "cursor": {
          "ref": "c3457e67-0845-4827-8e32-14f4bc637023",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6d946358-4697-4c18-82d5-50011dcf9c08"
        },
        "item": {
          "id": "39262f89-c9a1-4492-b10c-88aff567a98c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "093c75c3-caf3-434e-a5cd-9b5493b16614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dcbec1c-cce7-4abe-8138-3dde40515cb9",
        "cursor": {
          "ref": "11126439-fa59-49d4-af0a-c87cc9aacf39",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "7c476709-078d-4621-9123-5cc23ff4624d"
        },
        "item": {
          "id": "3dcbec1c-cce7-4abe-8138-3dde40515cb9",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f8f65068-ead5-43a1-bb0c-fa2d729ae2a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bdfd7ae-394d-4d23-91f4-59d7a0b0b7c3",
        "cursor": {
          "ref": "37833fda-d819-4dbe-ba85-093b8edaa7c6",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9af12fac-ec8a-42b4-9d8d-3301515cfce1"
        },
        "item": {
          "id": "4bdfd7ae-394d-4d23-91f4-59d7a0b0b7c3",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e5cb4f48-1606-420c-8ab3-ebb13b8842c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38168272-24a3-41f9-a6a7-c25b8285a4f0",
        "cursor": {
          "ref": "255b0890-dc83-401a-9cb8-24e7311c4de2",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "729b34f4-d488-4fda-9e07-5c9e3fb0501d"
        },
        "item": {
          "id": "38168272-24a3-41f9-a6a7-c25b8285a4f0",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "fde337b8-461d-4b1c-8d01-7c13934ecb5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b161076-29bb-457b-ab2a-3465b52a43e1",
        "cursor": {
          "ref": "a261feca-e1ec-401e-a2ee-c7c500081258",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "2e6592dc-1cc4-42b1-9c7b-12a3f75d569b"
        },
        "item": {
          "id": "8b161076-29bb-457b-ab2a-3465b52a43e1",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "375bbab0-0537-42fe-b4d2-230630bede4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91db0ec8-09bd-46df-b79f-16ef7efdb21a",
        "cursor": {
          "ref": "fecb521e-b350-423a-8d75-1622d5733237",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ca5cc67f-d970-4647-a414-ff86f358fb41"
        },
        "item": {
          "id": "91db0ec8-09bd-46df-b79f-16ef7efdb21a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "3cd68763-9672-4dba-ba87-ba3849586ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef50bd05-bd2f-4cf5-8c2e-7082575467cb",
        "cursor": {
          "ref": "3019a306-2842-4f17-8b7f-d19ffe324644",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0af21fca-4d17-4430-ba65-7d17106bee95"
        },
        "item": {
          "id": "ef50bd05-bd2f-4cf5-8c2e-7082575467cb",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "823850d8-a64b-439e-b01d-26c3f05bbcad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497ed17f-42b8-4a15-9aec-b4c6e16c9cb7",
        "cursor": {
          "ref": "7162b105-e49e-4f94-910b-befa2780d2d4",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d46c9909-1205-42d4-b8e4-47ca99162695"
        },
        "item": {
          "id": "497ed17f-42b8-4a15-9aec-b4c6e16c9cb7",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d8faba14-cdf7-4963-8221-babb551686b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b1e98a8-150f-4565-a04a-83d17f0c410a",
        "cursor": {
          "ref": "39c6f20e-de98-4869-8b3c-72f7d9ff30ae",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "1d07607b-5c39-4fff-a1e2-493e406ad323"
        },
        "item": {
          "id": "2b1e98a8-150f-4565-a04a-83d17f0c410a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "5f6c5387-b808-4384-a1c0-280bd81fbbd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ac1cb8-b731-4f8d-8532-79f5d728da3a",
        "cursor": {
          "ref": "2391cfeb-e066-41c7-a4f5-04336036e054",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "212db125-121c-445e-8198-b356db11bf6e"
        },
        "item": {
          "id": "14ac1cb8-b731-4f8d-8532-79f5d728da3a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "33b7cd8b-0384-4525-87b2-1bf5907a52a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58a71213-439b-48de-9c7b-64595c95dd79",
        "cursor": {
          "ref": "f134cd8f-6bf7-461d-99eb-0bff3b52b5f5",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "3f07f877-80e5-4c49-be4d-d860319b47f5"
        },
        "item": {
          "id": "58a71213-439b-48de-9c7b-64595c95dd79",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a2fcb515-63a2-47ec-b82f-6ddb85db1ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec7b62a-4ada-4861-b852-c156d0540296",
        "cursor": {
          "ref": "ccb77570-28c7-4b7f-baa5-6099180338e8",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f58b8713-f8e5-4513-a8e0-93df2d7705ee"
        },
        "item": {
          "id": "9ec7b62a-4ada-4861-b852-c156d0540296",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b4b2f8e3-48ba-4654-8d16-91382e4378bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39b5f2dc-9421-4090-b76c-1ff93d6afa35",
        "cursor": {
          "ref": "cc650831-ddd3-4947-8d96-779295ed01ad",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "59b808d6-0bee-45e9-8509-7db99b073c2e"
        },
        "item": {
          "id": "39b5f2dc-9421-4090-b76c-1ff93d6afa35",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "1bbaf85d-1725-4192-bdfd-bc8f0e28bd12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9059f562-7cf7-4428-befa-8e0fe207b682",
        "cursor": {
          "ref": "f386d9a3-d5ce-4c2b-b68f-aa6370ef1395",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "8e8da8e7-1c3c-4f5e-8a52-48309a0e7dd4"
        },
        "item": {
          "id": "9059f562-7cf7-4428-befa-8e0fe207b682",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "61023a1e-2106-40e4-a308-4f067d986c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195584f7-99de-4870-9a21-de8b4a14519d",
        "cursor": {
          "ref": "4585ca04-948c-43fe-84a7-eabe9d1f78dd",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "26fb0d6c-777d-43a8-90da-ffd27b83389b"
        },
        "item": {
          "id": "195584f7-99de-4870-9a21-de8b4a14519d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "0e648fa3-41b3-444c-b350-89a7694c50ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e4cce93-6c68-4300-b723-50a5af53610e",
        "cursor": {
          "ref": "96387297-5118-4e15-ac47-9562ed3aae5e",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "3cbd3f36-ccfe-4328-a383-79c147f9ea6f"
        },
        "item": {
          "id": "9e4cce93-6c68-4300-b723-50a5af53610e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "24792804-c053-46a2-89ff-1b664ca0841a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f0b5e5-6066-4cfd-b744-739da6a7067a",
        "cursor": {
          "ref": "1e27db69-ffbe-4bc9-9eb5-7fb8d7784eda",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "83308e92-92c4-4eed-aea8-8be255c34fa3"
        },
        "item": {
          "id": "40f0b5e5-6066-4cfd-b744-739da6a7067a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d4a83537-64e3-46c3-8a39-0f1b28d5f1dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ded22bb-fd45-416c-91a9-0f57dbff8066",
        "cursor": {
          "ref": "d7e3f2b3-9394-4553-93a8-a21504a906cc",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "23f97ec7-05be-42f3-b820-0d4591b25973"
        },
        "item": {
          "id": "4ded22bb-fd45-416c-91a9-0f57dbff8066",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "10fa222f-1362-48bc-8131-93f7d00e9e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "479f21bc-e7f6-47ed-a784-0d16fdf294ce",
        "cursor": {
          "ref": "7fcbc4bb-52c8-4853-bb33-a31651b8df71",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7f22181c-859b-4a3d-94c0-ad4d7e358dff"
        },
        "item": {
          "id": "479f21bc-e7f6-47ed-a784-0d16fdf294ce",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e58e916b-a98f-4857-b95b-e0c700e4a433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583edffd-ebc3-4e89-a95f-1a96d3e0f13c",
        "cursor": {
          "ref": "8b4a4bf5-5454-4eca-9d0f-0ba366f967f8",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "1104e095-1d3f-4959-a7e5-65252cc2544c"
        },
        "item": {
          "id": "583edffd-ebc3-4e89-a95f-1a96d3e0f13c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b993f655-bc68-4e7c-9427-52cc8d7b99eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc5f671-8010-444c-8235-af781ee68ec2",
        "cursor": {
          "ref": "9ea1241e-7b19-48b3-b22c-cd143fbfdf28",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d53f3028-f2a7-4e66-8759-11f458292ba6"
        },
        "item": {
          "id": "8dc5f671-8010-444c-8235-af781ee68ec2",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b6deab57-4d63-41fc-b80b-880497517de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32c9b463-b820-4294-bcd9-3fa56a53d498",
        "cursor": {
          "ref": "b0b043fb-b05c-4a26-b6f4-9332e47dae31",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "58ce4942-fd43-486c-9c0f-476171f57eb9"
        },
        "item": {
          "id": "32c9b463-b820-4294-bcd9-3fa56a53d498",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f6ae7d9d-928c-4803-ad55-eabd6f293e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0175452-5fe9-4c0e-8baa-ced7663caca4",
        "cursor": {
          "ref": "33053cf2-1950-4281-abec-3af79eb68e26",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ce1dff5d-2305-4549-9676-881e1dc5aa72"
        },
        "item": {
          "id": "a0175452-5fe9-4c0e-8baa-ced7663caca4",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "813729d9-aab4-41c1-bea9-46451fd4eb6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7edefbc6-8c93-4dc0-924a-c4e7b0da0abc",
        "cursor": {
          "ref": "320c4962-5be5-4b55-b169-aa6a2191f970",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "1d73d623-15ce-43e4-a7ca-e548c660be65"
        },
        "item": {
          "id": "7edefbc6-8c93-4dc0-924a-c4e7b0da0abc",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "1aef5d5c-b454-4745-9bbb-4a72349ff70f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f27c15-c7b3-4519-b070-d4a4f94c9c11",
        "cursor": {
          "ref": "c5a965c9-4a32-4f08-b28b-d048b5aaf141",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "77b6c4b7-012e-49e1-b178-6cd6a39a5942"
        },
        "item": {
          "id": "91f27c15-c7b3-4519-b070-d4a4f94c9c11",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7c72c0d8-66e4-478c-8142-0b6caf7c848a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36343a42-7b35-4783-b8bf-fd2f447a65a7",
        "cursor": {
          "ref": "1af44264-a08e-4df9-8b75-460b04628464",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "2432e361-b584-41cf-b14b-60735c5590d0"
        },
        "item": {
          "id": "36343a42-7b35-4783-b8bf-fd2f447a65a7",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "5d29396b-9178-4ec0-a5f0-81dfd46d4d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "744544e6-ce65-4684-8f8d-bb40693f77d7",
        "cursor": {
          "ref": "6d98164f-6ac3-4125-8d4b-f85f8b22f144",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "94be58b6-c606-47d7-bad2-ac519c37d5ca"
        },
        "item": {
          "id": "744544e6-ce65-4684-8f8d-bb40693f77d7",
          "name": "credentials_issue"
        },
        "response": {
          "id": "3a0479fd-8a16-4f2b-9021-1380b2bfef43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 163,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "27c525ca-5cc9-4872-aa27-2f2fa1694dcd",
        "cursor": {
          "ref": "64272dd1-5b3b-44f2-9c14-ecb939eabb7a",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8a949e58-91a2-4e85-b729-3072c30e2f74"
        },
        "item": {
          "id": "27c525ca-5cc9-4872-aa27-2f2fa1694dcd",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "672a60ed-7533-4624-bd46-cebb3cbad840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "d3c83ac5-d3ed-482f-bf14-af807d7993ca",
        "cursor": {
          "ref": "d15cd279-f41b-427d-ae8e-47f181e1ea96",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "df754ffa-21b6-42b5-b3d5-0a75c849a540"
        },
        "item": {
          "id": "d3c83ac5-d3ed-482f-bf14-af807d7993ca",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "529b317c-e31d-4ec4-bcfc-5220a3c22675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "bab7d45a-9f8b-4840-bd6c-755c4aac91d4",
        "cursor": {
          "ref": "be23d1ed-badb-411c-808c-fe03209ddd23",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "bb6a81fd-a177-48bf-aaf7-8cff97c4d43d"
        },
        "item": {
          "id": "bab7d45a-9f8b-4840-bd6c-755c4aac91d4",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "413dca15-b33c-44ad-99bf-a22e225236c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "921b4102-fa7b-4682-8e0b-9d12fc089c26",
        "cursor": {
          "ref": "238be304-ceaf-4bb2-b468-d46fd2ea9d36",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "eee26d68-b3e4-4135-91b1-3060ee37b34e"
        },
        "item": {
          "id": "921b4102-fa7b-4682-8e0b-9d12fc089c26",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "08cd90dc-c2e3-483b-960b-e26288897108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "2d246f97-fcab-4b30-b174-4d8dfaf4d471",
        "cursor": {
          "ref": "a876586f-ea23-42c7-9627-873d215c31b1",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3596e6df-fc33-4b88-9f78-3ede1ce391be"
        },
        "item": {
          "id": "2d246f97-fcab-4b30-b174-4d8dfaf4d471",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8ff7529c-a0f8-4a07-83a1-96d0776ac252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "885c503e-f91b-4eed-9344-0179cffae700",
        "cursor": {
          "ref": "fef34291-a0c8-43e4-a1be-3660037a9d03",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "905c8d99-ff9b-494e-80f0-049681449005"
        },
        "item": {
          "id": "885c503e-f91b-4eed-9344-0179cffae700",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "88c65ea1-219f-492a-8d79-6cf3675bed02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa50cbb-4a4e-47ff-a070-ba3bbcba7e51",
        "cursor": {
          "ref": "d3347de5-edee-4a98-a842-67ac3892c03a",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5cb77c16-aed8-4097-a9a9-90f0f60d8201"
        },
        "item": {
          "id": "eaa50cbb-4a4e-47ff-a070-ba3bbcba7e51",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1bcb6e2d-57e5-45ae-bf7a-00aca04fcb4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ffe3a1-0979-433e-9c95-c98d06a28aa4",
        "cursor": {
          "ref": "db266a39-1cf2-440d-a887-5ad61ff9bd62",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "8525f9c3-ae90-4a38-9fb2-e9380977d51a"
        },
        "item": {
          "id": "92ffe3a1-0979-433e-9c95-c98d06a28aa4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2f02401e-dfa4-4010-b7b0-293de424c704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e63a61-234e-4b90-b0be-f25c6db26dad",
        "cursor": {
          "ref": "2654f9a7-bc0d-4cbd-a372-41b7bfa7639f",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9672739a-9856-4e5c-9fd3-c30dddc79db7"
        },
        "item": {
          "id": "78e63a61-234e-4b90-b0be-f25c6db26dad",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "bcac95e6-d6ae-4a5c-b096-3e27a060e217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5890c17f-6e69-4db0-8a75-a74aeb858a78",
        "cursor": {
          "ref": "6d882c1e-ab6e-4657-9f14-301a83505f6f",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "2131aaf0-1325-4050-956c-d456c03a8af9"
        },
        "item": {
          "id": "5890c17f-6e69-4db0-8a75-a74aeb858a78",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8c9edf05-055e-4d20-99c9-cf6e2de4a1db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2222d8ba-9426-479c-aac0-861cf74a4ccb",
        "cursor": {
          "ref": "db9c2256-b249-4821-981e-b4a142af99b6",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "7604ac49-ed65-4d99-bdcd-4372853095db"
        },
        "item": {
          "id": "2222d8ba-9426-479c-aac0-861cf74a4ccb",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c8943738-f8dc-4a73-a020-73d42cb04fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d98d76-8c26-4c44-8057-fc3390662001",
        "cursor": {
          "ref": "c730b0e2-96da-4060-9942-4ac42e0e6bbd",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "36bceec2-c065-4c0d-8a33-0d328b96ed96"
        },
        "item": {
          "id": "b8d98d76-8c26-4c44-8057-fc3390662001",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9b268c0b-fff5-44e3-aebf-4ef60b330880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19267436-77d8-450c-85b7-a426af10f5ff",
        "cursor": {
          "ref": "39bb23a3-1ccd-43e8-88ba-9a17a9591f96",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a17ac691-1f36-4d4d-a8ea-0fbeedae3db2"
        },
        "item": {
          "id": "19267436-77d8-450c-85b7-a426af10f5ff",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0d213954-29f6-4fa7-9e3c-b3de60d9a7fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc3beba1-7788-44ec-9685-588c7001416a",
        "cursor": {
          "ref": "ee7e2183-f9b4-4ddb-b565-0cdee52cfd57",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "09949eea-e4ed-4ec8-84f7-68296dd54d45"
        },
        "item": {
          "id": "fc3beba1-7788-44ec-9685-588c7001416a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "934f0418-92ba-474c-aa9d-ce0ea478ff20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb7a6a9-4779-45eb-9fc1-ff4958f567ae",
        "cursor": {
          "ref": "5764640d-0cfb-4ba9-87bb-37dc284814e8",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d7f4b654-58e5-45e4-900f-ff6fcfe8920e"
        },
        "item": {
          "id": "4cb7a6a9-4779-45eb-9fc1-ff4958f567ae",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "cac0d444-d44d-4460-beb9-0512af829c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "599be9d8-70fb-40ad-bea7-5bc708d9dff4",
        "cursor": {
          "ref": "2ab949c7-4a93-4ed7-b42b-4ea2a824cafe",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "42cfb060-8063-4c3b-8108-c0f4e0d89a64"
        },
        "item": {
          "id": "599be9d8-70fb-40ad-bea7-5bc708d9dff4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "699049e9-880d-4d12-ab51-6770acc87936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b72829-d78a-4113-bbd5-fa6e5cd022e2",
        "cursor": {
          "ref": "b3d456e1-d982-438c-8ca1-6f784019d66a",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b93fd998-e59a-4e6a-bc74-c6c4e93b548d"
        },
        "item": {
          "id": "58b72829-d78a-4113-bbd5-fa6e5cd022e2",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b0c2063e-d019-4059-b5e7-be3077bb4b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c7fe52-c35e-4ca3-b18f-c0567caf1ae3",
        "cursor": {
          "ref": "d864868f-92fa-490d-8d4e-f7bf9d4b5ddd",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e78d627c-4bad-4172-93a9-5b6a87a197ea"
        },
        "item": {
          "id": "e5c7fe52-c35e-4ca3-b18f-c0567caf1ae3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "00ad3fb9-81ea-4075-8b3d-2b297e6ad736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "406aa800-0abf-48cc-ace8-2cda78a97b10",
        "cursor": {
          "ref": "32a7b1a1-f5a8-4cc2-9b4d-1a6f40953c85",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c169e193-856e-4550-b979-05ae76854d42"
        },
        "item": {
          "id": "406aa800-0abf-48cc-ace8-2cda78a97b10",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "38cd52c8-765a-4f22-a175-e36519b7c887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b2d137-16e3-43d5-8740-14ffc65be5e5",
        "cursor": {
          "ref": "e2e094d8-f79a-4bfb-8ff7-989bb7a4b31e",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a3a751a8-f1e6-4c18-b0f5-d63efdd8b58c"
        },
        "item": {
          "id": "15b2d137-16e3-43d5-8740-14ffc65be5e5",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "fd4e1b85-7c83-4331-9b6c-967ebeeb537f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b92cbaee-dbd3-493a-8ecb-c72c476550f5",
        "cursor": {
          "ref": "e5f51323-6396-4f54-b99d-82be2ba9cf0b",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b0fa65be-4ccf-47e0-81d9-2e85337c195b"
        },
        "item": {
          "id": "b92cbaee-dbd3-493a-8ecb-c72c476550f5",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b4fb8dda-9c60-4728-a097-4a1518f00125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd57bd1-c976-4c98-8f79-7370687d5b0a",
        "cursor": {
          "ref": "96f1a8e3-51e5-452b-af87-cd32db72e74e",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "efa64958-0397-4d8b-b37f-5b749ac9b340"
        },
        "item": {
          "id": "2dd57bd1-c976-4c98-8f79-7370687d5b0a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6849cac5-5f8a-445a-93f2-289f7edaaa1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a2ca02-433e-4691-989c-65582cf49e30",
        "cursor": {
          "ref": "0a2ed3e1-3057-45fe-a13e-e6af7ef89a26",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0f6ce95b-d811-456b-b2e8-4b6fd86bb998"
        },
        "item": {
          "id": "c5a2ca02-433e-4691-989c-65582cf49e30",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "72b35e00-f9e8-4624-b80d-321da0ca64e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef0fe1b-08bd-4a66-83f3-8a2772d85c4f",
        "cursor": {
          "ref": "6edd69a5-21ac-4f61-ae5a-6bb0a320d834",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "7372631e-c726-4788-ae38-04b6be2eaf0d"
        },
        "item": {
          "id": "8ef0fe1b-08bd-4a66-83f3-8a2772d85c4f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8aa3f488-7e0c-431c-853a-efa8f72207ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd2ef8d-b1ab-4712-a461-24d531c35e8f",
        "cursor": {
          "ref": "7ba0ac28-ce2c-4728-8791-f6b732eb3e73",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c5fa6cf8-a79f-46c0-aeee-7feab803cc9e"
        },
        "item": {
          "id": "5cd2ef8d-b1ab-4712-a461-24d531c35e8f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3dc21bdd-0e9e-45fe-9373-ee0669bd0587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7486441-41a7-44ba-b487-26ca4cea7d99",
        "cursor": {
          "ref": "59752c29-328e-42a4-9fee-6831a794450b",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3210c974-9665-47de-9385-aef6f9faf1ac"
        },
        "item": {
          "id": "f7486441-41a7-44ba-b487-26ca4cea7d99",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7fe325a1-6e03-4a06-8fa2-82704c1a0d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e8a8c7-ca01-4672-9be4-e4b040ba0f21",
        "cursor": {
          "ref": "fc97ff4b-c710-453f-9f67-84670c83db7c",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "64b13769-5caf-4624-8f1e-3058e3a39c97"
        },
        "item": {
          "id": "e0e8a8c7-ca01-4672-9be4-e4b040ba0f21",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "40853b5f-cc06-4126-a04e-63541ac23b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "239168ed-1ac0-49d6-b738-f3e00652573c",
        "cursor": {
          "ref": "cc17ae8f-81fe-4136-b065-034c948c9925",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "929be3b1-ed93-456e-a7a5-87c0b450adde"
        },
        "item": {
          "id": "239168ed-1ac0-49d6-b738-f3e00652573c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f6076202-5984-499b-bd16-6d7819add648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34c9f21-0a10-4d00-aa09-4f49fd0b3f42",
        "cursor": {
          "ref": "e9d5fdd8-55a3-4394-b9d3-f69baf333b2a",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "58676765-1bb4-4a31-b931-6ce19e29e350"
        },
        "item": {
          "id": "b34c9f21-0a10-4d00-aa09-4f49fd0b3f42",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b6e3daab-b15f-4cf1-aefc-9e2ed68320d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d4b3101-e89e-47cc-8a92-9e0634e9adde",
        "cursor": {
          "ref": "556e1bda-7b36-4951-9c10-fc8662f809cf",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "4b881e1b-b512-41ba-b435-4d89aa274954"
        },
        "item": {
          "id": "7d4b3101-e89e-47cc-8a92-9e0634e9adde",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3414d845-d75b-4015-83ab-6aff58ce2e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea9aea3-3f1c-42c4-a475-6d5dd71a1107",
        "cursor": {
          "ref": "f37f8a41-8b2c-457b-a9ab-d5b4a4b4b251",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "620fcd06-39fb-4394-8dad-ddf1e6963129"
        },
        "item": {
          "id": "aea9aea3-3f1c-42c4-a475-6d5dd71a1107",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7293196d-937e-4766-a481-39ffeb32de59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "817532c2-e46c-4af4-9df1-80fa564871dc",
        "cursor": {
          "ref": "ee6504a8-cfa8-4931-8392-acd8645c5392",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ca225c59-04eb-4d02-b284-656c0792dc47"
        },
        "item": {
          "id": "817532c2-e46c-4af4-9df1-80fa564871dc",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1c8754ef-79c3-409b-84a3-84b58cff9bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "982025db-699b-4d24-954b-aac529a46730",
        "cursor": {
          "ref": "5476af86-6981-499a-8e88-2b342332e33d",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "86a27e31-e6ee-46d2-8003-afc2e838ca27"
        },
        "item": {
          "id": "982025db-699b-4d24-954b-aac529a46730",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "87b84008-6293-47ad-8ea2-3f61f593e552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dafe1707-3bcc-4856-adce-86ed0cbbaf90",
        "cursor": {
          "ref": "e8fa0f85-864d-4c6c-9e58-7f636a4f2b78",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a20a0d60-0377-4048-bae7-d360bee764b5"
        },
        "item": {
          "id": "dafe1707-3bcc-4856-adce-86ed0cbbaf90",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "29e67cf9-eef5-4d09-967a-1d811abd0261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2e8dcbb-9ca7-4ab5-805d-0c6c525ecebe",
        "cursor": {
          "ref": "36fc87a0-1aa6-4969-aa5f-056fa0cf17a9",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "8b783302-7c15-4e11-98eb-720ff5b07050"
        },
        "item": {
          "id": "f2e8dcbb-9ca7-4ab5-805d-0c6c525ecebe",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "fef3b477-015a-4e97-ac1a-7f91f694f4d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "447991a7-3567-4b32-813d-2a4787da01c5",
        "cursor": {
          "ref": "60f5b9d2-d331-4a93-9c4a-94fde366369a",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "22db6103-03b5-4b68-8289-fab087f8fa23"
        },
        "item": {
          "id": "447991a7-3567-4b32-813d-2a4787da01c5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "cfc74b2d-f108-4213-bb83-60df28a3b14e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43eecc8a-3fd4-412e-aeed-93db8df5f16f",
        "cursor": {
          "ref": "8ba6ae3a-c004-41f0-9412-ac578de5b1bb",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "32c410a0-4dd2-4eb3-9c23-d955286ead23"
        },
        "item": {
          "id": "43eecc8a-3fd4-412e-aeed-93db8df5f16f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "bd0a9a54-9aad-4df2-9799-3bc045dc6291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db00897-a7a5-4958-a0c5-9fd644060e9d",
        "cursor": {
          "ref": "4d80544f-058d-434e-b759-223dcc2e2233",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "9811901c-2594-4bf4-b760-024e3da99fa7"
        },
        "item": {
          "id": "3db00897-a7a5-4958-a0c5-9fd644060e9d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "28f3069d-a0fd-418e-9147-8a2f33c0ce69",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "105ac8af-da2f-4139-9408-4d434feda788",
        "cursor": {
          "ref": "6d9f4088-335f-41f3-9bfa-0c34d2627dc8",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "741d089f-561a-4b91-a6f3-768139f43ac6"
        },
        "item": {
          "id": "105ac8af-da2f-4139-9408-4d434feda788",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0b2cd09e-0a00-467d-98e9-42a80880f4ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6ad10ca-afe1-47ab-9212-95f9d9bcfa79",
        "cursor": {
          "ref": "64c9c241-2909-4bdf-b2a3-27f163e14ce2",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e0db03e5-e60c-4c04-ba7a-ec1d1663831e"
        },
        "item": {
          "id": "b6ad10ca-afe1-47ab-9212-95f9d9bcfa79",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a587db47-8d18-4073-9ee9-a37a3edefe2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ed0591-bbe5-428e-bf6a-1c1be8ee7e5d",
        "cursor": {
          "ref": "0ae01e9b-b15d-44ca-87dd-1a2805150262",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ddb70d77-8a20-4f4a-a90b-725a62b412c2"
        },
        "item": {
          "id": "d7ed0591-bbe5-428e-bf6a-1c1be8ee7e5d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "39c28bf6-821d-4ee2-b3c0-87acfb473fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88df1fb4-a32c-4bdb-aa3e-6ea2db2a218b",
        "cursor": {
          "ref": "6c28763c-95c2-4d8c-93e4-a5456b142516",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e9a8662f-8567-4929-8d14-45cd980ea458"
        },
        "item": {
          "id": "88df1fb4-a32c-4bdb-aa3e-6ea2db2a218b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "bda98afa-eeb7-4a0a-b627-79c8bef36c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081031e1-0ded-4426-82ae-e82b86604ac7",
        "cursor": {
          "ref": "b28a32b5-ad06-4ed6-adc1-575881401bde",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9386c1bf-cd64-485d-8a09-ae906a4ee212"
        },
        "item": {
          "id": "081031e1-0ded-4426-82ae-e82b86604ac7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "15c8d175-7e5f-4386-adc8-390f96d22a84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3eb3b3-324d-44ad-809e-cb30ca6c263e",
        "cursor": {
          "ref": "8f6da44e-9ef0-40f6-b73c-a0396080c6b9",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "73677900-81cf-4357-b14b-0f7dd4e3547e"
        },
        "item": {
          "id": "6e3eb3b3-324d-44ad-809e-cb30ca6c263e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "dcd0bd8a-8467-47bc-a846-f6eed01afa4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c19d6caf-02b0-47c5-b464-a6cef673d704",
        "cursor": {
          "ref": "22cf9699-404d-48f3-9c19-fe9c855e440f",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b0167e45-be4f-437a-b3e1-fbdfd27ac0bb"
        },
        "item": {
          "id": "c19d6caf-02b0-47c5-b464-a6cef673d704",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3d0389c0-3bdf-4cd0-9343-594a71970766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f6659e5-1c61-4c72-9854-32e76c09fead",
        "cursor": {
          "ref": "0eb8ef70-6892-4fa9-99ca-7fc2709da1ef",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ba3e713e-9943-406e-a824-be2c0526332a"
        },
        "item": {
          "id": "2f6659e5-1c61-4c72-9854-32e76c09fead",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4f339c1d-61d7-4779-9e65-e275e773d087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "123364ad-9b8e-4434-ab3b-4a33901d2bbd",
        "cursor": {
          "ref": "ba200ffb-add4-4eb1-9fc3-00e78ce836ba",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e821caf9-f8c6-49f0-922a-2e0a80d315df"
        },
        "item": {
          "id": "123364ad-9b8e-4434-ab3b-4a33901d2bbd",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "38a3d7d9-41d4-444d-a137-b8e6d88e20a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e741df14-3a53-474b-8196-6eb4f8864a6d",
        "cursor": {
          "ref": "7d030288-2d0f-4dc5-9df4-cf9be0419225",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c2009d24-6590-4eee-aed2-b4138363a320"
        },
        "item": {
          "id": "e741df14-3a53-474b-8196-6eb4f8864a6d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "be541f8d-825a-45ac-8a66-e64068f56568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b863e17-324a-4539-8ca5-f08cb12d94f1",
        "cursor": {
          "ref": "99233156-802b-4e0c-8a64-b39138715809",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ade6d48b-0e67-4377-a71f-fb85338d09ca"
        },
        "item": {
          "id": "2b863e17-324a-4539-8ca5-f08cb12d94f1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "dfedf61b-13b2-432a-a8b6-f92035c28036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "109f37c0-c2b0-4640-8c32-ec42d3d55743",
        "cursor": {
          "ref": "650183ed-4d3b-4348-98f1-759bffbf2e3e",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a3d21925-ef73-4699-957d-e9af82363cb8"
        },
        "item": {
          "id": "109f37c0-c2b0-4640-8c32-ec42d3d55743",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e7e921d8-7f8d-4199-9346-a9d03de8aa7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418d0260-8d77-4e7b-b615-976392d5728d",
        "cursor": {
          "ref": "9e6c9be1-87c7-461f-9457-fe249bacddf1",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "20e3fe91-342f-4513-bf99-e323ec4a6e30"
        },
        "item": {
          "id": "418d0260-8d77-4e7b-b615-976392d5728d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7d66e9b0-5624-4440-b620-cc4065104bad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b74f05-c485-45bc-8403-3ea454d5ebe3",
        "cursor": {
          "ref": "3ab3a3eb-da73-49a6-86b3-9d384e6062a0",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b509a725-d007-4472-a382-ded89167b5fd"
        },
        "item": {
          "id": "62b74f05-c485-45bc-8403-3ea454d5ebe3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "65f4c48f-c9c0-4925-8c00-a58cba12e3d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b430a70-81db-45a6-a256-569305d48b95",
        "cursor": {
          "ref": "8d55a90e-4aba-4ca6-8efb-78bd6142e4d1",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "37606f7b-e6fb-4ea4-81f3-73544e69a5db"
        },
        "item": {
          "id": "7b430a70-81db-45a6-a256-569305d48b95",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0940f15a-86bb-4149-9e71-b2571615d365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa5e3aa-ee69-4c90-bffd-4d3ef8b7b606",
        "cursor": {
          "ref": "1e7b39fe-1d05-479e-a51d-17cdf4390b77",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d806b215-460d-4327-a0fe-43b9e3d978a2"
        },
        "item": {
          "id": "dfa5e3aa-ee69-4c90-bffd-4d3ef8b7b606",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e9ab708b-0b2e-4c12-ba6f-fa871a22cd33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e74269b6-5a8e-49f7-bf2c-e410d5917997",
        "cursor": {
          "ref": "9f2d723a-f68a-4b52-adee-25af8a618fa6",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b7675736-f3d6-4f67-88b7-ad70841245ba"
        },
        "item": {
          "id": "e74269b6-5a8e-49f7-bf2c-e410d5917997",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1058897c-b76e-424b-a350-3c1eb7512d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52d1fa6-b344-44ba-81c1-dc9d6524bace",
        "cursor": {
          "ref": "e1df54fa-2ee4-4c8e-8d8e-04bab22d7c72",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e62e6b33-859e-451f-991d-353d2f991932"
        },
        "item": {
          "id": "e52d1fa6-b344-44ba-81c1-dc9d6524bace",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ddcb6f69-cd87-4c8f-aaa1-c1129c33d8a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b78767e1-c9bd-479a-9f33-debaf3eadc64",
        "cursor": {
          "ref": "94cd15e5-2886-4a9b-bd12-299ad1c64769",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a09d395e-c879-4226-83e4-2d1fc2039660"
        },
        "item": {
          "id": "b78767e1-c9bd-479a-9f33-debaf3eadc64",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "68f2bf23-53f5-4260-954b-1d4818bfbe53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2955f611-0dd6-4730-a1cb-193d13a54456",
        "cursor": {
          "ref": "440db513-486b-4267-800f-f5e978ad54b8",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a3c73412-11a8-47ba-b4d3-0c7fa66789f8"
        },
        "item": {
          "id": "2955f611-0dd6-4730-a1cb-193d13a54456",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "bc42101a-b5b1-440a-aadb-8b0386539e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65880304-e25b-4ba0-9164-118315833e0e",
        "cursor": {
          "ref": "9551e11a-7d1b-481d-971a-fd5387845c8f",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "57e9b212-3080-4b28-bb9e-43178e102b4b"
        },
        "item": {
          "id": "65880304-e25b-4ba0-9164-118315833e0e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "abcd9a05-0342-4198-98d3-e7894d3cc7a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8eb6ed2-5b4f-4319-9580-aedce09e48cc",
        "cursor": {
          "ref": "ab131406-d562-4eb0-acda-d6af1afb9af2",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "cbcbf051-5eb6-4d73-85d0-bd1b1771848e"
        },
        "item": {
          "id": "e8eb6ed2-5b4f-4319-9580-aedce09e48cc",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d4dad99d-67d2-49a3-b984-4fce98dbd2cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533eddff-6aa9-4231-8d2c-101ffed87c2c",
        "cursor": {
          "ref": "f374047e-aafc-4e30-8e58-f828b1ad0c37",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "665e54cb-03e1-4132-b899-c81b199a136e"
        },
        "item": {
          "id": "533eddff-6aa9-4231-8d2c-101ffed87c2c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "fa8defdf-7cc2-4d78-bcac-abc4c10e436e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99478f09-8ab6-4f0b-b8d4-ff95d5643589",
        "cursor": {
          "ref": "419072c2-5485-41dc-87e8-5236a382f5f7",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "dfe57be8-7950-47a9-ab8c-23087453174d"
        },
        "item": {
          "id": "99478f09-8ab6-4f0b-b8d4-ff95d5643589",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "fbcf6d74-7b78-461d-9bf9-a8e77186aa4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe46765-2ee3-43ae-9a5d-f37ecb050429",
        "cursor": {
          "ref": "9cf2322f-b2a0-489a-b8dd-e631e8304e8f",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "64fbe1ee-9717-407a-857e-02a7f7c636d1"
        },
        "item": {
          "id": "7fe46765-2ee3-43ae-9a5d-f37ecb050429",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1a303403-c6a9-4003-afdc-572fd8ea66c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69512a63-7389-4d44-9150-16dfa85e0f60",
        "cursor": {
          "ref": "95abc554-3059-4adc-ba56-3a5a415106fe",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c2e40754-ca32-44b2-b4ec-9f25d5bac3b4"
        },
        "item": {
          "id": "69512a63-7389-4d44-9150-16dfa85e0f60",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "46cfea32-5c6a-44a1-b692-6c545d7677dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "421197cb-2933-48ff-919f-618b20cb3933",
        "cursor": {
          "ref": "9dfdab37-74e1-4dbe-8bc6-4f827e619af8",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "9f0753bd-3d01-4edc-8e21-67ad0c8e76fb"
        },
        "item": {
          "id": "421197cb-2933-48ff-919f-618b20cb3933",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7a6f12c1-8cb6-4efe-9a36-1957fb9309fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b5b578-8054-4ad0-9489-f0ec16b40d5c",
        "cursor": {
          "ref": "41c69d95-f950-4b2a-bb0d-3b375ef168b8",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0f7eeb7d-1a83-4276-93ba-648bd422572d"
        },
        "item": {
          "id": "d0b5b578-8054-4ad0-9489-f0ec16b40d5c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "71fc012a-4237-43a5-91cf-b05396be4889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b73240-e33c-4f87-b346-5d7c0b7b57d2",
        "cursor": {
          "ref": "666795b5-f84f-459b-a13a-375403b578ed",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1df2a3e7-9121-4d78-b6a9-41c7739bcddf"
        },
        "item": {
          "id": "06b73240-e33c-4f87-b346-5d7c0b7b57d2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c771325b-1c32-439d-85d9-659aa3b0c6c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf97e60e-3433-4380-a352-4021c21b8a12",
        "cursor": {
          "ref": "7498e248-af12-4537-a363-f6b8a01564a7",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "62cf8d80-4cc2-4452-aca0-460285375a3e"
        },
        "item": {
          "id": "cf97e60e-3433-4380-a352-4021c21b8a12",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a280ae0d-50b0-47c9-94fd-8c020f377d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b813da45-6010-40c3-9c69-adbd57c3d498",
        "cursor": {
          "ref": "c1a6b695-9f3a-4d70-9366-fd7f95afadef",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "cfa78e13-85de-424d-b363-3c2bd4e1618d"
        },
        "item": {
          "id": "b813da45-6010-40c3-9c69-adbd57c3d498",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "49306f63-e71a-4a38-af99-924028f97db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36980d4d-0e5f-4a6d-a459-7702efd4af8f",
        "cursor": {
          "ref": "638af43f-b946-4afd-a4f6-e2f12a4debca",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "29a05dc5-43af-4850-9664-04f9eacef9f9"
        },
        "item": {
          "id": "36980d4d-0e5f-4a6d-a459-7702efd4af8f",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "4285d3e0-05a4-4712-91eb-3c213742bbcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409e2de1-ba5a-4289-96f9-6c2ca07b3e8a",
        "cursor": {
          "ref": "74ba596b-b8c7-4562-b18e-d4739b0dc7ed",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "673829f1-cbba-45c4-81ef-7340736f5d4e"
        },
        "item": {
          "id": "409e2de1-ba5a-4289-96f9-6c2ca07b3e8a",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "5d1e77df-4531-4d53-b7df-cc41971e7ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fce562b-a5e9-4c0e-af35-c3ac18808725",
        "cursor": {
          "ref": "0a40fc87-6174-4e2a-9926-b3a70accf314",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "528c13d6-b35b-42a8-8a5b-a74698c8c787"
        },
        "item": {
          "id": "5fce562b-a5e9-4c0e-af35-c3ac18808725",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "4051602a-4b08-4a50-8cce-16b5d124be2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c9ce494-6e63-484e-8b65-4d51ad19a791",
        "cursor": {
          "ref": "77567229-d8be-4b7f-bd1f-035282ef6e03",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8d7ab055-e525-4175-b752-be12b0efd1b0"
        },
        "item": {
          "id": "0c9ce494-6e63-484e-8b65-4d51ad19a791",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "f876ec7c-af1d-473c-963f-6642228199d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed78d88-b42c-4150-9c08-f0fdf2d4fac1",
        "cursor": {
          "ref": "53685296-7531-4917-a10d-fa894193316a",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "0b96316e-8e0f-4983-8ea3-896abe40a3b9"
        },
        "item": {
          "id": "1ed78d88-b42c-4150-9c08-f0fdf2d4fac1",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "03241879-e25d-494f-9866-9f232a3ea1b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6339a9a-cd5c-4cbc-8866-037bf823652e",
        "cursor": {
          "ref": "99d47c14-3112-4409-adb0-f0a5a921e42e",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "20fb180d-625e-4529-b29b-139af8377041"
        },
        "item": {
          "id": "f6339a9a-cd5c-4cbc-8866-037bf823652e",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "2df3e622-865f-4a78-b62d-10f118440ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c2cecdb-356c-4219-9de6-c1ffee52b4f6",
        "cursor": {
          "ref": "7169b810-0248-491a-9cd5-4ebe00b8efed",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "89e09935-bf47-4249-b36e-04dc2e3b01d2"
        },
        "item": {
          "id": "2c2cecdb-356c-4219-9de6-c1ffee52b4f6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "65c1b6d3-a87b-4669-ab80-683d995c9482",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad48f131-01e6-452b-80f7-2dfa9b87913f",
        "cursor": {
          "ref": "a55dbc7e-153f-4f4b-b135-12820cdbc124",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "6e1bbb0d-321c-4624-a8a3-4c0643547dbf"
        },
        "item": {
          "id": "ad48f131-01e6-452b-80f7-2dfa9b87913f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "54fe5eb5-a97f-4423-a0df-84329aaabff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e47538e7-e414-4c89-a85d-027ae6231df0",
        "cursor": {
          "ref": "39dd5569-e133-4167-981b-2ab1e2bc0405",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "5f993d50-ef96-4eb7-88cd-350e7a19def6"
        },
        "item": {
          "id": "e47538e7-e414-4c89-a85d-027ae6231df0",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1dc2c41c-0d33-46a8-9dcf-76a2997a7572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c95a0bc6-ed6d-4c00-9bb3-358934edad01",
        "cursor": {
          "ref": "9b57bd91-75d0-46fb-99aa-1f209e253fb1",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "17e13c9c-fc4b-402a-81df-97ffab951329"
        },
        "item": {
          "id": "c95a0bc6-ed6d-4c00-9bb3-358934edad01",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b742ccfc-c1ae-4195-aaab-6015e7d82681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c9e146-faff-4ddc-ae3b-184a4a585eaa",
        "cursor": {
          "ref": "024f544b-0271-48ef-a2d8-168b1a278aad",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d1acd113-a080-491e-9b19-15a4404b568d"
        },
        "item": {
          "id": "90c9e146-faff-4ddc-ae3b-184a4a585eaa",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "6f7d216f-2c6f-42f0-ad62-1be5fa15b4e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a61ed6bd-3525-44b0-bf7d-a5f141cf1a79",
        "cursor": {
          "ref": "4239e9d1-9607-4747-af14-9432f2372f19",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "81f9f68e-f217-4921-824e-7b45e8092a18"
        },
        "item": {
          "id": "a61ed6bd-3525-44b0-bf7d-a5f141cf1a79",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "85f2ccad-b0bf-4f72-b770-7b2fe1006d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b4db2f9-19ca-4292-b3fa-60caac971265",
        "cursor": {
          "ref": "08608b66-829b-4f88-87d6-9b592b208f6b",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "028ed405-5884-45dc-89e4-346e70d93b5d"
        },
        "item": {
          "id": "1b4db2f9-19ca-4292-b3fa-60caac971265",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "1bad080a-b378-43ce-b6a8-c0628bc6b1c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f45e822-4579-4b07-b3bf-1b88036e1574",
        "cursor": {
          "ref": "b49931a9-934f-4a87-9d49-efa00a7fe494",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "99a83465-edc5-430e-9157-d438189e710e"
        },
        "item": {
          "id": "7f45e822-4579-4b07-b3bf-1b88036e1574",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f76b94b7-ff76-4671-8453-3d206dbc5384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff47852-d315-428d-b63f-27853d286d14",
        "cursor": {
          "ref": "90296cfd-3ed7-40e6-9671-d826707105e5",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "caaea3e4-d411-4607-9327-c1cd261dbd8d"
        },
        "item": {
          "id": "3ff47852-d315-428d-b63f-27853d286d14",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2d33535d-59fd-4d6e-8b9d-4e57de3c1039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d32e2c6d-43cd-49f1-9ac6-3906e4397892",
        "cursor": {
          "ref": "ae3ff850-43d3-491a-9591-bcc2612dcbec",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "76234a94-0b8b-4cc5-a541-462b5714ff76"
        },
        "item": {
          "id": "d32e2c6d-43cd-49f1-9ac6-3906e4397892",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "4aa063d7-9d2a-4521-927f-02283d7b4ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6ae33f-b41b-4934-a51b-c8dee0d56d3d",
        "cursor": {
          "ref": "509efab9-24a1-46ba-b51b-13d08a78caa4",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "1b73876e-1427-4cb3-8ac4-7017a636e3db"
        },
        "item": {
          "id": "5b6ae33f-b41b-4934-a51b-c8dee0d56d3d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "39769dfe-854c-42c2-9e28-8cf21af9140a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d84f8f8-7fba-4662-9fdd-7e4054a9cdc2",
        "cursor": {
          "ref": "4fbde683-9939-471c-a8f4-9464b5a73faf",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "7c21f81a-cc3d-4871-9618-b87022a1d2a0"
        },
        "item": {
          "id": "7d84f8f8-7fba-4662-9fdd-7e4054a9cdc2",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "49e2f02c-0e94-439b-a0da-09b9f6065ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e3bd29c-e780-43fc-8c97-010506c7fe31",
        "cursor": {
          "ref": "7fbd6f3a-ec53-424a-b4ef-259d8ad96578",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e7266490-a05b-4362-a2fa-5428f95f5188"
        },
        "item": {
          "id": "8e3bd29c-e780-43fc-8c97-010506c7fe31",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c67adba1-6874-4cfc-b470-5077718ffd5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ffff93d-aacd-4b1a-99c3-16bdc0f632c3",
        "cursor": {
          "ref": "d0cc9922-05da-4dbc-81fb-1597067f0636",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b7b54279-620e-40e8-8d6d-58edb4866d21"
        },
        "item": {
          "id": "8ffff93d-aacd-4b1a-99c3-16bdc0f632c3",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c87d17d1-ffd9-4ca6-8cae-b97bb5030fd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea63f83b-951a-41bb-bf08-9663d6e1b41a",
        "cursor": {
          "ref": "1339bb3f-c446-49db-96ef-eaa3a3b68076",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "9ced54b6-a6fb-41c3-8a86-3c629841f39f"
        },
        "item": {
          "id": "ea63f83b-951a-41bb-bf08-9663d6e1b41a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "74093b55-c0aa-4595-9c02-6f0e1759f335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59a16cd-aa9c-4749-ab9a-dffd4d3d28d3",
        "cursor": {
          "ref": "c136ca4e-2ba1-4085-924d-3e7419ea44d9",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5ccb5e68-fd4e-4256-8511-b60abed83c65"
        },
        "item": {
          "id": "d59a16cd-aa9c-4749-ab9a-dffd4d3d28d3",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "8e793d08-3d5b-49c0-bc5c-ae853de1e179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48384d7-fa01-4277-be9f-b611ea6dce59",
        "cursor": {
          "ref": "973df692-25c1-4e97-9186-7cfb1f925b66",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "161a922d-691e-4df7-9bb5-a3435c8e6df6"
        },
        "item": {
          "id": "e48384d7-fa01-4277-be9f-b611ea6dce59",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5045670a-b419-48cf-a073-2f26cf747802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9fe0e3a-ec2c-4fd8-b2c0-9e13cddc4fd6",
        "cursor": {
          "ref": "da7ae683-aba6-4da9-9040-21904ff4d220",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "caea6b1c-ee81-4bf5-bf2e-70134f2b8add"
        },
        "item": {
          "id": "a9fe0e3a-ec2c-4fd8-b2c0-9e13cddc4fd6",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "2e6b022e-95f4-4dc8-a36e-e401fb086832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4844fed-cc40-430b-87af-9ab54180f130",
        "cursor": {
          "ref": "a4a6b478-a9f7-483d-87d8-4c25660cb1fc",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "5ee30bc7-f2a9-46d8-a441-aff8a2ee1275"
        },
        "item": {
          "id": "c4844fed-cc40-430b-87af-9ab54180f130",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b20f248c-55e5-4d1d-a8d3-05439968216c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb5fbd71-74a7-4b7c-b67e-ce245245c14b",
        "cursor": {
          "ref": "a15c6b76-bb70-4c36-a7eb-5335297c71e4",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ff2db4ff-e0f9-4d6d-b3c1-c6e104f85484"
        },
        "item": {
          "id": "fb5fbd71-74a7-4b7c-b67e-ce245245c14b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a4bd3f62-dc5e-474e-ba2c-a100727f77e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a916ee-33a0-4388-9af1-16156a4a61bd",
        "cursor": {
          "ref": "8f887162-82c2-48d8-8e44-5552b8b6b893",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "71910e3b-5b1b-4fef-a70e-40ae8999e406"
        },
        "item": {
          "id": "b3a916ee-33a0-4388-9af1-16156a4a61bd",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7f031334-cde7-4fb9-a0db-41d36a3c43d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb5e6a66-e703-4bb6-ab58-9a4270aa88d8",
        "cursor": {
          "ref": "b406a678-b644-4eaa-abc9-371986144563",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "1e77aadf-f9d0-4365-b5c6-d3b35b5d858d"
        },
        "item": {
          "id": "bb5e6a66-e703-4bb6-ab58-9a4270aa88d8",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "880166d9-e1eb-45d6-995b-018add4b7b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6082a71c-3864-43c4-9518-7fa0adcc09bb",
        "cursor": {
          "ref": "9fa5b958-b2b7-4b12-935b-0e5e168812ca",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "06b4b62d-fdf6-4f21-847b-6ae7087b7a86"
        },
        "item": {
          "id": "6082a71c-3864-43c4-9518-7fa0adcc09bb",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "6bf37d2f-aebb-4a07-9318-043930e190c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd6f4f3-a611-4c43-bf4d-289a61d52bbb",
        "cursor": {
          "ref": "0b416e95-03a8-4439-9d3d-388eadfe3e03",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "a1d4a03c-7f22-4dea-a4ae-45033dded5cc"
        },
        "item": {
          "id": "6fd6f4f3-a611-4c43-bf4d-289a61d52bbb",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "eccc6715-7743-454f-871e-4290984431e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47246e5b-fe13-4aeb-abfd-ff74ab28f915",
        "cursor": {
          "ref": "20b3264c-b7c9-4c3e-8253-47c60867788d",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "862b626f-cb3f-40a1-a9fb-9f45dd9a0e2d"
        },
        "item": {
          "id": "47246e5b-fe13-4aeb-abfd-ff74ab28f915",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e75ee946-348c-4e5f-8da4-3ff35c9652fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 152,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5b70b6-dbf3-4844-abc7-46b3c0319388",
        "cursor": {
          "ref": "a2e3d7f6-03e5-4e06-a748-85d8bd2799d2",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "df2da31d-0761-41f0-a5b4-49220031db48"
        },
        "item": {
          "id": "9d5b70b6-dbf3-4844-abc7-46b3c0319388",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ffa3e8f7-dc48-419c-b6b1-4b3a467ec6ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533740a3-594b-4ec0-a389-7f0a041a3c8f",
        "cursor": {
          "ref": "c6229875-94e6-43d2-80ee-bde74f5e8064",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b2f6acf6-dc41-4cbc-9a2b-3525e8ef7b88"
        },
        "item": {
          "id": "533740a3-594b-4ec0-a389-7f0a041a3c8f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4624e4d8-6ce6-42fe-a536-1a16cd15e892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7863283f-df08-4f9d-8a75-4dd40071ff9c",
        "cursor": {
          "ref": "b1df0062-9c95-449d-bf2c-c022a36938d4",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a452a468-0557-47f2-b9b0-9e899eac3484"
        },
        "item": {
          "id": "7863283f-df08-4f9d-8a75-4dd40071ff9c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5545730a-6101-4d40-8b84-50ba58d7822d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a117b8-055e-43b8-b5aa-8783a0e815fc",
        "cursor": {
          "ref": "c92af4a3-8954-40e4-b1ac-fcd2c142d9ff",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "764f2884-2588-44b2-a166-a86d277c9d72"
        },
        "item": {
          "id": "36a117b8-055e-43b8-b5aa-8783a0e815fc",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "038200b6-d90e-47d8-b911-e5f8b670e54f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717f9999-9b0f-4966-ba17-fbcb33790111",
        "cursor": {
          "ref": "d678570e-65a7-4fde-b42d-292c1620bfa2",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "597693cf-7d37-4eb8-9d06-b21b4ee448e8"
        },
        "item": {
          "id": "717f9999-9b0f-4966-ba17-fbcb33790111",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c3f01cdc-ca46-463e-b41f-5814ac5b616b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56479d57-f300-4ae0-8605-b4d9188b990d",
        "cursor": {
          "ref": "feb9796e-b7f5-4f50-a716-5b1e3a9a8a36",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c546e5d6-60c2-4ef6-8d28-f9d3029ca195"
        },
        "item": {
          "id": "56479d57-f300-4ae0-8605-b4d9188b990d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ecb361f1-81b2-412b-9b04-dfe3c6328e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ebacc1-a384-40af-9199-c9ce4b75d58c",
        "cursor": {
          "ref": "2ef265f0-4ed0-41e3-9cde-069c755ebd84",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3d3e4f5c-0d8d-4544-8700-a32e7514604d"
        },
        "item": {
          "id": "a1ebacc1-a384-40af-9199-c9ce4b75d58c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f52ed6c9-db24-40c0-b797-f9d3127456fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "421400f2-3879-491c-a045-488395096e37",
        "cursor": {
          "ref": "c7573505-9777-4a93-b83b-75e5e5f55f04",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "70b7b4fc-7b9b-4b83-a5b7-19b0cdb69437"
        },
        "item": {
          "id": "421400f2-3879-491c-a045-488395096e37",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d3f9c340-7130-4aaa-bfaf-a9f16fce9163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d649f4-7f60-4ba0-a79b-c453e41b969a",
        "cursor": {
          "ref": "880b34d1-ce2e-4b7a-ade3-08234d560897",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b0233699-1d6f-4943-bf8e-ccd3a36b91a1"
        },
        "item": {
          "id": "67d649f4-7f60-4ba0-a79b-c453e41b969a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "33fe01ad-c7b9-4c19-b5a0-045f06f7a80e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a77f9db0-32ea-4cdd-9ca9-41094ff781ff",
        "cursor": {
          "ref": "19d1b7cd-f9e0-4909-b995-1a229082e295",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "2ef86b15-2558-40f7-98f6-0a48a98e1de5"
        },
        "item": {
          "id": "a77f9db0-32ea-4cdd-9ca9-41094ff781ff",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "911c4ec8-3bc7-4aa0-9a1d-3e67c0e6e944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6603183a-89b1-44c4-8dff-02b9a3e6db03",
        "cursor": {
          "ref": "288583c3-a694-4e78-b8c3-5006711d0863",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "0c00c516-e18d-44b2-a241-7df4293d39e6"
        },
        "item": {
          "id": "6603183a-89b1-44c4-8dff-02b9a3e6db03",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "02ef875e-df0f-4f42-a872-11501f6215c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "957a9f50-71e4-4fd3-8571-283646db99d7",
        "cursor": {
          "ref": "d26fe024-fcac-45ac-a75c-0fc2fedd656e",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "8a07a868-2679-4a0f-9f6c-ac29d5ead752"
        },
        "item": {
          "id": "957a9f50-71e4-4fd3-8571-283646db99d7",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "02bd02d1-b3c3-4376-b5da-4a5514662ed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369bcf73-ecca-4dd0-a4f6-d81226f99398",
        "cursor": {
          "ref": "398b2b0d-4621-495c-a681-90d8febc3585",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a5492aef-cc5c-446d-bb91-0e7cf1a5cf9c"
        },
        "item": {
          "id": "369bcf73-ecca-4dd0-a4f6-d81226f99398",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "e4c7c18a-64c0-42b0-83dc-aa05bac2fb9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb8cfd2-c22c-4bd5-ba6b-455b5f64977b",
        "cursor": {
          "ref": "6c619e26-3380-4db6-90e7-26329459a936",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ebbb3da7-2534-4f4e-bc57-7a9f57514852"
        },
        "item": {
          "id": "1cb8cfd2-c22c-4bd5-ba6b-455b5f64977b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a05cfdee-599b-4102-bb3a-154be2c07537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f581233-34e7-4655-8bb3-a1eda180f9b8",
        "cursor": {
          "ref": "96ad24a6-c9ce-4d65-913e-1ab8f510c85b",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "5c93123b-79f0-492b-947a-7d905bb223ff"
        },
        "item": {
          "id": "6f581233-34e7-4655-8bb3-a1eda180f9b8",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "89986979-7849-4580-8c18-d6891d38c6b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0924216-c50a-4c23-8f3a-651c7fe14af9",
        "cursor": {
          "ref": "9bf4ad73-1f91-44c7-8e28-2228346e200c",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "af8cd5ed-ff9d-43ae-9915-46b9a06653bd"
        },
        "item": {
          "id": "c0924216-c50a-4c23-8f3a-651c7fe14af9",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ba8be3fa-fd03-44ce-9638-e4a17f5fe99d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0976139-a137-41b5-8fe6-517a714958dd",
        "cursor": {
          "ref": "a30d9e7e-410a-4736-8477-da5ced256f62",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "18e7ccfc-029f-4970-9348-a78242ae7757"
        },
        "item": {
          "id": "d0976139-a137-41b5-8fe6-517a714958dd",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "5bab163d-5909-4758-9195-5b284ded20e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e214834-c594-4357-aba9-60aaf2135926",
        "cursor": {
          "ref": "8d10b103-7b27-4990-b5ca-f1f93998fa4a",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c008aead-9d8d-41e7-a13f-ff329cbed0ea"
        },
        "item": {
          "id": "6e214834-c594-4357-aba9-60aaf2135926",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b7528653-4c50-43c2-a9cf-31f471130f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd0a9b0-f5e7-4a6a-bcaa-8f4279e3710a",
        "cursor": {
          "ref": "a350d70d-bcb8-4769-ba71-adb813da8970",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b9477203-b743-4286-9807-8dab264a14f4"
        },
        "item": {
          "id": "cbd0a9b0-f5e7-4a6a-bcaa-8f4279e3710a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a152602c-886b-40d8-9341-3efc3e9cdae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca5f0b9-f6b1-4bab-8869-9c7dcd0fbb93",
        "cursor": {
          "ref": "2a93ff0f-8406-4ab0-b519-f1164266c41f",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "196ad153-27e9-4340-a68b-74df7724b844"
        },
        "item": {
          "id": "dca5f0b9-f6b1-4bab-8869-9c7dcd0fbb93",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ca8b3391-0a85-4e81-bf44-9020ae4be3e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32629faf-3d61-45b5-8e21-25c12a4fe736",
        "cursor": {
          "ref": "d6968e8d-d7d5-41b1-933b-6de08949ea4b",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "6e91fe6c-4dfd-4674-b1ac-4b892fd9af2d"
        },
        "item": {
          "id": "32629faf-3d61-45b5-8e21-25c12a4fe736",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a50c78e0-5240-40d9-b668-6e6660c18ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d54af1-f79e-4330-9aa1-d50e673f4d49",
        "cursor": {
          "ref": "7c6449bb-5182-463f-a567-58cd7a302b89",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a1fbd6a0-bff6-4d7e-a0d1-edaa5826029a"
        },
        "item": {
          "id": "d0d54af1-f79e-4330-9aa1-d50e673f4d49",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8ba157c9-17b3-4d3b-9bee-22cde9557cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "222156ca-4f3d-4a9f-a344-71bbea3b22c5",
        "cursor": {
          "ref": "850cda65-b630-48e5-937c-f3e0a448a692",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "29f240d7-eeaa-4aee-b9d1-68c0313b1604"
        },
        "item": {
          "id": "222156ca-4f3d-4a9f-a344-71bbea3b22c5",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "585435db-532b-4c86-a0bb-3c38c64a5c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64fd10ca-712e-442d-b685-a723fd578a9d",
        "cursor": {
          "ref": "32a6bb97-dd55-447e-bbb0-d14cbaa08fe2",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9dfed642-23a0-4fe6-90f4-1f47ca58db94"
        },
        "item": {
          "id": "64fd10ca-712e-442d-b685-a723fd578a9d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "652e9a7e-9ef3-465a-b2be-3911146cd7cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e37f82d0-5c7a-4fed-b6a9-b038e003144d",
        "cursor": {
          "ref": "ef0e4f71-878f-47d2-b23e-6d98184bb2df",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "15a253ef-94e1-4ee9-9e5d-aecb06238dd8"
        },
        "item": {
          "id": "e37f82d0-5c7a-4fed-b6a9-b038e003144d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1e86795a-8611-4dcf-a973-4b28a130ee2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c93ccb20-610a-4bf2-b14a-716a54d0bca7",
        "cursor": {
          "ref": "0ae9e04b-97bd-404e-97f1-5b8bb3c8cf76",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "58479020-a89a-46ee-9c2b-b3916b1113ee"
        },
        "item": {
          "id": "c93ccb20-610a-4bf2-b14a-716a54d0bca7",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "261db64b-27be-4380-a674-f46192f34670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a54038a-dbbd-428c-8c0d-713ee0a69c7c",
        "cursor": {
          "ref": "2cb05d7f-3890-49d0-a2d5-73dc11e931a8",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "cb0f92d4-ba21-4383-8226-8291e696020c"
        },
        "item": {
          "id": "5a54038a-dbbd-428c-8c0d-713ee0a69c7c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "942e7e45-e59d-447b-a863-0982acd617bd",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "6a1fe5a3-9dd4-4e96-8990-c74ece76eec9",
        "cursor": {
          "ref": "d8fa9f50-e899-40fc-bf16-98df41236e15",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "11054855-fc1e-4c27-8702-a85af64f86cf"
        },
        "item": {
          "id": "6a1fe5a3-9dd4-4e96-8990-c74ece76eec9",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "af82f52d-9d2e-4cd5-9990-6c58b0ef204c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "348e79a6-e28e-4778-b5fd-977ab5a591b2",
        "cursor": {
          "ref": "000074e7-0c21-4fc8-a172-d11f0ae39df4",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "11e8b1f7-b820-43ac-bed1-89da54a47864"
        },
        "item": {
          "id": "348e79a6-e28e-4778-b5fd-977ab5a591b2",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "efebdf1e-730a-4863-992d-c0b4e96e4285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b2945e-3155-43c2-a4ab-3f92103e6a1a",
        "cursor": {
          "ref": "f4ba099a-9fbc-4c68-b2aa-a16a19e576b0",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "bcb616c1-9ab3-4869-9ed2-223369a161b3"
        },
        "item": {
          "id": "b5b2945e-3155-43c2-a4ab-3f92103e6a1a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "47b6f5b9-d3c0-491a-a7d1-7fd51959c03f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4378ca-9c36-4221-bca8-f59496263064",
        "cursor": {
          "ref": "7c6f7989-3ff8-4736-b158-b584201d5fe4",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "36d109e6-cf7a-491e-a7a0-42bd8c8cf48d"
        },
        "item": {
          "id": "8b4378ca-9c36-4221-bca8-f59496263064",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "750cceb9-184e-4bdc-8c56-56e20575b2e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62611b10-0f72-4b0a-9681-23b97e0db719",
        "cursor": {
          "ref": "1ce86b7d-52c4-4b72-849c-291c59fcbde5",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "30e68b26-3695-47cd-99ab-e1cb4be264b4"
        },
        "item": {
          "id": "62611b10-0f72-4b0a-9681-23b97e0db719",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a4c8c2b3-375c-428f-8910-755b917bbf9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bafcf62-d5e2-4e75-a386-27b6a3c3ec6d",
        "cursor": {
          "ref": "9c598df2-5fc6-4057-9dbd-395064643438",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "ff86a7c4-4eff-4617-bf14-138a5a8f0e56"
        },
        "item": {
          "id": "1bafcf62-d5e2-4e75-a386-27b6a3c3ec6d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "63346b18-81f8-416d-a450-336050bb1bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62414d55-0718-48d9-a41d-f029cf6ab93a",
        "cursor": {
          "ref": "9911fb59-eebd-4b3e-aefb-8dfc529af727",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "5726e6ab-cb40-48d6-8af1-cb3300017d50"
        },
        "item": {
          "id": "62414d55-0718-48d9-a41d-f029cf6ab93a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b71c8a7d-6f9a-4620-908a-879c234759b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45735834-7c53-4c50-a487-4ef699749a51",
        "cursor": {
          "ref": "e68ebe3d-d606-4539-ab24-d44453778dd0",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "52d95cea-151a-40ff-9c86-e3c9dd6f2945"
        },
        "item": {
          "id": "45735834-7c53-4c50-a487-4ef699749a51",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "0a79eb3a-0d25-418d-a10a-0712162da184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c010880-853a-4b1a-80f2-5094d9afdaaf",
        "cursor": {
          "ref": "39bb5685-62c2-4097-8271-0c9ca50abe44",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a5fa5d3f-50b0-4c1e-b1da-61bdb45a53a3"
        },
        "item": {
          "id": "8c010880-853a-4b1a-80f2-5094d9afdaaf",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "1be3c84e-a5f5-4557-aaca-6bce7079eb12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe3f2def-3abc-420f-9185-2b4457c26ac0",
        "cursor": {
          "ref": "dc7d92e5-3c65-4527-b4b9-afb63df88a4d",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f8254953-0e2f-47ea-ac76-20eae88bfe6d"
        },
        "item": {
          "id": "fe3f2def-3abc-420f-9185-2b4457c26ac0",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a5538025-7cd5-4eda-ac68-b16d9afb8171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee38877e-e40d-4e6e-a12f-5c34050d572b",
        "cursor": {
          "ref": "9991ed0c-ff2b-47f4-a053-52b8b78d3df2",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9ea780b1-ff35-478c-9a30-874062bc050a"
        },
        "item": {
          "id": "ee38877e-e40d-4e6e-a12f-5c34050d572b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c62fa9b2-13f2-4f5b-9ec5-2b037fd819ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31eb37d2-9739-4f90-9ce3-6067f63df921",
        "cursor": {
          "ref": "b9828dce-af60-49d2-a9ba-f18cd8761edc",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "36cae483-9919-4207-9b95-617ed745d4f2"
        },
        "item": {
          "id": "31eb37d2-9739-4f90-9ce3-6067f63df921",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f98dfa12-54cc-44fb-8b45-444c9242fb63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51523ad3-fca0-4de7-b2a3-6181af13356e",
        "cursor": {
          "ref": "abef77b6-c499-4dbc-8954-73f84885b2f9",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "6a270c0d-0bdf-46d9-9125-1ccd9c0e634a"
        },
        "item": {
          "id": "51523ad3-fca0-4de7-b2a3-6181af13356e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f4895e6d-2ead-4b7f-98cd-eb07c2016f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c1547d-8c3f-4e3f-80cf-dc227f290112",
        "cursor": {
          "ref": "1e2ab195-775d-4188-a053-d1edfda3c02a",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "86205256-06f2-4073-a76d-368596146c92"
        },
        "item": {
          "id": "a1c1547d-8c3f-4e3f-80cf-dc227f290112",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b3f185db-b7eb-49e3-a007-5ae3a46954d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f62861-6ff5-460b-a80e-b12d7fea6df7",
        "cursor": {
          "ref": "63e97cd4-d9f6-4062-ac1c-7c664c9e7ffc",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "dd13e545-aece-4fde-baf0-fa2312086216"
        },
        "item": {
          "id": "70f62861-6ff5-460b-a80e-b12d7fea6df7",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b57a78f1-5226-4d46-a1af-ebe983cbbb7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d785845c-f225-4a98-b558-6ac3431c08db",
        "cursor": {
          "ref": "14a9ef82-f0e4-4f84-8971-79ca48aeb16c",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "5d94903a-70d4-457f-9a0b-c766eec762dc"
        },
        "item": {
          "id": "d785845c-f225-4a98-b558-6ac3431c08db",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "45925fc8-bfd1-484d-8e90-14f1576ec3d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccdce6ca-68b4-4763-8011-d0e8a8b57a03",
        "cursor": {
          "ref": "932a443b-9ba3-4c9d-b6eb-b62d6c09c364",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "8afbc4c0-dcf7-41e9-a10d-195425d5cbaa"
        },
        "item": {
          "id": "ccdce6ca-68b4-4763-8011-d0e8a8b57a03",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "99e9a1d6-73d1-40a7-8319-c11e6aa46dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f598e66-1c3a-4586-8c3e-b7a7ee51be63",
        "cursor": {
          "ref": "36f4deb5-7a23-40ca-a98f-380a8498c9f0",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d9465bc1-723d-42ed-ac3e-1ceac83d6c4d"
        },
        "item": {
          "id": "7f598e66-1c3a-4586-8c3e-b7a7ee51be63",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7438dcff-e9ad-4b88-aeaa-427b5c0574d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3408a0e2-fe56-4922-81f9-d05e1bc51488",
        "cursor": {
          "ref": "724a95f1-765d-4dd2-b6cd-2e1f01dbdc91",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "481438de-7914-4362-a661-be84e51a776f"
        },
        "item": {
          "id": "3408a0e2-fe56-4922-81f9-d05e1bc51488",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6adbce93-6880-4ccb-a6d6-43a8683c803e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc995cb-2439-40b6-bee4-50ca53e1d2e3",
        "cursor": {
          "ref": "85236f0f-a43e-49e0-9338-6fb78dab137b",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b6be339f-3975-49a9-9885-45b253aeafaa"
        },
        "item": {
          "id": "cdc995cb-2439-40b6-bee4-50ca53e1d2e3",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b7db1e5f-d117-40fe-b189-71191e18f6a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64df27ce-2af3-4820-aab6-eff3ec1d666f",
        "cursor": {
          "ref": "d7a0bce3-1e3a-4f53-989c-0289484a37d9",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "5dcb87d0-cfd4-425e-a217-4258e71844fe"
        },
        "item": {
          "id": "64df27ce-2af3-4820-aab6-eff3ec1d666f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e2385993-ac6c-40b7-9053-769e9d4914ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d07dc897-2154-45cc-af09-8a19e4e6ea18",
        "cursor": {
          "ref": "2d56d60d-d67b-4a81-acac-3f3e09bd3a1a",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "c3bb6549-1a3d-41a5-916c-f8fce1522ed4"
        },
        "item": {
          "id": "d07dc897-2154-45cc-af09-8a19e4e6ea18",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "76f5a333-a731-4918-96cd-ebcf03416955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b71a30c3-0ec5-401f-9b64-8b91bef8b7eb",
        "cursor": {
          "ref": "6a7c93a9-eb0e-46c1-82e4-efcbde101e14",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "7dcdcf98-0464-4a92-9b93-4044734c7081"
        },
        "item": {
          "id": "b71a30c3-0ec5-401f-9b64-8b91bef8b7eb",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "cf276d31-26f3-4d02-b4c9-2fbedfb5171d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ecb477a-7d41-4752-b2d7-4c1fc7851458",
        "cursor": {
          "ref": "1430d53c-ddef-4381-bb40-2c94a3de3c22",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "0cb0b42a-e80a-4642-b211-e7c746b22847"
        },
        "item": {
          "id": "4ecb477a-7d41-4752-b2d7-4c1fc7851458",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d2079710-d485-421b-870e-d0b6fa085e14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a10846-6033-43bb-8ebd-f869ae813fca",
        "cursor": {
          "ref": "1403967e-396b-479e-aeb8-9508341a766c",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "1899012c-03c1-4c7f-b292-b2aa12569a71"
        },
        "item": {
          "id": "c2a10846-6033-43bb-8ebd-f869ae813fca",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "82ce4823-143b-466f-9589-50439dacc2b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef297f2-a859-4333-8c0e-3a59484252f8",
        "cursor": {
          "ref": "6ddd02bf-9522-43d4-8217-d04bf9b2b9b4",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "631dd776-550a-4572-b56a-e3abc65e110d"
        },
        "item": {
          "id": "0ef297f2-a859-4333-8c0e-3a59484252f8",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "9eb1d534-7f46-4c9b-beff-674aeef30374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b54030-c744-4616-b4c2-f2e559f25dac",
        "cursor": {
          "ref": "b334c058-2257-4a73-96ee-30c1deaa3094",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "781c6662-e5ab-4f37-b5d9-23d303c7503d"
        },
        "item": {
          "id": "32b54030-c744-4616-b4c2-f2e559f25dac",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "ee7e81f6-6959-49b4-b622-699e44e26138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ebbc6b-e7f3-4213-8dee-0ceb76a80db6",
        "cursor": {
          "ref": "d3162f5b-39a0-4f97-8aa3-04b0cbcc0109",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "659c9b3c-577f-4ee7-9910-5b75a4b1d885"
        },
        "item": {
          "id": "e7ebbc6b-e7f3-4213-8dee-0ceb76a80db6",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "8b7a87c7-236e-4662-af6d-41623e4fdc43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dca79ac-63a9-4fb7-a529-801b44e4a32c",
        "cursor": {
          "ref": "3d435381-97b2-4c71-a505-b4f27984640b",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "380f9a96-45ab-4b8e-b11b-7cc9d5eea06b"
        },
        "item": {
          "id": "4dca79ac-63a9-4fb7-a529-801b44e4a32c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8c1ef22d-01e3-49b0-b589-7612a3b7822e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840da274-25bd-4cd1-89b7-7deff7e55095",
        "cursor": {
          "ref": "8f4ed5bc-3dcf-429c-af7c-c7bd8edb0488",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "5530dad6-9e5f-4e3f-836b-f59bb6863965"
        },
        "item": {
          "id": "840da274-25bd-4cd1-89b7-7deff7e55095",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "4aaaaf6e-149f-4dc1-86de-e378fff16bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca1d13b-d782-4199-8820-0c1b94caf221",
        "cursor": {
          "ref": "604eaa03-2fe9-4ae6-9b02-c1b172a1c217",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "7d8cfd46-592d-4d86-8c43-8754a398daee"
        },
        "item": {
          "id": "3ca1d13b-d782-4199-8820-0c1b94caf221",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3d167e73-c66b-483d-9146-c94b457ede09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02686fb2-59d9-4038-9664-a9dcbc394eef",
        "cursor": {
          "ref": "516f023b-8d08-443d-9faa-fb32bdd6f764",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "e9453f53-10ae-4f74-aa03-123765f00e10"
        },
        "item": {
          "id": "02686fb2-59d9-4038-9664-a9dcbc394eef",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "4871d768-97cb-4c34-8c32-20416d8f04e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1a0266-acd4-459c-8424-c294142893eb",
        "cursor": {
          "ref": "cb26551e-1512-46f3-9c35-a1335d3078dc",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "ce7821cb-2638-452f-8cdf-9fb9092d3120"
        },
        "item": {
          "id": "2e1a0266-acd4-459c-8424-c294142893eb",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "19ba479e-46d1-4673-a541-818c1bcbc4f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c13b715-479a-4a7d-a6f1-75d9fc45daf6",
        "cursor": {
          "ref": "10b90267-5e4a-49b1-9550-8332cc26198a",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "079808f5-4ba1-4e20-b87c-e9f7c75f68be"
        },
        "item": {
          "id": "4c13b715-479a-4a7d-a6f1-75d9fc45daf6",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "98be8eae-4cce-4541-a072-7ce80341046c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a15b5e-6209-4736-b0f4-e2e99223e2ac",
        "cursor": {
          "ref": "0bb61bab-5ec8-46ff-9d9d-ff9056edc05b",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "809284be-c06d-4bd9-b00b-1191fa842696"
        },
        "item": {
          "id": "07a15b5e-6209-4736-b0f4-e2e99223e2ac",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "3d9e9926-7ba7-4f87-8589-1e321c751653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43515f5e-fb7d-42dd-ac79-d9d49ceadf9f",
        "cursor": {
          "ref": "9d7b1e5f-3bc0-47fc-9055-be650a5d0cb2",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "9848c74b-763d-4a4e-9f67-b40ff358fd3a"
        },
        "item": {
          "id": "43515f5e-fb7d-42dd-ac79-d9d49ceadf9f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "4108f62a-9811-45e1-a4d3-ac0b26a3b31b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b0a740c-a685-4a74-9247-c8481f9eb1d5",
        "cursor": {
          "ref": "9ead57e3-f0a7-4547-9ec3-d46e6b0419bd",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "7cbad4f3-70d8-422a-b400-c23d259cef15"
        },
        "item": {
          "id": "5b0a740c-a685-4a74-9247-c8481f9eb1d5",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f2e71ec4-4ac5-485a-920a-95e15e9acb03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5181772d-37b7-46eb-a16a-d7516ea60bf6",
        "cursor": {
          "ref": "b79be2da-89e7-4345-840c-e98ffd1a7477",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "9fca15ee-faca-448c-9abf-af04afa9caf5"
        },
        "item": {
          "id": "5181772d-37b7-46eb-a16a-d7516ea60bf6",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "901369fd-235f-4863-b697-bb7da1ce7ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "810f9072-71f6-4094-9660-ac1337ce9a0a",
        "cursor": {
          "ref": "a4a8f789-82d9-4df2-bf41-134ed5d8dd52",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "cacbdeb3-1b13-4b0b-8c80-5bbeb1e29df2"
        },
        "item": {
          "id": "810f9072-71f6-4094-9660-ac1337ce9a0a",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ac7c17ac-4625-4dd0-a8cc-14e858361652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75cbd531-c34e-4e82-b731-597168a8e952",
        "cursor": {
          "ref": "e8bd5e19-91f7-422a-a278-6815360cfdf5",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "1ef93742-1c1c-47dd-829e-2c696c5b0f91"
        },
        "item": {
          "id": "75cbd531-c34e-4e82-b731-597168a8e952",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6d805c4e-5cdb-4305-a7a4-66a60468def0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9af88b-da86-48b3-be2a-f00d966f66c3",
        "cursor": {
          "ref": "772aaef7-e718-4b27-9521-311b85561193",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "aea8d480-a1cb-4554-9d34-2fa6d96b95e5"
        },
        "item": {
          "id": "3c9af88b-da86-48b3-be2a-f00d966f66c3",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c103bf2b-c1f4-4582-b8bc-dfd14def3092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a9ba7f0-ecdc-4534-b8f6-cbeafdc4fe38",
        "cursor": {
          "ref": "5dea6bdf-dc6d-42f2-a681-2e8eca9e07df",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "e5377da6-eeed-440f-86e6-0c9c3230a502"
        },
        "item": {
          "id": "7a9ba7f0-ecdc-4534-b8f6-cbeafdc4fe38",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "eba92475-bcd5-4062-b295-456c4a492652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecba3ddb-9dba-4e80-9e0d-dfe376067de0",
        "cursor": {
          "ref": "30c2b749-c55d-4b68-a116-d7b011719524",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "e9fd84ae-c893-429a-a990-a0549dd9bd35"
        },
        "item": {
          "id": "ecba3ddb-9dba-4e80-9e0d-dfe376067de0",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "bb1fb916-a668-4219-846b-244a32aa889f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f03eee-7129-436c-ad0b-ba642cfb9269",
        "cursor": {
          "ref": "95740bca-68c8-40a6-a26f-4e5ee055f0c0",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "9378f973-0da9-4098-9d9e-a4c8796fbe18"
        },
        "item": {
          "id": "c5f03eee-7129-436c-ad0b-ba642cfb9269",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "41e36fda-3b45-4f7a-aa66-a931837d7d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e221baf2-74e4-4a38-844e-d675417c6f9d",
        "cursor": {
          "ref": "d2f353e4-b3ec-4691-a183-07fbe803dd68",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "d6ce86f6-5cd7-4d3f-ab0e-2e3eaa2fb453"
        },
        "item": {
          "id": "e221baf2-74e4-4a38-844e-d675417c6f9d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "cd4c3be7-718b-43e2-8e3a-b9e2a97ae66e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "776de8c4-cb09-4a58-b700-cf3554b5869c",
        "cursor": {
          "ref": "92480884-90e3-4f26-b5af-8159409b6026",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "b40f9a18-836c-4036-8168-5e5234ade11e"
        },
        "item": {
          "id": "776de8c4-cb09-4a58-b700-cf3554b5869c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f5e06573-bb5a-44df-9ff3-4bd84df65f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96766407-fb8c-44f8-89ee-39e995ab378c",
        "cursor": {
          "ref": "c0d216c5-1dda-4ec1-9806-683276ba06df",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "e24f7c4d-b77d-4a65-aa54-af418aa4fdc3"
        },
        "item": {
          "id": "96766407-fb8c-44f8-89ee-39e995ab378c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b7248d4f-1738-4821-a63b-7cbc6570ae51",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ddde80-57b1-416f-bd76-82237aa18b22",
        "cursor": {
          "ref": "b2932fa4-dd73-49e7-9843-050a7596044b",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "0ca4f72e-fbfc-4f83-857a-953a35b0b787"
        },
        "item": {
          "id": "12ddde80-57b1-416f-bd76-82237aa18b22",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "3e6a9bcf-75d1-41ec-9201-8c3709bcf71f",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a852a01-bbd4-45b6-adb2-8ea703e63413",
        "cursor": {
          "ref": "94bc6074-1a13-47ae-a656-038dcb0eeffd",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "44f4a593-3f9e-4848-a76c-3ce00fdc17a6"
        },
        "item": {
          "id": "7a852a01-bbd4-45b6-adb2-8ea703e63413",
          "name": "credentials_verify"
        },
        "response": {
          "id": "11806c09-81c3-44d8-b845-3c485d95cef4",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "480b7371-14be-4e7a-b92c-a4727e5bafc8",
        "cursor": {
          "ref": "7d693af7-4aec-4a93-8b64-7705344ab56d",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "9a7874b7-4dfd-478c-963a-aabb38062e3e"
        },
        "item": {
          "id": "480b7371-14be-4e7a-b92c-a4727e5bafc8",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "02297531-f26e-4f01-962e-b425caec20a0",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "75720bb1-66a7-4d00-a178-63f34d16461b",
        "cursor": {
          "ref": "a81b0b81-6fbd-415e-a33d-6c7023a897b4",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "3db952d2-1d03-441e-8433-3863d6153265"
        },
        "item": {
          "id": "75720bb1-66a7-4d00-a178-63f34d16461b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7fca6c70-b8fa-43a2-b5c2-205c80d596e5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75720bb1-66a7-4d00-a178-63f34d16461b",
        "cursor": {
          "ref": "a81b0b81-6fbd-415e-a33d-6c7023a897b4",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "3db952d2-1d03-441e-8433-3863d6153265"
        },
        "item": {
          "id": "75720bb1-66a7-4d00-a178-63f34d16461b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7fca6c70-b8fa-43a2-b5c2-205c80d596e5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb3f2607-8ad7-400d-a37f-afa6ec8e6f40",
        "cursor": {
          "ref": "ff220619-2586-4eea-8894-32456b079e54",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "35ade3b9-783b-4492-8092-afa9bf0b7da5"
        },
        "item": {
          "id": "cb3f2607-8ad7-400d-a37f-afa6ec8e6f40",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7af1dd56-449f-4028-bb88-655810ccc8dc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3899e50-618e-4ac7-9e1d-7f0e2bfb2964",
        "cursor": {
          "ref": "2c6ab060-b2f0-4826-985b-12cbfe894e6b",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "f800fae4-0510-4f23-a1aa-fdbbbbf12143"
        },
        "item": {
          "id": "b3899e50-618e-4ac7-9e1d-7f0e2bfb2964",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f8203ded-85a3-437f-9ba1-82926852c6ff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}