{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c2d9073d-d0a7-4c1f-9990-54ff7ad83a0a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7727287a-235f-4d56-ad7c-01ea37736d6d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "04857c2b-e44d-4b1c-b6d2-5979fdf90c7c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1f62defc-a9ff-4510-9726-a7e33137d64f"
                }
              }
            ]
          },
          {
            "id": "378911b5-8ad9-4eac-b2f7-cbbbad2ba618",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "86432239-fabe-4177-a660-470071e9d2e1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0ae30799-4fe1-491b-8b26-5d63ba27a3d9"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "4d8650fd-97aa-416b-870b-6adca2c79509",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "103be503-cdb0-4033-98ea-0e02cec9d06d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "345eac29-357e-46f6-a734-593c8b659866",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e316910-1a6c-4f44-9de5-75b9fd99c261",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c199c483-f980-4df9-ac36-82e66c10d2e2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4eaaa452-b681-408b-a817-77541e5c87ae",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0a242277-1f25-46e7-ba39-e0021b2d5484"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c19455f3-fc35-4f70-821d-5e7cafa678b0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "08b4c9c1-3480-4fea-8aa4-8bfbe9b75385"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f06d33e3-69b8-4a81-b882-0f242f82460f",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "aaa7b6fa-d6d2-4c00-a065-1983aecf8425"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "383a4948-8cef-454e-be56-62a06fe70686",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c0315589-11ed-42e2-ad11-2bfb7997f681"
            }
          }
        ]
      },
      {
        "id": "df65d19b-48cf-4e35-ab25-a5b456a2edbb",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d087a1d4-4f3a-4313-b2c9-b0b69ee9e1b7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "757a5d2e-dea9-4827-84b3-74221a68cdc4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "716c9c14-2919-4e4c-b16e-c97c1155ff76",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeeb6978-e74e-46ce-9e07-9a2c335a0771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0064bf5f-bba9-4732-9bbf-df0bf8acd922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c074aa56-1372-432a-aea7-4bc5f810e373",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f13e1c-47b6-4a15-b97e-f744e6fc2f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "068f52da-a211-4350-83cc-3c71e555c164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d0995e9-2f3f-4a2a-84aa-ed0acef6308c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab14e2d-5d28-4798-8769-043dd4cf00bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c1962eb3-059c-4dda-a8af-a145bbbf9fee"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3314d7e0-238c-4a2a-8106-750f14b7aee2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a112cbf4-8db1-4294-82ec-6e813400ce69",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ba0559-1934-4d20-b80c-8615c577e3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "56d7cd8b-05f0-4858-8635-9f13390c6457"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2917a47b-bfc1-4d31-96f7-49da974f1607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8f04b8d-ed3f-4da3-b09f-e4425e22e1aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d74acd3e-97ab-4b69-9879-bc7a357627ac",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c329dd14-21a4-4557-9204-f5170dbc0355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "017d1b4f-1682-4ed9-9642-a58a1cddbbfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "918d3666-bb0e-46fc-a3be-b9ed249b69bc",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "961e22ca-8a5a-4eea-8249-a86050967c38"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1a6f51b8-6d12-4a28-8da1-fd2684bcd09f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "95e91ec4-b866-490a-a2ec-15e8c25c3f55",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1be99017-7aa8-4cdf-b685-0e9ad1385e80",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "32a33401-d4cb-43c8-9314-4ec299d755cd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "462c0888-9198-4118-8737-ebf32c99b937",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "636c0d0f-5165-4300-bc2a-bed8213e2b6f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ad22f6f1-ba41-457b-8aa9-0886b27a0f2c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bc57a945-0b61-4226-bb90-7270c2a7dc9e"
            }
          }
        ]
      },
      {
        "id": "fa856b75-6f61-4f63-a42e-6dee0e5f2a0f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "4816d693-9294-477c-b5bf-49ffdff04474",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d5752137-a4c6-42bb-95e9-d859bca0db39",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "c685fd7f-0247-4fd1-8394-071066bce18f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe0600e5-0568-45d2-a746-eeb218eeed1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd723ef7-dcf2-4414-898d-1b88e4f75729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b499c4-a187-4a7b-8f98-da1590ba681c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6985ff8d-000c-4d78-a052-4ae32b276ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc74cdc-dde1-4091-8fec-2964db6cfe42",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "272b7300-87a6-401e-9a40-9b36f9e42ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d6e584b-808d-4085-ac4d-8b3e45768af7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae9767ff-51e1-4759-ba80-af46274e1652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "875973ac-ff50-4f5d-9596-002383016726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f43a53-e89b-41d2-95ea-dcafa3503236",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e95e10b-c808-4345-a073-660b9b3a524c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "717f6293-f45c-45d3-a87d-b79a2d320c69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4956b183-3ace-47f7-a807-ce94426648c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2485b8cc-8dfa-4c0b-b027-88e516001305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24c308d5-80e0-4073-924c-bbc9230ce2e3",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ac5ef9-2bcf-416d-89f5-bb6630875a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5a12898-d82f-49d6-bc3d-be5134db4e19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc191e0f-0448-4eea-8a1d-2f16293348b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2452fdb1-f71e-43fd-a8e9-2bc0a3b1c2e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd4d2ef7-44d6-438d-9c0d-a55d000aa45d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a16ffe9b-ac37-4a15-adc0-41075b450472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c489dc7d-b435-4d4a-b025-c8151837a869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9629356-ae18-4200-81a1-ded75f134a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16e128ee-4187-40cf-b125-4701744b6e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "487f7f02-98f2-433f-bd61-e8a39f8dbedf",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "748de46c-b356-4f32-a110-e8b7c2dc84d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76a85f6b-a002-495f-bc92-4d5db15f1a04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a00ebf-65a1-4e5a-8551-1ae8536a8580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54462a65-f356-4e38-a4de-06d7b3704b4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59bc185b-a710-42a8-a53a-0bd2a5816ee9",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ccfea1e-51d3-494e-950a-2e58a253555b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79a38fdb-0548-468c-a072-745832d43900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "435ffca4-84d4-481c-8096-88d3901fcb5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6dce985f-98ec-4b22-90a5-f68617bb0c4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d58afc-49a0-4b50-bc38-ebdac10a4659",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db145e21-9847-4ed8-be71-9ac4cba8be9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c286ad5-4e81-4cde-83f3-17d768f40427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01880bf0-4951-403d-90d8-240d25d8b57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "903a5853-a5be-43bb-ab50-f63cc766b6c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33259e9-08f4-484d-bb9b-8997f434a080",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d6ada7-63d4-4a08-a2e9-e717d8e2a222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bb61899-873b-4ee9-9e1f-af5acd81d79b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "737e87ce-ae89-4e83-b7f7-92f4734ea8aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "466a9c33-eaa9-4de3-8edb-0e8514923b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567f1d9d-eb06-4a03-9187-c8e6d54ff7ff",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d88bb51a-0b1a-4f66-a964-3ecdbf214074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f36c75d-da2b-4dfe-97c6-b38f71279290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2436e677-3490-4ba1-a813-4c9b7c02586d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed17f84a-b489-4671-b799-4d74cd4f1f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2472d59-e080-49a0-b48e-aa755e2e0d9f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87660b7c-69aa-4f7c-adbd-08b04369ed55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fb313fa-90f3-46ec-8a6c-8661ec823bd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a57a15ae-2b35-4d9f-92df-a43a9324ccab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e83ed8f-3ec3-4fd1-963d-48148f9d2314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b45098-dbd4-4754-bab5-ce1108afaba7",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c125e58c-ab45-47da-bdeb-826deb8795a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deb8d448-8c3f-461c-85f8-07338f83b4c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb1a458-8796-412e-8aef-f6f8057d6787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69d5a121-5fc0-4a3b-8ce7-930a603ce24c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b70823ce-4b51-408b-a2ae-64b86a1f428b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c576afa-df48-4355-bcc4-589ec4980103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6409d5ff-1b00-4bdf-bb40-e22aa299a492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc10c2c8-8251-40f8-abc1-3b437b76b484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45781316-f065-475c-bba7-2470765ac074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bd2ad61-d42b-4123-861b-ab255d6685e4",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5914d1d6-3f1f-495c-8887-78919631fdb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38cb763c-3547-433e-a090-202e00e856ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3164438-9eeb-433c-aacf-c640b5959210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd445f8a-62bb-47f6-a44e-94b7f08e6a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1648d7b9-6433-4d19-b0f4-13c40096d7b0",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f0a756c-9479-41de-bdb3-8c78f8c6c285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "968969a6-98a8-43af-a2c2-c81bcfec0305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "933a1894-8cb0-49f1-ac83-201ba2b96f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2871e2ea-cf98-422e-8428-fc2ea5c9af16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "144171a8-26b3-4f66-91f3-0fa2745f43e2",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "177dc8b8-f114-4c33-b6d4-4a69d98438e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42f6f4df-6c00-4011-bffc-edcdb9fbf780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba3cde4-a53d-466c-bd24-7aa34e5147e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e88f2e0-4c73-4ae8-be79-7d2a3e960d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c4cd384-8dc7-4ab3-91c6-e57a28ab9b66",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "846ad9d3-9fbd-44ee-a353-9c4c0c9ee46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efb605a2-53d6-4bc6-b501-34d39086522e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b487ceb6-4225-4199-8cec-8f4e190b6834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9f41eb3-493b-4a5b-849d-1c1aa9ad95ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6dd6d06-ae1f-4507-837a-be79b6f2a817",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5d2aa6-0dc9-4d8d-ba63-210c0d67d3b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bb196a4-3256-4491-8286-e309a1c42bd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a15fdf-9ae6-4cfd-b106-b1c1546f7af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d08692b8-739a-4a77-81ab-9f4c3513fa15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af15f96-4941-4c85-8a36-154a94211acc",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf46f24-6f80-4c41-a5ed-8f1f783e83f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6681c133-d16e-4d7d-9e09-0a5b9e693f17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fcaeccb-99e0-4c1e-8890-835e1683fff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b60e6d41-7259-4afc-b1f0-a4779914d9aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a8f5a96-c18e-4aad-a90c-2a22cc485813",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2432c480-625f-43ac-b7af-3b447281fc10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e417074-51a7-40c8-95d6-1206f66bdab9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09527e18-0731-48f6-8d00-0f7743783447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c172f499-34ee-4a37-ae1d-cdfa0c9f3b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8abefc0-974e-4e7d-b3af-3e41512fb59b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c3aa13-0a51-4913-850f-4aa7f802e5f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8d37595-4f5f-45f5-ace4-a8b4d9047480"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c78b716-d83a-481d-b262-68da2590ccdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "37df049d-571b-410a-bdc4-97934449c2e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1bcbe06-4387-45d2-9dc4-ad2a19bb2d6c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a889607a-b867-4abb-9471-358f7f3610dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baf82401-505b-4813-895e-194afeada0e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29938d38-b036-4874-b5c6-d6c5398192d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "92f88a34-5d85-4cc0-bc8c-5e394d2362a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91bce112-7d25-4430-a02d-9617e7dcb971",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94db92c3-3b53-4393-80a2-8cca347fbaa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0683401d-0028-4386-8c1e-d74d44f85d10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c8c89d-0700-4123-9e76-10322f4fafa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1ec0c7c0-3477-47b5-8901-79fb5d5ca15a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6378d968-e54e-4893-b788-19c83f8d86e6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29af8468-b0bf-465f-b2b2-a1f2453489d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df91cce4-d110-4bf0-b6f1-92628deda059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "173415ee-0924-4ff2-80a6-37349aaa1a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4aed9d99-64bb-4a50-a059-fb2653ff1e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a52a468-dd79-4007-8ce5-ce5b1632d481",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "437cdbb6-a8a5-45a4-a09e-ef2419767cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2652b7f6-bfc4-4c0f-9811-672fba3094f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d50f147-b467-40e4-8714-66411b855e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfb62585-8043-4e44-95c6-7a20413063eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd6a402-c729-4ed4-8e6a-6ddee4ea8010",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a518efd9-4fa0-40b9-829b-4612e99d4c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4529e3b0-8441-4090-b549-3c6130ef83ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac8a217-7b1d-41c4-8840-2a07ac31d9fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e884e41-10f7-49a4-86b3-bd5b318c9e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40062e7b-3c99-4fb8-8768-4ba322106dbc",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c474b8aa-a7d7-4921-bb5f-db2bd116e788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04de80d4-cfe3-46a6-8d7d-e0ce6a93cb1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a09fc789-9b88-41d2-82cb-08b1eb8c9a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a58935a-44ff-408e-bddf-ac9e6880f7b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b891c994-0b3d-470d-91b4-78d3dbf35b0c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "518de1cb-b276-474d-8485-0ee57432901b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "058864ae-079f-4d71-bb63-3ba617130d1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4985fae-19ac-4ea9-9b4a-4b1d7a7a1cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "659aba4f-b5c7-4ad9-b9e7-5e39d0a2a94b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebdfe045-dbd7-42c6-989b-86a46f66ffbf",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ec4c6a-b057-4a3b-bf3f-69e875a4e54c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bfe7824-b6fc-4a06-8a01-ee6be13f03a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78dc6cd2-519a-4cf9-abe0-e6e4c5aebca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cda071d1-bca6-432d-816f-aafef05212da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a527cc7a-2da7-4d20-82f7-ece01f661bf4",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b716ba-ce30-4e8d-a9e9-5a1b7255c6a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58b7dcc0-4cd6-488a-9814-f8a67beb0979"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be2f450b-e92c-4d9d-a4a4-2a63f9360ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5b24810-2815-4183-86b9-529cc51cf690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b25126bb-cfd4-468f-ac32-304a09e794b0",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac12f38-deda-4a0f-852f-651dc409ffea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9fbbc29-81db-4ef8-9300-eb200f7bdbed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e68251-7b7f-41c1-b711-e6ea08a7c2d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b01c4038-4b81-4a96-80f6-0e9aeab8813c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ded7874-ce4a-40b0-887a-08708ac09c96",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "964837ad-c775-4116-a4b4-df969d121b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a32253b-9310-4607-bfbc-18d435e48e48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e255df4-4469-48ee-88a8-f3bdebbbc755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8f77689-55e5-4397-bc41-ec72ba4c8b07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3207aa80-d15b-4778-8d89-e5efae666347",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "329e7ba1-d7b3-4f74-8cf6-4f13dc05bc12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "049e925d-15a0-46cb-a9de-8161ebc2c640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e074cd-4dd1-4b17-ae9c-0839bdf11915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5b094c5-b6d9-4d34-b013-4f62da242bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e89b9708-35ae-4947-bce3-6ca25703f91c",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f2c41f-6741-4ff5-b319-263d322ec3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "166a3058-76b2-4fa4-9ebd-2f6eeaede3ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a516565-df75-4898-b5ae-03fd77d89c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aca501da-1e74-4d88-ad78-380439644c47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a5e1a3-7e56-47c0-9373-c71773debe7b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e37fbd-5878-4aa2-adef-7bb64b769937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d229d0c-9000-46b1-98ec-e102bef0551e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd57dcd4-7880-4dee-b414-8f347097d2d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "585a4188-e7a6-44ca-a03d-9073a422186b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09900bc0-51b0-4d06-8263-989a7486ac86",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ab1b2a-eab7-47a3-877d-23b38ee98a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8602b3fb-7d4f-4b37-a113-bf8b4ead87b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14cbb049-8aa5-482e-b45b-88064804d01d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2ea74517-ae30-49e3-b08a-de90bfb4afd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba633aed-1cba-4688-bc75-82d4a54086ca",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "492e39b7-449c-45c5-a603-359ab24e67fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63b4d756-13c3-4c5d-a45a-0ffcbb7cac3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd09ad21-d294-4f03-a555-2a0b78b98fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a25ab46-a0c1-4330-911b-785c278545d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7a86c3-3f28-44ed-ac40-0bb4e7cca346",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23709bd5-48c4-4907-9879-f678f30b1e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8973593d-0b32-48fc-9856-9ea0a4b3fd4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a243e1-ad51-497c-bc98-334cfa5abe49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b77cfa28-cae6-43f6-a11f-f4abc04bf96a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd2e496-9ba5-49ae-865b-f38bec6ccf0e",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a51ac8ef-3c2a-431d-938e-6be66d0a53b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cb55957-006a-4548-b0e5-96d4eb10e59f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c4008c6-9eed-40a4-a8a6-2c0e32956c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "67847ce9-daff-43e6-9977-5d63043392f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd2ddbde-0c30-4f35-b271-48b76e7bcdce",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe899c73-cf46-44a0-bfee-5112cb2abb11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc4f76c7-5093-4ef6-b38a-4c2b49920fd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e4143b6-9a2f-4b7c-bd39-e74666a5cb4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0bde8b51-b474-4d5d-b3d4-d1106a396c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98659eb2-adcb-424e-8f40-ca3c88f9201a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f317716f-77a5-4fa6-a600-9743f41d04f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e762ed97-1284-49de-a059-be33599bf114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "122c9079-09b8-4215-8d49-50c1b7c56ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6b1a76f-1df4-40e4-88b1-da71e42a614b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb7a600-6227-4a6a-a34b-aa98f71261ec",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d1f6aa-b8b7-419a-b5db-939f4a98d567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61a7efcb-df24-48ac-9d06-a3284e5c1733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d8b8bab-98a3-4397-8af4-790dbbb76c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "89114b97-f005-4b37-a746-821a3539fd76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "928c2243-d96b-4f34-b8e5-900d5a0f3c0a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb7f93c-8996-46fb-bfd1-bc77548c09a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c237a00-fae3-4cf4-9036-3ee3e466682a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3532f49-33fd-4bc6-b69a-256b732af9f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "25b3d164-0999-490e-bb5c-7c48541b84ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33abdd3a-9e58-4dea-aa28-d0d44fadd4d3",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee537d8-3079-4dba-815a-66f16e2d7457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24f91c3f-7884-4825-96f6-bffebc1fd9c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5557aacc-8129-4c9f-9fd7-d5f7b763974e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "151cd374-215c-4a43-a347-3b8f8b683ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6234979f-c39f-4285-bc89-f1ffdf200f27",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c616fbf8-7a49-4597-9582-60a71ce94736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7be9df9-188f-491e-8e94-1689eebc31c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036b8f0f-9f52-4440-86e3-6c5a7adcfcf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "db634b96-e5af-4259-9104-a05956e6ec3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13922349-7a29-4db8-9529-8134b7ff7c71",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "929ac195-c0c1-48fc-a9cb-42660e8652c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c982d70d-d018-469b-9dc4-5f651745dfac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c16bd1-3c0f-4c25-9573-a243e29cfa07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a3ab5ea-5396-494c-9a43-ed9f45478415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f76147ae-9a05-48d2-b4c0-7fda8b3ed7a2",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "885e598e-9edf-4540-a8b3-eefb87a43d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c83331d-3252-449e-8a0f-3211d4477718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2975b2c1-cb36-4700-afd7-4f7e494d2cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3343e0b9-ea9d-4235-9a31-d5bd4966d9b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3898b29-86df-43da-9f2a-01f3a479b0d2",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f51fdc4-a287-4a3a-bdb0-6f4b3755e99e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c08a409d-43cc-48d4-87c4-675ccbd1b5b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e760d16a-5ffd-4e63-bb99-e2ae75c572e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "04860632-6848-44d4-856b-072170ada4f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2256fcc-3a1b-4f74-b5f3-36c2004ffa8e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b914b26-77a4-472b-bc4e-d69fa18d3896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40c9e98f-3b40-4486-97ef-a6e446a6d409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c11218-d72a-4e66-b49e-7d7836503f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2cc2f6f3-b386-4a7c-8d76-13719111c868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a18dc238-f10a-4f9c-856e-17fb7aebcfc8",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "252117cc-082f-46d8-be56-df7ee2184e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cabd5e6-49bf-4333-bca8-11f8d5b55ca5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "731da13f-bf26-4bd8-8130-068c963aff53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "456239a5-4fea-4fba-8a4d-f3d4a040dedd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7813154-7856-4e86-bf6e-931dbf394f96",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27bd19d1-29c8-4d90-a372-328d96ee80bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3432bdb1-87c7-4715-97fb-d59f47dcb834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad8dbe50-0b25-4e09-9762-bd5ea7f518b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f3015ac-b51a-4abf-a807-a14b2a5b7956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7816a9fd-fac9-43d8-b2f3-565b6e68292f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e434ba6c-22a2-46df-a421-450e0862123c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56e7ecdf-43d6-4704-b092-86134beba40c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f8c03e-4ce4-4719-9aa0-e4b246259363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c37c9af3-67b9-406f-b9d1-4daba5e29173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f487950-d31b-4c0d-a2a6-5672a9cb88c8",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5594c3a-4146-47b5-b3d2-f275d61b107a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0551c305-002e-4263-a607-20de79c522eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48fc28c2-1d4d-43fa-8248-890a7678d42d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37ef5038-5a6e-43dc-9dac-24ec91bab13d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc99362-f027-4914-a095-a940cfa13493",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec38e530-0495-4cd9-afd1-d08f3d85b206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "571cde1d-bf52-44a8-8ecf-d16d1d7c47f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d2509a-a153-4809-9a8e-dff2d1b8fed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0753c912-fb4c-4ef3-a8ea-6a64d0693bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a26fae82-20a7-41d3-89f9-a58e859a3354",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0fabc2-79b0-402c-8ee8-ea388ab44563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bcc41da-905f-4fd1-89c5-e5b84193be8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b7af358-bd5b-4d29-9719-047e0afddde8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b9bff6a-6914-4acf-89eb-812756607725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9001d240-7781-4eb7-9cfc-db095a6f7692",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6087cbef-1a92-4e4e-b5e8-19d4d5d4134e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2681f42-b81b-4835-ba03-96919285d4b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ed2f25-5c87-4cbb-abba-5a56cd4f938e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "446046b3-a431-4deb-a357-3caffe27af34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e0e468-e4d6-4275-8050-73546ab30601",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc84637b-3896-49d8-b8e2-1b09c54d4ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90d45071-b5da-4353-8c3a-5b960676899f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "994614bc-3f1c-4965-be24-b75119d093b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2830705-5615-4451-bb46-91624f377fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec9c740-8fcc-431f-a307-79e8474e4414",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa9d7fea-f782-45e4-aad6-308ad7016117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79957625-2d58-4a29-95d3-021c3579e5b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8defeb9-f20a-4596-9891-f1003c61078b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7cd4edc-df36-4217-9e30-fa7424094598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba48f36a-bc5a-4864-8c9b-25df9534f402",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb8b7e4-a680-4b43-8221-d8b6939bc534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "033d24a4-2f16-4cbb-9ef2-834fa0c10b36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95225893-7388-44ac-b45f-a8651fb1b099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f65f164f-36b2-4ba3-b771-e24bc35bf79f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b9c806a-0743-4189-ac25-36e0348efbe8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deefd9ee-33f3-4a9c-8cf5-8872a48d28fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e269d2c2-3f2b-49ca-ab98-e6a54069d375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed1b159a-5149-4da5-8f92-34dd75cc01e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "978adcbc-51fb-490c-af3f-4d8fc278fa84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "709b80ab-4ae8-4137-9332-2c5f0e9c0a66",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8d8ce7b-2b72-4c89-a323-947bc3724946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b99c3c3-bf89-4b8b-9c24-b80feec350dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "836d0157-4772-4622-a03b-095d28447491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee608190-c935-4d1e-ab70-7453dc9fde68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9edcc66f-9b8a-42da-ad5c-67db79265e9a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d3b9fc9-9ba1-498e-8b56-d0aef97d1df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68d79d5b-909a-490a-b603-3487d8fbc715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd54afe-06a3-4d54-95fb-a8dd6462d552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "760d2286-9827-4d55-bca3-fc5930082a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f7286ad-a14d-4952-a03c-58190da36a50",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d409728-ae45-4229-8f3c-2a3e627909da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07f39516-8b3b-4846-9d55-14f7cc335758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "105ce89b-a3cc-4403-adf4-03d9d7a23a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "53bd97cb-a6ff-460e-8703-80d166bedc36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34938be8-0be2-4a62-bfd2-3124fdc5d52a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bec2c4f1-34b2-49d1-8fc4-84869acc9580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "638470bd-3d1d-4d33-93ec-af8ef09cfc16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c83273c-7b55-4334-b5ed-a59bf0fbc743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad39faa7-0dab-4512-b898-f5af4c2a16e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c99f8b-f930-4c38-b50f-b1b41428850b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30432ab7-3156-4cd3-8205-1cd10f317d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89f9c3db-3e54-4f20-bbe3-3fc3c91e35e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4f9000-7a49-445c-a41c-b857fbed2c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "244246c9-40d4-4f43-8c86-4af86b9318a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "100a09dd-7f4c-4456-90a0-cdd225f026de",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4510bd2c-39a1-4586-9954-47ae1e5a2a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40eade73-6edd-4537-bae2-1ed3659d9b6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a5475f-e272-4df8-bf80-88ed97389a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4466b35b-bbdf-4deb-aa3b-37a7c846f748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e1e312-1470-430c-9899-44b8d3fae8a5",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34abc900-6f79-431b-a323-e867033b84d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b994b7a1-3d02-427d-befe-9f5578b0da98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "658ed792-7bde-4d91-9423-7ba00ab99f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d978142f-c138-4408-9921-e80410465401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "291b919b-0612-4836-8441-7d639f99ad9d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6f0888-c9e9-4c9b-b3be-3739a6445b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38c118c4-28af-4a69-819d-2fe8e5b6ca2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68b6410c-f92b-4ae4-b6f7-a787a7082fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b03f4e76-99e1-419d-93fd-caac3fbc2bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d30a4e-f24a-4208-90f8-aaeacfa51535",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "504a7397-0197-4aa5-a4e7-e2e727267f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de06c80a-6afc-4f8d-9f07-dcf84056c899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e80ab3-e35d-4538-9f9c-6f714b322c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd3dfe42-b321-4ad3-a8f5-a0cd65f14073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7b702e8-734c-4932-b7d2-57260890e704",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c982c673-7f89-431b-b2ed-e92e1ddb7629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e5b647c-b74b-4332-a41e-0d02a483cc65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a7b0d9-63c5-453b-9668-022924694ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7817ecb7-bb90-443a-8d21-c26b5fe40895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7248e37c-a1e2-4fc3-a0a4-faf77e3b8821",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce5f36bb-7ece-49b9-be74-d803fc237c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71fecddf-1679-4e1a-9610-926ff99ce463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45281400-08de-4201-9a86-b9c8ccb9c6f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f15a0c72-adf1-46f2-a16d-cb2c0d97c96a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8056a9b5-f4ab-4ab1-8d4e-65c69dc57eeb",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a4444a-447f-4eb4-bfd3-5f997d041fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5bcb59c-9de1-431e-b44a-c460a5ecd1d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d7d019-7173-4c84-906d-60fb739531fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a506bbc-1b5c-480f-9fb5-da3f0f9aedf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f48996-8e49-405d-892b-ff565b8b3b36",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1f3f6a-c3e5-44b0-b4e8-f0598d857b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1b9af57-44ed-4022-9044-f8cc6b4e7155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c58c8c7-0a5f-4b2b-a623-80d2c66fc462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba2b8610-1a68-4070-bc3d-cfeb37cc18e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa8a24f4-ada1-4596-9e11-1273a5830281",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "453cf0d9-fe81-4c29-b62d-5ff8eb7a92bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "488931c5-5e5f-4e20-9a28-98d4f73e6bd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "736f6265-7d6b-4aad-b1c1-c80acf6de854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b284e4f6-1919-4637-8e1e-140d01d283d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6fcea7e-0631-4425-b51b-d504b61fb7b1",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6596e3ef-bbcb-4172-9044-8f101885d86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f61e453f-abbf-41d0-8383-cabdbe1c520d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b84bdc-7a40-4ead-9160-cf2fbb0bc288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb0a95a5-8a6a-4682-b4cb-85b1422c87c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a21eb5-6a02-49d4-a8e9-ab187c53b471",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9afe360c-696b-4e41-9e25-0b4078db1ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcb6e1e7-b6c4-41ca-8b05-58b6142e284e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e724246e-a1b8-4412-9410-37cada31d177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ca5dc7c-266b-489d-abb3-09a015449518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e24aa5-2ff3-4fdf-bff8-3e6e2b12ae2b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c489eb6c-5015-42d1-9223-c28de9aee1eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7920ba81-7fa1-4694-aad3-35d977730776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aade2480-1b1a-4a22-8edd-4b4bd9fd6ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c85507c-dd28-4753-bd77-55ea03003d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0b08c16-474c-4bc0-b743-769c3663b61b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a60e2d3e-7ad0-4d64-9744-3f89fb250671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c1cd840-aa65-44d4-b928-5ce2b5eb8d3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65cb1bd4-33a9-4713-a8e8-ac3832e9c402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "90d6772e-dd1c-4d3c-9d9a-3a01266dde81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ac0580-95b7-46a0-aad3-c03353bb3ad2",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01316cd-a511-4ed3-ae0b-726debbf3924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a8b4b4a-b502-42cf-84f8-7d2453d466a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fddced5a-a00a-4f8d-8540-d3d0993c3f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3c8cf96-6de9-46da-8819-523ff370f0b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d0b20cd-bc8a-4225-9c2c-541f16877703",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52399a09-1a3b-4f9a-a195-713c896b11d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f07496f1-0e7f-4f6b-99b8-2e2085f4abe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1fb800c-40a4-48e2-b14a-53460fb227a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "98663895-ad05-4f3e-8969-e68e3e6520fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc4da311-8cf9-4942-a242-1ef835e86ab4",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83daca5f-8e6a-4998-85b4-488a36ef945a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa725728-a91f-434e-a6ac-6834994ef6b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "560ca819-f277-4261-9b2e-5da6d13723f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8d5d733-a0bf-4322-b1af-8549179d7395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76dc61bb-b144-4163-a855-4f7121a642f0",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "665f30c2-f5a0-4170-9734-f42e5bee356f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "013dc19f-80fc-4708-ac02-be3a6f01acd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac776422-54d6-4240-8110-5fe16d7c3e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "75271365-ba7d-4bf5-b63a-897e545db14f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b6d57a-61e2-4520-9824-4753f874cd93",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e7bfcb-7e66-49ac-9b60-d2945c62a87e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ff736e0-1b47-4a5b-a7bf-4b0583b3ad79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7497c1fd-edd2-47a8-ad1b-21ca0320fdca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd637b6d-ca5d-4859-a05c-a3da493a48d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef30124d-ced3-41b8-9a07-6e9d395e3046",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e84aa4-657c-4a33-95a1-72c2419a5d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbffea9f-4e46-4d94-bc52-16655f40a4f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf78e485-2f30-410a-9a99-fada93cb6c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "df7046dd-0ae7-4665-9e20-0f5b03588219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "773be0cb-edd1-469d-a6ad-8b607928f4f8",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf1e7c1-90a8-43d1-8ce0-d5a1ede93377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f166fe94-a1d9-4ef9-883a-26dfd702b83c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e0c338-b856-47d4-bc72-46f478fc64ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bff9dc80-1782-4c3c-b63c-ee40a7975a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f91ae3ff-212d-4d3f-ae53-033491370f00",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e31aaa-04a6-47a7-8c83-88011bd965ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63933058-8335-41fe-8e3f-90db40c9356e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a530aca-ff6c-4cff-99a0-3ac7783cb437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3d5be22-ec6f-415a-8050-4b3382290da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a8735fe-faa3-4505-8aad-8f4e8a3e5eb3",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9808164-5e4d-4ca0-8708-35bc4a2bbf49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0e37b7f-9aac-4e83-8178-442be3206559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "239037ff-2428-4d32-96ff-a580ae51b616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "71ff99f9-6e08-416c-bc43-a5ae8a6987d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd5446e1-9b7f-452b-9d7d-8e8cee40e18e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8079bd8e-aebb-4a4b-a6e5-f4fc19911be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "190dfec1-e9de-4973-b6e8-92120cf12117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb6ac59b-725b-4563-bf74-3ba36f19cd66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "12661aea-6098-4b11-b4b5-f9a6bd1f5920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c27c2a9-8057-434f-b192-186709d82cd2",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f5a3529-d14e-4653-962d-10341a935338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b409bf2a-cd64-4e3e-aa9e-12f1cd8100ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7edb205c-6652-406f-a81b-a757c4d3dfd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f10f2d5d-ca61-4079-8113-ade76ee1cb00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e47a7c73-e5f5-48ed-b19c-9a1e10912d0e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c901524-14b9-4e3c-8a15-2bc91b90a0c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1212f189-719f-4a97-ae05-d3bfd6d3b50e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05adf71c-63c3-4db9-a3e1-bf8231490842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0d4c8c0-0d11-4710-a510-6244c7377525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90274900-0085-4c9a-8652-d51e76a468c3",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd16418-1220-4b93-9e72-af895f280686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbd92a6a-fa77-4d92-96dc-a2f79a707ef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20d2a77a-ccca-42ac-b554-8f8c20243a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "133578be-bdcc-4c6c-802e-02cda7d01e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ab2e06-8c7b-48d8-ba3e-41749059d789",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba004bf1-95ca-4356-ac10-b19a8dbc402a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d1ed3c88-9b0b-46f6-9db1-2a8d1ff8574c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b6b05f-21f2-4264-976d-83a301163481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c7a3139-d8ef-4a59-abaa-b714b3f26298"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "66b5b102-d4eb-4601-8047-1f6a40e0ebab",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e57a622f-65d9-4263-91f5-85a7cb79a5e0",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68971cce-37b9-4416-88c9-65afed48079b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b472838d-47b6-4379-85e0-9f13b6bda912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0afcaf80-ed64-48d1-a914-4857c356d561",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd4925c8-e3c5-4543-ae3f-d86e22df8032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5dac0f5-10f2-4888-8a79-ec6c57acc1cb",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "354986f3-773b-46d0-a384-7980cb91cf8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6cacb6a1-dcb4-48ed-9f83-94f4676358b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f19fe81f-9481-4806-aa7b-6b2edc33fe69",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67d4096e-39da-4b23-bba9-91ef8e1e5333"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "52afeab3-116f-4d6d-9059-976c45d40107",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8745f38f-cb09-45a0-95dd-d31d0f6c7b65"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f4f024b-d396-41e2-84ce-023655bd8de9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51ca4912-2e08-40e8-9bb0-be115f040e56"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d955487a-a522-4a9b-b940-e365df391ed4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3f39a71c-8046-4996-927e-ae1b87d44a05"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2a8a63ef-f004-4aaa-9098-1260e1287356",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "af45e117-473b-4e0d-bba5-e7fe5a354964"
                }
              }
            ]
          },
          {
            "id": "2e104ebd-b724-4351-8a79-c25e1942da5f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e07eee0c-241d-4135-8e35-d40adea5d82f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8cd046ba-bb24-4c5e-871f-00184491f6c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "78391888-59fc-4163-a870-14c833faa2c7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5fd328d-53ca-46d1-acd3-2a34ab60ac54",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dec9eb88-a92c-423e-83de-3d4581e53f81"
                    }
                  }
                ]
              },
              {
                "id": "352d7035-48ac-4017-a9c5-da78430766a3",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f57650c1-093c-40f8-b4b6-b65e619cabf3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "34bfe2c7-24e6-42fe-9d4d-013bcbc023e5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd0b3e7f-28a9-4b38-ae49-30119f895cf0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4bf80a07-db5c-41dd-98b4-9e318f8529ac"
                    }
                  }
                ]
              },
              {
                "id": "ec28b8dd-8468-4509-95b9-4b1a6cc9f12b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1b32ab4-94de-4218-b1cf-36f50fa4f4c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c125917e-25e1-4076-bbf8-55c1b331e42b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "453267cc-a0bb-443f-9c8e-8b468f880fec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7e6f4b43-7784-4992-9f85-752d0025c780"
                    }
                  }
                ]
              },
              {
                "id": "9b3d83af-6c89-447d-a460-16c12e9715ba",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9274995b-1bed-45bc-8c85-f68d87eb018e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "88bb749d-8a4f-45d3-addb-a49c1544bcd3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1297fbe-cb05-4501-a7fd-85a5b316027c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a079608b-bbbe-42d7-8fb6-f0e483ef5484"
                    }
                  }
                ]
              },
              {
                "id": "47003eed-1b9b-469d-9bd2-abe87644caf5",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4eae9c1c-1c09-48c5-b95e-a00fde355254",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "857569a6-dd60-4967-ad6c-8181a0d68846"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b73c82fe-2047-4313-9b35-d0985988874f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a8783363-471b-4e06-a354-971f974dce67"
                    }
                  }
                ]
              },
              {
                "id": "bfe4186e-33f8-4891-a016-2dd8d8055e3b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb4c290b-3454-4ac0-b049-45f5ac5da33c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "46785749-2d85-41c2-8f8d-47cf5ee9f5b8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7146111-54c8-4e7c-9715-32af9a298fec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7027047e-4adb-4020-9029-286bf63bba82"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d1d98dc6-55b7-4522-b4ca-152a00ab8793",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "694a042f-9f91-45a6-ac3b-e04183f5001b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c0bfbcc5-839a-408a-9346-fc03959fdd93",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "40e4fdbb-0b1c-4b33-92b2-dbf7de959adf"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "98757baf-5fd7-49b6-9fa2-7a58e1b70430",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "0e131127-80ad-4168-852c-1ca84f6792de"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bc21a0b8-de28-403c-bd5c-418f3cf08e48",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b5bad5e4-b2db-4925-8bb7-e4d5f0c6a07e"
            }
          }
        ]
      },
      {
        "id": "3014220f-384f-44cb-b10c-516fd5894e95",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c0dc55ac-d6ec-4102-8947-93f85ee59ba3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5dd063a2-f27c-472f-8b08-5678ffec0e92",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1eb4deac-acd5-4c86-aa4e-7966179b71f7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0fe5e50-55b4-4f84-8b5c-3846b8070376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32196c91-64d0-4e21-b09a-60605034c20e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b78346b-f61a-4136-9373-eab89a91a3b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e467c92f-5a7d-4689-b732-a49db146b0fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb93b77-4801-47b0-9ec3-f6dae7eb99a6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c9da02-76e0-478a-8612-8e3ba2b68108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff686555-c608-49a4-8318-958fdedc231d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af13e3be-8183-4d11-b364-39a539720cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb841b17-5c82-4f6e-8e52-f5b0612609b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c5ffab-034e-40d7-b2c3-5c17bcad12e0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd7ef3fc-4959-4622-9679-5f3dc2245933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11ff6722-48a7-466d-8a10-bc5f71c4ac9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba55a84-663c-4ab8-b0ca-34a3a4f242c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e6cd829-2bdf-44e4-ae80-dd5af31316fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e206e13-4c8f-482a-8d72-95c3cae6ef79",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e622de4f-b599-40ed-9798-884184340560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1c385d0-401d-4208-b7ec-16690946093b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8777916-b6a3-478f-bf3f-8a98dc326970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "505bae49-3462-41a5-a004-cba3d87658da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a37fa90e-3284-4747-a8e2-48f48be3e8e0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b9c4f13-aa22-47ed-9f4f-476ac83c252f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7f0378e-92a5-41ca-babd-689e595ff094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba4d994-e1c9-45f9-9b48-8e07f24e85b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9e5cc88-1b1e-495a-b483-7405764db5f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbae86d2-d387-44e6-92b9-5f817f062056",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e668a7-1eef-4cb8-b53c-331e78798382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cd4cda0-ebda-4ab8-983e-cdf7b9d2793c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "762bdf99-d73b-4b7d-8abf-f2b36397b830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc416531-92a5-4fd4-bc53-1b6bc64a57a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82590216-a74e-4c8d-bc5d-7ca7735059a2",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b1b8f85-6eb8-46e0-aff5-5e91a90d42f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "543851bf-00da-4d45-9075-d8757c25fc75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a259d06-f90b-45c5-bd31-911cfd0013ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "679c02e1-874d-40d4-9fa5-a024cf54f149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d964d02-136e-4618-ad4a-d96811b00e38",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d94a161-c0f9-4ce7-abf6-98b2e75f1385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1bdae6b-d2c1-4149-9215-cd81caf2ba72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "917226cb-975d-452c-ab9b-973d2218c691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "343b70c5-a536-4149-8ec8-d60f2848f515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41fc3788-38d7-40cb-aad0-81c0a02b6d6c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc90c43-d051-4303-9ecb-0aa035a742c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81d00690-4c70-45e6-91b8-62f75dcd6760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1263e1c4-6695-40c3-87e3-476104460f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8615a021-0bfd-4f94-a3e0-b686469f4512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ddf06c7-3204-48a7-8ae5-b8a314c4252c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dee6e096-1753-4c88-9a94-f68bd1bb1981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa8a7b59-39e8-4296-9c18-95c4d38830ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b24c826-6229-4e18-82dc-596e29f1b1f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b927f62-3317-412c-b0bb-2e2a84ec449d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd474f74-b0ab-4c00-a48b-e781c43e5e3e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c325cba-4dde-4c8c-b2ba-4601c70d2ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c132a205-94e4-4c2d-b788-c578e884440b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26bf42cb-4b9b-4ca8-90d8-e20aa22b9fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "826fb915-75fe-4232-aea4-8cc92c5c8500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90efddd6-9ee4-4749-aa93-acfb9d30a230",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "772a8891-83cf-4779-bf09-a311e5289026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97126e5d-bde5-40fd-a0cf-75ebd147f5ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "045f9b87-a10f-49a5-a5f6-ff471c15cada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "038a3ceb-5e87-459e-b2f1-86706602d197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce5970be-053d-4e0c-8108-4ea593bc7fb5",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cbacb3f-492a-4563-b7b2-0cabecc19e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfdff3aa-6fd5-4687-847b-5491460822e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6613113-847d-46d6-a077-4f24091a40b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1acdf49b-7c32-49ad-8821-4b389c221cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c132641a-3bfc-4822-9dad-0f000931fa84",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4eb842b-8273-4fbf-accc-6eb54191236f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ef202f4-6984-4c84-a227-7e13b7565ec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed287d2e-61eb-46a2-a9a8-c651819939e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f56a705-0526-419e-b68d-4f82cbdb81eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e556d98-8bb3-4491-bae8-ae72e07eee40",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a95bebe1-dec7-49b3-a636-21530c75d5f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b4cc90-10b4-41bd-a4c4-daefe53b969c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef867ec-5816-4432-8efb-bdb8b2d2666d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f9b967b-a789-4dea-8e6a-bfb0d875c1e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b22d6bc-863d-4ba7-b347-729befc0aa1a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b98df9b2-a919-412b-b17d-32f88193dafa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf41f895-8735-40d4-ba74-6fafad6677ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86a92922-7bdf-467f-89d4-de11b44eb669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3abbb4b-7687-46c7-b0d8-2ce51befcc4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ceb187f-4e69-468f-8ec7-fd64ff2c4d89",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aef120b-8056-4aaf-820e-801c6808570c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c28addf1-d078-4348-baaa-9abe93f8ee2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0646f9fd-da97-4dbd-853e-2ed028872be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "68a60d4a-f556-4dfc-92ce-584ed4d308d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11299ddb-db69-419a-ad3b-86c5db9de664",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76e5480-8fac-4786-8fca-38ac13c7f50f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c08dd548-52f6-4eb9-97b4-d65fc5165c06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3354dbc-327e-4d66-9e1e-14ea2750b957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "31738f57-efb0-47cd-8a47-c896b8061864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f79ab0e5-8695-447a-a89b-f9a60b5246e0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19cd5313-2139-4721-aeac-149d43104cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82ea839e-2883-442b-b168-13409ac6ff8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df376898-bf4b-4d80-a350-7f92a0b02015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da7581ce-16bc-4012-afa7-741c4525fa28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "329ec947-03e8-4747-a97c-c2b252957bfa",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b37bd8-61e5-4bbd-81ea-1b54f5e07813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "713d84e5-3c05-4b68-bd88-58c81c6b6a3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ea2336-95bd-468c-9f14-1998ec90acbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a4f2f27-f57f-4e9b-aefc-e4e5fdd7d7f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d7346d-1c06-44f6-9a56-87dce4f8c998",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "719d826e-b0fe-4e9d-96af-36c815f92408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4519c0ca-82c1-4fa0-9453-7794b46a043d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "958b46c8-cf4f-4249-856b-e562523ead1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3576d49a-8e15-4d92-b03a-0d1507195813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8a84d0c-8103-4358-82a5-590f0d1f0774",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "554ab926-3434-4d9e-9230-4e965155d2d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e8f1b8b-74bd-4eea-98ec-6557d9decfd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2451705-ed75-4ac3-958f-a06aaacb7aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4a9b665-289a-487e-9684-cb47fa601474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81cd0751-6f21-423c-a2bf-738d2e8a2ad3",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b113922-75a1-484c-8d32-748db4b56ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e27fae2-b6a9-4c3c-95ec-688b1dbece42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e8de8f-89b8-420d-a11e-fa84bf01a668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec45ef2d-9269-41f7-8338-0de4b64320d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d821e7-1c02-4216-bb6e-c50c0b3647e5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "897f0d6d-6838-4dd4-ba71-120170659688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8da998d8-1db8-4750-9537-d132a53d5c2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58039a6d-9667-43d0-8ec0-632b6c268d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4058784-2cf7-49c9-a2e1-c5cca930c923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "488b281f-4110-4faa-905c-419618cc18d2",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac9581c-8532-41a7-986b-03208b1f27f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eafe32cb-3f69-4c78-bda0-f725e600135e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d74f7549-0c18-4ae2-bc0a-efa0438cc844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28b5a775-028a-4cd1-a19d-d38f15d2ef47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e0ccfbd-ae12-42f5-b801-20edcdd7b164",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c25879-be32-4ca7-9be7-b142bc7d6c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29ed9f63-6800-43eb-b295-e8a7b509936c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92abaa79-997f-4b06-b0d5-360d0a97e3b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d83fe537-19a5-47a1-9639-985a6fbb87fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac39c0c-3b6d-4c70-89c2-195b145f8082",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd4672b-9078-460d-8a28-0458e962c2ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7100bc6-b883-44dd-8893-bfb9fc3f9d37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ce7119-5ff7-4ea2-9b15-02766243a362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e347019f-f981-4455-b226-88b9bc35b352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "205639a6-8e47-4f07-b389-ebdc0aba2997",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd89d68-4e9a-4338-b4bc-3b8213655da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80bd34fe-460a-46cc-9936-f875f4cbacef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7435390-addc-4b39-b5e0-15f2111259cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb0d563f-6c4d-4ebc-afe6-de718501be54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a315517b-ed43-452d-9816-7a5e210bab54",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef7a8243-5532-4912-a670-b1401523c659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f51a2e4-c0d1-4a5d-9576-6b4a884e044a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "274d2480-348c-4585-956e-62857acd4d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97d72d3d-76a2-421e-9d65-541cfc162fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73752438-da0b-49e8-a95a-b8201909d5c4",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6baa8ebf-c9bf-4453-aae8-5a1eddb87d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8de7860-91d3-4759-ac29-a239c51fd70e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40dc54d0-cbc4-4691-8130-2a8dffdd22b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2564679-22d9-4a78-a477-65ebe0e19271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d93da26-01b2-4646-bb92-d425bad901f7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "493e19cd-5d03-4e6b-a768-5c91cd0bc9ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcdaeb19-b6ae-4420-bb99-28eb923e9466"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43775dbc-076e-4c81-9ad9-9ee51b078701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39443503-215e-4562-a854-1123d8df7a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f673cb69-8125-4156-b6de-85075d3ee81c",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c09f7dbd-7cb0-4a6f-babd-2b58e2e5d479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea130ebc-bee6-4bf9-9442-3855ff580b6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fec534e-14d0-4655-a7cb-509008a73a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16b2214e-6a38-4aba-89f7-f6ec5e042b6f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c967784f-d1b0-4327-bf1f-322cff11a5db",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "43543ff5-9255-4281-99f6-4ff86f21e3ca",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77011f90-140a-4cde-9c2b-fc537da3acb2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2f71491d-a955-4b31-a2e0-646695ce659a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3132704a-2e75-49c2-a08c-a6fb21c86935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c79e960d-2c89-4f75-8794-1d33fa70c10f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96cfd271-acd0-4899-860c-8aa820f1edc5",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2bbbcff-9695-4023-8931-4dc6fe177295",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ab291997-278b-486e-9f51-abea9f82bdbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ac7e6f-88c7-4400-baa3-4a293d77b243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb365638-97d7-4742-815e-000dd69fe44c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "709fcad7-b94f-46cc-bde4-c91d9406a59f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b0eb0012-c8f1-4e21-b534-c70fa075e219"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "97fdd21e-7839-4c9e-897b-f7aa4e2ed253",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "47225b0a-0921-47e9-99b7-763414640141"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9790ed1f-5f60-4d3b-89ec-706e96395cb6",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a5243488-0a3c-4ee1-b04c-cdd563fd6381"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "69a83e46-c598-4552-aee3-58d34656ac2e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "df3a55e4-17aa-4a7b-b9cf-cefc33ef0c79"
            }
          }
        ]
      },
      {
        "id": "b64d8f47-4609-4527-922b-0fcb0790faeb",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "884cb6ce-70cd-4d0e-a7d3-4843efe1488d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b35c6a2a-f515-4e96-bb37-e6b88293475e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "67d3334e-d14c-437c-af6f-41507baed7c0",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bec5aa9-88a4-4b82-80c2-4700c5628b94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98cb1528-3868-40de-b1f4-7f29a2702c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "398ed1c6-0202-4d34-9f47-0c17559d05de",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7650bb1a-2895-42b1-bd53-81769f01d681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdfdfebd-68ea-4459-8e67-0a5f61d0cab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50617c61-fc02-42a4-866f-9c2097b44f6d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d19dc4-5822-4326-b63b-5afc8ffed5df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bef14cee-2833-44b8-9620-b0cc2ac19b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "468c617c-4b8a-4464-8e4f-d95d442e04ca",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b93c1cd-8e0e-45a3-b9fc-71a944161877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98b54947-52e9-4121-b3a0-c2d360e46a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c9d46a-23dd-49d4-8a8f-9a4380f72873",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5557f193-8bd5-4c37-9c38-9dea5e92501a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bd7b85a-9b85-4e66-99c4-1f41a51f8080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "677ecef1-3a80-4d1b-bc5b-ba6e77aa053a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79893076-9796-4447-a968-8f99a759a0f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45010e25-4dcd-44b3-8b3f-7a9a4f39c0a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd995fd-6a30-45f9-b497-b6ef95c7e7b2",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea17af6-f4bb-4f89-81ce-fcde698652d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7371fe42-a9b0-4883-95ab-bc271186d169"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d319da7-1b3a-4d26-a4d9-f5ace1d3111b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5e0df42-14d0-4b15-bcb0-bf1fe4b1f4f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9c578d0-c61a-437e-84f7-4bc05436bd95",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf9e996f-1253-49ea-a5b3-be7ab3a1a844",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "038e921e-0536-4a08-85b4-2a90ad8d8b02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d98c3e1-978f-489f-ae90-108230665585",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a043333-5758-4579-9a00-fb0bbf8598bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "618cf163-ea2a-4967-a5f0-7806c6961566",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43248589-9288-4280-a8cc-3fa30a1ae381",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "552d8411-3452-4aaf-a23d-65750faa290b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7785b4-b20b-4d5f-b22c-c36631555f58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cb530bb-acc9-406a-8832-ebf7984f0103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0edf8f51-ee88-4647-9e2f-35f88835fe3e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3226705b-dce3-4b4a-ad87-960b60cc6f2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac721436-9e6f-4627-b75f-6dd4022491b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26026d12-d5df-440e-956b-fc9f3ca466bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99dd3bfa-6fa5-46a6-ac98-f6ef14828b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "309a5b15-258c-4d4b-bd69-3c685f2da7a2",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "649866d3-8ade-4754-ab1e-1f33753c86ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b9d408d-2912-41a8-bef7-7ebb3a42e0a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "880d73d4-044e-420c-b5f6-82e25a5d584a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19bea006-ce5c-47b1-b0d0-45eb6935d7f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f8ecd4d-52f1-4bf5-9388-ca3c20c29af9",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d5d07c-249e-4150-8964-21b95ab93935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7f57e6a-b907-45c5-b4ab-a5847a6216b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26095f58-f921-4adc-870d-3810961ce06f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a3afc4a-1ff1-4173-ad59-81f8f4862c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9404ca1f-fc02-47e2-b265-fd705bfbb373",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d28ca90-2877-410c-bacc-204b0d344384",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97614ba9-1f0c-4a20-8eb1-eca147158900"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ab9e0a-0cc3-4af7-8b2d-3a301174c73b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b06e3a9c-3ee1-4bdf-b06a-aea05bf8dbb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc02ce9c-0818-4678-836b-65784afa304f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f81f3a-3a8e-4c2f-907f-fbbf42f8555f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6a005c8-ef37-4c4f-ab97-1a8a6b2ba638"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb0fd9a-e7d0-4207-91df-2816bc3a9978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd36bb7c-3020-4bac-b789-0180c316688c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed3a783-c89d-4e8b-85cf-fb7818a4d925",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d5865d6-48ca-4966-9124-649402c7fb06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff241c8b-2026-4e19-ae27-012c7019b0fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fac6099-9662-41f3-b585-e28a12fec37f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bdad9db-329b-4782-a71a-c845a75e946c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4594c9b-c82c-44a6-882e-50b25f118a96",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e3dc31c-beca-4252-abbc-41a59f662aaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5001957b-8405-4abc-9b10-1fad6418e2e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2a5bf9-83c0-4fc9-afe3-32bf05f06ba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f8c212f-026d-435f-a59a-d87ea1bdfd91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f836d4-b612-422c-8a1a-10d88e7a47ee",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae7b22e-d1e7-4a01-ba64-1fd36b1b427a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99e4745d-ede6-4a40-b5ef-368fc8bcaa33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b46b37-087d-48eb-b677-70e360cc9ded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d16dd962-b322-436a-b517-b76ec5f66b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6876d6be-fbbf-405a-ab00-422121be0ac2",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a74eb2-b0ce-4b72-b6e6-3d63f8229e54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea5c16e6-2145-417c-8c8e-5ecc77e1a0a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "250e742b-18c8-4478-8911-ea154a6760cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c999a06c-7884-41b7-8951-20d1af2325c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73506fd9-d204-40d4-a7cc-7e0e8c443454",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f982351-8daf-4cc2-9023-fc7419912841",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d63ad7f4-2038-4449-a365-0ad18dd72e8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b54d3b8-b49b-4429-8d49-cb6c16972894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e5de12a-f88f-4bb1-b09f-5108f2b36615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a3bcf3c-648d-4e0c-af33-92071e5cf972",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1f69462-57e6-43f5-be63-72785d98a3d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51dd8362-6509-4d1d-85d4-e1f38b5bf8a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f276fdd-e887-4804-92be-3edc247ca01c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e0dedb5-5fb0-49f5-9611-293c8953372a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7653905b-85d6-4d5b-a922-f10379422ee1",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "103e212b-f6df-4041-852e-1da47e9ae5a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "584d9a1b-12c3-47fa-8b60-033b0a3bc68c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9780a332-81ef-4d0d-9a0d-dad4850caf4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cb4a4e4-536c-4ae9-b76b-bb3b1d2cd504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1367ba2b-a87e-4f8f-833c-21b760be1cb8",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "265c9b1b-c3a0-4234-a4aa-08679e95759a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45920706-e1c8-4183-9a56-d1ea3e0838f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47068b5f-8af2-454c-87e9-d64f010f909f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b0de761-3048-4c76-84e8-869325230086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a5dd844-1692-4b49-9dec-1cbae1e08596",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad7b8a0-47e8-4261-9c07-4f9eb7e66266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd0a7746-65af-4590-9bfb-4f64ea643750"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8667fe60-3da5-460f-83c5-9fe15d072039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be7be147-2e49-41a5-a34a-6b2019ac02c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "262317e4-b1be-47e0-ac37-78dea74da122",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "630e4292-5d95-415b-b351-5c8b9eac28d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c075d3a-438c-49ad-a8c2-c1740aa5c809"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4540c5a2-fa15-4742-bde6-79545af78656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "536f5922-34a0-47e3-a416-9d18da25fabf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ba1a9e6-bbb6-42c2-b66b-e38b6cbfdff9",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f56eb4d-b0f9-4d61-afaf-87b45c0e2a18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c1363ff-16e0-48af-9b76-9eb54e0a468e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c439e60d-85f9-4157-a57d-32f660bc0471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3d1923f-9dbb-4d00-aee6-1d93743153cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeebb03b-1fde-4963-8a30-85d9f5fa2723",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa65dcae-c990-479e-aa43-a8ec8c80e61f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66d1c2ef-e85d-48cb-a8cd-cde999b91eb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d81e6f9-1e03-4edc-8380-013c8a4cdebf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03889331-15a7-41d2-ae7f-51f5eec7c3d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f47bc49b-a0e3-49e0-96c2-75db5bef94dc",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f53a21-446f-4058-b1ad-a7531eca8172",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35caa08e-b114-43f5-b9b1-95011adc8d2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb7e611-17e9-493b-8fc9-1a4d3976c6ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "802bbc53-210a-4c66-9322-5a5c5d097dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9808f570-7334-4791-ac64-0db40b185cc9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d4b8bb5-e54f-4280-a9cb-7bf3d192c9c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76310e17-50b9-4356-b878-5b63d9dfe0cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e355df7e-3382-4282-8223-17fab632ea8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "930dff50-69af-4718-9420-f258fda1a240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "797e1882-d881-4978-91d5-4b86a4f5ceac",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c4411d-39c0-4431-a2ad-6426f56121ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdd78bdf-3d56-4a75-903a-995847f011cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6523e885-b3a4-4892-be55-ab5054aebb82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "126492b2-9e1b-45c5-8d18-43fbf2bb07ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2095eea-9556-4f53-95b6-7807db9171d4",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31520483-ff1c-4856-b24e-65d5e1961947",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba2293f3-d4ec-44a8-9de9-981faa760142"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2aa7c31-a1a3-494d-969a-3f175e4a5eb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8db8b1a-c10c-417c-8ea8-f9109b78f802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cba5588-f45e-46da-ac3f-9472763255e8",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b811cbe-3ba8-4516-9111-7965f99dd557",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9d41ec5-bb0d-4852-84df-853e3f09ad31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6eb992-6e43-4130-a277-ac53b3695454",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30c6a48f-5902-4ca5-8407-16f44a8dd21e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52b4bdb2-aaf8-40a0-94f4-bab7b535ba6a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687ce8bd-61fe-48c2-8f71-2594789cc8ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76944268-56a4-4e98-a136-e007a9bde34b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae0195e0-2bfa-446c-91bc-56f97933ddc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db5244e3-b7fd-4ecc-9bb0-4477b50b6b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce16afdd-2253-41e1-a6be-5cdaec92e2bb",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d47f639-062e-4f9d-a2b3-6a9930497ab2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3181c20d-18aa-4744-b749-9ee178f66270"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b59fa5-01e0-42ba-a130-c24e4f39d1f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d686ca0-6539-4a05-b1f8-7df0f19798e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a22fb7b-67c4-4dfa-b67d-fdcecddbc720",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca7b1f7-e7f5-4dfc-bb76-0f6ef9bbfb67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32c7ddfa-09a3-440d-b06d-54a2d803f218"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b50dd6e-4efa-412c-8690-4a59214df9d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4439c4f5-b63c-484b-8518-3452963353a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c23c1947-72aa-4878-9543-1c8f967b4de4",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "631b1a82-9016-4e8b-820b-9db1a2e5066a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f56aadf-1314-46dc-afbd-3549f153ceb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b89465ef-db7a-4e8e-bdff-373361a56204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de75fea3-256d-47d8-8f88-c1528616f725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa89516-9009-4c7f-a74c-039c195c7cce",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277a68f8-0d9d-4f12-977a-77aa8604073c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72ee67b6-ea13-482f-8de7-48018fe56aba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b83dddc7-6841-44ea-b301-0fbe694d67f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd240b5e-5719-45c7-94bd-7806d26b89a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5615baf1-aee8-4e64-a756-68ac1f14d794",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee5d61a-fcc4-4c9c-8dc1-249ad544c72b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4fcdde3-56f5-409c-8a67-8f282ce5ed32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa1539fd-2d77-4540-867b-fa1280f6a9c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ad86c32-36b7-44ff-8bd4-24035fc60e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d31667-5b22-45f4-8032-74ebd3f05100",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c84b11f-d5bf-4d65-965b-94c9c8ec13ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dd8f0f7-b817-48a6-a467-8446fcd6c898"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b119f6-81e8-49e7-bf41-f680f475fa93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26a007c7-99b6-4916-894c-592645469607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4097fc-547e-489c-a7e8-d02821c33348",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da7fd4f2-51db-49cb-a435-313c045c387a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98191843-1743-4db1-8149-c472707e03e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf327078-3295-4180-9caf-2ea83f48fa3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c46e9fd-5bef-4d45-8ec0-223b47931bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece04bad-ee55-4df6-b08a-8e6fcd9a6c99",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c91307-9566-403a-8e97-89f9b5b1c7cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47f7961e-c31b-4875-a774-3f7c6c95047f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93109e73-0f90-4e40-b888-9b33c954c672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b63b1833-3194-47d8-96f9-8d4f23d667bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ccb2559-bef5-4469-bc91-e9b6c6b9e836",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13547989-2aa2-4adc-8535-6982665b8937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e65821c3-40f8-4d37-bf69-fed1bcb90258"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c5c0f1-b710-4401-89e8-3815b31dc2a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f29bf209-b77b-447f-b5a8-dcbc35f164ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c869bbf6-7376-4861-b8c6-7dca49ba2213",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff557dac-b435-4fe0-a91b-5f1371c4c09c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6272f024-4f8e-4a0a-b5dd-4d8e8301b5bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30721ce2-e8cb-4bcc-8203-3ead38303526",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac0432cf-0e8b-4566-94b6-cac769b1463e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2ba106-3ebc-486a-9248-648f8df866b1",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b11b6c63-429e-4759-ad25-e14ea033b333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf242a54-d29c-441a-917e-f2764b0651fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab93009-2b83-4a20-9757-8ec30e072fb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19ea1ffa-8c03-4f23-ae7b-c89f1d5ed2e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2700809a-f131-4e12-97ec-d3487097eeb1",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "823c6f6b-063b-44ce-94eb-c8063ecfadc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb6b8753-7cc8-4a1d-96fa-68c959137874"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88908afd-a271-41f8-b318-9163b90db922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25b3a97b-8a91-4cf9-8791-9bb54d296517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "111425d4-296b-4ca1-bd22-77ea0410532a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c745f7-bac0-4eca-a3f0-d48a428eac2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cde6d30b-2cc0-4318-b14c-bfc041f9eaa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c01c9e-07b6-4d92-8744-7a2e421e9ad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14a5bcda-4c82-40ae-a095-f04de07df843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d30b5f2-09d7-4ced-a8c9-c8779b380d42",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0b80f1-a74a-4ec2-bda2-65a2881b0138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "593af86a-1d31-4177-a4f9-10d320cd95cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc3ad98-8ff2-4e54-a37b-c1405ac0303e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ba40c0e-3be0-4886-a268-50c3e3a84c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f703c6d-34d1-470e-981e-6dde897ed754",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5361dec8-d152-4e42-b504-a5e8842b87a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9d84e1b-da60-4d8e-a95c-0c505fd2cd0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37035b07-b44a-4832-aa22-38c71419cb1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92048a74-7686-4f76-a0ec-19ea033bebe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41c77edf-e637-4a59-89f8-e1721df50737",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbea650e-03e7-4445-b50f-0a41f0a53b4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d4651ae-2a65-44c8-87ce-bd405ccc4027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99cb0b23-858e-454d-aa65-f6c6ff59bb4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1604be2-1fec-4c71-8c91-2a9e3c5800ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6063b9d-e2e9-4353-a075-d1517b92039a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75167bb7-3e2f-4c81-bc12-5ab9844fe69d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41aaf8f4-ded2-4c49-b19f-3462b4a544aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f01ae16-b739-417e-b8d4-af05356046ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "831145ef-5d16-420f-8633-b51d01f31a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b401f846-184b-4055-8f53-5038407becdc",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f26a013-81e6-4120-a12d-14e233029636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c83fc9f-41df-48c0-ab41-1b86fb7ff74b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9477ee8b-025d-4a31-b118-287326aa99f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35b04eb8-028e-4cf4-a0b6-5c49129ac45b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f68d7c30-8dce-4994-b585-9719fcd9ba2b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f61f34e-6623-4b76-a510-7f3b9e7664c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34a453e3-5454-464a-9e9b-e9a93af57491"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b7904df-b7ca-4580-9d64-5e16b0a5ef9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0539430d-1434-4e10-befb-5b9318ff909e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "243e10b8-1d1d-4407-9a53-10f205becb84",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08eb1861-0843-499f-9bab-1af6ee08537b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6034b27-5389-45af-b1fd-17166cbe7795"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e128d1d-cd34-44ea-a640-e4859ba14682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8c52a84-b451-4f0e-a339-877d5f511c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f6cae6d-6a35-465d-99de-e940522b2c3a",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa96e458-a030-4640-80ce-6b1ab6d92c73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bcae435-e4c2-4840-a5e6-e56545b14605"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e43ea831-bfd5-4ee2-b1de-05dbc220a5bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72805560-8161-4ee9-a729-6f5caa580dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1150e7a8-01bf-44ce-bcb5-c956891aa4c9",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4680c0-151b-4373-b44f-95ccc761eace",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86277c98-2fe3-4d65-b38a-ded760de3fe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3649fd-a4df-4551-b8b6-715197b89f88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a87df40b-9e9c-4570-a96a-53f416f3b655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "467169a3-c95f-45f0-b980-53554ad73093",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b6838c-7b07-47d7-a8a5-091b8f333dd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce589ded-b9c3-43d7-83c1-2743dda4ad8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d632d25b-d95d-4b2d-97a7-6c988c1a129e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1516622-3002-48fc-9ed5-a8db5c2c316b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d988dadc-3c9f-49ab-85aa-96073369a4fe",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d4eb33-53b3-44ed-8546-dca1df086d63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f96d5bb7-ab72-4571-95f7-334533d43dd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4143e88-37e0-4612-812b-d003846abaed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b13647bf-e70f-44ed-8d4b-02e104385052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb89bcfb-4594-4869-a9a4-defe5cb3bfe8",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51793b04-a577-48b8-92c1-acb9a971ecbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "876f8286-a38a-4cff-8dd1-0da15c152406"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f473853-283f-4c7d-aa79-ac704b9d454e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "005f6cf2-449d-45ae-aef3-90f50a9683a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "468f1a6c-0858-4118-a345-1f4a85143662",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8dc3e22-63cc-4546-b04f-9ae812b5074d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e63a8f8-8b26-493e-94ea-d240dcc3269b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c015fea-6b1d-4350-a25f-7f03bc73b443",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82301683-bd99-494c-ba1a-93a7ba481d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2adaeae4-1050-420c-98b6-526ce7fd42d1",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae3449a-71f5-4134-857c-bd6e2f7a1a67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e71102e-c53b-4d9c-b056-66f1f4f2a192"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f216cb-c457-4d45-b858-46f875269a2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13a1fc09-075e-4c24-bf70-9861ec4b2d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd420fff-3174-4c30-9ba4-d166bccd868e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a0e4262-54d8-4e6d-9850-08961b117085",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99227388-9b29-407a-a943-4f0d6df96d3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94120f73-1e5d-4d51-a62d-0f94f9205b2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ab41b7d-2e8a-4ad5-ad11-4b9adf49aabb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d91f5a-5d53-46de-8e4c-379b91df25bf",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a35ca14d-6e66-4e10-8f49-07d90bd5c466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cab78d72-f831-4f5e-935c-acbb76023f85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "302f6e1b-8c6a-4529-af18-9fd09b718f94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "919c54f5-1f63-431f-97a1-045e62655fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a0ed13-345e-4ffe-a45b-e37dd9e69d13",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de655c01-9953-4dce-bd03-fa63d918422b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07f924cc-383b-4699-8a58-7ec5cb175040"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1def903-822a-42a1-92e9-e88aff307a78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0c734a9-90db-4daa-9067-e01b01dd1037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8bbdca7-b93f-414c-92d5-46d3885a6755",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d537398-88bb-47b5-97e7-af8b83d3326e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "623a571a-641a-456a-a8e2-4627db91a072"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f6e21ea-f3f0-467c-8383-1246d96ab647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58569e05-23cd-4939-a3ba-09b37f80a47f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52f32b1-809a-4a7c-a702-5fe054616ce1",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59398502-e5b0-49db-b25d-28b49c44b4db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "559f90a9-9b09-4dde-9793-fe83c30750f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bdc60ff-7b27-48dc-b139-dc55369845c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "661a86a8-047e-49fd-b5ce-9db2586e7dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe1bb0b4-4372-4b48-9bcc-501d97cf825c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56b6d9a-5e4d-4d56-872b-6a3cb8b781a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71fe7056-e92f-4c7c-9860-f9cceef16575"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71af0746-156a-4bfb-b6ed-b0acc6180e7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82b1e17e-def5-4def-ab47-635292b27fa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f094a7-e29c-4e01-8475-9d92628c893e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc144533-a5a1-468b-baed-e86824187bf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcc28281-9eeb-412e-bed1-50738162ec8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a55d24-b2a1-4e76-93d5-b7eb18a0baf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "136ff8f1-40a3-4dae-8207-eed4fa3224c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125584b8-0089-4826-9a23-972c9bf7e96d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d166e75b-51b3-436b-9046-98f84f20b568",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5739b937-64b5-4db7-a94c-0c2d64c53dc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e390eed6-a433-4953-8d16-30def4f1abb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abf3736b-e682-4687-8da6-23889be49480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85115ed1-ca13-4c0b-a4c3-e4938d21d48b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1234a11f-a4d0-416e-8add-85a100e94f18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88755451-d07a-467d-8a92-9add171f13d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ebf14a-d175-4476-8586-dc881c747b1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bc370b1-25b7-4b15-a6e9-10447b5d7d50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2042f90c-a3bb-40cd-be97-d48fb7d693bc",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da70c31d-b080-4d25-bd54-4f02df099779",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56c45621-4066-481b-8207-07de09985448"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbfff52d-683f-4840-b929-bca781da1ec0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "028a0127-e32a-48f9-8bc8-a1cdd0100973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4aa35d6-a2de-4a4b-886f-b22649096d38",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09de2d20-6669-4208-a57d-6c8e4a996e3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21c76745-6e1d-444d-9d9d-ffef7d4cb9fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7287fd9-a268-482f-b34d-eba5ea4382df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffb9a95c-529e-47dd-a961-2ad3d2004dce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d6e2bc-6bad-4788-9e72-20adc287d913",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2732846-e2b1-43a1-a8ee-ecdf9f970166",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "867e30a1-d3cb-4061-95c2-5c2fe1d8b8f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a6bf0fd-5b42-43b3-b85d-92c36b08bdd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "432a7c6c-3d55-456d-8cb7-e310fd227924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3362b74c-546b-45f9-922c-e42e9f4e2560",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b23c0d6c-ca84-41dd-84ba-4781f89fc688",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "434833d8-0f26-4dcb-9df3-4d8c12d26efc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa4bdc6-4b9c-4681-abdd-4a76f7b51d62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9191a8af-c066-44ad-a240-8d70d1d9397e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5154383f-e682-4a33-9e0e-796e235f541c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f950ea3f-3de8-4680-be0b-f03033542fd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46b120ec-16fd-432f-aba2-63fdd6b3baeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bfa89e8-f7ba-4b3a-aedc-4e2e14dbccdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8cb5f6b-fad9-49d2-b644-9c646c3c1ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c97563-2f03-4176-8eeb-a4f047f28906",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9710219-9088-4102-a531-a5a16a47ca0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "501c5dc7-bea1-49f7-b93e-9aa29941aa42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3440e60e-1502-4d24-86a5-7a761f5b152a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1442f00a-4456-46db-8e2c-5d54b359bf74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb48ae6-42de-4cd0-897f-c6b946064ad8",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a677b018-b9e2-4109-8414-714df0c7ed3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcbb2d46-24a0-45c2-97a1-95a32d15c7ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d4cf50-eb28-4a14-b49f-a8c7e1028c99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "753d8b92-dfdb-40c6-9f2c-45d3e2a4d969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69ef10d-89a6-4d27-9f61-f049f9aaa0ea",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced3a55a-6a48-4748-81c3-c6bb55e6e3e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a9d04be-658f-48fc-9cb0-b89b431ecf3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1973c991-7c18-45a6-8c99-2fe29887bc52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0240973-bc11-430b-b8fd-afc013ad0ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe986d1-77f0-4d37-bfcf-401e0b9584b1",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b84a5e9-cc62-4546-80f3-8e9cec0c3615",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fe18b6e-f2b5-43a0-bd1d-60d593622c83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "739213e5-4402-47b0-95e9-f629c6ecf5b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26d6f49e-cbe6-401e-961f-249afe81997b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ea2f301-3145-4526-82d8-a05141afb0db",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d71574c0-4e20-409e-b8ec-6efae16753e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da5cb53f-c718-4664-8311-362a7b6a572f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b28bf0d-2d3a-48b8-bdeb-30dfeb5bed9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b4a2152-8ac8-4e44-85bd-74a53c1352fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf9b6fd-f46d-4d3b-9b81-fdef7037c9ce",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e74fc56c-f9ba-42f7-9e14-e2b60cd738c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17fd52e0-a5e4-4ecd-9af9-7f8831a98496"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc68b71d-9bf7-475c-bb05-b8ec43d19554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2323594c-4c88-4ce0-b446-6c797601f210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8504823-d1ec-4a8c-b0eb-e35e69f90a20",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be2b971-55fc-4308-b26c-8d3dcd0e8c01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a783535-3e49-451e-a4e8-7688bcb2e9a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d1077e-f362-46a3-aed1-97225700869a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ab20cfc-9854-4712-add4-c7d20d1355aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b456c163-111e-46b6-b3ed-c4e45691cbe6",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee443088-b64d-4e77-9ad4-f47050ef624d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fab52e24-5e71-44a9-9871-6a78488a37bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b836c786-d848-4827-a0c6-801ac9e19b81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89c37d80-1c7b-45f8-a06c-3a0cd372b82f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd362220-610b-40c0-90a0-73e51cb5dfbf",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3389c41-ba79-400c-81b8-babf438e8df5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8b85ddf-3d44-4272-8ca6-e47550b2dbcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5aadcc-7abc-40a8-8e7d-076ad6e45804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99c64e3c-22d6-4aa8-8faf-770b8840337a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed64fc3e-4e08-4af3-a5ce-5b52ffd9155f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35387fc7-c058-493c-9bc5-b3c4720c6f01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aeb7fd9b-fbc7-4933-b10e-b6dfffc500ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12967465-acbb-4d7f-9076-30637cd5a008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf695fc3-98f7-4010-9619-10b9c2f99f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccdd9198-e4c7-4778-bd57-167cc7300469",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc4069e0-e9c7-479c-a090-ef180bc6b921",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfe7ade9-794c-432f-a70a-c760733f0b00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45842d15-a601-4aa8-88ab-52f58343e766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49b845f9-a426-42a3-9f08-7f0ad66ff9e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30774c33-c119-4e59-ad60-0e2adca317da",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab68ab95-d75b-49d0-9585-a42e25c061a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6d09aa4-483c-4e2f-90b8-11447ac66058"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e10861-44de-4388-b883-f485221c387e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d460dbf-fab4-4bf7-833a-9e4f01a3a325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc618328-880b-4349-a7c2-98a662f3da34",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "966716c6-2f3c-4e56-b00e-647561ba1690",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6f630e8-2336-4fee-8add-1bbb74c28cfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e87ed4b9-a412-4d3f-8cb6-8081b60a5d57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d88cdce7-4d06-41a5-864e-4ddc7685ccee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "486defa7-3fad-461d-9fbf-b48a121d057f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f913046b-5678-42d7-88c8-fcfe9d833580",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "858ee82f-2798-4165-8830-c680019a0680"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "308b0575-ba7f-46c9-9d4b-9a258bc64132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69d25aef-b37f-46bd-9f69-c8011a2549f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e99e9501-9d5f-4d13-9dcf-e960800e6983",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7917c97f-426f-4485-bc80-1ae45b0be5fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78a7a2da-c429-4417-a59c-b7b0a365acb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8931dc65-338a-4972-a77a-631e42da99be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "198b981f-dbed-4c6a-9f28-ce92418aef5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98fd76d6-fb6f-47e2-a173-0df6388958b1",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f4f1c1-5b49-4d7f-9470-2b84148a9fa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb5c7aa1-5c6f-4d25-bd47-31fe6df4d61b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a7d7efe-cbfb-4bc3-bfd1-fdca0fd3834d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6ef4d82-a9b3-4327-9a4c-01b62220ac86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "376b8051-f942-44e9-98ad-259b2fef45d3",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "133d3ae7-981b-400d-b068-953f21872d7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ded5528f-6857-446c-8bff-a6be5bebd4d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e7b8dc3-c1fa-41ea-9723-8afbf5831cb8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71f14803-4386-42dc-8d99-af4e1274c433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d48668-242a-4a0c-931a-dfad54f06c69",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b52b9e5b-7fe5-4ef0-a404-26694dde8d50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d834460-b1c6-4bf8-b504-f8afb7d632f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7632638-1ca9-44a6-9296-a1510ab20b15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1700163d-82ea-44eb-bb48-bd69893dfff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c7fac9d-82d9-458a-933b-52a3cffd5bd4",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "145d59c4-6f67-4b5e-86fc-33a2f1399dde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b74b43e-db6b-4618-b6c4-c886942c83ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25aa7071-2571-4f70-8d8b-e2cf2a977bc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20cf35c6-68e6-4b97-b3b4-2e39decd60e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cddaeef8-e8cf-4bda-8fdc-175399c7c90f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc7ad0a4-7507-43f6-90b7-15cfd492452e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d39d30f7-037e-4715-93ae-6ce5889e9ce3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e883c3da-8c2a-45f4-9d38-2d665fbbf525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41e39ca8-83ad-4531-82d5-a759bea27d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7949e1fb-e6d8-4d12-ba99-5726380fc453",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "417568bb-5594-437a-a403-3f9be9119063",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "318199f1-2304-4055-8484-d451ab8e5991"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2abf4af9-e0df-4b8a-b324-2300ee46ca3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81c6d60a-3fd7-4528-9d1c-2f8a0158eab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b85a1063-e1fd-4b93-9ad9-b70e52f04f70",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f50e43b9-ac72-4cd8-8b9e-d9f113626bb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21e56fcb-eb22-4587-a380-2a9cec084e4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac1cbfb-0072-406b-b83a-b051f59c573f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1698967-4170-4c4b-98b0-1b48fa46f73c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "754512d2-0c28-4b0f-bffe-5e554b4e3b19",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4083af18-3516-48c5-ba51-e523e62ff729",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6613b7b8-b637-4fd5-9419-32fff379369f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "890e1ba1-0351-4b2e-bf87-b970d90c967b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41cc732b-dd9b-422a-b47b-bef4bea65162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8a71b9b-b2dd-4e4d-a298-128c7dd2f041",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a87202a6-54d4-4d25-9468-20b265bdf622",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d16a3011-9127-497d-82fe-2b40a377c53e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7e51c7-73f1-4f32-825d-123f198e60f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f860340-6485-45b8-8f57-2b4bafed83b5"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a27dfc66-ba96-43c7-a28b-f5ceb45978ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35f176e9-0621-44bb-aad3-76abbbb1f919"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea56fe4a-3271-43f4-b5fa-23903a7e6c17",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "062b1263-43e2-4548-b2ba-951c9caf54ff"
                    }
                  }
                ]
              },
              {
                "id": "16f73fb5-acab-4025-9ff0-bd493f5a84a1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "831fb13f-6e3c-407c-9642-449663101481",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63fc7578-acd6-49da-a8b8-b062d9d666db",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "66673051-0276-42b9-a02a-dcb23e8c3bb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85075b72-f432-4469-a2cd-a415976cd5c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "87927683-0aaf-4212-ad8b-69f0dacbc997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c82547f7-1b12-4d3e-af96-6d212c12902b",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9433dea2-bc22-4b33-ba3d-d41e3f056130",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "98737311-26dc-4849-8903-5de0b40e5865"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab1779c-e725-4b63-8c65-d978352821f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d5473e7b-90ba-412b-a681-c39dfd8298a8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d9e1789-1783-4cf6-a81e-349c8449b8fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0483e5d7-fd86-428a-af8b-f54bac240dff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dff45945-f5a2-45be-8070-c3de5339f805",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "69b4327a-0154-4adf-bb21-8353eddb6c85"
                    }
                  }
                ]
              },
              {
                "id": "ab833653-f1df-47f1-9f52-1c4686053204",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "fd5a997b-a870-4c1d-9f48-bb5e4753191b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b39fbd1-f527-4e82-b9cf-4e4ac7d1bf82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "12d96ba9-da28-4259-b1ba-773275998dde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea40305a-8cb6-4abd-8669-c246edbce223",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a4d2b50-2011-4abf-acec-ec853d3b6ab9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4c65d12a-8c15-4fad-8afb-76cfbe3a50d6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "72bc57a3-4800-4f21-a8c5-9d27b0927f19",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c2118af-f0db-4bf8-a121-d10718d6aa9e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c9bd1ada-7617-492b-93c5-a69643633651"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce7ef73f-967f-426b-b977-8e0820151270",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "908d69cd-346e-47eb-9f50-96d92ca4c3e0"
                    }
                  }
                ]
              },
              {
                "id": "e06a21aa-3847-4b01-84ad-b0096ed313e9",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8913d72-55d2-44fa-beac-1cf145193c86",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c56954f4-2cc2-4cde-adbb-c66474074811"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "64acca85-018a-453d-bcfe-2bcf0e5312cc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e14ab3b7-5a6c-43fd-b663-b46725e9dda2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "20d3dbe1-9ce7-4a1c-80c1-546f3562ccab",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "32918ad3-0e81-47ba-a2d7-ca2be96f0857"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0bd45578-77f7-4379-811e-df56445d7da1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6835e971-c150-4a2c-8545-91f27aa1a55c"
            }
          }
        ]
      },
      {
        "id": "5b43577c-eb69-487b-a1b3-9c950accc866",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1330e3cc-4164-4866-b4bf-e59c350f385e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5109c19b-272a-4a77-8c75-62356a805955",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3667026d-6825-4cd5-bcd1-ca6a2d96684a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "994a6f79-fc6b-4baf-9f3a-0a738f33ba3e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0f856662-58a1-4fd2-bc31-54a355eab76c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e23ccfa-81d6-4486-9848-15fdcc583289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cec96239-f290-487b-9e76-05804b678f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b581a01-0569-4657-9044-8f3d61d013b8",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37dbd154-befa-4a48-b34f-d3502c7b0d0e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "392ad569-08b3-428b-8c9e-79efcc7ce79a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32555850-e6ea-4bca-b58e-5e326f122e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cf7792ab-c264-4642-b939-eef38441f65d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0321a574-0894-4b50-abf6-e9b6740cddf7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "03e036d7-7d8b-4247-b6ba-c285cf99fb0d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f8722e4-a9a4-4497-9725-1192e6d7643e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88461fdd-dd8e-48a3-9253-ea7b2b25245c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "23bc1d49-23a3-491f-bfde-c0ae415cfdbc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8405c1ff-06ad-45c1-8c1a-080e962038e4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fe888243-409f-4973-a9c9-2ea30d05ac85",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bddc01de-cf05-4aba-b22e-b19d62ca5632"
            }
          }
        ]
      },
      {
        "id": "19a74d17-d945-4476-a12e-8b70f21745c9",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6f0bd57a-e9f6-4b6f-b22d-17e97a996b52",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b5b0da38-9638-45d3-b738-72438fe72d51",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ba1bb844-c336-4d5b-badd-f76c1f351eba",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf1aa65-816f-4674-a13e-5eefdf338e82",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8b8061f-8c22-4333-8af5-fddb33f3018d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "892daf1a-c073-48e9-bfba-1d2a3455ab52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a9011410-63fa-47ff-bfc7-efb0cc1f6c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7601f083-3c7f-4d08-b510-b49dd59855c1",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd14fd0-a786-4086-9f29-d2a2cd864587",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e595adc4-c846-47fe-b7a2-071a5fd1314e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa5edf0-6398-436d-a47a-1b2cb518e2d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dfcd96e9-89e4-4a7d-8818-2eaa6901e8c4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4d360dd-0e30-4f43-a79c-f48653c25364",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b3c50567-fef5-4282-8ee7-ba4114ce1c7f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "88814e8e-9632-4a48-b407-90c7968c94a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40e170ab-ed08-41df-be5a-6c0f4324fb33"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aa6f28ee-598e-45a9-9954-530c8a93405a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a68f60a3-a073-4ecb-a4c7-a3a84da19f69"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fdd5e1ef-1f2f-425e-baf2-64c44626fe90",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f9b2c1c8-bbf2-4020-b796-762fbacb5e29"
            }
          }
        ]
      },
      {
        "id": "4e1eb94e-09d1-4c7a-99e3-60662cde8cd5",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "746155e0-5782-4cb5-8d45-957e176e5787",
            "name": "Negative Testing",
            "item": [
              {
                "id": "110b773b-887f-4e11-a468-b8aaa93ce2ea",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "48967efb-4f41-4cb2-a691-ba1f68625c9c",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f87fcfbb-f53a-47dc-ad4a-b96943d40d80",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14d0dd1f-8285-464a-94fd-2b1dc0d0a21d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46953138-a461-4d05-bc0e-08d8abf37dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b263eb50-3d59-4cd9-85b1-bb0d548fb38d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "254161eb-887c-409a-9109-93b349525e49",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "284f1426-467e-4486-b461-5e4246889af7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "64736030-0629-4eaf-bfcd-6931b5c15e28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe713275-885c-4460-b35e-349b73cfbea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8c4f8825-477d-44db-9e24-3208ede77311"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aedff860-c28a-4680-a04a-5e58b53cc523",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "623549ca-b391-4ffa-959b-30e9bbfec184"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ddaf1b76-f071-4715-9a91-a404ca6976ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96ed94c9-7969-4c19-8f32-ea1dab0bb1d9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bf86421e-cf8c-45a3-980a-b18aa457033a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "036ef841-dbda-4326-963e-92af689137a6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "48d32539-d2d3-4ff7-a1a2-fead2588bf20",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6edab11f-f1ac-4146-bff3-e9c45aab4604"
            }
          }
        ]
      },
      {
        "id": "8315108d-3808-435c-bb62-46ee52193e3a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eac7a537-8012-4790-acf7-fb3e286fe475",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "df3b554c-805f-4408-a5fd-2339391bb86c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "363f5d0c-23f3-445e-9eeb-4943536148b4",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7c225660-9237-4f1f-93a6-cebf39130708",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f687ad1b-ef71-46fe-bc27-ab20e9347342",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 71.1461538461539,
      "responseMin": 10,
      "responseMax": 243,
      "responseSd": 31.079083131328456,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1682815206774,
      "completed": 1682815237838
    },
    "executions": [
      {
        "id": "7727287a-235f-4d56-ad7c-01ea37736d6d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a8faf051-8c35-440e-83cf-900485b6b573",
          "httpRequestId": "362bd4e9-743b-4d75-b174-082797a4867a"
        },
        "item": {
          "id": "7727287a-235f-4d56-ad7c-01ea37736d6d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "8d4ef10c-7311-407a-97f1-338eebe62d71",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 0
        }
      },
      {
        "id": "378911b5-8ad9-4eac-b2f7-cbbbad2ba618",
        "cursor": {
          "ref": "c76ace68-c163-4af1-9ccf-6c013e9b2cb2",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a6ec6c36-085f-458e-8156-5adcf0287752"
        },
        "item": {
          "id": "378911b5-8ad9-4eac-b2f7-cbbbad2ba618",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "cbaa3ed8-b63c-4b0e-868b-2b8657c29be3",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "345eac29-357e-46f6-a734-593c8b659866",
        "cursor": {
          "ref": "963f431a-cac0-4a9e-bff8-c80839b76ea8",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "89d006fa-0d58-401d-a3fe-41c3fb316f0f"
        },
        "item": {
          "id": "345eac29-357e-46f6-a734-593c8b659866",
          "name": "did_json"
        },
        "response": {
          "id": "75766a95-c9cd-4345-b15a-19178a89bf78",
          "status": "OK",
          "code": 200,
          "responseTime": 237,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "716c9c14-2919-4e4c-b16e-c97c1155ff76",
        "cursor": {
          "ref": "556a446b-1c9e-4a38-82c5-fee374abc96d",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "62989ca0-b83f-42a0-9236-dabef3aa306a"
        },
        "item": {
          "id": "716c9c14-2919-4e4c-b16e-c97c1155ff76",
          "name": "did:invalid"
        },
        "response": {
          "id": "8d5531ad-e42f-4236-b4bc-30c7b894e13a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "716c9c14-2919-4e4c-b16e-c97c1155ff76",
        "cursor": {
          "ref": "556a446b-1c9e-4a38-82c5-fee374abc96d",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "62989ca0-b83f-42a0-9236-dabef3aa306a"
        },
        "item": {
          "id": "716c9c14-2919-4e4c-b16e-c97c1155ff76",
          "name": "did:invalid"
        },
        "response": {
          "id": "8d5531ad-e42f-4236-b4bc-30c7b894e13a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c074aa56-1372-432a-aea7-4bc5f810e373",
        "cursor": {
          "ref": "72d9b421-bd59-4b66-9853-df646bf5b7fa",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "4f3ce515-50a9-48c3-b0e9-b9ec57affa18"
        },
        "item": {
          "id": "c074aa56-1372-432a-aea7-4bc5f810e373",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9ad9acb5-7bdd-4a55-8de5-83cfd564a6ee",
          "status": "Not Found",
          "code": 404,
          "responseTime": 183,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d0995e9-2f3f-4a2a-84aa-ed0acef6308c",
        "cursor": {
          "ref": "cb38e3ba-c990-4ad7-80ec-04953e5b6090",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "8da8669f-290a-4dc6-ad41-fc1d9d24f2c8"
        },
        "item": {
          "id": "9d0995e9-2f3f-4a2a-84aa-ed0acef6308c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1cc8cafb-0f2d-4903-85b7-be93985a649a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a112cbf4-8db1-4294-82ec-6e813400ce69",
        "cursor": {
          "ref": "338c92b1-0487-4e82-90bd-399398b3d887",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "724dea9f-ed47-4b40-ab82-19ed8ba10d65"
        },
        "item": {
          "id": "a112cbf4-8db1-4294-82ec-6e813400ce69",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "dbae9219-8adf-45da-bf46-15d81c2c37c1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d74acd3e-97ab-4b69-9879-bc7a357627ac",
        "cursor": {
          "ref": "84a3df06-cc18-478f-bb41-874fb8157f2f",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8d098b7e-70a7-4e19-a07b-cbf802bffee4"
        },
        "item": {
          "id": "d74acd3e-97ab-4b69-9879-bc7a357627ac",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "0975821d-d0c9-4248-892e-7bd2f3d7465a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 65,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d74acd3e-97ab-4b69-9879-bc7a357627ac",
        "cursor": {
          "ref": "84a3df06-cc18-478f-bb41-874fb8157f2f",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8d098b7e-70a7-4e19-a07b-cbf802bffee4"
        },
        "item": {
          "id": "d74acd3e-97ab-4b69-9879-bc7a357627ac",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "0975821d-d0c9-4248-892e-7bd2f3d7465a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 65,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e91ec4-b866-490a-a2ec-15e8c25c3f55",
        "cursor": {
          "ref": "0044854d-1ce6-4f66-94c0-f8bd60fa167e",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "35c8866d-588c-4619-b9a6-02ffefe50bc0"
        },
        "item": {
          "id": "95e91ec4-b866-490a-a2ec-15e8c25c3f55",
          "name": "identifiers"
        },
        "response": {
          "id": "042eb6ee-0b74-4922-9138-3aa018095f81",
          "status": "OK",
          "code": 200,
          "responseTime": 222,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c685fd7f-0247-4fd1-8394-071066bce18f",
        "cursor": {
          "ref": "1e378a3a-722a-4ddf-878e-8a7653387ff6",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5182e9ee-893c-4bc1-a6e3-1b4f1e0746bf"
        },
        "item": {
          "id": "c685fd7f-0247-4fd1-8394-071066bce18f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b749ab6f-34b3-4305-93e8-97bda5e736a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c685fd7f-0247-4fd1-8394-071066bce18f",
        "cursor": {
          "ref": "1e378a3a-722a-4ddf-878e-8a7653387ff6",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5182e9ee-893c-4bc1-a6e3-1b4f1e0746bf"
        },
        "item": {
          "id": "c685fd7f-0247-4fd1-8394-071066bce18f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b749ab6f-34b3-4305-93e8-97bda5e736a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc74cdc-dde1-4091-8fec-2964db6cfe42",
        "cursor": {
          "ref": "d42f3240-3e53-4f06-9ec5-7eb36c4ad1fe",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "94f564e6-2853-4c24-a783-551de3833713"
        },
        "item": {
          "id": "8fc74cdc-dde1-4091-8fec-2964db6cfe42",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "7b8e9d86-8826-499a-a072-5b3f395f21ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f43a53-e89b-41d2-95ea-dcafa3503236",
        "cursor": {
          "ref": "c3d5d3a9-8e50-47bc-9cc4-15285df1c692",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "81ce9330-f74c-480d-a57a-49d150a48520"
        },
        "item": {
          "id": "22f43a53-e89b-41d2-95ea-dcafa3503236",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5e11eca8-bc53-4bb1-94dc-8e10f3f273b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c308d5-80e0-4073-924c-bbc9230ce2e3",
        "cursor": {
          "ref": "9c907d18-3141-4e57-a8ac-49e94ee5f321",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "941d0464-0023-4a2e-867d-9f0544bd038e"
        },
        "item": {
          "id": "24c308d5-80e0-4073-924c-bbc9230ce2e3",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "3e5ccc2c-069f-4c79-ae96-d53d0eb644d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd4d2ef7-44d6-438d-9c0d-a55d000aa45d",
        "cursor": {
          "ref": "fee40cfc-58f2-4224-9ef3-dfdc09682d26",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "0c7c446d-20b8-4415-b6d4-1386f04f48c7"
        },
        "item": {
          "id": "bd4d2ef7-44d6-438d-9c0d-a55d000aa45d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "2275360c-b084-4186-bc1a-3abb3a708810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "487f7f02-98f2-433f-bd61-e8a39f8dbedf",
        "cursor": {
          "ref": "db0b1c42-12ed-4ca1-9022-9ad110f32f9d",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e0150c4c-2a9f-439d-99bc-9a6d7a61d360"
        },
        "item": {
          "id": "487f7f02-98f2-433f-bd61-e8a39f8dbedf",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "05f75c48-c1d4-4ef7-882a-d262886aeee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59bc185b-a710-42a8-a53a-0bd2a5816ee9",
        "cursor": {
          "ref": "17c0b831-2ee7-4e9e-9e55-3b0831a549ab",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4c79a6f8-57df-4b7a-acb4-41909a74a2d1"
        },
        "item": {
          "id": "59bc185b-a710-42a8-a53a-0bd2a5816ee9",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8661723b-04d6-4cee-a8f7-1149f81627fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d58afc-49a0-4b50-bc38-ebdac10a4659",
        "cursor": {
          "ref": "6dab8120-7fcf-491f-a1c5-4feb0d136c3e",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d3249452-4621-403b-a0ca-2ed754469462"
        },
        "item": {
          "id": "a7d58afc-49a0-4b50-bc38-ebdac10a4659",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "84d0390a-4d9a-4fd8-b16a-44859a2a5f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33259e9-08f4-484d-bb9b-8997f434a080",
        "cursor": {
          "ref": "a4e019a9-466c-4a1c-8143-9a69419078a1",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "a60d0fc8-269f-4fd5-979f-f41857e97f68"
        },
        "item": {
          "id": "c33259e9-08f4-484d-bb9b-8997f434a080",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a30f323d-4715-4708-b2a5-399f086e98a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567f1d9d-eb06-4a03-9187-c8e6d54ff7ff",
        "cursor": {
          "ref": "b7b4b478-b471-4bd3-b451-275d0ee9e686",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "9dabea32-59b2-4b4c-b119-5c5037ccdfbf"
        },
        "item": {
          "id": "567f1d9d-eb06-4a03-9187-c8e6d54ff7ff",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "94b68358-1253-42e4-83e9-5bdea1085949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2472d59-e080-49a0-b48e-aa755e2e0d9f",
        "cursor": {
          "ref": "1b692897-02a1-4096-a881-335df1c6d792",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e7d3f10f-db77-4eb5-b843-cc30b2e8c871"
        },
        "item": {
          "id": "f2472d59-e080-49a0-b48e-aa755e2e0d9f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "16151396-5285-49de-b63e-7d74e262fc71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b45098-dbd4-4754-bab5-ce1108afaba7",
        "cursor": {
          "ref": "36a3e432-8dc7-4bb8-a961-0af02b23b257",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "66024800-1853-455c-8226-5bae1d5d327a"
        },
        "item": {
          "id": "10b45098-dbd4-4754-bab5-ce1108afaba7",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b4b0826e-2166-472b-87af-d616d19a5d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b70823ce-4b51-408b-a2ae-64b86a1f428b",
        "cursor": {
          "ref": "a6382a0d-4b25-4a16-9663-da5e5100de56",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "aeb039b4-9046-4f02-8638-f5a804534846"
        },
        "item": {
          "id": "b70823ce-4b51-408b-a2ae-64b86a1f428b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f8a4ebeb-6427-441c-ba2c-2e69a7765a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd2ad61-d42b-4123-861b-ab255d6685e4",
        "cursor": {
          "ref": "7fd71d79-3663-418f-b451-a40c300b0041",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a8e585f2-ca89-4d28-8441-162f5d0bbbf3"
        },
        "item": {
          "id": "7bd2ad61-d42b-4123-861b-ab255d6685e4",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "83da8fdd-0924-4038-a2af-0fd6a0090dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1648d7b9-6433-4d19-b0f4-13c40096d7b0",
        "cursor": {
          "ref": "29b76401-6a47-48be-9f4f-1735124a9c43",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "688a8bd0-b9b5-40c8-8a8c-e26641989929"
        },
        "item": {
          "id": "1648d7b9-6433-4d19-b0f4-13c40096d7b0",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "36b78ae3-592b-4598-8c76-fc64777180da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "144171a8-26b3-4f66-91f3-0fa2745f43e2",
        "cursor": {
          "ref": "0394d9f6-65f1-4f19-beed-604d1b152e96",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "2ae908aa-b68b-4c69-907c-2f3978d55d6d"
        },
        "item": {
          "id": "144171a8-26b3-4f66-91f3-0fa2745f43e2",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "07de85ac-3a60-4afa-a23b-da5b030fff6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c4cd384-8dc7-4ab3-91c6-e57a28ab9b66",
        "cursor": {
          "ref": "f639e1af-54b7-428b-9e4e-888b353a598e",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f7d0b566-6b41-47f7-bcec-98a5e7376bcc"
        },
        "item": {
          "id": "5c4cd384-8dc7-4ab3-91c6-e57a28ab9b66",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "95f7e35e-8c38-4aed-a0e9-f7e7430f1010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6dd6d06-ae1f-4507-837a-be79b6f2a817",
        "cursor": {
          "ref": "7d080d5f-ce41-4fde-a27e-7b4e2d81d2c8",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b39cf33f-65f7-45b6-9512-0f28f4511728"
        },
        "item": {
          "id": "c6dd6d06-ae1f-4507-837a-be79b6f2a817",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "562ea998-f0f0-4565-b324-b33561cc6958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af15f96-4941-4c85-8a36-154a94211acc",
        "cursor": {
          "ref": "6e1595c4-99a3-4a63-8bb8-fbad87bf11f2",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "270d3ec6-01cb-400e-ad81-18d272d6ac6a"
        },
        "item": {
          "id": "8af15f96-4941-4c85-8a36-154a94211acc",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "0631cfed-158d-420c-9c93-f4ae7203c450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a8f5a96-c18e-4aad-a90c-2a22cc485813",
        "cursor": {
          "ref": "18c6db08-a9a9-4cbf-8f4e-93cb87524761",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e9aa0dc4-dc98-4ee3-8907-ef657a782f00"
        },
        "item": {
          "id": "8a8f5a96-c18e-4aad-a90c-2a22cc485813",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6e207ef9-8a13-41a6-8abe-1c730a06b486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8abefc0-974e-4e7d-b3af-3e41512fb59b",
        "cursor": {
          "ref": "bc012905-7933-4173-8355-8d1fafd197ee",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "95e0189d-8043-4271-8795-ee768c57332f"
        },
        "item": {
          "id": "b8abefc0-974e-4e7d-b3af-3e41512fb59b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7b0965fd-7653-44b4-aff2-ee0c9540a554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1bcbe06-4387-45d2-9dc4-ad2a19bb2d6c",
        "cursor": {
          "ref": "11caaa8e-4682-4575-9a2c-9300e50f701e",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "294fc9b2-0c71-4faa-8b09-629b257ffebd"
        },
        "item": {
          "id": "a1bcbe06-4387-45d2-9dc4-ad2a19bb2d6c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "64c14e6a-0b8b-44ba-90a9-48a8df66c058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91bce112-7d25-4430-a02d-9617e7dcb971",
        "cursor": {
          "ref": "7965a3b5-f034-49e8-9370-a6f593628e96",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "dca0a934-f626-4377-9471-d1f4147ddb56"
        },
        "item": {
          "id": "91bce112-7d25-4430-a02d-9617e7dcb971",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "cc1b63fa-8c96-4e59-b6b8-d81cb13669b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6378d968-e54e-4893-b788-19c83f8d86e6",
        "cursor": {
          "ref": "ab72c011-36f7-4bd2-8bf3-080b2577583b",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "afa10afb-ccf8-4a25-bcdf-cf7bcc4ba84d"
        },
        "item": {
          "id": "6378d968-e54e-4893-b788-19c83f8d86e6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "34bafd52-053b-4f1a-9795-df20cf715dab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a52a468-dd79-4007-8ce5-ce5b1632d481",
        "cursor": {
          "ref": "26a565c7-802d-41af-be55-459ab35ae5e5",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d5e1b9ee-1471-42f0-a813-9e44d7ef2a70"
        },
        "item": {
          "id": "3a52a468-dd79-4007-8ce5-ce5b1632d481",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c4204e79-b22f-49a1-bc4f-5571f4a6c8a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd6a402-c729-4ed4-8e6a-6ddee4ea8010",
        "cursor": {
          "ref": "4b6cd77c-f30c-41bd-bef7-faeaab6176bb",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "fcacc418-1895-4d12-b406-a5750d456c72"
        },
        "item": {
          "id": "bfd6a402-c729-4ed4-8e6a-6ddee4ea8010",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f6e9c7b3-dc4f-4e6b-9c94-370007656d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40062e7b-3c99-4fb8-8768-4ba322106dbc",
        "cursor": {
          "ref": "e8beedb3-9304-4c47-96c1-959e82b108a9",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "fd724bec-a29f-4fab-89f1-6f201877246b"
        },
        "item": {
          "id": "40062e7b-3c99-4fb8-8768-4ba322106dbc",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d0da3ceb-4e9e-45e9-bac2-c32447e51dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b891c994-0b3d-470d-91b4-78d3dbf35b0c",
        "cursor": {
          "ref": "1f474230-9b31-41fb-a797-afee64f63ca8",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6b8429e6-bb43-4b7f-bc05-07f7692b6d5f"
        },
        "item": {
          "id": "b891c994-0b3d-470d-91b4-78d3dbf35b0c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b2d27ae4-7095-49e8-aba0-bc15bde5f97c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebdfe045-dbd7-42c6-989b-86a46f66ffbf",
        "cursor": {
          "ref": "dfed4ae1-ec3a-49b0-bd50-a6169c9a2472",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "fc8e98ce-4926-48d2-b8e2-ef88d425ecff"
        },
        "item": {
          "id": "ebdfe045-dbd7-42c6-989b-86a46f66ffbf",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c39ed828-a29f-4243-8496-2eb78ccb17e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a527cc7a-2da7-4d20-82f7-ece01f661bf4",
        "cursor": {
          "ref": "df1d386f-827d-4765-986a-2faf36fd9446",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e4339043-3644-41cc-bf82-4f54b942b08d"
        },
        "item": {
          "id": "a527cc7a-2da7-4d20-82f7-ece01f661bf4",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "99c92d64-cfb8-437e-8b76-66addfc304d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b25126bb-cfd4-468f-ac32-304a09e794b0",
        "cursor": {
          "ref": "1dc5c43e-b8b9-41aa-942e-ce26cc4b08c7",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "2e30870c-10d4-4b06-845d-07f9e781004c"
        },
        "item": {
          "id": "b25126bb-cfd4-468f-ac32-304a09e794b0",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "73a7daeb-4803-44f5-8742-7ec0def47103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ded7874-ce4a-40b0-887a-08708ac09c96",
        "cursor": {
          "ref": "b8073d80-b9f1-4dff-83bf-f5bdc2f05a24",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "e2f1108b-ce68-4a3c-9756-8957ecf91d15"
        },
        "item": {
          "id": "1ded7874-ce4a-40b0-887a-08708ac09c96",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "80a349a8-d2a4-40c6-923c-c4c14d1a7533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3207aa80-d15b-4778-8d89-e5efae666347",
        "cursor": {
          "ref": "334f2261-6cb2-46e0-9711-01db22ee7419",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "294cd9be-3854-4dc6-bbfe-a71cf14205f9"
        },
        "item": {
          "id": "3207aa80-d15b-4778-8d89-e5efae666347",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e99a185d-75b3-4282-bb4b-1bc4babf1c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e89b9708-35ae-4947-bce3-6ca25703f91c",
        "cursor": {
          "ref": "3771f8d2-7dbe-45fe-af12-a6dd73a7109f",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "148be8c0-6b86-4bf0-bbd7-c7787af44cab"
        },
        "item": {
          "id": "e89b9708-35ae-4947-bce3-6ca25703f91c",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "da323e96-5512-4d9e-bf3e-28518688adcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a5e1a3-7e56-47c0-9373-c71773debe7b",
        "cursor": {
          "ref": "9dea81a7-617e-4dc3-897e-5570782bce00",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "5a289821-daae-4320-b652-4002c8bf18da"
        },
        "item": {
          "id": "a8a5e1a3-7e56-47c0-9373-c71773debe7b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9cfabeca-40ed-418f-af64-9b2533802044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09900bc0-51b0-4d06-8263-989a7486ac86",
        "cursor": {
          "ref": "ec71c21e-e7ca-48b4-b27b-5fe1b03c7543",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "81f09cca-758e-4336-9192-b098abf8c262"
        },
        "item": {
          "id": "09900bc0-51b0-4d06-8263-989a7486ac86",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "3ab26264-2fee-41a1-9f7c-0f5a3d1ee1d6",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 72,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba633aed-1cba-4688-bc75-82d4a54086ca",
        "cursor": {
          "ref": "69ec86a2-d11f-4429-b231-b5ec490f0a17",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "44297ee0-94ce-4918-810c-a31084f2368c"
        },
        "item": {
          "id": "ba633aed-1cba-4688-bc75-82d4a54086ca",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "01fb8d6c-7c1d-4c9b-b712-4bbbc43f433c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7a86c3-3f28-44ed-ac40-0bb4e7cca346",
        "cursor": {
          "ref": "436bb3a8-66ee-4960-bc0e-70c6cbfda9b0",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "875edfd0-3a69-4297-9f73-4430887a5f88"
        },
        "item": {
          "id": "ab7a86c3-3f28-44ed-ac40-0bb4e7cca346",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e0cc09c8-6eba-4ece-bc25-e12a51788131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd2e496-9ba5-49ae-865b-f38bec6ccf0e",
        "cursor": {
          "ref": "694941cb-e5f8-404b-9c21-53fda656c6a6",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "eefd165e-e6f9-4ba0-b569-b001976ae5c8"
        },
        "item": {
          "id": "8dd2e496-9ba5-49ae-865b-f38bec6ccf0e",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "bf737009-63d0-40ed-90de-a14ac87c7852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd2ddbde-0c30-4f35-b271-48b76e7bcdce",
        "cursor": {
          "ref": "73debca5-ecda-475a-b5b3-3964851a432c",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3d5c74f6-adf4-4f2a-a9c3-afe31ade92a9"
        },
        "item": {
          "id": "dd2ddbde-0c30-4f35-b271-48b76e7bcdce",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "bf17102b-f162-414a-a3b5-d85e8bc78011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98659eb2-adcb-424e-8f40-ca3c88f9201a",
        "cursor": {
          "ref": "a487187b-a204-43f6-aa7f-c6dbcb30406b",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "9bbac356-31a1-4b90-8003-47e77e975702"
        },
        "item": {
          "id": "98659eb2-adcb-424e-8f40-ca3c88f9201a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "45d3c80f-1f22-4c6c-bacb-c19ab09bdd8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb7a600-6227-4a6a-a34b-aa98f71261ec",
        "cursor": {
          "ref": "26706cf1-de88-4e28-b1e8-a8700ca69cf9",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b102a744-07e9-418c-91d4-c9d6ef99bdad"
        },
        "item": {
          "id": "4eb7a600-6227-4a6a-a34b-aa98f71261ec",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0954576e-7c50-402e-aba9-7ec5197f4818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "928c2243-d96b-4f34-b8e5-900d5a0f3c0a",
        "cursor": {
          "ref": "3ae7ef46-6014-4e71-9aa8-9a2a9023063e",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a2c3c203-e095-4340-bf3e-e2506039290e"
        },
        "item": {
          "id": "928c2243-d96b-4f34-b8e5-900d5a0f3c0a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "5cf53f43-6cfe-40ed-b545-5e4c4521ba54",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 73,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33abdd3a-9e58-4dea-aa28-d0d44fadd4d3",
        "cursor": {
          "ref": "b6408b84-569c-4d23-9527-a38db54444b7",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "5435646d-1545-4e1a-88c3-3d132f1922c9"
        },
        "item": {
          "id": "33abdd3a-9e58-4dea-aa28-d0d44fadd4d3",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "44ee818b-89e6-4627-bbf4-e27544fc13c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6234979f-c39f-4285-bc89-f1ffdf200f27",
        "cursor": {
          "ref": "ab65e191-fbd9-4592-9b27-49908aed465e",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "bea84dba-6f5b-4722-a814-87888ffdd9e6"
        },
        "item": {
          "id": "6234979f-c39f-4285-bc89-f1ffdf200f27",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ecb62679-b768-452f-9e7c-d51a62aaf9fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13922349-7a29-4db8-9529-8134b7ff7c71",
        "cursor": {
          "ref": "4d32262b-82f4-4c5b-a1ca-47706e4648f7",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "76ed05f6-88f0-42d1-bdfd-1f0d1d615580"
        },
        "item": {
          "id": "13922349-7a29-4db8-9529-8134b7ff7c71",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "bcdfbdb4-f6f8-46c1-b36f-419a23da6294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f76147ae-9a05-48d2-b4c0-7fda8b3ed7a2",
        "cursor": {
          "ref": "70138d73-38f0-4ade-b625-3133f1e670be",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "5d280d91-f8d5-40f9-b53e-1dd3c59fdf4a"
        },
        "item": {
          "id": "f76147ae-9a05-48d2-b4c0-7fda8b3ed7a2",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "1b5358ba-0c76-4548-9670-97d76a3f51dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3898b29-86df-43da-9f2a-01f3a479b0d2",
        "cursor": {
          "ref": "fbb7690d-7b32-4355-a580-552963890456",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "befc30dd-a67c-4e8a-9437-6495cfac706a"
        },
        "item": {
          "id": "c3898b29-86df-43da-9f2a-01f3a479b0d2",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a46399cc-5363-4459-a233-625ce5be657d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2256fcc-3a1b-4f74-b5f3-36c2004ffa8e",
        "cursor": {
          "ref": "9fab5511-c633-46de-8fd2-1f705d7000ab",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d8a5de5d-9fa7-4a38-b90f-e3db420b176b"
        },
        "item": {
          "id": "d2256fcc-3a1b-4f74-b5f3-36c2004ffa8e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b217768f-a6aa-4222-bff7-e8feddd5e9e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a18dc238-f10a-4f9c-856e-17fb7aebcfc8",
        "cursor": {
          "ref": "5ab1ca3a-42d0-4ce9-ad34-e7e250b24aee",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "81747658-0f88-4bf1-b5a3-a7e43249b37d"
        },
        "item": {
          "id": "a18dc238-f10a-4f9c-856e-17fb7aebcfc8",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b1859ffc-21de-4ce6-89e0-304951dad9d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7813154-7856-4e86-bf6e-931dbf394f96",
        "cursor": {
          "ref": "13ad84df-5725-4181-962f-1539823c4494",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b04dd2b2-b14d-4ee2-bc62-45e9417f9b1c"
        },
        "item": {
          "id": "c7813154-7856-4e86-bf6e-931dbf394f96",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "560d60c4-ce7e-41ec-bf5a-a17b2da3de4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7816a9fd-fac9-43d8-b2f3-565b6e68292f",
        "cursor": {
          "ref": "864589a1-6500-4956-b754-d5f48b75d755",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "724096e0-0fe9-4f88-a981-f39161e77c40"
        },
        "item": {
          "id": "7816a9fd-fac9-43d8-b2f3-565b6e68292f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "305f37bb-6ba5-46ac-8a18-896a815e0dd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f487950-d31b-4c0d-a2a6-5672a9cb88c8",
        "cursor": {
          "ref": "094ac706-970c-44a1-9ef3-275ff2b9e54d",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6d999375-c6ea-4cdf-b9ce-68b94492d2c1"
        },
        "item": {
          "id": "7f487950-d31b-4c0d-a2a6-5672a9cb88c8",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "50467e18-0077-4931-8261-92f12ac0cdce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc99362-f027-4914-a095-a940cfa13493",
        "cursor": {
          "ref": "dec69250-1eab-42f7-933c-e046b52fc40f",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "1aa374da-ce80-4ac6-b684-a2ead4071654"
        },
        "item": {
          "id": "8bc99362-f027-4914-a095-a940cfa13493",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4209fdbd-34f8-413f-a640-2fc3a42e7efe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a26fae82-20a7-41d3-89f9-a58e859a3354",
        "cursor": {
          "ref": "5c943b1d-571c-4286-8a1d-7afbe404ac94",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "37bf06ec-a26b-4226-8484-f126196d5d27"
        },
        "item": {
          "id": "a26fae82-20a7-41d3-89f9-a58e859a3354",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "4fe68f02-b53e-4258-951c-416aa36e79dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9001d240-7781-4eb7-9cfc-db095a6f7692",
        "cursor": {
          "ref": "71b51284-02bb-45c2-ad33-824de750024d",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "90d5c8c4-9625-4db2-97a0-c22866d3d725"
        },
        "item": {
          "id": "9001d240-7781-4eb7-9cfc-db095a6f7692",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "684e684e-0f61-4438-885b-caa55f3f555a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e0e468-e4d6-4275-8050-73546ab30601",
        "cursor": {
          "ref": "ef9a65cf-2b1a-4bd3-93e0-77db6033d11d",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "39b8ff07-9140-44a6-8110-3c47e3e1a9ce"
        },
        "item": {
          "id": "b9e0e468-e4d6-4275-8050-73546ab30601",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "fa8fbf4e-a56f-4f41-a842-f18d620f2d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec9c740-8fcc-431f-a307-79e8474e4414",
        "cursor": {
          "ref": "1c10d72d-9677-47c6-98b7-dbd541886a35",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e7f0549c-c9ff-4232-82ed-d0b6680da696"
        },
        "item": {
          "id": "fec9c740-8fcc-431f-a307-79e8474e4414",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "dda5c8c1-cc4f-4fe8-bbdf-03c68d523e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba48f36a-bc5a-4864-8c9b-25df9534f402",
        "cursor": {
          "ref": "65a63037-4b4c-4e2c-bfc7-add87156341c",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "4af73751-1879-4249-9c87-9a6febf1e02e"
        },
        "item": {
          "id": "ba48f36a-bc5a-4864-8c9b-25df9534f402",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "88fc72a5-5e22-465c-b082-8b20e24664ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b9c806a-0743-4189-ac25-36e0348efbe8",
        "cursor": {
          "ref": "6bd57d33-eb7e-4708-b12d-022f4435c1eb",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2be6ee13-7f9a-4a90-9f39-b49aa157b974"
        },
        "item": {
          "id": "1b9c806a-0743-4189-ac25-36e0348efbe8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "34a5f40b-57cf-447f-9f41-5b0141258df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "709b80ab-4ae8-4137-9332-2c5f0e9c0a66",
        "cursor": {
          "ref": "e11072b6-a693-4dda-bde9-50caa2e6ca5c",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3a4fe0b8-76f6-41d2-8f00-c794d76122b5"
        },
        "item": {
          "id": "709b80ab-4ae8-4137-9332-2c5f0e9c0a66",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "30eddc84-5a71-4cf3-99d7-4581fe0df95e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9edcc66f-9b8a-42da-ad5c-67db79265e9a",
        "cursor": {
          "ref": "22c3d4c8-b7d1-49b1-8fb9-bfeab6c5dc21",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "fabd2963-a4b6-43aa-80ab-04bb2658e80f"
        },
        "item": {
          "id": "9edcc66f-9b8a-42da-ad5c-67db79265e9a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8be3b5fd-1800-4459-9a65-e1059e6b67ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f7286ad-a14d-4952-a03c-58190da36a50",
        "cursor": {
          "ref": "7e6c0202-ec21-478f-9614-401a240772cf",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "544fa643-7458-495b-b485-8fd2043b43cc"
        },
        "item": {
          "id": "1f7286ad-a14d-4952-a03c-58190da36a50",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "4f4680e1-ec61-4964-a704-51852c8528a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34938be8-0be2-4a62-bfd2-3124fdc5d52a",
        "cursor": {
          "ref": "60e1279c-632e-4d6f-9b42-79af00722ead",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "89c6153e-8018-4b03-9313-117acf7214d7"
        },
        "item": {
          "id": "34938be8-0be2-4a62-bfd2-3124fdc5d52a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9d037b14-5ccc-4624-927f-d36da58b5315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c99f8b-f930-4c38-b50f-b1b41428850b",
        "cursor": {
          "ref": "2729afac-9fa3-4203-aaee-d6eef1e76e3f",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c0e83e88-54b9-48c0-9f71-fea2f0f1f92b"
        },
        "item": {
          "id": "92c99f8b-f930-4c38-b50f-b1b41428850b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "dd13413b-8721-4b6c-ba1b-0c27e7c3cfc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "100a09dd-7f4c-4456-90a0-cdd225f026de",
        "cursor": {
          "ref": "eba73aba-7cf2-443b-b780-a258e65174ee",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b4a3d854-4c4d-4180-aebd-357bd86a8bfc"
        },
        "item": {
          "id": "100a09dd-7f4c-4456-90a0-cdd225f026de",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "feb9539e-2c12-4716-8086-f0de374f091e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e1e312-1470-430c-9899-44b8d3fae8a5",
        "cursor": {
          "ref": "97654a61-31b4-421e-a756-b8110c84a59b",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "fcba207a-2c8d-4400-b072-cb0fd241479c"
        },
        "item": {
          "id": "70e1e312-1470-430c-9899-44b8d3fae8a5",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "75c6db40-2541-4b1c-8801-54bff1e6beac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291b919b-0612-4836-8441-7d639f99ad9d",
        "cursor": {
          "ref": "3f899f5d-a179-4d2f-a48f-a7f4ddfba118",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "445ed27d-0cd1-4adc-abfd-88855a3e7b1b"
        },
        "item": {
          "id": "291b919b-0612-4836-8441-7d639f99ad9d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4f7e9741-cedd-495d-b294-77918ce5cf0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d30a4e-f24a-4208-90f8-aaeacfa51535",
        "cursor": {
          "ref": "2870057d-b2d0-46ec-9d0a-e64d6a569b69",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "76fdf337-de4e-46d7-9ec1-e75835612ad2"
        },
        "item": {
          "id": "29d30a4e-f24a-4208-90f8-aaeacfa51535",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "6c0fcecd-03bf-4adf-95a3-a6a56fc3110c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b702e8-734c-4932-b7d2-57260890e704",
        "cursor": {
          "ref": "65d6a9b4-0485-48fb-838a-c6c9fb605490",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "beb8bf9d-26e2-4546-a1a9-f514af49d84f"
        },
        "item": {
          "id": "a7b702e8-734c-4932-b7d2-57260890e704",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "31295ec9-19d5-4ad3-b0eb-2a80f4624ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7248e37c-a1e2-4fc3-a0a4-faf77e3b8821",
        "cursor": {
          "ref": "a9749b56-ff28-4c97-9004-08e069f1882f",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4e0d332e-5d34-4c1a-9850-06bc15144dab"
        },
        "item": {
          "id": "7248e37c-a1e2-4fc3-a0a4-faf77e3b8821",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b2e33525-4436-46b0-abc3-d9dd8fc4d218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8056a9b5-f4ab-4ab1-8d4e-65c69dc57eeb",
        "cursor": {
          "ref": "fa736c23-386c-46e8-9021-0763c0ef4937",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "cf3c4628-ea51-4173-b7f0-e66765b05ca7"
        },
        "item": {
          "id": "8056a9b5-f4ab-4ab1-8d4e-65c69dc57eeb",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "3b5fd308-fad3-4f78-bdf6-62d7384bea38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f48996-8e49-405d-892b-ff565b8b3b36",
        "cursor": {
          "ref": "af9dc5e8-c21b-43eb-8ea4-83976f3b9bac",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "452f199a-782e-4274-9d1a-12353ff506db"
        },
        "item": {
          "id": "49f48996-8e49-405d-892b-ff565b8b3b36",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "22d8ecd3-46f3-4be2-bbae-f4514a91b674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa8a24f4-ada1-4596-9e11-1273a5830281",
        "cursor": {
          "ref": "7cdfb26b-77a1-4377-b4b0-6dece2037a18",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "5376579a-a7f2-49d7-9777-921f00a3357e"
        },
        "item": {
          "id": "fa8a24f4-ada1-4596-9e11-1273a5830281",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "1ba5e6ad-5478-421a-adbb-254036651f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6fcea7e-0631-4425-b51b-d504b61fb7b1",
        "cursor": {
          "ref": "f9827216-9fba-40a2-91d6-541b887a6f56",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "642900f7-1bed-4c64-8910-c46113daf2ad"
        },
        "item": {
          "id": "f6fcea7e-0631-4425-b51b-d504b61fb7b1",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3ef3a35b-b42d-4102-929c-7aec683fa0e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a21eb5-6a02-49d4-a8e9-ab187c53b471",
        "cursor": {
          "ref": "b1e8801c-8029-457a-a276-730b53f8693a",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b0873dcd-e3ca-4841-80a3-7c604517e39e"
        },
        "item": {
          "id": "d9a21eb5-6a02-49d4-a8e9-ab187c53b471",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a8270f50-f525-4a85-9451-56ec5523b781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e24aa5-2ff3-4fdf-bff8-3e6e2b12ae2b",
        "cursor": {
          "ref": "e443b079-09dc-45a4-a9fe-3b18ca765cc6",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "3bc6c46b-7b3c-4aec-8ac8-c34ef24c5bee"
        },
        "item": {
          "id": "b7e24aa5-2ff3-4fdf-bff8-3e6e2b12ae2b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "26b88639-373c-423d-9fd9-d98bad62af8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b08c16-474c-4bc0-b743-769c3663b61b",
        "cursor": {
          "ref": "27693f3c-adcf-47a3-9570-24ee1be1f740",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "355f888a-9c20-4d45-a9d8-fa4a6f59eae1"
        },
        "item": {
          "id": "c0b08c16-474c-4bc0-b743-769c3663b61b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "47ea9cee-fd89-457e-aa22-7d0560d31f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ac0580-95b7-46a0-aad3-c03353bb3ad2",
        "cursor": {
          "ref": "26f097da-a694-4bbb-90fb-fc5f6de7c27d",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "bbd7d0bd-4ed0-43d3-a288-b0e626970588"
        },
        "item": {
          "id": "44ac0580-95b7-46a0-aad3-c03353bb3ad2",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "8d0e5f0a-6c8d-45df-a483-ed19ab7ceffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d0b20cd-bc8a-4225-9c2c-541f16877703",
        "cursor": {
          "ref": "8ec67875-4380-408b-bae1-ad549881e9ad",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "81f8c8b9-8ce1-429f-a2c8-5988a9cf0490"
        },
        "item": {
          "id": "7d0b20cd-bc8a-4225-9c2c-541f16877703",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "3cde5c7f-8534-4301-ab1c-212120ca0dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc4da311-8cf9-4942-a242-1ef835e86ab4",
        "cursor": {
          "ref": "1e65337c-258c-4ec5-849f-fe098039a1bc",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "8d0a1259-068c-4404-9699-a92bdc3f8261"
        },
        "item": {
          "id": "fc4da311-8cf9-4942-a242-1ef835e86ab4",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "45f04bd3-308f-4dfa-97fe-0cf02fa0acfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76dc61bb-b144-4163-a855-4f7121a642f0",
        "cursor": {
          "ref": "5b91c83e-09fb-468c-b9f8-2206c9549c13",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "3d34d565-bc23-40c9-905e-ecb47ee72535"
        },
        "item": {
          "id": "76dc61bb-b144-4163-a855-4f7121a642f0",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "710352bf-4088-4d98-8dab-4cd6fa5142e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b6d57a-61e2-4520-9824-4753f874cd93",
        "cursor": {
          "ref": "f47b1d04-41dd-4fc7-b861-06c74f011741",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5f06193f-8766-4de3-91f3-4fdd313d0119"
        },
        "item": {
          "id": "72b6d57a-61e2-4520-9824-4753f874cd93",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "504e5a64-59c0-4b90-9dcd-2ea2d2776909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef30124d-ced3-41b8-9a07-6e9d395e3046",
        "cursor": {
          "ref": "94da4c5e-14c4-461f-8fd5-bb2fa75cee78",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d338de16-58c2-4e93-b8d0-e58ab11d2875"
        },
        "item": {
          "id": "ef30124d-ced3-41b8-9a07-6e9d395e3046",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "50fdb578-d4db-4f8d-8ac0-9781f95a68d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "773be0cb-edd1-469d-a6ad-8b607928f4f8",
        "cursor": {
          "ref": "fb50c75b-49ad-4cac-999a-40bd6fa1d30b",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "dd35508f-174c-48b5-9e83-904f96c416dd"
        },
        "item": {
          "id": "773be0cb-edd1-469d-a6ad-8b607928f4f8",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "aa655d54-e2fa-401d-895f-4161d0053f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f91ae3ff-212d-4d3f-ae53-033491370f00",
        "cursor": {
          "ref": "867c3d4f-bffb-442b-bb13-cdeac16fd3b3",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a8544211-3949-4b86-916f-8c247607453e"
        },
        "item": {
          "id": "f91ae3ff-212d-4d3f-ae53-033491370f00",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4c5d608e-ca02-4e32-82de-f44c3e5a8cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a8735fe-faa3-4505-8aad-8f4e8a3e5eb3",
        "cursor": {
          "ref": "5956c6dc-bf4f-4906-b3dc-2db07ddbe3e7",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "a803e46d-62dc-4659-b09a-dbd4efaf5ed5"
        },
        "item": {
          "id": "3a8735fe-faa3-4505-8aad-8f4e8a3e5eb3",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b9281253-5e57-4a3c-b7e1-66ed060dc50c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd5446e1-9b7f-452b-9d7d-8e8cee40e18e",
        "cursor": {
          "ref": "9c08ba3f-d9d5-4da8-9121-391b5882d938",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "6b613ffc-c2b8-4507-b598-adfee7bb42a5"
        },
        "item": {
          "id": "dd5446e1-9b7f-452b-9d7d-8e8cee40e18e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "4b5cb54a-dccc-4205-9c7d-649bbe52347e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c27c2a9-8057-434f-b192-186709d82cd2",
        "cursor": {
          "ref": "530a4adb-d013-41ac-80fc-9ed4d61502a9",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c2285318-38eb-48bd-9785-b603476498b2"
        },
        "item": {
          "id": "9c27c2a9-8057-434f-b192-186709d82cd2",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7ff442b0-6b1f-4f65-80c3-95ef11c79b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e47a7c73-e5f5-48ed-b19c-9a1e10912d0e",
        "cursor": {
          "ref": "d568e5f0-e70b-460b-8f74-e50a157c438a",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4fcbe626-2e22-4c58-8763-a29b3bfca384"
        },
        "item": {
          "id": "e47a7c73-e5f5-48ed-b19c-9a1e10912d0e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "99d020f1-ba5c-4dd1-a8ea-d940864ddaab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90274900-0085-4c9a-8652-d51e76a468c3",
        "cursor": {
          "ref": "9c453411-457b-4d7e-9d7c-02e62f9750cc",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "02b5952d-0c1f-4cb8-ad5f-59e3c53a0b9c"
        },
        "item": {
          "id": "90274900-0085-4c9a-8652-d51e76a468c3",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "1ab63b87-8904-4161-8fd2-9429b9b30341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ab2e06-8c7b-48d8-ba3e-41749059d789",
        "cursor": {
          "ref": "24e9159c-032c-47e9-95f0-c8c99e175d6c",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "3600b95c-cc14-4571-9693-0fdfb4e6f84a"
        },
        "item": {
          "id": "a6ab2e06-8c7b-48d8-ba3e-41749059d789",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3d4d5e79-4445-42b9-b312-fd80edb96737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e57a622f-65d9-4263-91f5-85a7cb79a5e0",
        "cursor": {
          "ref": "b805547f-80aa-4e26-b545-881c32092c96",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "cccc1ef2-6634-43d6-97ef-b5ff43a36720"
        },
        "item": {
          "id": "e57a622f-65d9-4263-91f5-85a7cb79a5e0",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "17daf356-2c22-4d26-bc3a-18534cbf77e3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5dac0f5-10f2-4888-8a79-ec6c57acc1cb",
        "cursor": {
          "ref": "63759e0e-5e9b-47f3-a87c-2ca992006e57",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0b14f235-0586-42de-a974-7e92a0a05f8c"
        },
        "item": {
          "id": "f5dac0f5-10f2-4888-8a79-ec6c57acc1cb",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "bc369350-3edd-4f7b-bdc1-c4749a7c9c4e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 230,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07eee0c-241d-4135-8e35-d40adea5d82f",
        "cursor": {
          "ref": "91553c25-fced-4aef-90f1-eb3f3ef5c6d8",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "dbe11c92-16a4-420f-8cd6-44aae61e8649"
        },
        "item": {
          "id": "e07eee0c-241d-4135-8e35-d40adea5d82f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "33e0f10f-2c39-4099-9c38-8ee9e0162779",
          "status": "Created",
          "code": 201,
          "responseTime": 239,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "352d7035-48ac-4017-a9c5-da78430766a3",
        "cursor": {
          "ref": "87c336ca-a661-4d9f-91e8-ab352c0f6df2",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e58c9adc-227e-4bef-9950-6a1f8fb5e010"
        },
        "item": {
          "id": "352d7035-48ac-4017-a9c5-da78430766a3",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "771a3036-ff5b-4058-b372-83102e3edb76",
          "status": "Created",
          "code": 201,
          "responseTime": 82,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec28b8dd-8468-4509-95b9-4b1a6cc9f12b",
        "cursor": {
          "ref": "73376002-7959-45e5-bf5e-ba2e3f638d94",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "3dd29586-3e43-43b5-9e81-3836faa7b470"
        },
        "item": {
          "id": "ec28b8dd-8468-4509-95b9-4b1a6cc9f12b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "2215dc6f-3bc9-47ad-80d1-4d512166260e",
          "status": "Created",
          "code": 201,
          "responseTime": 83,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b3d83af-6c89-447d-a460-16c12e9715ba",
        "cursor": {
          "ref": "eac8098e-ad0a-49e6-b9a1-82d438d3e836",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b7d3e28d-7d30-41e3-8e7f-204bdd541b06"
        },
        "item": {
          "id": "9b3d83af-6c89-447d-a460-16c12e9715ba",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "697b6a49-060b-4a4f-a4de-e5507dc5da4c",
          "status": "Created",
          "code": 201,
          "responseTime": 80,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "47003eed-1b9b-469d-9bd2-abe87644caf5",
        "cursor": {
          "ref": "5735b50a-2ccc-4703-893b-951d0a9a49d6",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7e27755e-d8a0-48aa-982a-207e157b2283"
        },
        "item": {
          "id": "47003eed-1b9b-469d-9bd2-abe87644caf5",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e9f26684-c237-4e87-be80-025e2fe903a6",
          "status": "Created",
          "code": 201,
          "responseTime": 81,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe4186e-33f8-4891-a016-2dd8d8055e3b",
        "cursor": {
          "ref": "167c257b-26a1-48a8-b88b-bb6e20843e04",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c54e3568-0483-4ba2-a3c9-da939e51b449"
        },
        "item": {
          "id": "bfe4186e-33f8-4891-a016-2dd8d8055e3b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8016b91e-f760-4c78-b35c-2bb0da4a8f35",
          "status": "Created",
          "code": 201,
          "responseTime": 81,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb4deac-acd5-4c86-aa4e-7966179b71f7",
        "cursor": {
          "ref": "0a50eaf2-4c6f-49a0-9af0-abeec7cc26a4",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "75f8a023-5e82-4713-8009-6e4d59a43492"
        },
        "item": {
          "id": "1eb4deac-acd5-4c86-aa4e-7966179b71f7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d218514b-e8e1-4934-92af-3184a8d6b2db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb4deac-acd5-4c86-aa4e-7966179b71f7",
        "cursor": {
          "ref": "0a50eaf2-4c6f-49a0-9af0-abeec7cc26a4",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "75f8a023-5e82-4713-8009-6e4d59a43492"
        },
        "item": {
          "id": "1eb4deac-acd5-4c86-aa4e-7966179b71f7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d218514b-e8e1-4934-92af-3184a8d6b2db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb93b77-4801-47b0-9ec3-f6dae7eb99a6",
        "cursor": {
          "ref": "5f47c4c8-69d3-430c-89f5-284dcf8b6f3d",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "901ebb16-d4f0-4c2f-8563-a58eb128979a"
        },
        "item": {
          "id": "fbb93b77-4801-47b0-9ec3-f6dae7eb99a6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "74cd1d7f-2551-49da-b41b-3e2003a37239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c5ffab-034e-40d7-b2c3-5c17bcad12e0",
        "cursor": {
          "ref": "692e9749-f1be-4dda-b180-562c93cbf856",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "92e46f04-5bd8-4bc9-a2bd-3b3a675879e8"
        },
        "item": {
          "id": "e9c5ffab-034e-40d7-b2c3-5c17bcad12e0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "fc528e32-8c73-4031-bb1f-19dff197e47b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e206e13-4c8f-482a-8d72-95c3cae6ef79",
        "cursor": {
          "ref": "1edb7660-f8fa-4beb-8c69-942049e1dea2",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "15be2da9-6d6d-4528-874e-97f00749eafc"
        },
        "item": {
          "id": "7e206e13-4c8f-482a-8d72-95c3cae6ef79",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ded75476-6241-409e-a9eb-802a611c1d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a37fa90e-3284-4747-a8e2-48f48be3e8e0",
        "cursor": {
          "ref": "8345de06-fe7a-43cb-b156-6625fb229549",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "04484952-ca52-4c75-a3ca-14935bafe6f3"
        },
        "item": {
          "id": "a37fa90e-3284-4747-a8e2-48f48be3e8e0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3406a33d-cb53-4760-b2be-7080879cefd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbae86d2-d387-44e6-92b9-5f817f062056",
        "cursor": {
          "ref": "6a68adb6-4899-4186-a959-3a5f5b226ffd",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "91a52fe1-1aa6-44fc-8718-dc7227fe89fc"
        },
        "item": {
          "id": "bbae86d2-d387-44e6-92b9-5f817f062056",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7d1901e7-af06-4101-9ed6-ff45176a3a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82590216-a74e-4c8d-bc5d-7ca7735059a2",
        "cursor": {
          "ref": "fa858a8f-5601-498d-a748-54811f1722ca",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "bb04375f-4fa0-4094-8af0-68c90eb469c1"
        },
        "item": {
          "id": "82590216-a74e-4c8d-bc5d-7ca7735059a2",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "949db6db-447c-4248-8e27-41a601bbfc5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d964d02-136e-4618-ad4a-d96811b00e38",
        "cursor": {
          "ref": "63996587-6be6-44ca-8c6d-e846a71cdf9d",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "74e229cb-d808-4764-8013-6433525e1f59"
        },
        "item": {
          "id": "5d964d02-136e-4618-ad4a-d96811b00e38",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7349f364-55bd-40e7-8f92-0642f25de414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41fc3788-38d7-40cb-aad0-81c0a02b6d6c",
        "cursor": {
          "ref": "ce049dee-7c4a-47d7-b4ed-a4a200611eed",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d3079943-8381-49f4-b170-476d312ba3b4"
        },
        "item": {
          "id": "41fc3788-38d7-40cb-aad0-81c0a02b6d6c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a0000c44-433d-4130-81db-e25e9d66a205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ddf06c7-3204-48a7-8ae5-b8a314c4252c",
        "cursor": {
          "ref": "c028b401-ac7e-46de-b9dc-1d3d1d77a431",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "eacee04d-dc54-4bab-8077-4346312df9c3"
        },
        "item": {
          "id": "2ddf06c7-3204-48a7-8ae5-b8a314c4252c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b059548a-6199-4b9b-8dd0-cd0fa077b4b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd474f74-b0ab-4c00-a48b-e781c43e5e3e",
        "cursor": {
          "ref": "f7a9bb0a-5b30-41be-b8e1-28e2a38427d3",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "cbe11dcd-ead3-4fab-a99b-5d7f259de5a6"
        },
        "item": {
          "id": "cd474f74-b0ab-4c00-a48b-e781c43e5e3e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "68528f76-ce83-419f-b7ec-fc48f3a43f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90efddd6-9ee4-4749-aa93-acfb9d30a230",
        "cursor": {
          "ref": "11e723b5-8cbf-4644-8b6d-18659f58018a",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "95794583-8271-4eb6-992b-45d30853ddce"
        },
        "item": {
          "id": "90efddd6-9ee4-4749-aa93-acfb9d30a230",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a17c1e8a-2694-4305-bd90-d41f76c07bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce5970be-053d-4e0c-8108-4ea593bc7fb5",
        "cursor": {
          "ref": "5667b044-1f7e-4af2-b540-7356c2271d2d",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "80df592d-8086-4c19-a0f1-ac8e10bcbcbc"
        },
        "item": {
          "id": "ce5970be-053d-4e0c-8108-4ea593bc7fb5",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "406147a5-7bb9-4865-bf0b-5f836ca57d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c132641a-3bfc-4822-9dad-0f000931fa84",
        "cursor": {
          "ref": "f6ce0a32-98a5-4b52-b6dd-e7ffa4872202",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "01949ddc-b1eb-4968-be03-bedd5445e80b"
        },
        "item": {
          "id": "c132641a-3bfc-4822-9dad-0f000931fa84",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "663b0338-e88a-4ac0-915b-805286d0aeac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e556d98-8bb3-4491-bae8-ae72e07eee40",
        "cursor": {
          "ref": "ec624b04-1202-47e4-af46-611a1a76e328",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "29ec6476-0d4c-4c99-8ecb-ae79a4ae6cc7"
        },
        "item": {
          "id": "5e556d98-8bb3-4491-bae8-ae72e07eee40",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6fa6788b-c581-490b-b8d2-4f381934fe3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b22d6bc-863d-4ba7-b347-729befc0aa1a",
        "cursor": {
          "ref": "05d1ad70-08b9-4a78-a8d8-f0a9b6c2959f",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "794eca5d-25c1-4b2b-bee3-e572ea5c6b15"
        },
        "item": {
          "id": "4b22d6bc-863d-4ba7-b347-729befc0aa1a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7214d982-593e-44bf-bf61-12f4c1abf859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ceb187f-4e69-468f-8ec7-fd64ff2c4d89",
        "cursor": {
          "ref": "d46eb57a-9cd6-472c-8784-a845441c830e",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f6327812-5d66-41b1-b595-5be00d004bd2"
        },
        "item": {
          "id": "8ceb187f-4e69-468f-8ec7-fd64ff2c4d89",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c8142517-1382-4abc-a03a-1a621fdd5c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11299ddb-db69-419a-ad3b-86c5db9de664",
        "cursor": {
          "ref": "52d60d52-5146-402e-a514-df96930fcfdb",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "fdbe3372-119f-4233-b3bc-06c4985c89c6"
        },
        "item": {
          "id": "11299ddb-db69-419a-ad3b-86c5db9de664",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "de2ef642-1cf1-4e39-9ea8-55251537fc97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f79ab0e5-8695-447a-a89b-f9a60b5246e0",
        "cursor": {
          "ref": "03fd46b1-e88c-4443-b21c-37680f03e02b",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "6aebc627-1dbe-461d-baca-c505bbde3dd8"
        },
        "item": {
          "id": "f79ab0e5-8695-447a-a89b-f9a60b5246e0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "dcf48012-1710-47c4-91e0-c62a081e62bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329ec947-03e8-4747-a97c-c2b252957bfa",
        "cursor": {
          "ref": "ff450008-a56a-4242-bbc4-87fe85452c64",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "05b01c72-9791-4296-b778-386d3d7d5779"
        },
        "item": {
          "id": "329ec947-03e8-4747-a97c-c2b252957bfa",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "01db64ae-f055-4ff8-b6c5-dce95c3e1639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d7346d-1c06-44f6-9a56-87dce4f8c998",
        "cursor": {
          "ref": "ed107647-fa60-49a2-9f2a-379b078f8ccc",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "46ef083b-2059-4f6d-b0da-bd04f09cf080"
        },
        "item": {
          "id": "78d7346d-1c06-44f6-9a56-87dce4f8c998",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "257af1ea-157c-452a-9074-5c4ef67e890d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8a84d0c-8103-4358-82a5-590f0d1f0774",
        "cursor": {
          "ref": "956ed8bb-dad0-4f19-a4c7-af2f1191c0af",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "02d2a49c-5b1f-4dfc-9f19-f8c501b44c2b"
        },
        "item": {
          "id": "d8a84d0c-8103-4358-82a5-590f0d1f0774",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4823ad2e-8316-478f-ab12-38afc9ff934e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81cd0751-6f21-423c-a2bf-738d2e8a2ad3",
        "cursor": {
          "ref": "ce8dd435-9cd1-4c60-ad17-5b5fd3e62e26",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "2240d464-4377-4cb7-ab85-74b7e389df60"
        },
        "item": {
          "id": "81cd0751-6f21-423c-a2bf-738d2e8a2ad3",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "83d1df36-7b0a-4367-90e4-5b48460ec749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d821e7-1c02-4216-bb6e-c50c0b3647e5",
        "cursor": {
          "ref": "45d431e1-3aa5-4473-95e9-4726c48f6301",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e1cc3167-af9f-436a-84cc-4da621d49388"
        },
        "item": {
          "id": "88d821e7-1c02-4216-bb6e-c50c0b3647e5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b404677f-1616-4aaa-877d-b6b889007547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "488b281f-4110-4faa-905c-419618cc18d2",
        "cursor": {
          "ref": "5bc59772-20cd-4d1f-a037-3fb53d364e5e",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "2cca0c4b-45e3-4b18-9cf8-7a59fa22c899"
        },
        "item": {
          "id": "488b281f-4110-4faa-905c-419618cc18d2",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3605b6d5-b9c8-459a-8755-9e0508b5ecc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0ccfbd-ae12-42f5-b801-20edcdd7b164",
        "cursor": {
          "ref": "e89a0e18-e81a-4c5f-992e-b459fa15d801",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "65d721bc-4ce7-4396-9ab9-5f32dd485995"
        },
        "item": {
          "id": "1e0ccfbd-ae12-42f5-b801-20edcdd7b164",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "66ead0a9-8e7f-4fde-90ad-01498eda6ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac39c0c-3b6d-4c70-89c2-195b145f8082",
        "cursor": {
          "ref": "c7e95617-eae4-414d-b7d6-c6f94a196d56",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "90d27fea-5f80-4d73-bd2b-0264e829b8cf"
        },
        "item": {
          "id": "bac39c0c-3b6d-4c70-89c2-195b145f8082",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "bb3a03fb-7a6e-4f47-a5c8-6abf1e736cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "205639a6-8e47-4f07-b389-ebdc0aba2997",
        "cursor": {
          "ref": "f5114297-1833-454e-8cbb-3b11dc063b1c",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d045a1b0-eb7c-4aa9-98aa-0674dd45184b"
        },
        "item": {
          "id": "205639a6-8e47-4f07-b389-ebdc0aba2997",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "72425962-4f04-4db9-b27b-d13e2fa4a07d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a315517b-ed43-452d-9816-7a5e210bab54",
        "cursor": {
          "ref": "3eff6ff6-f120-4650-8768-6fed26a7ce47",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "775e655a-6c00-4910-a5cb-a6be732f1e19"
        },
        "item": {
          "id": "a315517b-ed43-452d-9816-7a5e210bab54",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f4ca8d50-e08a-4245-a6a5-04785fc8af62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73752438-da0b-49e8-a95a-b8201909d5c4",
        "cursor": {
          "ref": "274174df-c2aa-4852-a361-26474c678327",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "9cbd09ef-851a-4021-9f95-3f4b28205b63"
        },
        "item": {
          "id": "73752438-da0b-49e8-a95a-b8201909d5c4",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e860eddd-6f7c-48bf-858b-8d4e74ebb019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d93da26-01b2-4646-bb92-d425bad901f7",
        "cursor": {
          "ref": "c7b15b23-c390-4f94-bd85-c5123d793906",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "aee9dad9-b963-4e15-a044-a18c9c5e0405"
        },
        "item": {
          "id": "1d93da26-01b2-4646-bb92-d425bad901f7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "fd301cc5-273a-439a-884e-4722d7958ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f673cb69-8125-4156-b6de-85075d3ee81c",
        "cursor": {
          "ref": "1b922049-e6cf-4d57-a401-a56320779dbf",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "fbf80695-c578-4364-aad5-92d127a2fa81"
        },
        "item": {
          "id": "f673cb69-8125-4156-b6de-85075d3ee81c",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "09415f92-96df-4ee2-93b5-3cfabfe85bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43543ff5-9255-4281-99f6-4ff86f21e3ca",
        "cursor": {
          "ref": "6bdc7393-bfb5-4abf-ab39-0fd27cff68ec",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "115b519c-0305-4bab-9b11-fdf2c6dafade"
        },
        "item": {
          "id": "43543ff5-9255-4281-99f6-4ff86f21e3ca",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d2f66b11-9d3b-4c4d-a57c-5de7955f3be3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96cfd271-acd0-4899-860c-8aa820f1edc5",
        "cursor": {
          "ref": "a3cf6b81-b852-4bae-a514-cb6a70dc3344",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d6a97e5b-df64-41c4-b3ed-b7afe62e672e"
        },
        "item": {
          "id": "96cfd271-acd0-4899-860c-8aa820f1edc5",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "2e287ae7-023c-4de7-bfed-57090165ec7a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 63,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d3334e-d14c-437c-af6f-41507baed7c0",
        "cursor": {
          "ref": "b5025d1f-6be1-417a-94a1-8e3b4be1242e",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5ed25f19-8980-4302-b7e4-5a4c00eaddd7"
        },
        "item": {
          "id": "67d3334e-d14c-437c-af6f-41507baed7c0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "674d6306-3a14-4b23-9106-cb11f0da03d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d3334e-d14c-437c-af6f-41507baed7c0",
        "cursor": {
          "ref": "b5025d1f-6be1-417a-94a1-8e3b4be1242e",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5ed25f19-8980-4302-b7e4-5a4c00eaddd7"
        },
        "item": {
          "id": "67d3334e-d14c-437c-af6f-41507baed7c0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "674d6306-3a14-4b23-9106-cb11f0da03d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "398ed1c6-0202-4d34-9f47-0c17559d05de",
        "cursor": {
          "ref": "241775d7-6a99-4bd8-9d4d-a1653ac3f611",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f27cb8c7-4edc-4527-8ae9-5387a3c4848e"
        },
        "item": {
          "id": "398ed1c6-0202-4d34-9f47-0c17559d05de",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4a50e7ec-6574-4eaa-99ca-862e2207ebf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50617c61-fc02-42a4-866f-9c2097b44f6d",
        "cursor": {
          "ref": "b95e8b19-0cbb-427f-ace9-5dcbcedcef9a",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "454e7d32-cac9-4768-bbce-290e53b7bbf6"
        },
        "item": {
          "id": "50617c61-fc02-42a4-866f-9c2097b44f6d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "2d6c7559-66f0-4113-83c5-c4b104dfcd38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "468c617c-4b8a-4464-8e4f-d95d442e04ca",
        "cursor": {
          "ref": "371a9945-9000-4af2-8b22-d83b66d066f2",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3f42bfa0-36dd-4c5b-8736-e910225f7c5c"
        },
        "item": {
          "id": "468c617c-4b8a-4464-8e4f-d95d442e04ca",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "70c88a61-025b-402a-baa4-811fe541fd14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4c9d46a-23dd-49d4-8a8f-9a4380f72873",
        "cursor": {
          "ref": "39aa419b-2e7d-4d86-ab88-6762b2a1d73b",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "81bbc311-6e27-42de-a60d-0bf752743ca1"
        },
        "item": {
          "id": "d4c9d46a-23dd-49d4-8a8f-9a4380f72873",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d89a4377-5736-4259-89b4-53ce422f680a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "677ecef1-3a80-4d1b-bc5b-ba6e77aa053a",
        "cursor": {
          "ref": "d21ed6bd-6b10-4c30-b460-874a55534ad0",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "cbc7bd1e-2ac4-4f4e-b3e5-694fa1130350"
        },
        "item": {
          "id": "677ecef1-3a80-4d1b-bc5b-ba6e77aa053a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9a2ceec0-cfa7-4dd5-8a82-1324df2495ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd995fd-6a30-45f9-b497-b6ef95c7e7b2",
        "cursor": {
          "ref": "acd58ec4-7267-4686-9dbf-99b7ace5cdc4",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e2f589d1-0d55-43b6-b31c-c0d107745b3e"
        },
        "item": {
          "id": "5bd995fd-6a30-45f9-b497-b6ef95c7e7b2",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "991fc8c8-1580-4f10-bb66-7b92cd316e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c578d0-c61a-437e-84f7-4bc05436bd95",
        "cursor": {
          "ref": "3f66f273-0313-4111-9ec0-7f1b1c3ec791",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "908f725d-468e-4b3b-896f-53ed18ec682d"
        },
        "item": {
          "id": "f9c578d0-c61a-437e-84f7-4bc05436bd95",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "9aa5ffd1-e9f4-4368-8404-7da75cb24cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "618cf163-ea2a-4967-a5f0-7806c6961566",
        "cursor": {
          "ref": "c2dfb8d7-da46-4a67-b7e3-42e0fd1e52ba",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d9dd5027-9a54-4a53-8249-1be2134d8624"
        },
        "item": {
          "id": "618cf163-ea2a-4967-a5f0-7806c6961566",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "71035ab0-5a2e-4cfc-8b56-6d597a5174cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0edf8f51-ee88-4647-9e2f-35f88835fe3e",
        "cursor": {
          "ref": "9f91eaee-13ae-42c7-bb3b-3583d53b7479",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "94e4f553-476b-4416-8138-b1d00b93c1db"
        },
        "item": {
          "id": "0edf8f51-ee88-4647-9e2f-35f88835fe3e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "af1d1604-b233-414b-955d-072cfd2a6e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309a5b15-258c-4d4b-bd69-3c685f2da7a2",
        "cursor": {
          "ref": "8e97e0af-d3cb-4989-b625-37e7c2266bf0",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "219ab52b-cb12-4fad-903c-c3635544fd4d"
        },
        "item": {
          "id": "309a5b15-258c-4d4b-bd69-3c685f2da7a2",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "172d57e5-c004-4017-a084-5126e76db7f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8ecd4d-52f1-4bf5-9388-ca3c20c29af9",
        "cursor": {
          "ref": "436947b9-8c46-4e46-ae3f-75146049f9c4",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7d9ab3e0-484d-4057-8eff-4c5784bec34b"
        },
        "item": {
          "id": "1f8ecd4d-52f1-4bf5-9388-ca3c20c29af9",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3444f8b0-6a6d-4b42-8ce0-4d41c7c739fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9404ca1f-fc02-47e2-b265-fd705bfbb373",
        "cursor": {
          "ref": "355513f4-36de-4dc8-8cb4-cbaa61dad119",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "93e41158-75c6-4e38-af91-73787e2cc094"
        },
        "item": {
          "id": "9404ca1f-fc02-47e2-b265-fd705bfbb373",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "efb03f89-40ac-412c-8663-be063905405e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc02ce9c-0818-4678-836b-65784afa304f",
        "cursor": {
          "ref": "e15846fc-4024-4d0d-b1ac-6ed9820e7159",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a8f508ee-932f-4582-a14d-3d5b43f63592"
        },
        "item": {
          "id": "fc02ce9c-0818-4678-836b-65784afa304f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1fcb3931-a712-47d0-a396-fb5b3d511270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed3a783-c89d-4e8b-85cf-fb7818a4d925",
        "cursor": {
          "ref": "ffb5c2b8-e552-49f0-80a4-79973d4c2743",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8f8100d3-25d5-4a3c-a002-ee6db60651a8"
        },
        "item": {
          "id": "1ed3a783-c89d-4e8b-85cf-fb7818a4d925",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "591a92f0-5a76-4819-98e4-b3f2ad377b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4594c9b-c82c-44a6-882e-50b25f118a96",
        "cursor": {
          "ref": "b0ce4ec6-da6d-46b3-90b8-71f3c94c2188",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2f385530-391f-49c9-a442-31934f8e382a"
        },
        "item": {
          "id": "d4594c9b-c82c-44a6-882e-50b25f118a96",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a70279b6-b982-4728-9863-b89678721927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f836d4-b612-422c-8a1a-10d88e7a47ee",
        "cursor": {
          "ref": "42124e37-072d-461f-b607-a90b8c37e849",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "de52671c-a7a2-4852-b971-2a154adc25da"
        },
        "item": {
          "id": "28f836d4-b612-422c-8a1a-10d88e7a47ee",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "8a76e045-47f9-4d2c-b5f1-554e5b942bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6876d6be-fbbf-405a-ab00-422121be0ac2",
        "cursor": {
          "ref": "17c641fa-1967-4f0a-98b0-0223a859294c",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "8b805957-058d-41f4-a006-ba33a4066b59"
        },
        "item": {
          "id": "6876d6be-fbbf-405a-ab00-422121be0ac2",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4fbabefe-579a-476e-9468-080c33c121fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73506fd9-d204-40d4-a7cc-7e0e8c443454",
        "cursor": {
          "ref": "ee60fb82-521d-4838-bed0-29bd78022234",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d4b92c09-eaad-4016-bf82-c791a3c56d4c"
        },
        "item": {
          "id": "73506fd9-d204-40d4-a7cc-7e0e8c443454",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "243721de-55e0-453e-a579-6e366bb5376b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a3bcf3c-648d-4e0c-af33-92071e5cf972",
        "cursor": {
          "ref": "f263b959-5d9d-4e30-8459-05e3310910f8",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "66c2aa69-d7a7-48e3-9993-2a058a15228b"
        },
        "item": {
          "id": "9a3bcf3c-648d-4e0c-af33-92071e5cf972",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "cf6bc7bc-6481-4c7d-9854-ed8b448f72b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7653905b-85d6-4d5b-a922-f10379422ee1",
        "cursor": {
          "ref": "aade5ae0-b938-41ec-82af-fa6e0e45864a",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9acd80ed-599b-44c7-ac4e-4a4d32ff68b1"
        },
        "item": {
          "id": "7653905b-85d6-4d5b-a922-f10379422ee1",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "0c25ddbd-a625-4587-a2b7-b56d4a95ee06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1367ba2b-a87e-4f8f-833c-21b760be1cb8",
        "cursor": {
          "ref": "5c7fa9b0-7262-41cd-97b4-e2b0a0288405",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "953ae69c-bddc-480d-bc6c-b8bc8d309d04"
        },
        "item": {
          "id": "1367ba2b-a87e-4f8f-833c-21b760be1cb8",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "022a4cae-7368-4cf1-b3c5-fc42663ddf5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5dd844-1692-4b49-9dec-1cbae1e08596",
        "cursor": {
          "ref": "bf813067-a5d7-4730-89df-e7a8891478cc",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e2177361-4e66-4216-8611-9866c2fcdf7d"
        },
        "item": {
          "id": "5a5dd844-1692-4b49-9dec-1cbae1e08596",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "88113179-a327-4cbd-93e9-f13b83b56274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "262317e4-b1be-47e0-ac37-78dea74da122",
        "cursor": {
          "ref": "572228b5-c493-41eb-a995-0a5593da4584",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f1dc336b-467e-40d5-8d81-1639ce4b830e"
        },
        "item": {
          "id": "262317e4-b1be-47e0-ac37-78dea74da122",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ead6715c-c600-4e05-8bff-a5cc895cc21c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba1a9e6-bbb6-42c2-b66b-e38b6cbfdff9",
        "cursor": {
          "ref": "e7818fc5-d57c-4bba-8f4b-9742e95b96ca",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "23ff38c1-32e3-4f40-bea7-302ce60a1000"
        },
        "item": {
          "id": "0ba1a9e6-bbb6-42c2-b66b-e38b6cbfdff9",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "f59d0903-ad47-4855-b371-667d5cb5804e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeebb03b-1fde-4963-8a30-85d9f5fa2723",
        "cursor": {
          "ref": "3949b3e7-0df3-494b-af2b-f9d313027b91",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ecf77bb2-a7e2-4caf-af42-5eb28e9211e9"
        },
        "item": {
          "id": "eeebb03b-1fde-4963-8a30-85d9f5fa2723",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "19b5f0c4-5473-49a4-9266-64687f474d64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f47bc49b-a0e3-49e0-96c2-75db5bef94dc",
        "cursor": {
          "ref": "5d4db2c7-f8a5-49dd-8ff4-61633b041e9c",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "2833870a-c774-43fc-8dea-0d95562279f6"
        },
        "item": {
          "id": "f47bc49b-a0e3-49e0-96c2-75db5bef94dc",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2288ce20-92b6-4bc3-ac31-be37efbfba39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9808f570-7334-4791-ac64-0db40b185cc9",
        "cursor": {
          "ref": "6f491140-54c0-4ad1-b282-25891d92935c",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c0e9e522-542c-4393-827f-a55d0324efda"
        },
        "item": {
          "id": "9808f570-7334-4791-ac64-0db40b185cc9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "03195f22-93be-416a-93d3-1ed44b6f7da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "797e1882-d881-4978-91d5-4b86a4f5ceac",
        "cursor": {
          "ref": "03c962e2-b3f7-417e-977c-575db992aa86",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d1babcd2-1560-4e94-b0a8-46c8ef3468a8"
        },
        "item": {
          "id": "797e1882-d881-4978-91d5-4b86a4f5ceac",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e5224529-2fe1-4a4a-ac7a-a90363f952a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2095eea-9556-4f53-95b6-7807db9171d4",
        "cursor": {
          "ref": "40a8b9a0-73cf-4fc2-ab51-8b4b9c9c0177",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "59770d0d-db92-428f-b19d-f5df27aa8ccc"
        },
        "item": {
          "id": "e2095eea-9556-4f53-95b6-7807db9171d4",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "72e25ee9-99f2-4b52-b0b5-96fa7e72404e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cba5588-f45e-46da-ac3f-9472763255e8",
        "cursor": {
          "ref": "ba9b2878-e97d-4b26-be23-00843c86ef00",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "467ae3eb-edde-433f-ac47-b431106082f2"
        },
        "item": {
          "id": "0cba5588-f45e-46da-ac3f-9472763255e8",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "4c28fea2-afc6-4736-bc2d-b17ae0c177c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b4bdb2-aaf8-40a0-94f4-bab7b535ba6a",
        "cursor": {
          "ref": "ae437518-f26f-4ebc-9ce2-8c9678b9bed3",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "90eec534-7378-4110-b377-d8d99d337a13"
        },
        "item": {
          "id": "52b4bdb2-aaf8-40a0-94f4-bab7b535ba6a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7acb6fa7-a192-4424-8f90-b8653eb1cfe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce16afdd-2253-41e1-a6be-5cdaec92e2bb",
        "cursor": {
          "ref": "045aef03-f02f-442c-92fe-2bb034857221",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c061d2bc-fd62-4bad-bf9f-b71d58a284b8"
        },
        "item": {
          "id": "ce16afdd-2253-41e1-a6be-5cdaec92e2bb",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b880f7fa-484a-4dc9-bc23-cfc526be3646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a22fb7b-67c4-4dfa-b67d-fdcecddbc720",
        "cursor": {
          "ref": "98db2d6e-490b-4a54-a71b-e173a7722127",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "5fc1c148-d779-4c85-bdf5-c29bd85074d7"
        },
        "item": {
          "id": "9a22fb7b-67c4-4dfa-b67d-fdcecddbc720",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3678517e-2d0e-44cf-b78c-c7c9226e0c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c23c1947-72aa-4878-9543-1c8f967b4de4",
        "cursor": {
          "ref": "bd9a2baa-dead-4255-bd37-f35e456506cb",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f0633e4a-0322-4898-bdb5-4af8c4d94347"
        },
        "item": {
          "id": "c23c1947-72aa-4878-9543-1c8f967b4de4",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "4e1eb583-f1d2-4544-8ef8-11356deb606f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa89516-9009-4c7f-a74c-039c195c7cce",
        "cursor": {
          "ref": "c0882456-42a5-4b34-916a-32ab74bf38f5",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "9ad0cb64-9003-4f0d-a036-5fb3d04a39d2"
        },
        "item": {
          "id": "2aa89516-9009-4c7f-a74c-039c195c7cce",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "fd2989af-a729-4f40-b197-4362717bb96c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5615baf1-aee8-4e64-a756-68ac1f14d794",
        "cursor": {
          "ref": "42cfbb53-4b05-4cbe-aa96-a0ddc0cae30d",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4a7bfdc4-4bfc-47f5-8a27-8503a7fcdd8b"
        },
        "item": {
          "id": "5615baf1-aee8-4e64-a756-68ac1f14d794",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9bc0b046-9ff2-498d-b7e4-793dc9d907dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d31667-5b22-45f4-8032-74ebd3f05100",
        "cursor": {
          "ref": "eb4f7741-8818-45c8-923d-9dee5d2ebf8a",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2f4a155c-48d8-4e2e-bcf4-e37ed33e0998"
        },
        "item": {
          "id": "48d31667-5b22-45f4-8032-74ebd3f05100",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a558ff05-8025-4681-93b3-1824e7e8073d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4097fc-547e-489c-a7e8-d02821c33348",
        "cursor": {
          "ref": "33d4b473-0e38-4742-90d2-806513b9336e",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "4c652fe3-b3d1-44d8-9aa2-b0705b0c6719"
        },
        "item": {
          "id": "cd4097fc-547e-489c-a7e8-d02821c33348",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ce923399-be3f-4601-88ba-87e6d148aac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece04bad-ee55-4df6-b08a-8e6fcd9a6c99",
        "cursor": {
          "ref": "8bbfb27c-b762-418f-b6f3-31aa7f483bc9",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "7826f886-4a81-4979-a88d-96b77025c7ba"
        },
        "item": {
          "id": "ece04bad-ee55-4df6-b08a-8e6fcd9a6c99",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "fcf42ee3-a979-42b3-89bb-094cece8632f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ccb2559-bef5-4469-bc91-e9b6c6b9e836",
        "cursor": {
          "ref": "973bda75-42d0-4f97-b076-8a5181237ae0",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d75474ac-dfae-4a2c-899a-bc469bf6e7f2"
        },
        "item": {
          "id": "7ccb2559-bef5-4469-bc91-e9b6c6b9e836",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "496f3df7-8b58-4dd8-b0d0-2e1ddc9d4ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c869bbf6-7376-4861-b8c6-7dca49ba2213",
        "cursor": {
          "ref": "f4a0bfd1-5806-4b65-836c-dfe0ab469862",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "bfb6ab0f-1bff-4c3e-9c7b-99df2ccc1074"
        },
        "item": {
          "id": "c869bbf6-7376-4861-b8c6-7dca49ba2213",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "954d131a-f134-45fa-98ac-9bf522b3cf45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2ba106-3ebc-486a-9248-648f8df866b1",
        "cursor": {
          "ref": "5187633b-1a1b-45cc-87ef-b05bd312900c",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "3164866b-f8ed-47e7-82b2-68d6b6a8a283"
        },
        "item": {
          "id": "7e2ba106-3ebc-486a-9248-648f8df866b1",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "7ba65eab-9e84-4972-8645-dd9b584cb0cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2700809a-f131-4e12-97ec-d3487097eeb1",
        "cursor": {
          "ref": "309d0b20-b6bb-4b52-99be-34864b0e92e2",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "4c8b151b-9c9a-415c-83b2-65b497ee466b"
        },
        "item": {
          "id": "2700809a-f131-4e12-97ec-d3487097eeb1",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3877087a-dfda-41c0-9d52-aace28af5a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "111425d4-296b-4ca1-bd22-77ea0410532a",
        "cursor": {
          "ref": "c1c0a886-f1b5-4915-b645-567c71bab659",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "dd35712f-4d9e-4d2e-9595-9714401d7df4"
        },
        "item": {
          "id": "111425d4-296b-4ca1-bd22-77ea0410532a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "80893426-fdeb-4e88-8eaf-f47eefeefe28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d30b5f2-09d7-4ced-a8c9-c8779b380d42",
        "cursor": {
          "ref": "c508d9cf-6a53-4295-9237-6119d497cc34",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "af30987c-a7bf-4469-aa9d-2f24ae05408a"
        },
        "item": {
          "id": "3d30b5f2-09d7-4ced-a8c9-c8779b380d42",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "31d41567-f54a-4b1f-a42c-027fcb6689c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f703c6d-34d1-470e-981e-6dde897ed754",
        "cursor": {
          "ref": "35d2d403-8c48-4af3-adf1-6e54c9eff996",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2fdb9e93-abf6-49e8-9d84-a6f64ba861af"
        },
        "item": {
          "id": "5f703c6d-34d1-470e-981e-6dde897ed754",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b42579fe-bddf-445b-aa8f-0c5117b27050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41c77edf-e637-4a59-89f8-e1721df50737",
        "cursor": {
          "ref": "7d5b5c2c-644a-45fd-a290-5c430aafd700",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7b939a2e-2215-4b0a-8f20-84a0c8a96ff1"
        },
        "item": {
          "id": "41c77edf-e637-4a59-89f8-e1721df50737",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a76ddd70-a5b3-40ed-9f72-84a2700066cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6063b9d-e2e9-4353-a075-d1517b92039a",
        "cursor": {
          "ref": "fa004316-103b-4193-baab-187fc65edd46",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c3a2387f-2f51-49b1-bbb6-e8c3b5d62e5c"
        },
        "item": {
          "id": "f6063b9d-e2e9-4353-a075-d1517b92039a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3a9bc991-9b6a-429f-99e7-b17e73f07c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b401f846-184b-4055-8f53-5038407becdc",
        "cursor": {
          "ref": "5bd7eaa0-f2bc-4707-b6c4-3b3c97b03ca0",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "942a1e7a-ca68-4646-ba1e-f689ed49ef47"
        },
        "item": {
          "id": "b401f846-184b-4055-8f53-5038407becdc",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "2bfceb5b-4500-473e-87e0-7e796033ebbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f68d7c30-8dce-4994-b585-9719fcd9ba2b",
        "cursor": {
          "ref": "b0af9a66-5816-4f82-8711-19437fef5bb4",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9fff7fce-fa40-4a87-b91e-4bd28f751193"
        },
        "item": {
          "id": "f68d7c30-8dce-4994-b585-9719fcd9ba2b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d8379e3d-cc62-499e-b1eb-ffa9b2d1cc10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "243e10b8-1d1d-4407-9a53-10f205becb84",
        "cursor": {
          "ref": "dbcca7c5-952f-4f77-931d-1586b433fa80",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "0e621513-e645-40d7-acde-ae5e5d14f7cb"
        },
        "item": {
          "id": "243e10b8-1d1d-4407-9a53-10f205becb84",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "772133e2-8bcd-4963-87de-2c68cbf1fb44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f6cae6d-6a35-465d-99de-e940522b2c3a",
        "cursor": {
          "ref": "33027515-6349-480d-8e42-eab187d445c0",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c6aa667d-d9cf-48da-bbeb-6024e2ff00da"
        },
        "item": {
          "id": "5f6cae6d-6a35-465d-99de-e940522b2c3a",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f1259e5e-ec4d-48db-8082-f036ce4a6437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1150e7a8-01bf-44ce-bcb5-c956891aa4c9",
        "cursor": {
          "ref": "697ce48b-323e-4d6d-b270-ada12cd22fa2",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "2ed8a9dd-c74b-402c-a052-7a1fd0e00a68"
        },
        "item": {
          "id": "1150e7a8-01bf-44ce-bcb5-c956891aa4c9",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "af348412-fa77-4ad1-b4d7-bfdb67c51ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "467169a3-c95f-45f0-b980-53554ad73093",
        "cursor": {
          "ref": "cd1a5117-cb8e-4fb3-bd21-7b7af5986f1b",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "33327edc-4645-4c5f-a341-3d1aa42f8e1d"
        },
        "item": {
          "id": "467169a3-c95f-45f0-b980-53554ad73093",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a81691a0-ca48-49cd-9ba5-5ad48b1c231c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d988dadc-3c9f-49ab-85aa-96073369a4fe",
        "cursor": {
          "ref": "ffe95f84-5c71-4c3e-883a-ae305948f412",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "3775b833-8c5c-4834-a138-b2d22e1fa6ab"
        },
        "item": {
          "id": "d988dadc-3c9f-49ab-85aa-96073369a4fe",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c095a42c-9df3-4dc8-a51f-1e0ba3e72d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb89bcfb-4594-4869-a9a4-defe5cb3bfe8",
        "cursor": {
          "ref": "f5c8a585-e035-4860-b570-e24832f63819",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7d386b21-ecaf-4c7c-aede-b6f3770d223a"
        },
        "item": {
          "id": "cb89bcfb-4594-4869-a9a4-defe5cb3bfe8",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c793f940-1abd-45fe-a8a7-920b0bdf689b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "468f1a6c-0858-4118-a345-1f4a85143662",
        "cursor": {
          "ref": "0deb10cf-d96e-486d-9f6f-9a496832a2e2",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "48a0d710-0643-4249-9bbb-5f8127aa8d43"
        },
        "item": {
          "id": "468f1a6c-0858-4118-a345-1f4a85143662",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "854c69cd-2bde-4575-aeef-69fd74e1c761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2adaeae4-1050-420c-98b6-526ce7fd42d1",
        "cursor": {
          "ref": "3ce082bd-8b8c-470f-aaac-6f9133b98e2b",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5a675904-4b43-4503-b708-2285b1ba70a1"
        },
        "item": {
          "id": "2adaeae4-1050-420c-98b6-526ce7fd42d1",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1bffbf4e-48c8-4853-b5c2-0e057f513f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd420fff-3174-4c30-9ba4-d166bccd868e",
        "cursor": {
          "ref": "28aa0902-f1b0-4178-98fb-6332dd77017c",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "1f77b244-aed6-4ae2-abed-e505c6225eee"
        },
        "item": {
          "id": "cd420fff-3174-4c30-9ba4-d166bccd868e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ee6e4b61-a3f2-4188-8087-6550d85a842b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 208,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d91f5a-5d53-46de-8e4c-379b91df25bf",
        "cursor": {
          "ref": "7ab493ba-a781-4b7d-a9d1-eed70ee58667",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "fcec7c6e-37cb-4811-865d-4d0655b1b30b"
        },
        "item": {
          "id": "c6d91f5a-5d53-46de-8e4c-379b91df25bf",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4b1d609f-c024-48aa-9a0c-f27893579a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a0ed13-345e-4ffe-a45b-e37dd9e69d13",
        "cursor": {
          "ref": "82ef008c-f034-4732-9d18-600bdc3ffa8c",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "45722e4f-5913-4801-b681-a698aa3a24f4"
        },
        "item": {
          "id": "a5a0ed13-345e-4ffe-a45b-e37dd9e69d13",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "28050d61-284d-449b-904a-b08a44d0102a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8bbdca7-b93f-414c-92d5-46d3885a6755",
        "cursor": {
          "ref": "c19749ba-e0a3-42a7-9613-4a37aa7b940a",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8bbbbe68-748f-4f79-b54c-7ff34f0385ea"
        },
        "item": {
          "id": "d8bbdca7-b93f-414c-92d5-46d3885a6755",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "440073ee-a10d-4002-a63f-d70bb4ad784a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52f32b1-809a-4a7c-a702-5fe054616ce1",
        "cursor": {
          "ref": "a58bee9d-bdfb-492b-b641-9f472f6e5d39",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "c6497517-5be6-40c1-9394-afb4d3fd1103"
        },
        "item": {
          "id": "e52f32b1-809a-4a7c-a702-5fe054616ce1",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8fc02c83-a90f-4625-bbdf-aff531bb276b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1bb0b4-4372-4b48-9bcc-501d97cf825c",
        "cursor": {
          "ref": "357c8734-ab4d-4a98-a358-b9108b09feda",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "897b995d-3b13-4bf0-a5b6-29c4e2c98aef"
        },
        "item": {
          "id": "fe1bb0b4-4372-4b48-9bcc-501d97cf825c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "6a81f4d3-860c-49f5-8edd-8a06d4504b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f094a7-e29c-4e01-8475-9d92628c893e",
        "cursor": {
          "ref": "13ae9ae7-fa21-48a3-b5b5-2255570efca5",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "62e794a0-03b5-455c-b8fd-3865e3576529"
        },
        "item": {
          "id": "e4f094a7-e29c-4e01-8475-9d92628c893e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "3e03e130-eee1-4c2b-9477-f68d6c65e789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125584b8-0089-4826-9a23-972c9bf7e96d",
        "cursor": {
          "ref": "6965e4db-125e-440d-9c79-6fdbaeb0f997",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "8185c712-d9ef-4b06-b1b5-193cbf8d82a7"
        },
        "item": {
          "id": "125584b8-0089-4826-9a23-972c9bf7e96d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c0168f11-a4bd-4201-afbe-bf31d1618653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85115ed1-ca13-4c0b-a4c3-e4938d21d48b",
        "cursor": {
          "ref": "e40a73b5-cfd9-43a0-9353-3cae841ba198",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c2035eed-965c-42b5-b45f-6bc06a9b3e88"
        },
        "item": {
          "id": "85115ed1-ca13-4c0b-a4c3-e4938d21d48b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a286aab9-326d-4360-923c-6bd7293d3b01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2042f90c-a3bb-40cd-be97-d48fb7d693bc",
        "cursor": {
          "ref": "0ad58168-8db5-4653-a15b-8470463ca4ce",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "285aae01-1267-4dce-bf37-4c35d197dc8f"
        },
        "item": {
          "id": "2042f90c-a3bb-40cd-be97-d48fb7d693bc",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f43b6032-03ab-4431-9784-f284cad122c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4aa35d6-a2de-4a4b-886f-b22649096d38",
        "cursor": {
          "ref": "189061ad-93bc-41fd-a657-1bf77cc1058f",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "fcf9560f-315b-41f0-8c56-c9c8b2787c43"
        },
        "item": {
          "id": "b4aa35d6-a2de-4a4b-886f-b22649096d38",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "89076fe0-4393-41f8-b9c2-f1934453da1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d6e2bc-6bad-4788-9e72-20adc287d913",
        "cursor": {
          "ref": "3ff7dd4e-e6ee-4a93-b7fb-34f469ab059e",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "0fcf1dc5-5347-414b-bfe9-0fa3a22ef87c"
        },
        "item": {
          "id": "b9d6e2bc-6bad-4788-9e72-20adc287d913",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "615f4fb9-6df3-4942-89c7-f9986f2539b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3362b74c-546b-45f9-922c-e42e9f4e2560",
        "cursor": {
          "ref": "0949177e-6f26-48c5-bdc4-e628647509b8",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f83aacd8-06d5-48f4-9eb0-f6d64b3c202c"
        },
        "item": {
          "id": "3362b74c-546b-45f9-922c-e42e9f4e2560",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3fc95091-57e0-4680-82bb-4b8d96a75d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5154383f-e682-4a33-9e0e-796e235f541c",
        "cursor": {
          "ref": "4a39b2d6-b2bc-4479-8e95-816411b2d87d",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "10c5afd8-6ebf-490e-a393-c142175aa0f3"
        },
        "item": {
          "id": "5154383f-e682-4a33-9e0e-796e235f541c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a2169605-ef3c-47d1-a047-6bbc6dadf601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c97563-2f03-4176-8eeb-a4f047f28906",
        "cursor": {
          "ref": "aba81ac2-314a-45e2-9381-6b4cfeea7463",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3ea3f60d-d628-42a6-874a-b35445c033eb"
        },
        "item": {
          "id": "b1c97563-2f03-4176-8eeb-a4f047f28906",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "4acb79ee-224e-4bc8-9461-97a5b984a66c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb48ae6-42de-4cd0-897f-c6b946064ad8",
        "cursor": {
          "ref": "133a51ff-c36e-438b-a4d2-8f1c6da1b341",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "0214ebaa-d45d-4906-bbaa-b38c153a1676"
        },
        "item": {
          "id": "acb48ae6-42de-4cd0-897f-c6b946064ad8",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f2eefe57-0e67-4a44-8cf7-4972b9c2555c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69ef10d-89a6-4d27-9f61-f049f9aaa0ea",
        "cursor": {
          "ref": "4bbfee05-cc5c-41b6-8d25-65b426b53cac",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "2337661a-4813-41ce-8511-783fb4cb737b"
        },
        "item": {
          "id": "c69ef10d-89a6-4d27-9f61-f049f9aaa0ea",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "cffa0703-998d-477d-82ee-96e0c37600a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe986d1-77f0-4d37-bfcf-401e0b9584b1",
        "cursor": {
          "ref": "dd686c63-3de4-45e6-a835-e7d7eeea5646",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "55dab1f2-8b7f-4a1a-9617-02cabc700522"
        },
        "item": {
          "id": "dbe986d1-77f0-4d37-bfcf-401e0b9584b1",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "86918309-eae7-4c2f-b45e-bb07ebdb33e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea2f301-3145-4526-82d8-a05141afb0db",
        "cursor": {
          "ref": "ae7fbc6f-4686-4784-8b40-96c09c242632",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "1f2f4d22-c65e-4929-b3b1-f53c39cb4c20"
        },
        "item": {
          "id": "0ea2f301-3145-4526-82d8-a05141afb0db",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "ca79dfbb-f273-4019-8238-031e30360867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf9b6fd-f46d-4d3b-9b81-fdef7037c9ce",
        "cursor": {
          "ref": "964107a3-d84c-4d05-a8be-10d4d9824dd7",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c4614ddf-ceb8-472a-9080-a27f1f53eb16"
        },
        "item": {
          "id": "ddf9b6fd-f46d-4d3b-9b81-fdef7037c9ce",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "06ac16f1-5b71-4820-a94d-b7568b1d6736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8504823-d1ec-4a8c-b0eb-e35e69f90a20",
        "cursor": {
          "ref": "713b8cce-d466-4c35-833f-7c067af055c7",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "108c66f4-cba6-4b04-8e70-80afeed7ca7b"
        },
        "item": {
          "id": "c8504823-d1ec-4a8c-b0eb-e35e69f90a20",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "31a30f51-6c86-45f9-91e5-1785c6184ddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b456c163-111e-46b6-b3ed-c4e45691cbe6",
        "cursor": {
          "ref": "ff98ec57-06d4-4117-bc09-c768d1b904f3",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "bfe9b4f0-e7ad-4418-b428-80a5ce1afdd1"
        },
        "item": {
          "id": "b456c163-111e-46b6-b3ed-c4e45691cbe6",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e02e124e-676e-48fe-9180-b50783cc5514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd362220-610b-40c0-90a0-73e51cb5dfbf",
        "cursor": {
          "ref": "bbc2e71a-f476-4e27-bef0-3fe694d879ce",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "44d4df77-6d4f-4f00-96d1-ee238319e2c6"
        },
        "item": {
          "id": "cd362220-610b-40c0-90a0-73e51cb5dfbf",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "84ae8e33-a9cc-4cee-930f-e21145fa409b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed64fc3e-4e08-4af3-a5ce-5b52ffd9155f",
        "cursor": {
          "ref": "b9956a7e-f574-49b5-a3d8-9cb5ea59d795",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "4049e5cb-4bba-404c-a18d-5ab4a3d82b4c"
        },
        "item": {
          "id": "ed64fc3e-4e08-4af3-a5ce-5b52ffd9155f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3ee53632-b965-4a41-a855-af5a5884ab37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccdd9198-e4c7-4778-bd57-167cc7300469",
        "cursor": {
          "ref": "29d41d00-ccdc-48c1-a3a2-6454266b954a",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c4293996-45d2-4c35-928a-9c4648c53997"
        },
        "item": {
          "id": "ccdd9198-e4c7-4778-bd57-167cc7300469",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "44366566-ee4e-45c9-951d-b36d5b1283a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30774c33-c119-4e59-ad60-0e2adca317da",
        "cursor": {
          "ref": "fa6041f4-5974-482a-b16e-2550833bf473",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "eec7b1e0-65a0-4543-9b18-4e3f37ad6c8c"
        },
        "item": {
          "id": "30774c33-c119-4e59-ad60-0e2adca317da",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "fa8077dc-b51a-4218-9885-2781ef889629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc618328-880b-4349-a7c2-98a662f3da34",
        "cursor": {
          "ref": "15e70474-ce98-4148-b490-110a9974d75a",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "7a96620f-4940-464b-af18-0fba0fda2d64"
        },
        "item": {
          "id": "cc618328-880b-4349-a7c2-98a662f3da34",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2bde294c-e65f-4293-9cf8-09f8f07b7f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "486defa7-3fad-461d-9fbf-b48a121d057f",
        "cursor": {
          "ref": "6f1b448b-77e8-4068-bedf-506fb0097d60",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f47b84d1-3bb9-44bd-8513-fe1c2078cbea"
        },
        "item": {
          "id": "486defa7-3fad-461d-9fbf-b48a121d057f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "0fb530c6-ee72-44ff-986f-1f20869c2709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e99e9501-9d5f-4d13-9dcf-e960800e6983",
        "cursor": {
          "ref": "7491da14-4b6d-49a0-8548-6dddcde39c48",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f5249f1f-db21-4332-950c-1ccbe6102d50"
        },
        "item": {
          "id": "e99e9501-9d5f-4d13-9dcf-e960800e6983",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f02a2127-887d-4cca-be62-321a63a9aa3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98fd76d6-fb6f-47e2-a173-0df6388958b1",
        "cursor": {
          "ref": "000453b7-5366-4225-af7d-17a326c39d5a",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d0a2b3a7-cab3-490b-ae04-c803f125e800"
        },
        "item": {
          "id": "98fd76d6-fb6f-47e2-a173-0df6388958b1",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f3439029-9dba-49c4-8a3b-04287e31751f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "376b8051-f942-44e9-98ad-259b2fef45d3",
        "cursor": {
          "ref": "b7aa17ce-9380-48f0-99a9-da68efdcb5a2",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "6a3c967f-dca5-4456-a5fd-20bf2795b4f6"
        },
        "item": {
          "id": "376b8051-f942-44e9-98ad-259b2fef45d3",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d33e87af-e411-424a-9f5b-d717a99d280c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d48668-242a-4a0c-931a-dfad54f06c69",
        "cursor": {
          "ref": "98f21ed6-0faf-4f1b-957f-9ffa43cec3c3",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7fb6a5e1-c728-408a-9ea8-dd74cf1df4ac"
        },
        "item": {
          "id": "d9d48668-242a-4a0c-931a-dfad54f06c69",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9c144204-c32e-49df-b921-f3503a029212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c7fac9d-82d9-458a-933b-52a3cffd5bd4",
        "cursor": {
          "ref": "43443c3f-a72c-48fc-b825-ab5d87fcc5b7",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "9c60eda8-8d5a-414a-bd2f-f57e5d6e2faf"
        },
        "item": {
          "id": "4c7fac9d-82d9-458a-933b-52a3cffd5bd4",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9ae90ceb-ff5a-411d-ae05-0a403ea95ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cddaeef8-e8cf-4bda-8fdc-175399c7c90f",
        "cursor": {
          "ref": "9851d894-6d07-4e43-9de5-8cca9598f090",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "7da140e1-e981-42a4-ba97-970e95764618"
        },
        "item": {
          "id": "cddaeef8-e8cf-4bda-8fdc-175399c7c90f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "381f03ed-22aa-45df-8009-3d288aee1b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7949e1fb-e6d8-4d12-ba99-5726380fc453",
        "cursor": {
          "ref": "1058e4e9-eb47-4676-9e85-02aff2d96337",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d89001df-0c2e-48a2-ba88-87c8b14be9b8"
        },
        "item": {
          "id": "7949e1fb-e6d8-4d12-ba99-5726380fc453",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "cbf9a01a-017c-4a51-93a6-6a123de2768e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b85a1063-e1fd-4b93-9ad9-b70e52f04f70",
        "cursor": {
          "ref": "f65e544c-c378-4209-9191-9f9aacfe17cc",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "74fe6d7f-4772-4878-961a-63b47dab7480"
        },
        "item": {
          "id": "b85a1063-e1fd-4b93-9ad9-b70e52f04f70",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "cc4f8f1a-9802-4d47-81fc-ca93567edad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "754512d2-0c28-4b0f-bffe-5e554b4e3b19",
        "cursor": {
          "ref": "f8099a2a-225d-47f6-9c24-9d256be9a5d3",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "da8ca49a-f2ff-4c2e-8bea-efc464dfc2f0"
        },
        "item": {
          "id": "754512d2-0c28-4b0f-bffe-5e554b4e3b19",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "265c7249-f0d9-4ff0-81f4-3a7838a4fef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8a71b9b-b2dd-4e4d-a298-128c7dd2f041",
        "cursor": {
          "ref": "e24da81d-773e-481a-92b1-aa69d0617851",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a01b90dd-889a-4123-ab88-d9d7018ad0b2"
        },
        "item": {
          "id": "d8a71b9b-b2dd-4e4d-a298-128c7dd2f041",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5e497b55-2f5f-47f3-8ce6-02241e796cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831fb13f-6e3c-407c-9642-449663101481",
        "cursor": {
          "ref": "4c9afecb-6a40-4bea-83b3-806d4cfbb7f4",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "80b9b0e4-9fb3-4108-b831-1c5078434cd0"
        },
        "item": {
          "id": "831fb13f-6e3c-407c-9642-449663101481",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4d0eaa0b-2d51-42f0-a753-12cae16c872d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c82547f7-1b12-4d3e-af96-6d212c12902b",
        "cursor": {
          "ref": "65af761b-d02d-4cd6-8e23-44231c4629a8",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "7cbd3551-24e2-438b-bdbe-ed641c97be18"
        },
        "item": {
          "id": "c82547f7-1b12-4d3e-af96-6d212c12902b",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "e7eab5ab-81f0-43df-b51c-5657432146ac",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 61,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5a997b-a870-4c1d-9f48-bb5e4753191b",
        "cursor": {
          "ref": "430255e5-6b0a-4d31-82e5-4d892bafb3e2",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d59f7f8a-4146-4837-87a7-c86c37e0b38b"
        },
        "item": {
          "id": "fd5a997b-a870-4c1d-9f48-bb5e4753191b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "775c3b76-29ba-4ec3-a632-3af02005b6c7",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "72bc57a3-4800-4f21-a8c5-9d27b0927f19",
        "cursor": {
          "ref": "7e1c6439-26ce-48e6-a79f-8620023a5d3c",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "7107b31a-0a74-4217-b548-47dbab10bf01"
        },
        "item": {
          "id": "72bc57a3-4800-4f21-a8c5-9d27b0927f19",
          "name": "credentials_verify"
        },
        "response": {
          "id": "139ee044-cdac-48bd-8e63-fd25d21c95e8",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e06a21aa-3847-4b01-84ad-b0096ed313e9",
        "cursor": {
          "ref": "f4590d2e-163a-4b6a-90e2-6c84a1001387",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c7b84f4d-f7d9-4ed8-ad85-fae2217f48ae"
        },
        "item": {
          "id": "e06a21aa-3847-4b01-84ad-b0096ed313e9",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5c04db85-82d9-443c-809a-804e938c9fc5",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3667026d-6825-4cd5-bcd1-ca6a2d96684a",
        "cursor": {
          "ref": "fa93ef9b-9d41-4b33-90e3-0e73d8214732",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "cc87a5ce-3470-4ae7-b3a4-40d4490077c3"
        },
        "item": {
          "id": "3667026d-6825-4cd5-bcd1-ca6a2d96684a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "051fc102-6390-4164-b1cf-0c64d6fc4e39",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3667026d-6825-4cd5-bcd1-ca6a2d96684a",
        "cursor": {
          "ref": "fa93ef9b-9d41-4b33-90e3-0e73d8214732",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "cc87a5ce-3470-4ae7-b3a4-40d4490077c3"
        },
        "item": {
          "id": "3667026d-6825-4cd5-bcd1-ca6a2d96684a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "051fc102-6390-4164-b1cf-0c64d6fc4e39",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3667026d-6825-4cd5-bcd1-ca6a2d96684a",
        "cursor": {
          "ref": "fa93ef9b-9d41-4b33-90e3-0e73d8214732",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "cc87a5ce-3470-4ae7-b3a4-40d4490077c3"
        },
        "item": {
          "id": "3667026d-6825-4cd5-bcd1-ca6a2d96684a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "051fc102-6390-4164-b1cf-0c64d6fc4e39",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b581a01-0569-4657-9044-8f3d61d013b8",
        "cursor": {
          "ref": "37e1dbef-ae16-49fd-8f28-96bfbe187785",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "61d139af-9f8e-4b47-95d2-76f7957bdaff"
        },
        "item": {
          "id": "1b581a01-0569-4657-9044-8f3d61d013b8",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "81f92ff0-bf35-4f13-8bf4-858e51e4b29d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 61,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba1bb844-c336-4d5b-badd-f76c1f351eba",
        "cursor": {
          "ref": "2564d106-40a2-47fe-8ba0-965b19f2c9f0",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "68ba6b93-fe4d-46ad-b6e3-2f59cce03b64"
        },
        "item": {
          "id": "ba1bb844-c336-4d5b-badd-f76c1f351eba",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7b87c127-cbc9-4625-959a-f51cee4cd6a2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba1bb844-c336-4d5b-badd-f76c1f351eba",
        "cursor": {
          "ref": "2564d106-40a2-47fe-8ba0-965b19f2c9f0",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "68ba6b93-fe4d-46ad-b6e3-2f59cce03b64"
        },
        "item": {
          "id": "ba1bb844-c336-4d5b-badd-f76c1f351eba",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7b87c127-cbc9-4625-959a-f51cee4cd6a2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7601f083-3c7f-4d08-b510-b49dd59855c1",
        "cursor": {
          "ref": "278d22a7-7f54-4371-b6a6-2ea683ccd151",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d876397b-54ca-4366-aa44-e48358fccff4"
        },
        "item": {
          "id": "7601f083-3c7f-4d08-b510-b49dd59855c1",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "36dbb0f6-196a-42b9-8035-6cbe2ebc407b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 63,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48967efb-4f41-4cb2-a691-ba1f68625c9c",
        "cursor": {
          "ref": "f583eb3d-db01-4ac4-b7cf-3c0eaf86331b",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "fe3f4bd0-37c1-496c-a50b-3030faf6a329"
        },
        "item": {
          "id": "48967efb-4f41-4cb2-a691-ba1f68625c9c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "20ae1b51-7c57-48c4-847e-b6d58650c565",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48967efb-4f41-4cb2-a691-ba1f68625c9c",
        "cursor": {
          "ref": "f583eb3d-db01-4ac4-b7cf-3c0eaf86331b",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "fe3f4bd0-37c1-496c-a50b-3030faf6a329"
        },
        "item": {
          "id": "48967efb-4f41-4cb2-a691-ba1f68625c9c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "20ae1b51-7c57-48c4-847e-b6d58650c565",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254161eb-887c-409a-9109-93b349525e49",
        "cursor": {
          "ref": "bc35cc13-224c-443f-8386-2e82a2388470",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "2c215da0-b350-42d5-be5f-992fc68d8677"
        },
        "item": {
          "id": "254161eb-887c-409a-9109-93b349525e49",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "e33dddaa-2032-4f36-b95e-8ec5b1ebd5fe",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 62,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}