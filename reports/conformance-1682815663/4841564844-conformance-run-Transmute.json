{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "da48b481-bc83-4fbb-b4e2-73dbe0615d26",
        "name": "Clear Cache",
        "item": [
          {
            "id": "5365fc7c-4c38-4c43-b74a-801c5ef0ba80",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6493e658-125c-481e-8c7e-fd1c1fed2b84",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3781073b-1847-47c6-b69f-6e2dd8ae10fc"
                }
              }
            ]
          },
          {
            "id": "7dce9e42-56b2-4567-9e19-371a7ae1f612",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "05a3b7f3-4c49-47b0-ab16-7a507f8de981",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "bf4c62d4-4153-40dc-bdda-f3624191d70b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a34442ad-9d53-49a1-a9c6-b763570e46a8",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "02d38602-b18a-4d7e-8d0d-2c617f9a871d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "20102dbd-1833-4c90-b3d6-6905ef2595c9",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d913722-ab13-469d-b0f9-b00b060991f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8159260d-3253-48ab-84f6-870e25c3a784"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1d0f2e40-0945-42a2-9b7e-b6a4b35523fe",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d9ddbdf6-8e80-4cd4-9f22-33e73769c4a3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "91c959ea-6e06-4c61-8e87-a52a57e5d808",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eea648ca-9c26-4b69-8782-3b93619e20d0"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c9c56039-f390-4b4f-8f2a-19ed5abff45d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "070c54b1-ec40-4667-a59e-cca1e9695396"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "746027ac-92bd-48db-8282-cf86b13f7f58",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "33d32c73-81c7-4cee-baf6-7993e3519daf"
            }
          }
        ]
      },
      {
        "id": "2413be42-7c84-4e65-8095-5e28669131f7",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "56a32a1a-6aa0-4bd3-9c05-d342980c795b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "21bffaa8-e8f4-4718-91e6-1182219d0913",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "66f9d1e9-ffd5-4315-bf76-740cdb1819a7",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a828b6-b3c8-433b-8f49-9ad2e8e6d4dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f65f4274-f36b-47f3-a6a5-79c90b27bdd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "003d7efd-03b9-4299-bb88-459018cd6981",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e420617-3939-4777-823d-b5653704ee3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e69823d-2778-42e1-85ff-7319c3dd5819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b702550-6bf6-42a4-ba03-6946c9ea9896",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e54f32-e88a-40b3-bb91-fb981c80d939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fd3e0d4f-8d0d-4ed7-ab29-d9fa107a8e8c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b7ce5aaa-7247-42cb-b543-9d6fecf9d6cf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4c33fb99-1607-40c7-935f-136fa42f30bb",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b50db2-c5ec-4cca-b356-f07aa53233e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a12da43-c258-4617-9e18-ad5633d62229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca5eb070-704b-42a0-8e70-b213a68ee745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eb46a84-27da-4507-95cb-e0b8506ba4f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f94b463-c3f8-4124-bedc-679705780dfa",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c51d56-b911-4001-97b4-bba560d929c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36858747-12f6-4f5c-918d-6438817058b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8469efd8-8883-4b84-a803-5fd1a4912c24",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "3e8b82cf-bc9f-4542-9667-6406e6cf8394"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "31710ae3-8003-4300-938c-b792f42fcbd7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c810e790-0ecb-4a58-8aa5-4b54c08c7def",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "af5632dc-52d6-4074-9904-d4b60e16b1cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "110ea7bf-8e90-417e-bd65-c8c6f2155fbf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f4e03a69-99e7-4cb0-aced-8e1ddc110494",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "f43020aa-8516-482c-a0ad-84ed8d2f4865"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dc763c1b-354f-4aef-aa5d-d107dac69a7f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2426d458-54ad-451c-8a50-cd0218c89971"
            }
          }
        ]
      },
      {
        "id": "c7322745-d576-4834-b998-3e6b018f8472",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "28fa082f-0332-41aa-9b54-60e9e6a01807",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ecdb8f9f-2fcc-4463-8971-6ba02f4b8746",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f5df50bb-8650-44ca-8d78-afb5aa07c76f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "504e04ef-80eb-42ce-8899-7f68816da1db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df068b07-83c6-40ae-97b1-91fb1827d0cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f91bc460-9c43-499b-9e59-242d8808c37b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e000f878-729c-48c7-af57-d457028246c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f048ec-d9cc-43a2-be13-9554c738cc31",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "183a73d2-502f-4849-9984-b1f0bc412244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "880daf0c-e513-40e6-b526-f170d845bf39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e0b794-5992-4912-8f10-b805c140c303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "394df62e-fe29-4e49-a43b-8bc8875f506c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7b8a70-7f48-45ad-8512-198fb3ed027a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1831fd62-558b-40fd-a364-b55d02b49c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13d63f31-1480-4dea-87ed-7b98b78e0dc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c5021b6-7f2e-4223-aff1-048fb1e71e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af65b351-25b5-4914-910e-9ba1ce169755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe42afac-b0bd-4254-9db5-c18c78552407",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b016fb54-e5d4-4f40-81ca-2ae31ac6ab31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af0ae1fa-9dd9-49dc-8e83-aae3105abe01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35034867-37f0-4e86-94b7-1a0497e2d2a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37970332-3fe0-425e-b706-a7d43bd2bb10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ff8ed3-40bd-41f7-b7d3-e40fd1301a85",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3117540-de2c-4cc4-b956-bedb56e324ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69e6b001-35b0-4ce3-b07b-89b524592867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f0ff7a-1eb0-45cd-a61c-0babcd54e3a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6d5bd40-4768-41de-b427-537dd04a9550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b2e62dc-0e3c-4111-b3a5-da60a8c157b2",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a40c62-e112-4016-8e57-d4f3d63cac26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "756377c9-0e25-47f3-9454-94d5535a3e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ec30c3-731e-4292-b8bb-1df9a18ba093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59e2d05d-d6de-4e5b-888c-1ab9b08be533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "826b3001-81ce-41c3-8df4-ba0cb8f95824",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa0c155f-c627-4c3e-b398-2685c24024e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a94bd67-3518-4cbb-94fe-dd516bdbaa35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34034462-33ea-4ce0-865b-abbc69013eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f13e423-4133-4976-9ce1-69e604d3ebc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b78d457-4b9a-4ad4-8878-1ca1b5a12859",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0608c26f-4257-40e7-b5ac-b75678bdf02a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "030418a6-5db2-48c6-926e-c5a638419299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7e5e20-d428-4347-80ee-2d5a65b57d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce2fc2e8-99f0-4911-9c2a-bf68cc515c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "365eb178-71ba-4406-b049-2914de90c8b4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b162fa7e-ed6e-447a-b455-3ab42a4b0742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec3b1576-18bb-4a4d-b852-a8443263fcd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4514655e-ae46-4333-954d-cb067b8a8938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e0036b0-8dce-43fa-a076-b8217fffc6a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1055a2da-c5cc-4118-bb44-cd9043277121",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c01103d-a97d-4db4-b8e1-f016e6640dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "febaaf27-9b4d-4407-bfed-3930da5a5a23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0058741c-fc29-403d-bad8-7812f919f2f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82c7da77-6570-42d5-889e-325f58c1c250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae3d9ebf-a7cb-4b83-93a4-7f05994ac4b5",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26478b4-5f96-4e31-a482-d3ffa95ce1b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7150ccf2-31fa-4037-ab6c-81afed1d1fd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da1cfda9-b858-4d10-8ed6-6b572f84d881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88224ed2-efde-4c1e-b2a5-1c4150e64795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6892690d-3ae0-42e1-8c49-f622ecd40659",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1efe9ed3-80c1-4a90-93dc-2a8029ec603f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ebc621c-a190-41b8-97eb-2676dc837103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa6cb666-621e-430f-91ef-cf9b799c7179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "249d75c5-a8df-4977-b80a-1eccf0692ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf2dec8-3530-44a9-977a-a35f6cb7c2ea",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd74c15-8591-4de3-bc16-3e47c055aa4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25a7117d-2442-4d69-a978-49dfdb8ffcc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b9ffb0-0e44-436d-ad25-c5ae759f3162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "23dc169d-abc8-4bd1-93a0-f860b2b9de68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f06b3c50-3cbc-486c-a713-95f08f5ff5fb",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27eaafa0-75cb-40b9-8fbe-b9f0acf04956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "025374c2-8009-4f3c-a8a0-f316a32e6967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc90a039-7fcf-4297-8850-ec2a6fff717f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e44f76b6-1dad-4f80-bbd7-389de228228e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf4b0b5-3028-4743-a07c-49b57ef0a23b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e892d45b-ff5b-436c-9898-f2234547fcbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "978ec5e3-d21e-46c3-a3b6-c94cd10dbbf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88efcc75-4cdb-4eb8-9b4e-869fcd87187c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45163737-a9bc-41de-8c63-aee0cd06548b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "502aa34a-f95e-4767-9a6d-34dc831c21f5",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d3efba-fc11-417a-b5d6-f3372d028a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e046947-22dc-4ec2-98cb-95aa22414f16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e29ca8d-bedb-4b4f-b81b-ca35f088a19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6ea9898-ce30-4fa2-a339-8bc896baa660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2b4f6d-9a46-4bff-b73a-9901b68161ad",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f792e2-56fd-4fec-a8f9-a82af6e4198b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d33cdb0-f5f8-452e-bbb0-b05afecb8210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de23056-1ad0-4fff-8df3-a4cd19c9046b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28970820-6184-4792-aac6-4cdec51382cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd65158a-9459-43ee-8c7f-523295c2868a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fddf6eb-fdd8-4338-944b-14efbceb5ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7675b734-339c-4022-9e6c-207cdc98249e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da43348e-d5ca-4e71-9240-48c70a95723c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca041440-5c11-455e-8e46-5240633acff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01def57d-8012-4d5a-9e31-3ee4b42c0327",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f0d7557-7df4-403f-a30e-6902efd2d0a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2857bec-bee7-4efd-9eb6-1cd7c317604a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd8a5fa1-1433-4917-9b27-d9eaaea668f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "143e09a8-43ab-442e-9a39-8c2ef96f280a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac58c33f-cc50-4823-8968-dd269c545b64",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7d9b81-5b7a-4805-9ebe-37d8277d71fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e65cbf7-8131-462f-b959-b51ebf87ee8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "327f946f-7d15-4f4a-9e77-826db8d6996a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8abf3957-7f2c-446e-9950-d4f2c997002c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8e7646-ec4c-4974-bfd9-f573454347df",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04df1cdd-d5e0-462c-a87c-66fd72419f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e2fc7c1-7be5-46dd-9aea-8336fa9f3ec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5995c8a-437f-4372-9238-ffed9461821d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f93345d-9c3b-487f-9fd6-c34bc8249e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6448c077-5870-49b4-806a-c8a1be260f01",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b50bf5f-dc2e-4b73-828c-f5836aa1c858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50d7a54d-81fd-4ca0-8e02-6f1f73348152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd48fc76-cadc-4d92-9ede-11475f52f81a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "db3808e7-1955-47c9-99e3-3eb3f7ea52a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5577bf41-9659-4c5c-b9b0-6231a70f16ed",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa1fe82-de9c-45fa-ba11-c5e6b2b69678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4477d280-063d-4ea2-9dcb-53185b065b2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01284621-53c3-4a10-b3d4-c51ae4973173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "13777d74-5829-4d0d-a7b1-c2b6f093b397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a543f6f-7a7f-43ea-9bd0-f852fd6db509",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6ffe03-70a4-4178-a903-bd5ec8ddc67f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01f2efa9-63cb-44bd-9d35-a04fc03a3399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3026dea7-87e9-44d8-a5b9-9f9709fde4ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4900d3c1-4750-4674-860e-711f003970b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec6e95c-ad19-4b29-852e-8e41fc3edb83",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8219f92-7902-4bab-b806-b2f7dd35acbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b874d66e-6f20-4b9c-9d7c-e0684b09bbf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf9984b-2038-40d8-a97d-7919a91e5fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1da9fe25-b1a5-45de-aba1-7024ec50f74a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a55d9a74-4761-4537-87ab-de3890acfb16",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a0cb7b-51dc-4ffc-bf29-8ec93d068546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5b26694-e571-4cc0-970a-df6b6e91e788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b8e482-833b-47cd-b649-a7f2a63d207a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5654c81-39a9-4f10-a90f-f8a2f0dc9e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1e0beba-bae4-48e5-a48e-c1ac9df08592",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eff0f04-5905-4967-8311-b0b9d3dbafd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43eee6be-e7cd-4e42-a0dd-0fb0dfea2a7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be8427a-02d0-4c41-b90a-9201c2908c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fb1975a-653e-4e28-a76d-ef46c110c885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5de0eaa-aa10-4eee-8c1b-6e617dfff6b1",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe09b15-52ff-4fef-9e2a-1d814c236572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffe8df68-68a7-4767-a2f3-b6e254da2bcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a881820-f1ec-4472-8bf8-ef02296d1cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6d2d142-be0e-4118-86fe-6f0c66d7a2f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19860a11-cf56-49d8-a850-4a781ff7884f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d96b7f5-201d-4847-80b0-c6b9ab2758df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe4b00d-ca1d-4532-b44a-a1e44c8622c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3883f1be-c967-450b-9209-6f419add62fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "44adbde3-224f-48f2-a10f-5ec19608649e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e0aaa51-b509-4099-9f6f-e979eb40e392",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf9eec7-6fe0-45b4-b997-e1e2cadbc797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "917da5e8-8716-4bc1-bdb6-ed71a5586de6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b2e750-2f7d-4a19-8d7e-78854d88297f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a032f19-87c6-47f4-8d84-2216b83aa15b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f7953c-6ac6-4b02-86e3-aef44dbba1ff",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1392291a-a10f-4843-8911-7358aefef8ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f35317f5-a9ef-415a-804f-a2da7a2a0843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a54f55c4-baae-4597-92b5-078ae95c448c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a02f310-42fe-4519-a6ea-8ee200c2d04c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28fa5ffa-32e6-47ba-ad28-ac7a7b7f0f72",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec5a753-728c-42c4-858f-fd66b1bbae06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28674f4e-7eb8-4a07-8c90-e49e312dd238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a75eed-1c50-4a98-9a8a-7e666b31113f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "53d58d5c-dcb6-4376-9a08-2310be84682c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f70abf2-8f80-49c8-b7c5-852d54e4e80f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53ae3fe8-01f0-4441-b61b-180e034eb6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61b772fc-54d0-4e74-8f65-bd69ba644157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206e3163-d5d5-448f-85ba-efea87c6c4f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "01e093b2-63ec-4ac8-86cd-1542172c94ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d948e8-d975-4dbd-a960-ea69a1ee5cc8",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd327d5b-0a70-4b04-81b7-4ab9e22640f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bc79421-c335-43df-ac8f-f68088ae2953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c129cd-71ec-4e4b-b1d2-4483516564a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6d4088e-eb8e-40db-991f-4463c91041bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93969ce1-8dc9-4491-9242-c3e3b9ba34fc",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb43a5a3-c0ff-4bfd-abb2-36dee6165cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd722933-1c09-4bc6-9c96-7897f615311a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ddf387e-b875-4bae-8615-5c33dba96f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "fc7ce07d-eace-4b2e-9510-4a7d9f6e8bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3857b209-41bf-49de-8b06-54db6659848e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "904c4fac-dd90-486f-b8e0-3825f2bd9ffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef76d0a4-13c2-4b83-a051-bb2ca4ae86e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e9ee2c-55aa-4a53-a8af-5c206ed8088e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a9baa0a6-9fce-4483-a646-e8b6c9641bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a74d088f-6a0d-49d2-b4d7-7c40e53a41be",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04567e40-0410-4c82-8c2d-6e3b3b6dee6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52501ac9-123f-45b0-9a74-632d4f583378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "794beaf7-e125-47b7-80c4-2067d75988f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6296a39c-e4d2-435e-abb5-4308c5f043d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7bbeef4-fed5-43f9-a127-a3387a49a60f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32faa39b-63aa-4627-bc9e-f502c47936cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab845c3a-c860-4ed0-906e-a72937a82111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d6bd62-1efd-4116-9595-af79bfcf3a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "df544066-f537-4bcf-bfda-f7ccc40b3d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568e2b62-25ef-4c77-8098-f5ac734dac42",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a1ed050-43ab-4d76-be04-039ba97a7d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7380991-b08b-4961-a68d-be8f5798947b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60aef159-31cf-416f-b088-971c9a3d1faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6f12ae9-78a6-44ac-b202-b7150a82aaab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "435ead89-26aa-4e4f-930e-98554b04bfbd",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f335cc1d-7225-4785-af9d-4ed528fddf90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00267a89-7c43-4fb8-847d-fada56ebfeae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "108dc853-8fc1-45b7-afab-4c9caa99203e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8357da4e-33ab-498b-95e4-b24731e9f248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "359d863c-e0d8-42f1-9c91-52a6fc08b7fa",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da6ea576-e640-43a5-9967-16bfef00b377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "173568ad-528a-4975-adf9-b25e228c5d4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f2d24d6-ed85-4ae9-a073-1dcb59239c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "901e17df-f5b5-4b8f-ae50-03082c96291d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a22173-1223-46bb-bd32-611776d13e35",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dafbf8c-ece0-41a5-8dda-ead7add9e945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a59d742f-0d18-4fb5-a616-e1a45912b46c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d6b5e3a-dd83-4406-8792-8e95726cd8b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "868ce3bc-c13d-41b4-a2fc-3808b57ca74b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feaead1d-a7a3-45ce-960e-e543b86513d8",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c754a614-9de8-4288-8a56-b0be77dfad1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edb62fcd-7a3b-42fe-945f-e852967075e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e721869a-9f9a-444c-a2e6-440d02ffb85b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e899beea-3a57-4953-b1e5-a6baa1af831e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "574fdab0-efb3-4865-aa81-5aa19b9a104d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67710443-9a2a-4387-8303-520b45a19610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7518fd69-bc8b-4883-9f59-1dd10cd81087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87509ac4-d9c9-4a15-a327-294eceab0741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "01715ea1-90e1-43d0-a425-30261e51cbe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328ec6e8-c3fd-42a2-967a-69cd70295ba4",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e4a41dc-d11c-4bea-8e95-ed0189b9cdce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cde6bf3e-9092-4514-9568-2f2ece117c35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e9dbcd0-3500-4257-a1a8-0a93194e7095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c7a5a58-4de7-40c7-8be4-a352dec7af33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9308927-2059-4e89-9e86-6079dc6766fb",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce1a355-5e5c-4d1c-85c8-a2216a5d8ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c85298e-c111-4061-b509-177b7d91793f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f9c3ded-4feb-4cd9-9dfb-caa32caf5be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "257fac3a-e84d-4ba8-8639-4868db1a56f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90dc8cd5-a5e0-49b5-9b4f-ea6df83e58a0",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb845cb3-68b6-4cb7-a653-c81715a6efab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81145f0e-9c10-4fe5-afc9-4ef9f87181a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d1bfde-0a40-4e43-a800-c565ec4c82ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4940e4d4-f7f4-4525-91fc-1a89fb4bb6bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4a4633-c58c-474e-851b-5ff1d2fc1c0b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "903a229c-755d-4709-a38f-e175ff1a4d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b4558fd-694a-4832-b9c6-6892fcf43601"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca07cf79-8920-40ab-b425-6abe91158b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f24c05a-928c-48ac-86ca-c3cc9d4384fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84b2f675-214d-4956-af5d-cfe4a8a62a58",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a5e3ec2-12e3-4507-93fa-664beda62227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52bf81b3-ca97-413a-8a92-c81e8499f54d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ce8299-95bc-4f6d-9990-90e1ffed1280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e5cc332-ed47-49d0-8702-99accc8b3ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dabc73c3-0a07-4edd-bee9-7d431d875ef2",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c5b1288-8e61-49da-b2c8-74e69c978d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dfc0c43-319e-498d-a375-e0dbed5569b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be317e98-9b61-4ae7-bfab-6b954c529236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b7424590-e1bc-4975-90d3-4a3751bb42b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae90a8e4-b811-4f74-88c3-c0085df61510",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53570d62-29be-4e08-ae96-d8b22617be28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00d2cd30-05d9-435e-9b27-433e8f1f760f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d857b8f-3ede-46fd-85f6-6af3672f1d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f393723a-0325-461f-a813-50c6fb192d33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c7bb88-02a2-4683-8c62-010ecf4d61c3",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77eb2115-d7a6-4e8d-af30-a24503ddec4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4fd3955-4744-45ea-9ac5-b6908b114b2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "606f2cc5-b617-44d0-b240-026903bdb1c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fed03d1a-df7b-4050-927b-4eb4297ffba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa17997-9175-44a4-bf9c-28c317c07f9b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50df026d-0062-4673-aee2-b7f74b645876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "932a7578-6f2f-4c9c-87b8-af38fd98dfd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e226db16-4481-4887-a264-241787db9ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "581b6413-b968-44d0-9381-503169bac8de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96573754-0788-4440-acaa-817ab982d781",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb76a13-9c3c-4406-9593-a06fb2d48400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60bdbad5-4baf-44dd-b1b0-67b3a96e2331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f8d0de0-e5e8-4f24-a772-ff2e57853335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6107978-d895-4eb6-b2df-ce5013f94b4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c73a13d-fe59-48e6-b5cc-b06f20840d64",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ca12c42-db92-4e82-82ea-bb270a97bf33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0d18fed-9a00-4fe5-b342-dbda7e16a2da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deabe2bf-6b6c-4ed3-90d3-41432b29b72d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ccbdb52-9153-4e54-997b-29974d57b507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cfa96de-6a87-4921-8f1b-4196b9c06d75",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2196fffe-4be1-45d9-abc2-5150bc650f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c26c55d7-196a-4b9a-8f76-b9e349f233e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "611779b8-22fb-4611-95dc-c22744b4f2f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "19c4ae91-16eb-4654-89af-a29a2f5d9203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7631d5b-da0c-4d7e-a28a-e194e2747217",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "764fb998-38c9-4b08-82b6-beb5d998f72f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e97e0e35-cf40-4a5f-8e10-262d88eae88b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f63a8b0-ddd5-48c8-82cb-0b7ca96297b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e75eb94d-15ed-422a-8d5b-4194ac2c59a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce07d89-b3e1-4c5e-a040-25cc3cc2c918",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "923210e6-dbf3-45c1-ba5a-fcf3c6747b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ebfb162-5dc3-43ab-88d5-e9b0b91bfddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4593a05-5eb9-4e1f-9789-498412499200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cdf3be5e-760f-4459-8063-4fa50160afb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c40b6a2-024c-43b4-8db6-fae636685649",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee72f26-afa8-4c3a-a13b-2a08c95ed4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "285b14c0-bfc6-416c-8ab9-32251bce096e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb76060-c6fe-482f-8695-ce26b88b4b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "38f9935c-1ab6-4e0b-8cea-f8cd1d4af0db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a03e2e-8889-4485-827c-a805f0307880",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e2a545-674d-4b43-a17a-393df1fddeaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c102079-a3e6-4f3f-a2f1-7f5b5500c4b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5dc2725-6597-4442-a016-6d2b1431176c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a3c7c10-8fb6-4a98-bf65-6bdd0793d6d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f95619e7-5ef9-4a04-bca8-236c7d8039fe",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba538c5c-18d8-4c1f-bdbb-9f81cb682453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c9e5e78-f0fe-45a8-8257-b8f520e61c03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d83ef0-51ef-4354-9261-959c25a42ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "656b2bd9-3342-4aa2-981d-0e1e6778e301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b995b5-6444-4e97-ac30-6fe6a9b5aa21",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fbac35b-3cff-49d5-a855-7dc70510a1b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d85fdfaf-a21b-44e5-a3ce-942cc1a98a07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb70665-ab51-4ec5-85e2-732da678ba69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "33b81b9e-6bd6-4a51-9fd6-c4f245e5393e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa879e68-6ab5-41ed-8d9b-1158e5bed566",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f440f8-25cf-4f7a-9e63-fd0f90c9b7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaffe398-866b-435d-aba7-299cc79eede6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7316d37d-e692-4a82-8260-d6c1e7f811cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "37297e7b-b2e6-4b5c-a554-4415ec820313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfd98a7e-28c1-4807-a1ff-07df605cf5b5",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f91963c9-795b-4e58-ab86-4a23e022d790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9926d14-2dcc-4c1e-8981-e535ac2f59c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f05550e4-9941-4d76-9737-1c17a6fd9e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8361199c-7c6c-4a64-aa87-8d04a0ffcba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c5b4713-ab78-4b0d-b2c0-074c44c17660",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "788c1856-5219-45e6-b023-4fcd875e893b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abcd720e-ee57-438c-96de-f5eafb5cb152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ecf550-b8c6-4eb0-9fdb-c7db89051584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "136ca233-f0d1-44b5-8b5b-f43861a5462f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5aba2b-0a27-4239-82fb-7bf5cd6c6e46",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1fc2ae3-15ba-4840-a79c-1ff7785fff4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbbce9c3-e666-42a8-932c-52199fe20e55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a7422f-4b05-45e9-98b2-cd871e636a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "884039d9-eb09-4c54-a0fb-36d5c1b48430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ed6a38-1ccc-405f-93e4-e981ff5260ca",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "077642d4-7c40-44fe-aed0-310573f5a0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50825c67-10ae-429a-a86d-7e919c544922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0200038-58f2-481c-aa97-d5912a45e04e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "53768a65-29e2-459e-a209-525c96e80d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e3ba0d-7184-44b0-8fe0-1199acecc827",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "238a1a0a-4cf9-4ab7-96bc-8e27771620ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f985e926-5c9b-4b5f-b6da-95c9d3dd3f1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a0164ef-167c-43e5-9a1c-c765b14ebb8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fa9715a-81e1-40c5-87eb-62ec15edd0d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4952d5ec-0844-4a87-ab4a-a2417b71e0a2",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c10a87-11e0-499d-a545-9f8c02041037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31d784b8-148b-48a2-9b9f-90fd2b744908"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b46fd2ab-6040-4674-9db1-fbf2f8ff3944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e61df52-1755-440e-a37b-4f6c1c46eb11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5bc3bf-c44b-4e77-a64d-a0c1df55d487",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a18a988e-fd01-4988-97fb-6ee3026f9b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "290853d3-676d-4de9-89af-555d0dbd7958"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ffad42-f6c0-4dc3-b0da-ccb59f0206d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "78beb1c7-7791-4cbb-be8c-e040a15ce076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2bd616-8529-4571-bba6-03a208229a85",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c57889-ef09-4fe1-8e75-c0c0b70ea367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bbd54ad-5a91-4136-a34c-f61d7ff8deeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6474b61c-c03c-4664-9d46-876d38945f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b8bd364-31d2-4ed6-be7a-1f20780cea49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7f1b2f-7bb5-4c90-a122-dcb585fe21b6",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a440778-641b-4617-9777-a4976cbe192e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23c6b76a-402e-4e8a-9a26-122a28434be2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6254be79-081b-493b-939e-728ced2a640a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d90f9a3-4d00-4483-bab2-7b82bdbd546f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b6a4c1-30d0-4b40-8e99-a0605e5543f7",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4467237-d25f-4fd4-bc7e-ca127ea9d6f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc16839d-9b3a-4696-a6e0-382669c28ff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a023c3d-1960-4b73-9fbe-235335266da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "869ceea9-271f-4593-8b5e-16e24c20d8de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190dd523-a03a-479f-a596-6b1ce5e9266c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c77170-05a2-45ce-87d0-c5eab1a1eabe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37a486f3-e1c1-450e-a16e-7e96f76b7bdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c31b3cf-18e6-48fc-8d95-02237748f9a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f8a98686-7d95-4fa4-b3b4-a0f545b5e81e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f754f188-01f3-463d-866c-b0c4d894a437",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8403478f-2bec-4074-bded-fa96252274dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0305058-7d0b-4056-9f2f-889304d02072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ae7ed1-49fd-49e9-8212-4248a6498706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cf7b670-b806-4bb2-83bb-27ac75e86158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ea03b31-0f0f-4892-8495-88aef4e5e1cd",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f05b7dc-30ab-41b5-91a1-6a5f03897279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40306e62-33bc-4b97-ac1c-93bf7532c11e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d59dced-509b-437e-8cf9-22f36e087b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "66c3cdcd-6f93-471c-a640-078910c6572b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "489056e2-3ccc-4bb1-8347-1783a390067d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "defc8b97-f618-41a8-bfab-77e3178139d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6cc25ee-358f-4958-8346-89b087d409f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee6fb038-02b5-4cb9-a4dd-188258023c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "526e8024-2f10-468d-8316-bbc5f499f2b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1aeb3ad-58e3-453b-a301-8b87957a4cfe",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6b8f02-6bb0-4c86-a513-b006818e4b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc912c50-c65b-48b9-a69e-14fb85095f94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "854e5598-3c9c-466c-9e63-381cb654d4a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cda14b31-9d3a-44b1-b676-ff0620e2c64a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0fc8b4-289d-4cc1-92f5-3316f453c348",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb580227-3f84-4ee9-93ef-51236b2a44dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ea5ffa7-a79b-4f7f-b231-1c170a8ab060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c87a628-8aea-4c95-95cb-4cbbf96319f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7a09ac9-6041-442a-bea6-56afd1ed8ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eff8d40-6939-4ba3-83ee-cfd5860b61e2",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8656c9a0-2fde-442c-ac3a-bdc0e690f91e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2ca5345-184c-47cb-83a0-3c5bad35e929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9916601-45c3-494c-a257-2425418dcb66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "92f6480c-c5db-4de8-b6bd-0ddf59bde6fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69850e3d-37af-4968-a368-322042a37b80",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f0ccd3c-196d-4dea-8093-b8b65e781d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab05c452-26ea-48c5-9ad0-48773f74ecc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca8ed82-c8b0-4d5e-89bb-fdcd23264eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "944fcb87-aa7e-4f1e-b2fc-8c6fb87e9194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3583d6c3-b73b-4f31-8afd-38e638db35f5",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa92bf7e-6d9a-4251-a432-527b3e539195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbd42b8d-b663-4ddb-beb1-fd5ef7c77a16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb0c653-5c45-4cef-8efc-f8b0917c9145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "64032b9e-7ca3-47ae-b746-5c821b63d22c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bea87fa-6299-41f4-8a81-395ef1ce7504",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "203e26e3-fa2d-44b4-910a-137b042c5ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68af6b5e-7bcb-43e0-8f53-cdfcfa2e6efa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f942fc49-9ec2-48c8-94be-2f226165a55c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b89765b8-c79f-4b89-86fc-42393298ae82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28e4849-9859-44e6-8ca6-ecbb0a0b27ac",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f79500-d010-4a23-a11f-00fd0338ac91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b5c50c8-5ff3-414d-956a-585bfe550824"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff4bc3d-5302-4ace-a7db-0151239e10ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "235c52bd-6fe8-4046-91e2-403916cb85a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb009a86-aead-421e-8173-c6481310357b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24de8c27-e02c-45d1-b32f-e5f17a7ce8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cec449c7-b8ed-43a3-8966-422b42527cb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b589325-e50a-4a16-9b92-35bb1b3ea731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "16d98168-6c9a-41cb-8cf4-85831c24d22a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0544a0f-5eeb-47ac-b0c7-fa50d0947a32",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef1adec-46ed-44e0-9cb0-fb42d3a6f07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6846b856-60be-46b2-8726-fb7114c53d8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "532d63b9-fc4c-474f-9972-4178adf0dbee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aafca006-b078-4137-a029-8e0d2fa0c42d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab6af6c-60ca-43ed-8cff-62c21ea5df16",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6845d535-6cb0-46d5-8d96-cba64a0bd363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50a08a07-436c-4e07-b9d4-3d58ed32dc2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03834dc9-82bf-4868-8395-0384408adf74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3708683c-cc51-4029-a9be-284960e1e479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e31cc875-8638-42d5-a29c-175c8c07dda5",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d020bf85-e274-473d-894c-c7fc5a9dfddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb7c469d-8f7d-4b4c-8d45-4e5cf7d59161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6024912a-43f9-45b3-b2dc-5edcca0cb7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "32b877ee-6d34-4533-82d6-6d1f8e7b2c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a275dee-d9fe-4740-95a4-2b343f006002",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abde3038-ba4a-4acd-aab5-7498cb36627e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cd4cede-d2c7-4250-b350-a24a3f1b6a5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7b8033-7270-43a0-8959-2e23170d0621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "59ad758c-6eca-45ac-a526-1f91f5844a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8559b19-c779-4a05-a6a3-8c92f6e17bc8",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8850d641-d522-4368-8308-c50678cfa8e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98613ab5-1fe2-4434-b10d-43ed495b63ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf455fc-39bb-465b-a90c-6dd59a0493a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d2a7344-bb57-4aa4-9ec0-5245c578d278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14cb3ba9-79c2-4999-92d4-048f5887b78f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a625636-de07-421e-83ac-d09a9704550a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c636139-a1b3-473e-931f-826409a4e93b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0e7601-a2f7-4024-ac78-502085473897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "65dc9bfd-387e-4865-8bb7-8ed96a714d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ce1022a-2944-438e-85ad-af1c34002e20",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "512e1401-fc34-4573-bc2a-67ca8606fb5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2a56e2fa-b5d8-4171-a54e-4243fa329a58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f37cc9e8-5ea3-4d85-a516-ccf559c8f333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ee75bdb-f831-4524-bf3a-4d8379bad133"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6d19a3bf-8e1e-4328-b630-62f26a38fa35",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "377f1acd-c4fb-450b-b99a-b9cf50961f83",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "769b3922-0bd8-48c2-b98d-05dafbe40e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c8e07511-9a5f-4213-9001-228c3e4a4c49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad6b3e4-a554-45db-b148-956bfafe3ce4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20a72e6d-2530-4eb3-8828-67d4d89eb32f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db9fa0fd-41be-4655-b5c8-d6bf0e3610b8",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "476694b2-3dfd-4a44-a9fc-fc6e0f150adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "16f15c6e-1b6c-47f6-9519-0081c915de4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "581beb1d-4827-45a2-ade9-b3c51b91ebaa",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a978043d-ca9e-4dad-82ec-edf36815d9a2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "997ad8f8-e1a6-4c00-88d4-f5f7a0d44195",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5311c05e-5d39-4980-a4e8-64bef507abda"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e677b424-ee4c-464c-9a8b-da398c18d553",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b92f6831-71ab-44bf-a1cc-ecf9259deeec"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b836de51-9e98-4376-b0c6-77257ab921f3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b7a24103-45d0-429f-8a02-2c957e5e30dc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fd21e211-213c-4afb-9cb0-3eab98ee44a7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "123bbaf1-7cb2-4c29-8df6-426e4e08cd1b"
                }
              }
            ]
          },
          {
            "id": "67cf2a4d-37ec-4b0b-9a41-e29098f1963d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8f1f215a-e7b5-4fc0-81ce-3bbf45f31555",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d98b1f17-86f7-4964-bc20-f3bcbe1c1c40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "06c13ad0-0278-4c0e-84ff-f768e3999d72"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40d52ccd-ef00-4807-81a2-ebfe7b5c4193",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "13ea39f8-0df9-4cc8-bf09-e46619e58377"
                    }
                  }
                ]
              },
              {
                "id": "7057bd32-a1f7-44b9-8f6d-ea97ef63c1c9",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a113d5d-c3c6-44c3-b7eb-364d3a74585f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "53b44d79-c1cf-41e9-ac97-036689f27bf1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c60cadd-5ebf-44d4-b12c-c04257bd1b45",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0471e043-8690-4d05-9925-da9d8ad829f6"
                    }
                  }
                ]
              },
              {
                "id": "f3bc04c1-bc8e-47ec-9734-226f5c2598b7",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b861ceff-a558-4c23-bd8d-494106b97ec2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "46fa469d-5a42-4be9-85e0-59c42000a5bb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "539fd147-fc66-42d5-98d2-9441dac7b9e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "84eaf8f4-ef07-481f-9055-95de457473e4"
                    }
                  }
                ]
              },
              {
                "id": "7d47c6dd-3753-46de-9c87-575063b349c4",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "74541262-090d-4242-a1c0-ddcff6ed5f4c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e889c59e-4ca9-4f77-b93b-a7da3b4e18af"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3857e67f-86be-4011-adaf-19745ff3ffe8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a259cec6-ca37-4b1e-afaa-e771a1b6b7f8"
                    }
                  }
                ]
              },
              {
                "id": "b3ce94d0-8050-45c5-8d8c-44d96e0982e9",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ba8b64c-278d-4150-a92a-50d7040d1985",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bb79b91e-a38b-408d-af75-1f5f6c4aeaca"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9a0d3c2-ad13-4e89-847c-db06074d8ea3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "fb43e7f5-efff-4225-8e1f-288e60719a58"
                    }
                  }
                ]
              },
              {
                "id": "bb9e3a22-28c5-4992-9ca1-95955cf70859",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0df4c5d3-6d8e-4912-8868-f09984f96916",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "386388bb-512c-403b-ad18-f28131bfe6e1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a47b67d0-ee70-4fd9-9883-cf23442aa085",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9c08dda5-308f-42b5-912b-cc371187d9ea"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1689211c-b746-4a40-b31a-7fb8de9efd3b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b63f1b3c-4301-4476-8e9c-b53a2bf3eb86"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ed4a9085-46aa-43c6-99fc-6788c0a81e88",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e4bd27eb-c3b3-4bb1-8446-e62ad635ee6e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f2266768-ae8f-4b49-884e-fe86fe7fc987",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e202c578-3812-4f63-960a-46952b56cae6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "baf34e76-1b7e-48d7-bb73-4096cbe61752",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "78bd1ef5-baf6-404a-b50d-46483277959b"
            }
          }
        ]
      },
      {
        "id": "7b0b82fe-e6d4-410c-ad79-e6434ebabf4b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "45f41659-6ba6-4aee-84cf-a2b284420efc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "543014fe-1a35-4597-8a20-67dfb086ad50",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d57244da-6e44-4907-bb9e-5b83fddf26f1",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4118df-6431-4837-9b22-aa29e92f60cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5382413d-869f-44ab-8265-69f504ffc0df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b865e981-5021-4d68-8617-419974ac7ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6d46093-b01b-40e3-a566-73b1ba6149e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e9d0148-343c-4a80-a069-7b6b50327332",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7530eb92-ce79-4c0e-95c0-16d22ce9faa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bf17d33-27d8-4d50-97c0-c9901fac51c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc9e8f8c-e107-4145-9c4b-3161dbcb02e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "39b663d2-39f5-4507-9031-77e863e6db22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85af9a2d-582f-497b-aa3a-771e779b930e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b85b1b-5ced-4372-8490-24cf17b55f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8870c9f-b089-4126-b86d-9535fb82b4fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96029adc-74cd-4b71-a724-093fc13f0755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e42d3ef5-d454-4285-9c94-7085c02806f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae8b2ac-7c09-4a31-9d9d-b52a7e4c90e8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd5aa83-7e7f-4f58-9199-08cf8814b797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2fe25b1-39a9-408b-bf27-c1023ddae0ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2d32919-e45f-4703-82c8-a908c68dc705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd2cc479-ccec-4b1f-8ad7-43357b12a5b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6545836-f705-46e6-81a7-7ec08c973a12",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c844e16a-7edc-4256-aaf2-41ae3f41a7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a97fb56b-8f1f-43b4-b906-4e10e34c7957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab3412f-0956-4f7f-8cd4-257caed7d7b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c598887f-b333-4f03-a9d3-343d8c73d734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8bd87fd-3263-43e4-ba22-a3381b9d7f16",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c948f412-607d-429b-9317-a7024bd54243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd65889b-07ab-4fc9-bbb8-f37e6ffc7134"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e167a588-a0b6-4060-8f7e-26e3ea18be7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a093787-98ee-4c79-8a62-42ca84b9b2a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "596b6d79-b918-42a3-90b9-229c3e345c80",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef713e98-b39b-4fe5-a977-107808c29829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a2e7336-c000-4844-a34b-42f7ae406954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a20d67c-286c-49bd-a61a-03e888c7501b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "341b7ba9-39de-4784-a9a3-6e4278d24514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6110f713-fe3d-4c8d-b712-81116854a1a7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3df356-6cd2-4cf9-a4bc-5500308ccfe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "897a685d-e6ca-4b2d-bc09-4e5b977de8d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb8bbc5-6ff7-46e4-9df9-b06fa215724a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b4608d6-5357-4672-8ae6-61d16c8dec4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cadca99f-dc70-4a88-98a6-80b4964f0c84",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "870bc7a2-219f-4be3-9ce8-86b0dcfad4e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c75b806-41f6-4db1-bf7a-4ab62085c03a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb4aa45-8243-4f4e-96c6-ba25320ec9f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "86f40d89-ba35-4b0b-b201-bf011b3069e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e1087a-fbaf-4552-9961-602a77562124",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9082efda-af96-49d1-91ca-9389140143a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49fec9d3-dc82-45c8-b691-ed701c30fa01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b12ee4fc-6567-46d2-aabc-0e89f1ae5a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d18e3a45-cadd-4309-83cf-4c582096ae34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3563880-c532-417c-a61b-8026d27b3dfa",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79cf3397-1997-46cd-a6bd-b6f39333aece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67587c4e-d46d-4b41-9d31-7fbd3263bd80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a98448-e7cd-4d62-b354-05b2a0db6b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e9e90f29-29b4-4d73-86c1-5058ab2029eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df4bace-f1a4-4937-b7f4-aba811f3fc0c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d6a6b4a-7c52-4774-a2a0-cc440691b2f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c95b5a6a-8ed9-4579-8420-029fbf2ebe01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa43bfb1-1e69-494f-a827-f9dd12c101bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e05bae5a-6a47-4fb3-a41c-e1bd4c1f428c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f68dab22-b019-499b-9be6-b301a4c6c214",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd35b54d-c95c-42b0-a982-e2b16ee3ae86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d2d2ab2-95cb-4ef8-9c4c-e93e25af945e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "719910d6-a77f-4294-adf9-c82379796db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b59aaaeb-3f90-4071-960c-6781cff4c363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d7e088-badf-469c-8bfe-a9aa2702f30c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e97413d4-9540-481f-81e7-01a48ee009cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce08462a-a146-498b-b736-ee704d707914"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a142c52f-72aa-452c-94b7-3961a2b8477a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad2b8a9c-5e90-4d10-8ac6-4b8cbae0f307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adbcf890-2375-405e-aac3-68f327856371",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "169f0ab4-b1d4-4ec8-a486-1b61e0d7799a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b72f410-f6e5-4e3e-a469-6eb94d4f2b53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be476e0-c3c0-44c0-aa70-962a340d4034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "151a89e0-b855-4811-9a9e-d2eab13ccafa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a93a38a6-e54e-46ce-a35c-d717147e9b7f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd69667b-cc41-4044-97cc-21016143f637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbf1e917-1169-410a-b2e0-76dd9075cf3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d706a49a-ddf2-4c3f-9ea3-88fa66307792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2757ec28-7fb0-4715-9760-e88faf2579b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "646ae1bf-0173-496d-9fa5-87bcd2b68a2b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0506d35-b2e8-4508-962f-ecead47cfd96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7de1f1ad-7e4b-40f8-a30e-42a6db8dd234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f468a269-12d1-4ae4-8ff9-8920616f03e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "530eeacd-088c-422a-a117-5c052e8fb233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe73c983-0c0b-4a44-b5f0-688273ee303f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "093d7365-4d49-4a76-b892-2ad98a70a936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b014e09f-a9ab-4585-8f57-90451774b6de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e534538-d06e-41ad-85c9-d597d659126c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e27422f-da6a-4ccc-8133-55f838d3907a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aadeecd1-4069-472e-8653-af2c4b0e2a97",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea1ec8d3-e0c6-4a79-a7aa-a08293745ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "096571cd-ff1b-4162-938d-492a730996b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc0d69fc-d6c3-472a-b401-eae4ce6296e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7ae5317-9d92-4345-98f8-723048e8c660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0b3e0c3-0a24-4d53-a842-9e7d0212ca91",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd814df-2ddd-4869-8d51-97e4080609e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "484b9b8f-1955-4fef-ac12-a8ecfdafd7e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06dfdce8-14bd-48d5-ad0a-977ed6c52e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91bbdd72-511f-4862-b228-78cb527f55f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a14e38a-d5c5-4cc1-a86c-1cfbc5326e41",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac86889-edec-4dd5-b5b8-d26ecfba3d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "201f10da-bc70-4367-8fe5-ba3ffe38c042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7217d680-c034-4dd5-b919-298d6a28bc47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0056a262-3c9a-4a04-8c3c-9a05ca30b7d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b21457-7fa9-4916-bea5-cfbe0ffa5855",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da091a8-4765-4c98-886b-74392f34c4f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4934411f-3b21-431d-a9d3-c8ca6a036056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c59099-4833-4f89-ab67-d927d53ed3ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3fa0cc3-3dae-45b0-adfb-6d719720ce96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be357028-0205-4fb2-bb3a-6abd7c408d67",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc323dbb-a713-49d6-94c4-d11d8affc6ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f440fa6-17c8-4f16-83af-545b1cfead02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fedb3016-cd3c-47a2-a079-9a79b617df33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30a5ee4f-ce21-419d-b262-ccb74a8bb307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238f8133-eecc-4371-b78e-f5c758f037ae",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd2c863-f928-41ac-bbb1-961eec1556cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf46786a-02e2-4a8e-9bab-1de9a0686786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9507c680-a3af-4cf7-9535-8a088397d601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "002c5899-942c-4649-80ac-db723f2732a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3755fefe-a41f-47d2-838b-c6e336997867",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cd429d1-5446-4dc0-9366-46246e1b6f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "426d747a-cb2e-4aba-a30e-397b20b4d6d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf500cf2-02e0-412e-83ad-bb6da903caf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "825c9324-a708-4814-a092-da46f4f9fbc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe68514-963f-4632-bd35-32f6bd675faf",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85fcdaf9-42b3-4cd7-b523-c180cfb16ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1201acd3-fcff-4b13-b3d9-2f58cdf6acf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f62ec655-407b-4b83-9a93-8e07841d9611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a03b1643-26f1-427a-ac19-f31aa5be6ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e267e0ef-3f0d-4d29-a001-4ffe719decca",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa9a600-37c2-45fe-ae23-8bdbfff20cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69a71e44-26a4-4d35-a21e-591f826e0b37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab24b15-f8ee-4805-af07-b89c5682ad58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49a89340-cd29-4f59-b6a6-32a7e6b760d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635e7eeb-5a7b-4fd5-a4ab-9166ea691120",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71fdd46e-2950-4a60-9c49-3d87a81f9a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99e9b5ff-becf-414a-9d8a-9072fcd9e42a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd57497-cbdc-42b0-8fae-5c92144f180e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "308ebc16-c627-4199-bdf2-f3bccdf68d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "437cbd34-b03b-4a42-949d-bc9660547102",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72b803ca-2500-4e9e-a61a-28c38a7bc530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9bc2e2c-6885-468b-989b-0cbddf153796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c39d23e-1c35-42df-917f-3d978f98cf48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1733297d-bf01-45e2-8e90-7dc5db999982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9dfd3b0-0816-43b4-be21-68fc8029114c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c4190a-fa5d-49a2-8d1c-b670e00c994f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67c29083-14b1-4071-b5c6-f45d4753f1d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "245f1b63-2e45-47bd-b491-d849a2db8d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27b3dee8-0e0a-4c91-934c-9f2ac629453d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "526e50cf-96fa-420a-a503-1bf690f8e6ce",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ee4991-db88-48a5-afaa-cc530a6cf020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "341d5d4b-585d-4478-b96e-4950cdce8c44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b10d6f1c-7cb8-42c8-bf04-185d1b240f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc4a2c04-fba2-43a1-a1c9-73ee9de51eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f4b9078-63cb-4092-bce5-30c38766d865",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b35c74-784d-479e-83c9-9e1c7a69f218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ecda02b-6726-4a54-992f-f0fa9939f1b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fcd885b-83c8-4c44-9405-342a6586ba40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "403b88d1-ad2b-4304-84b7-ff701cee3f98"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9da21c07-dc73-47da-8edb-889091634b51",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9746bdc6-ec59-42de-888d-a17d9472327a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b9a1ee-e6e9-41ce-a2d0-68b21b28a3a1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "413918ac-243b-4d7b-9528-bc4c1c2e8a57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ffc9e9-9a27-4af2-b349-c92b8cefb54d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4628fe91-d367-4994-a04b-a96ff3286853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2925e83-ac57-4bad-98b9-6661d9f2137a",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3dd09b-7a86-4cdd-87f2-e443671b6f2b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "39dbb613-be6b-4392-a47c-d96ccb24a96d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "705e42f9-de16-4abd-b163-07125da6a463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8c74f6a4-559a-4e5c-955e-b5d9e4daf12f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5d1c248-69f5-4fd6-ae00-a0745c0a35bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f09252a-1652-4a48-bad1-ac52ed5b70ee"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad76ce50-14fb-4912-9052-2982cdadb0f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec62e1f9-e722-486d-a2cb-2d7b22f14522"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "adf2946f-4615-4edd-870c-8ad9cc5779e1",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "232550b4-721e-4669-8ac3-232bbd6df70a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "79841417-f33f-481b-a4e9-38686f2b8b5c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6c25c120-bdec-4f45-8df2-2536dcf24a32"
            }
          }
        ]
      },
      {
        "id": "580a19de-08c4-475b-9d2e-0d65a3039aad",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ad62acc0-241b-45b0-b7d4-233b5b373406",
            "name": "Negative Testing",
            "item": [
              {
                "id": "32f249b3-43ee-454d-86dd-7eae1a2d5971",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2c8d2385-01ee-4a43-a9bd-fa875c327dd6",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6635dfa4-48e9-44e2-a6de-4f55ba39653d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2272e9a6-b380-40b9-bcf6-96f4e702a88e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c88f66c-2f54-4060-96c7-660f2e193e41",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a6527e7-ffa7-4307-a11d-8ed59d7ab5a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5408d17-421b-4ca0-8ac4-9376d46fc3d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "517ffa26-1ece-4e34-81e8-edfde229864a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fedee2e5-7d61-4027-83f4-e5f1ddcb3545",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "681ff5ad-8911-4a89-a107-fa98daa041b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d81e19e-5b86-4df9-9bbc-3b4e8184751d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce360406-edda-44f8-9f6d-da121ede1aae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06a31fb2-789f-458c-bb95-41547292eff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a74435de-ad54-4021-9436-c7adafb18d42",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f908de8-0910-4984-9ecd-161f69462b4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff035ebf-6a91-45cb-9838-09cf080009c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "811788d6-c365-433a-839c-60e81e8cbf38",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7816e6c9-696e-4cee-b07a-065ba1d62c29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fee15a17-e5aa-48c0-abcc-88cf3b7d428e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbd1dcea-2ca2-42d6-a407-4f3367023be2",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f2c51e-8615-4ab1-b73d-2b5593a04b5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e794f44d-4939-4925-832b-4cc0c05f92de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f14a15-a134-419e-9b74-87dddd94890e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3801db2c-3f13-441e-90bf-1917cb872f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d222c6d-c27a-4f27-8f3c-ded669de0166",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff58a5d-d45c-46bc-b2fe-9069ca895ecd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a94a07a-1854-4027-bf8f-26ee656bc28d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "084e8947-7337-485d-8886-744f56aec661",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "227e8727-0214-415f-8b4a-371846787626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c24d51-5fc3-4cb0-a1a9-24d276fdf97d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deab5107-52fa-4070-9cac-7356f8c5e0b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "457efbad-cc44-48fc-b8f3-8456919711b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98a4617-8e58-4fd8-8e6a-00786e995fd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e9f8a9b-8311-4eb6-8b7a-961aa8159ebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c621ec3a-6703-4215-af45-0005b3934715",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14fd422f-91ee-4ee8-ae23-2105288eb7ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec73ce90-8c58-442f-b940-6f962c15bbd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d92290-2f83-45a3-aed7-2e0dd8effc27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb6f191c-07fc-47d4-b590-4c01e665acfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2926f6d2-296f-48fa-8fe5-cd1cb50eab32",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "450e6f89-8b0d-4144-b320-f7597fd8c8ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "995f4308-7109-4c4f-ad62-74e99924a258"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e66a820-ff36-4519-b4a6-b706279fd0ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5cd9e52-3093-4807-b8eb-cb5ebdf46c60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20080ab1-df9d-4d7c-8a16-67d68dc943a0",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df43663a-53ea-4cb5-9bd3-620aa307eda9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fa4fd0e-0827-42f3-8a9d-af4e6e5ed2a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd70423-55b8-4487-acb3-8d95c9b521b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84451931-abd1-4711-a21e-b3f5974c8948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f01c2daf-741d-4fee-b4c1-fd93d6ac89c8",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea97629-0d98-435b-b245-d065f6b86007",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d59ac8c7-7fff-4a9e-8810-2705da939c6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f27df4b-1615-4d33-a9e7-5c81e9977d36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23c3fe82-d4e4-4cf7-8760-d08da53a1480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bab7bb0c-515a-4a79-a180-b09205b7cea6",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2d3108c-a01a-412a-8510-f5111960239a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90506331-691a-41f3-a41b-807c7315eaa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f39009c-1d96-42d0-8af1-1a0c886c52d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "621f98ff-9dba-4934-94e7-d1bf9c6c65c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f79394a-66d5-4157-9db4-73f4f47fd78b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c29bc0-fb22-475a-b47a-aa13963abf4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9119715-7d89-4863-9fbc-28dd03fcee36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0352d4c8-8919-4b31-8ecc-6c0df4fe7cd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21c0408f-a891-4ec1-aa9c-99992ba509f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0caa1bd0-c4dd-4c2c-8855-c37616fad92a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8450dd21-d4b6-4a86-b590-082716a283b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff070502-a011-4bd4-9968-32d15ecb5a8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c8f88d-5f6a-4b90-bca7-b7b0299134d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "925104cb-7752-4d82-bad0-4c8f36940a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d764505d-1b97-40d6-8877-fb9aa4e2c8fc",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af90021e-beac-4c25-98ee-297a5fb93aa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e2a322c-0303-4c33-9d91-cd8c8a144a7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a91fe20e-0744-4a8c-bdbb-dce2c82f665d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16c93043-aabe-45d3-9939-aa8b2c3c5654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "961a325b-48d0-4e0f-9e1b-0bccb41ae906",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe209c24-b2dd-46aa-8ef2-355269b6f49b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9796b9ff-cf56-448d-a3b1-462d7f2d71a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "922db811-7db9-4dab-ad2c-b6816f294947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "470e62df-b1a7-4227-9351-91b3cf31d7d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "270834e0-ff23-4186-ab40-daec69c6013d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ae8965-5c47-44f8-9df6-9c2d147eaa61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1aa4e5d-7364-4ba6-99e0-b529dabdf884"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f95541-98a4-429f-a640-ff02fe3dac2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4f665bb-1ddd-40b2-af70-1861493fda71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb1b1f4-5054-4b07-8369-81e98b64943a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6553313-72f4-454b-a47a-fd1ba7c6e4b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3130c0e-bc7a-4804-ade4-253d17efb923"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9107ef96-2b6c-4888-860c-01042f5df1ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5763929c-b4b5-45e3-a162-7a0125a814b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "926f64c3-aeef-423b-a9b2-1a8585da0502",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ebb0c6-e01f-49d5-a73a-0354a142cb95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d337d990-96ef-4465-be26-7cec3fec3569"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b519bb-33a6-41d7-9f7e-534b00fe5197",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "591aafcb-6ef2-49e2-9219-f5f71ec64d0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "562df7e6-6b65-45d7-85ff-487e2e00fcbe",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "655944ae-5a23-4469-bc66-341cc04f593c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f275bbf0-54fa-4647-b381-f5337f613198"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b47386-823e-4c8c-a947-5021c35686c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd0d251c-9691-4086-8f39-54bea5da1638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c6457e-a638-4bf1-bdf8-d3211c1755fd",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5069b5e5-bdbf-491e-925a-a7c934cc4b42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4172ad42-4d75-4444-8fcd-66ee8a7d6731"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a251d9-0f3b-4145-a454-70fad0eeb63b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "479e5adf-a545-4035-b546-329aed677c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f30b9b55-3c02-4842-98fb-4dc13d24a7e3",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "742ac594-7d8c-4959-9bf3-1e35ec178c18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a1ff644-d6c1-45ea-ba28-daf7f2700bf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01cca05a-4b10-4674-b85e-f01ed163f42c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7f1e9a3-8939-45b5-8f8a-6341656d60cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9353049a-ac9b-40a1-904a-a3c38e3df5d8",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73cbf56c-1ddc-4c50-8f26-6e3a231f9a3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dd77f2e-09cc-4ca6-b696-101bf22e350a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "969f0080-b2ee-4815-80d1-d9b8cea7481c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f4b4b35-e3cd-4189-a0e5-9cc2f0995c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b70574bf-8b7e-417f-a17f-6529918ff28d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c8b62e8-8305-4c66-a517-acec2ec57be8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2499adc9-fc8b-45fc-b60d-a07f3ee9eb8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f857ea3-255e-4e5e-a6e9-d8b2d09e28cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63361876-29ad-43e9-bd4c-31b91715de3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1504d125-6f08-49f4-8342-977674a94939",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d39af6-6cb8-4e8c-8ec6-4f468f5ec66d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa0e3e69-16b1-45d2-b4b8-3d0da8e170f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab1e63d-4944-4c82-9e42-b1f898a8a53e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7616fd0-6ea5-4acf-b89c-645cd9653365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd7e5aa-bb62-43f1-b340-d521b125125d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f2f8a6-eccf-4d30-8a44-a7f80f28d24d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8664128f-4715-49a0-8fad-526693629095"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84977109-32f4-47ed-8262-e2685e4c8003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8a2839f-6c5f-46e8-a472-c09e9f59c149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee1963b-ae5a-4655-b894-f45243d50e56",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a6c6bd-0191-4e98-b961-2b28ab6f7323",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ef8771c-e791-4515-8633-e505dc82c033"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52fbd814-ba81-4c59-96ea-77da0b46a4e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99f616ce-92dc-4738-8cbe-534ed39a2086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "295f7617-9d22-4f25-9618-1f194e96fe13",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "965fde62-2c09-4692-a0c7-61fb3166f1de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccf67429-5893-4570-8984-a198eff7b461"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a74ee36d-6086-49da-9e2f-7424ce1b9bb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55709579-c5ec-46e8-98a1-06d4e50a1bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a5427f6-d5f5-43fe-a3a0-e5fa6d984e36",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f58e6ef-57ba-4841-9d08-6869c18fc337",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b00c7c5-d3ff-4732-911f-125747606026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e016470-1ae3-4c11-ab5c-05fc72e7ab6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4769917b-ae5b-4fd2-b2ae-c850e672bbdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "853369e8-0254-4a29-9468-32780176ee49",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cacd22a-04eb-4f8f-bb86-abe7f8f57a36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d50701dc-8598-4ad4-ae30-e705165a9d79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e8dc206-2cee-40d1-bc7e-117cd10ba3b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1487b76d-9786-4611-bf74-381acd43d346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d00bbb3-aea6-4ad0-83b9-86c4631472c3",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a481d01e-d37a-4740-9aa1-6ad2f9cd8f69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ed75c49-1696-473f-a5b4-deab58e6e64c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ddc20b1-49c9-4995-a0e7-d02d2a6de474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc88e2d9-5f1d-4e03-97be-b5ad1a3502ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176509ca-cf32-421d-a2ff-c87656b7069f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03aa6085-f3eb-4d53-878f-40e4c104591a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a360ecda-7830-4b6e-9044-a7fd1f833ca0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e1e73a-a95c-45dd-98da-9229b59e688b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea06895a-2d11-4fe9-9f3a-9fd0623b2a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc95a285-e3a9-498e-b5ac-decb64bd9237",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61188dcf-25d7-4844-8a87-973429fcd8bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b47dfced-5129-48ae-a461-27868d8f2247"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa22775-9747-4a3d-817b-bae09c53ec60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bef1f4c8-291a-4030-93e3-3cc4e6e50418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2445526a-3b8b-40b7-bb9e-78f3f8eaa804",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c28dbe3f-c690-4484-918c-31a81351d77d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fb6b61a-eece-4997-b0eb-5e9288167ff9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ee31ba-7ec2-4d2d-b2ce-461cf0c2611a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a197dd7f-74fd-4bb7-95c6-e5ae00a8fb4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4e5eb27-4160-4551-b133-2042dc842356",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5225459-1fcc-48a5-9fb9-d837c5f44d54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "815d951c-b861-4efe-ac60-ca10d581de4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "589e6cd5-1c39-46d2-b856-d59dbf415053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4019af6-3e8f-4b5e-a9e4-c47df06a7f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "134acf17-d75c-4d6f-be70-e4c4fa3680fe",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373bf001-9951-43b4-b078-41fad6169936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2c82035-f506-43f8-9cac-9a57c6983479"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92780e15-ba75-4d7c-9d57-ad47a044b0e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa114732-4349-41b1-be51-345b230066d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59fe7dfd-f4e4-4397-b2c9-e9dc9dc06744",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4816f24c-287c-4b6d-94db-f5dc101b07fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf6d7b58-f3d2-408c-a6aa-4aa5e4adc5cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb9c3d3e-e209-4d93-8d69-e629143b508b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5456e90-5ca7-47e7-8caa-51cd1d762072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1404df7-aec5-4512-9129-fe0b772ba2fd",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e788df81-a0b6-439b-aa7c-58657d9a2ee6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd302132-b10a-4a26-b2da-6e70f6b44360"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "761f9fdd-5ff5-4739-9f56-8ac656e13f68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f55681c-bd03-4d8c-be32-aac84006cc2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55ae5b1-6217-4b0f-8fc0-dcab47c1ea34",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "996261a4-685c-4908-8b90-5826cd5acaaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aea115bc-b131-4c9e-8867-9137050c7ed7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d5573b-a7e7-40fd-a058-a032688f36b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aea45af-bda6-4730-8159-42d4b3c047ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ccee77f-049c-4532-ba25-80f600685d34",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae60670-58ec-4caf-8b63-39501a588124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa89b2e8-16d8-436d-8b0f-055a308077c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c615b7-9301-4dfe-8d47-efaa22991679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6fdbabf-706a-437b-8439-3169b128fde4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "711ab245-4ad8-4217-965e-79ffa41487d9",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f67e77-dd73-4895-9e7a-872b75f4fd95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d44c045-4176-4a70-875f-e4ffefc64cde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb2819b-8e5d-4534-951d-e4134f976080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28425221-fa67-4d58-8b1c-604bae7dc421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d0f8081-da68-4148-a2b2-bd0ff2bc6ee7",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f17b82f-0afc-4c15-9ddc-b7c0d6736497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c66832e9-ad25-4c56-9af5-d3f941de9f15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1142496-a102-4b04-80b9-58dc05402b2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35f86c82-b5fc-416e-a3aa-eeb6adb1eafa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "307c40e2-48ca-49a8-b1ee-ef846fb7595e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d8750f-683d-4685-b006-b9f55f4ec122",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c70e5ab3-43cf-4e78-9178-b50fbf0394f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef98abe-d504-4407-814f-f18f6060c6a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7030bbda-5bf7-4f76-ae6d-d4e3e7f28471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecbd55c6-b73c-4a20-bb1e-843384565809",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77318933-32b7-4bcd-90c8-eb41c9f02177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec760f4b-6e7a-4f8a-a7bb-c99836a1f235"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "433a6982-d76b-4003-944f-fdf554b4086a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e3be8af-729b-480a-86d4-297a978f9420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a91590-26ee-4f14-bc96-9105dc8f0609",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92dcfae9-b0ad-4962-a78c-8b933f662758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b410019e-22a7-437c-96ae-cc01308fd87e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c801b76-1d65-4503-9278-b3baa5c33aff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e88bfa2e-92f2-45c6-98ac-cfba6be763d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f342d35b-76a8-404e-bc8e-c3644db86427",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1dc2102-3881-40ab-b37d-709300cca1e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50d255c5-c8f1-402b-af18-75753024b914"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0eb20b8-52da-4c7d-8f41-0f461ec0adfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e753086b-0aff-47dc-8066-f0434662ea52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b81b30c0-63b4-42f8-9257-312921b69c61",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb57961b-494d-49f2-af64-5004ff0df6ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3726a87d-4d50-493e-a5fe-f583ea3d1c5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "515a4323-8cb1-4c1a-8049-675e412b39dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "717836a8-01bf-4c3a-a729-e11238f07413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3890c3ce-7ec8-4643-af99-e8cbab701eeb",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc16ed5-d51d-45c6-a36a-eb5e7f4f4118",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47e279a1-66b9-472f-9bfe-0c4d11e5b8c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1adb50e8-a416-4c5a-9b00-1a585130a603",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a343b95-4972-4f74-ba96-0fc5ffece5c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea7edc1-844c-4863-bf2d-e6ea0de16a3c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4246bff3-a4da-4ba5-8ef5-c1976fd64e1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75b96bd2-dd92-4c2d-af05-1b0bab2ab047"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4744900-0562-4f70-afa5-c9dfd348423c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f874b9fe-fa7a-49fe-9a77-d311e5026a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86048cb0-263c-4ffa-90d1-4cd8e570b9c8",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e7012be-c872-4d9b-bc8b-d290ae14bb35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "366012c0-b864-4127-b7f6-bdb4ae1bb85c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a59e5b-6cf1-4711-b4bc-d726add69976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b3af5ab-3d9e-486e-8ef6-99f3584e1b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06265394-ea08-4009-a5c8-72b21a767ab8",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50dcb5ce-ac6f-4e69-9f96-a946e1bd7b6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fb8c2ea-ee58-45a2-b078-25d825527d1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "217dbd59-fe9a-4079-86af-75f98237df0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fd91249-d119-4fee-89ad-fb93f13753e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d62e1ea6-15bf-4a05-8f1b-c22b807eee04",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa91b984-a016-46d2-8bf1-5b9f7c716988",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "217b7482-7e41-4ffb-8748-c284106d27a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cece5f3-2576-4b4f-b6d1-fcaabee3f4dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22a1e630-2b36-4638-8cc2-0aec52664566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb072266-c3f7-4166-80b6-2dd7001037c6",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f075c2-64bc-45d3-b87c-b699326befcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5acc4a50-d88f-4101-a433-9033096e2031"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef10c3b-fb83-4230-b38d-6b73591ce7a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4220225-5bfe-4f63-84ec-e0c8ca9db998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585ac952-f565-4709-89e0-676694c132a3",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c560d9a3-ce1f-44b8-b70a-9c9bea943fd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94aa40bc-f054-46dd-a78f-00b06ca96107"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc36f8a9-2e35-442c-bac3-6fb86c06acfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab999fd7-294e-47df-998b-cbbbb67701ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8284b95a-70f7-4ecf-aa97-85c1b9eb3233",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63cec104-0867-44bd-977a-e7256207351b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edc83733-905f-4fcc-b92e-e6c3cd44e287"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "badd6135-aeb1-446e-924f-06ab81dadc56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f7e7efc-5c59-438b-b6fb-3d9bf337c272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27613aa5-d223-4444-b3f8-4c702d63095a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b493654-4c68-4f4e-bf67-4f9865dfb0fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a7fe168-c2e7-437d-b3f3-682ff9f8460c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64f25d11-195a-48d6-b9cb-9504badba019",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd93bda9-bba7-49a6-93c4-4bb5866e76f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "626d3712-b177-497e-a71f-ca9b8e5bea24",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6285db7e-6336-4164-a7a1-b259716153c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1facb989-b81c-4a69-94ae-d95c5585552b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "774129b1-b9dc-4068-b75e-8032b6ee50d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31e2c124-bc84-48f1-a37f-f1d2654ec88a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456f572e-0f3e-4b2b-a2e5-20759658e1ef",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0415e7f5-2d08-4757-ac64-bbf86ba6a8ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85d47544-d485-4a9e-aaa1-dbeb49e33d1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12875a53-d148-41cc-b85a-b5f76630dd95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13e7df1f-a938-43f6-8ba7-1bae218f8d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15483dc3-da69-47c0-813d-ebeb22810bc1",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b13f745e-3b0d-460c-ae8d-0bcf572be9a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dee4f862-af9a-4748-994d-a5492e45a2ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66b7256f-d07e-4a1f-b97d-8001ad9094f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54032c38-f961-4f70-b1d0-70162e0c548f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e7acf8-0c0b-47b2-a139-1126c7c760e9",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9631ff44-96ee-4f1c-ad92-f482c68db575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89073d84-19ce-483a-ab73-cb22a17736e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d0bcfe-7597-4ae9-82bc-c35ef2b665d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "035b2a86-a55b-4126-b7dc-a6c09842cd60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d39dbbf-dbd9-463b-ad79-41a3535cdeeb",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70ca4e0-ea01-43f1-9978-fe5e1da23af2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12b37922-8384-40ec-a86e-17e1bf359ccf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a228e887-38c9-44d6-a870-3b6d6bfccd7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ebf36cd-88df-4c9e-ae48-3b34c9e6eb15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e136857-1bd7-4350-9a75-462475412bca",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c653f5a5-62a6-4f32-a7c1-911c346ef19f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a8e9941-4c78-4cb4-9024-10340b9af97d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a90a307-486d-4e43-a122-9733a4bbdc71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71647f17-f2c4-428f-b79b-e113125cc0f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c39cea-f861-4516-abca-53082f62ca5e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ca241b-d7b5-4873-b5c6-6bc4f339c943",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddfd6e9a-e167-4c97-8f61-52968cae75e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34090412-71ab-4a2c-bc89-f834fd6fb8d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4e3d3f3-d9ee-43af-9d69-d1dad802dfa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7b5512-2385-45df-a9b5-a08a2b371dca",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b8dc300-a63b-45d2-ae4d-24aaa7a865a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "699c9c1c-200a-4284-99e3-996c2468466a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca2f1c58-3d03-4a6f-8886-4d1e9f7c100d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba407211-7bb4-49fb-9096-4da71bed691d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a4e52f-f2b7-4492-88d1-fd61468acfb8",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecadf849-056e-4e41-8325-25c83fd0b004",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce126eb8-b0ba-401e-893a-4edbdf36e16e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "964f84ba-3070-45cc-9b5e-b9871cbb9fca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dff2838-dae7-4163-a6f4-4cbaffed4341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a84a00-e4f7-489d-8779-4ecbd2501dab",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4437173c-b82d-4e94-9750-84ec7457879d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fe5e438-ac67-4245-ac3f-83fe840e0959"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85838318-e138-4147-85ea-9169b7711397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "190cd0d3-fc5a-4ee9-b9b3-836dde6d7c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8761a1-b3aa-4b60-a6dc-90b516ae954d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daac574d-a799-4d4d-8b4c-08826afe8b79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e8eac75-cb07-4011-8bd5-0fdaec7f9e37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "851594b7-56d6-4be7-a5fc-8c344732e8a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf95798b-aa13-4a3e-9a12-147f52eb02b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e6550c9-0cf9-4ae2-80da-0fa4b7a81727",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c15a1e1f-de70-4c37-94c3-208cde2a5a34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd279653-ddf8-455d-b041-2cfb9592c3a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b0ebd6-3e34-4829-b7e6-6b5250ef510f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3361f50c-a668-487d-84e4-08d3d762c1df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed2ba1c-fdd5-4e22-88c4-f692eac4ecc4",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31038da6-226d-498e-aa33-9a02dbefe26f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31ae28d0-9176-4ca0-b62b-539e349bcde0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e8571e-19fe-4f97-83ac-1d39648867dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "155e4723-b292-4c8f-8197-eca0d736e6d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d662f443-b3b8-46c0-8aa6-f43873d56c52",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa75aaf-772a-4fdd-9d03-ccdd6801436f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "295558d9-3447-4ec4-b7f0-a8dc9837b66b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f05338c8-6568-4fe8-866d-4bb3ae41e4ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc08e587-e8fa-43dc-bb50-59aef5a28744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0859bd97-0164-4f26-95a7-9052b600d4d6",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc9997db-217c-45fc-a1bc-90b5bc22f67f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "470fa463-8326-427d-9bad-73a2ae7d7cfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55e15e8-75fd-488b-a059-a86608eb2d3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf34a145-de37-4ba6-b1e6-e1018ac4786d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5125a812-686c-47c2-90a1-63e80e9e3f8a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a09977-15a4-4be4-8f52-88ae085e4868",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28db7490-fa48-472f-afa9-63b7b8458d23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "853541d7-6d3a-4e02-a0a2-29403140639c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd9759e4-ade2-43f7-9893-36430f4e8c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60af7214-ad8d-4074-b89b-ce75ff670dc7",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3fc2088-2bac-4a36-be32-16812b4228b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e121eee-87c2-4aeb-aebb-d85d218dce3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0360f1-43b7-4bf6-9f5e-e98a0e40b72d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b3b87f4-0611-4611-9a57-939abb213111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a6dcd1f-40e8-4b72-8051-16064c5a4adc",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc3847b-d4e9-47b6-ac3b-653421ef6611",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fffb096-e0da-4156-b203-3ca46a88f55c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43779baf-9ef2-43f1-ae68-4f34a9771a0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61453cb5-23f7-4cc3-b624-57c57972912c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45aa3c28-3ad1-42c4-9a7b-0c009d9ff72f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25023d64-e7d9-4b62-bf35-d36c44d2bf1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "654a4b26-24e4-4e4e-8e53-47fc407aaf64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf200815-a8b6-49f2-bf78-7b7acd8f1bc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d3b94b3-3e36-476e-bb18-ef82e4dcfc26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f1482e-3f46-4849-85b4-220de0592eb5",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248e108f-51e6-48e0-8117-78340aded955",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15297dc6-e4e8-4316-9d82-61c9f60995ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3f717d-8b3d-476d-8fd0-29d6e2501b4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "658a8b7f-ddbf-4eb0-9dc3-7c7addcd96e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee173830-876a-4fcb-b498-3928d74b31bd",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "683a56e0-971c-4979-84e6-a5e983c42d22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1671c9ff-daf8-4d38-be54-cf3a3a035704"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "514face4-1907-4c16-9cc2-e7f7322b51fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5285d87d-4dde-4bf2-ad15-031d44e8795a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3963127-8e88-4744-b799-2f547aac3c03",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3912f5ab-4172-4d8f-9c39-47ac7baddf12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24f9e36a-f66e-4994-8031-a51fc23fdcf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e68e02be-236a-4f5b-8a8c-e98c0c963db7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c856eb39-38e6-4971-b56b-28ef881bd172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d065e9bc-a105-47ae-b816-dde63b0f04eb",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f4fddf-7a59-472e-83ac-00bcdab45030",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a52e7df-348d-411c-866e-1f31fa6f9642"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fcfb277-4824-46c9-b072-d95548ca715c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9af79c70-7624-4a18-a768-36ff2525b227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cdd8281-34ac-4ed3-af59-84788cd7309a",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "118f8d5c-a12c-49f8-9686-660dc250231a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d2e9140-7d74-4abf-913c-d0c7820c8823"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6636e6ac-2a75-4650-b980-5ac08f751993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a69d7a2-719a-49f7-9d28-a6b3b0f4fee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f4d3dc4-b7fe-4dd1-b023-58c730cceaec",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e6b7eea-7226-40a1-a1c7-f51ebcc6ffe7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4dbb849-64dc-4a8a-ace0-523c7d33cdb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0628fb9-0d61-4c50-9cb2-b297c1ce65f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e62902bb-8c06-42ed-8790-3e5cca17f5dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93859cee-b2b5-4b11-a8c4-6581a9799cf6",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edcf6db5-f5e3-4ad2-8d8b-e5f94bf87933",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "254c86ef-b7ed-44e8-bb28-6cc68ddf3c78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b7861d-25f0-492f-af51-3c0985656e0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2be9ac0-ff0f-45c7-9fc5-b18cc4fafdb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ebf53cc-ac5e-478b-9b26-b51578584d19",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f5fdc7-b30f-42d0-a715-49283bb5baa2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16e4819b-5265-48bc-927b-c45a416f0061"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "917d6a35-393b-4d31-8cbc-3be72cb1739c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5178db4b-aa82-40db-87b9-d08a67cc0b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad87c1c2-007e-4087-bb9a-4c67345ba3fe",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a53ac18-9843-4ce1-9904-ef12291912a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9659085c-f1b5-4c13-a7d4-a55dfe2f147d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59166180-38d8-4a4d-b2a7-0deae36c5271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "affd1dfd-d52d-4da2-bc75-27cc5be8ccd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a5069d-ab27-4cda-9c5f-ef451fa6bbe7",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821f29e9-99b9-4f77-a9b3-f4c88ed7c507",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "139552de-1673-422f-bf41-d8a677ff5e21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d5c594f-f828-4516-b7cd-148733c6e5ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b2cdf2e-2c53-4f62-8d18-ad082b092cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "011f6613-a8ae-48b8-94ac-caf273974f34",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34098fc2-0ba3-406a-9d2a-55a93eddd528",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f82dfca1-82ab-49ab-a220-ae2129f65d36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f20552f6-d7e2-496e-8e73-88de47036e60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9176e0ad-6f41-4c20-b595-bf79cf9318ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c179c6c1-6f00-4ec0-864b-36cd2fa1d598",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c47a09-f2a6-4301-98a1-6a416b376f3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12580274-ccba-463c-ba9a-7545715346d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "895cf5b3-afed-40e9-9ce3-6dc12f037158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c678bd14-31d4-4060-af42-8f1906257083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e1ce17-c6c7-428f-9af0-ae3c7c3ceba0",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e1bca7-9d8a-4f74-8f54-c4f495abf2b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "141b48b7-1212-4415-8339-795d4488ffc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f322264-8bec-4f84-aecf-ae16aebad8f1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ed20194-9506-46ae-870a-b023d46cc070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a0f92b-39e2-4c92-928c-b52b2cf262c7",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f315860-e258-46c9-83a5-85efa4992d56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3e49bad-f86c-41c4-ae27-471edd27bfcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b202dc-cea5-417c-9b8c-715278c16fee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "550f7ac2-4126-4cf3-8705-d23c7415b820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4ea809b-648c-4fab-a5fe-6e3f9d162c98",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463d4cce-4b7b-4588-aabf-25b1e850b4fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a090fa0b-6934-4859-ab61-7faabca73796"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dee95cda-4372-49cc-904f-dfebcda11987",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce59d84c-171b-494c-9568-df50e881d1fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52fdd24b-f61c-4ccf-a10b-99064f8672a0",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ec5a43-ff44-4e64-939c-276ec9c5fc2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78c72496-5df9-456d-8e12-6be0ddbde968"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50bdf9c0-8ab7-4a59-8777-9ef850394f32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "246f989e-d327-4990-80a2-49a4b07d24ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "899c92a4-31e3-4c87-b721-87c3f5360777",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45020788-33d8-48df-bc24-e6dbdc51f44c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0f8bd4e-bc76-49b9-9c66-87664e658e8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a72976-eec0-497c-97e8-093e1d23e23f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c99cf61e-f132-45e2-a837-feed025a5197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ab304a-eb72-4e43-b6e4-6cea70daa049",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6047bacf-bbe5-4ec5-8184-1854a7199760",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fee72239-4d31-40ac-80ea-6f44b45d4742"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05431982-cbdc-4517-ab2a-44df73804f2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ab492e3-cd06-410b-80ae-c65ad0667a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d4448e-11e2-41b6-978c-da8cfb516d7a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5754e0d0-d1e2-4000-890a-e59a371ee96c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09508525-04bc-4ccd-8586-f0c0805da90f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f00bfa3-82d0-4d20-9637-e1e5f0f2fa6e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b840423a-f108-4146-8aeb-1a2126cabcc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e530047a-4696-4161-9c20-f31a6a256868",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8725117a-90ca-4b50-85b0-e08fd73cc1b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6fbe80d-7074-4442-b9cb-2a6c681fa93d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0563005d-6d44-4e0f-9ba6-8c39408a5442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f396a1e-f359-4eb4-a54d-fd0b2217604f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c6f84dc7-f26d-454a-9f2f-19cc116393f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27b7bc16-5586-440d-9a2f-01d9427eaf1b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "beed44a8-109d-432b-9072-883b83cdb547",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bbd9723a-2bc4-43f6-8196-fcff404efcb6"
                    }
                  }
                ]
              },
              {
                "id": "cad259ef-9e3d-457f-884d-de2d1a1b7f33",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7bb4e364-5e3a-4474-b1b7-93a1ef9860b1",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f36d2580-af8a-4e2f-99ae-81a21d6dffc8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f54a789a-c352-4c5c-9309-5bfe5f05b2fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e0c4d25-9a2f-4fa6-8fa6-798ca7f2fbb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d7019bdd-b77c-4c16-8d9a-d73846614d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f5e4c8-a0c7-4215-bf5b-f02a06c0e1e3",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f720cacf-39d6-4052-a4e6-6ee7ab9ec210",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d5f54df9-5a6e-4e0a-a1ec-ca14f93e89c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ea8a8a-c68d-407e-a6a6-55ef00b8611f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa455d89-383c-4223-87c9-e0cb527c2e70"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d8abe0cc-57b2-4a19-8256-3e7276522dab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3874728-82e2-4bcf-9706-3d4627680572"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b7b8ab7-ea2a-4e0a-a88f-97ea88dbeee0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2c932f6-e687-443b-9291-269be0cc6fc1"
                    }
                  }
                ]
              },
              {
                "id": "c039639c-ae82-4ee2-8ede-20bba5a66210",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "50698423-4c27-4e65-9602-665278055530",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a9902e-596d-4285-9aee-84f6e8e36770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c31094aa-9860-4d6a-ab05-a31f99bf1522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5b59e18-eac6-4600-befb-352de81a4db7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e146478-2421-4073-86e8-dceadfeb810a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4c96c257-f1c3-4632-8251-33652ffd46fe",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c0a3fe4d-228e-4c1e-9749-df92878a987a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3122503c-b651-47bb-b968-2d98f631a7a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fdf64322-a7b9-462a-bbe4-bf302f0d0c4d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb5741cf-22bc-4712-be5a-6798f88f4d91",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f4b8c122-93c7-4d7c-be94-5a8eef43b020"
                    }
                  }
                ]
              },
              {
                "id": "97ae6590-865c-425c-9e2b-048e300aa851",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0189594-523a-489c-84c2-c6184405da17",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ee7ca697-8533-418d-8d59-88edc323b755"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d405f6b5-fe69-4815-829f-4a73db8bd802",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7bb711d-b4ec-4e4b-b207-526f277de0b6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2d497e87-e2db-4b0c-89d6-b2da5e660152",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "08635eef-32de-4cec-b2e1-e11ebb0e7758"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ae728d4e-42e3-42d6-87c7-ec0f15e34e41",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4e1153fc-884c-4186-8b29-1790284bea04"
            }
          }
        ]
      },
      {
        "id": "9fce6328-2eda-48a6-aa19-daf43ffbc6ac",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "988d1a28-2df0-4d2c-844b-1f91584db57b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eea0882a-c9fa-4229-b958-ca1bd7df0de9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "175b3699-7e36-4b9d-962a-ddd94251a8db",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a53abb1-0cf9-4ea9-a414-ac8b099a919b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c5741861-3614-470c-9ae8-f832cd991703"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8681dc32-27b5-4f7f-a936-f733ec804f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1c318bf3-2299-48f3-8371-e807e022857f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6afba3cd-4de0-4ada-aae4-82f504fdecce",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07cae138-bca2-44e9-b0ef-0dedd907823f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0f77e58b-a8bf-41be-84f0-4420bf1c8734"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b88e223a-e7a0-4aec-91ed-0a5ff1a06e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8e72176-06e8-40db-8654-94722ad3d500"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e13d820-283e-425d-833a-9adb9d19799d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e18e1c22-c584-4df5-b158-a0e75ab4e3d9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f8794633-1ae9-4a82-8286-6b65e104b270",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3208cb02-8156-439e-9656-1af1371c6aaf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5f72ff51-c394-4639-8a85-1d05857f3950",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ce7516e6-b491-420d-8329-f24034907ea0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "95ad0b0c-da7f-4849-a835-83fa64289880",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6d16e5aa-bc1e-4519-bb1c-ebd05b714255"
            }
          }
        ]
      },
      {
        "id": "93a68086-2c1b-4f9d-821e-79b20aa8a010",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a3d1d4c4-d486-47c9-8654-3f936dc880b4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8776b4c2-319e-4183-87f0-54d2f6fbc637",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eeb8dbfe-219a-4a85-b8ec-b549e6f955dc",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda128c6-9af2-4eab-89af-15a936fdacc9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e86382e8-ba61-45d6-b640-db7ac78ba881"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c43c16ab-5ed1-4932-870a-bd33182de14f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c288a495-c11f-4033-8bfe-b409cfcd08ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dce1b64-8c87-4f54-893f-86177d19b022",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abbc79d1-7b06-4a25-90bc-679d52c8ea96",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8c41d21d-91f7-47ef-a1bf-f0784b101e46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29176ae8-a902-4460-9443-cbead76d2f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7eaf7f45-d007-4e73-a3aa-a5bcfd104c7d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fda7f7c9-4960-45d0-9761-95bc29129cfb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c686389-73cc-4dc2-b4f7-d78b885872f1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "48f9b638-44f6-4002-90e5-0b46d61c457c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "18f3bdc0-3cab-44de-8c41-62f616079319"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b0e77bb8-ef34-45f3-b4f8-692193dcc093",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1bde2abe-9606-47a5-bbfe-6e90fdbcadb9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2c43d1c4-f36a-4e47-bae0-b4f6b1fb0ef0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ad497c61-81b0-4e14-8c1f-43c1796f46fe"
            }
          }
        ]
      },
      {
        "id": "4bab3f6a-b9b1-43b4-9d86-1812656776ac",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "dc25ae02-ccbc-4291-b2be-18fa16828de5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ae3d0a7b-9941-4724-9cd6-4db889be597c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "184cf485-f60e-45ee-ad3f-36147609d8b1",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3748746a-1af0-4abf-82ff-0a9b63213501",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "822172be-c36a-46bf-aae1-bae46c1a9bd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d4607b-ac61-452f-99a9-92f813c153a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d26d60aa-328a-4762-a352-eede01153549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a1bd9dd-1960-4836-addb-3b280ea2a1cd",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a8d1dc2-5440-40d0-8b6b-532fe18345d3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e1c8cb66-7147-4b2d-9f7a-551c2386c403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a0c18b5-0408-4f06-956a-f5b029ca6885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cbe20627-1357-4096-a98d-6b26b5c26d60"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08455f2f-6567-4ad0-9d55-efd790f83210",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f94bd188-9f98-4b05-a821-5bff1a67759b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "32da5a3e-9fb1-4ae4-a920-3388513014e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d1b17caa-3c2b-43bd-a796-e064fae231ff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fcec61fd-b801-43a2-96db-6d162d1018bd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2eb60483-4ffc-4142-9a67-babeae753257"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "df0fa6ce-2af1-44c4-bfd8-bdf30c1d0b09",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1c4173eb-ee47-44da-b7b5-6bd37931297f"
            }
          }
        ]
      },
      {
        "id": "66f16e28-9cc0-43a6-9371-37da03bf58d0",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a9c7466e-3f61-470e-a576-003bf41e68e8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "21bcef8d-6c92-42d8-a274-8335b70d438a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "4ee0a1f2-66d3-4840-97b0-02e1163cb9fd",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "16fa1e03-deb7-4ee0-9212-72a961cc61b6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d5a3bb78-729d-4ae9-9fa4-aeabfc8957e5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 804.0615384615385,
      "responseMin": 16,
      "responseMax": 8085,
      "responseSd": 958.4976927370502,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1682815203874,
      "completed": 1682815425945
    },
    "executions": [
      {
        "id": "5365fc7c-4c38-4c43-b74a-801c5ef0ba80",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "33b6c9a6-a1cc-4c01-b39c-f1f931986acc",
          "httpRequestId": "ce999e19-6f6f-4039-ba97-80fdc29aa75a"
        },
        "item": {
          "id": "5365fc7c-4c38-4c43-b74a-801c5ef0ba80",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "68fcdf88-ae91-4641-917c-b6c8086fb557",
          "status": "OK",
          "code": 200,
          "responseTime": 104,
          "responseSize": 0
        }
      },
      {
        "id": "7dce9e42-56b2-4567-9e19-371a7ae1f612",
        "cursor": {
          "ref": "68f88d58-8fe8-4c8f-9ac8-d13d04cabff0",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7e71a0df-6c87-4efa-9440-3422c29daced"
        },
        "item": {
          "id": "7dce9e42-56b2-4567-9e19-371a7ae1f612",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "60ab32c9-a833-4931-a0d6-09da1cb109ef",
          "status": "OK",
          "code": 200,
          "responseTime": 16,
          "responseSize": 0
        }
      },
      {
        "id": "20102dbd-1833-4c90-b3d6-6905ef2595c9",
        "cursor": {
          "ref": "cd5374c2-5d19-4a7a-87ea-50b81ecde941",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "3a35223b-616c-4d37-9bee-465415e443dc"
        },
        "item": {
          "id": "20102dbd-1833-4c90-b3d6-6905ef2595c9",
          "name": "did_json"
        },
        "response": {
          "id": "610bb6cb-9895-4d70-8c7f-6eeacb8c3885",
          "status": "OK",
          "code": 200,
          "responseTime": 910,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f9d1e9-ffd5-4315-bf76-740cdb1819a7",
        "cursor": {
          "ref": "e5fcd416-2e0f-475c-ba40-126d7195ae53",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4763ec2c-4488-43ac-abc8-c854f0a53c10"
        },
        "item": {
          "id": "66f9d1e9-ffd5-4315-bf76-740cdb1819a7",
          "name": "did:invalid"
        },
        "response": {
          "id": "0abb3bdb-1c34-4cd7-8633-a26e6fe1a205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1328,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f9d1e9-ffd5-4315-bf76-740cdb1819a7",
        "cursor": {
          "ref": "e5fcd416-2e0f-475c-ba40-126d7195ae53",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4763ec2c-4488-43ac-abc8-c854f0a53c10"
        },
        "item": {
          "id": "66f9d1e9-ffd5-4315-bf76-740cdb1819a7",
          "name": "did:invalid"
        },
        "response": {
          "id": "0abb3bdb-1c34-4cd7-8633-a26e6fe1a205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1328,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "003d7efd-03b9-4299-bb88-459018cd6981",
        "cursor": {
          "ref": "1db00024-75a8-41a1-bb2a-478bac173932",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d8c23909-6900-450f-b73e-0d2dae20ebfc"
        },
        "item": {
          "id": "003d7efd-03b9-4299-bb88-459018cd6981",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7a155710-d6f6-4a05-9262-f4905e9e9089",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1118,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b702550-6bf6-42a4-ba03-6946c9ea9896",
        "cursor": {
          "ref": "eccfeaec-76b4-460e-a877-c7df04da5499",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ffea8fe8-84ce-4db9-88d8-ad324aeec27a"
        },
        "item": {
          "id": "4b702550-6bf6-42a4-ba03-6946c9ea9896",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "3e29ad23-9d6a-4878-ad69-efdc193a16c5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 911,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c33fb99-1607-40c7-935f-136fa42f30bb",
        "cursor": {
          "ref": "6b59885c-76a6-407e-b7dc-594a688b41f2",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c47b7a2d-f2b8-4e09-9f78-79d74c21267c"
        },
        "item": {
          "id": "4c33fb99-1607-40c7-935f-136fa42f30bb",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "195c73b5-745a-4b7c-a4bd-def5b2b16a40",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f94b463-c3f8-4124-bedc-679705780dfa",
        "cursor": {
          "ref": "61ad7435-64c0-4fee-b5b2-4c21ed892fa4",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "96f8dfae-7da3-4fa9-8d41-d434e9067462"
        },
        "item": {
          "id": "7f94b463-c3f8-4124-bedc-679705780dfa",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "64dc79f2-c879-453a-8ed3-a8401464972b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 665,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f94b463-c3f8-4124-bedc-679705780dfa",
        "cursor": {
          "ref": "61ad7435-64c0-4fee-b5b2-4c21ed892fa4",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "96f8dfae-7da3-4fa9-8d41-d434e9067462"
        },
        "item": {
          "id": "7f94b463-c3f8-4124-bedc-679705780dfa",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "64dc79f2-c879-453a-8ed3-a8401464972b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 665,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c810e790-0ecb-4a58-8aa5-4b54c08c7def",
        "cursor": {
          "ref": "3f41382c-db61-4e95-ab3e-661aa1b71249",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7880e54c-c004-495a-80ce-0615af031600"
        },
        "item": {
          "id": "c810e790-0ecb-4a58-8aa5-4b54c08c7def",
          "name": "identifiers"
        },
        "response": {
          "id": "cb2c210c-0754-4cb5-84e7-1a3541e14f63",
          "status": "OK",
          "code": 200,
          "responseTime": 1387,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5df50bb-8650-44ca-8d78-afb5aa07c76f",
        "cursor": {
          "ref": "aada7838-0664-467f-aba9-b1bf60d0dc3f",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d605918c-ef9c-40bd-aff6-800bc5ab5779"
        },
        "item": {
          "id": "f5df50bb-8650-44ca-8d78-afb5aa07c76f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "070a439a-0387-4903-bff8-bc50fdfe0af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5df50bb-8650-44ca-8d78-afb5aa07c76f",
        "cursor": {
          "ref": "aada7838-0664-467f-aba9-b1bf60d0dc3f",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d605918c-ef9c-40bd-aff6-800bc5ab5779"
        },
        "item": {
          "id": "f5df50bb-8650-44ca-8d78-afb5aa07c76f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "070a439a-0387-4903-bff8-bc50fdfe0af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f048ec-d9cc-43a2-be13-9554c738cc31",
        "cursor": {
          "ref": "3909cfda-aeed-4e48-8e62-d7898615ec64",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f34ab9de-750e-4dd8-b8cc-0a49e4de5155"
        },
        "item": {
          "id": "50f048ec-d9cc-43a2-be13-9554c738cc31",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "90639f12-cc23-4bd3-9f7c-8c45a6ff8768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 727,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7b8a70-7f48-45ad-8512-198fb3ed027a",
        "cursor": {
          "ref": "2795176d-0fad-4a3b-acde-ed5abff275ca",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "492c7a9f-d5d7-4968-9d22-3277f490b301"
        },
        "item": {
          "id": "1b7b8a70-7f48-45ad-8512-198fb3ed027a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "7b55afd0-e879-4a26-81c4-72654a9a39ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe42afac-b0bd-4254-9db5-c18c78552407",
        "cursor": {
          "ref": "d1058811-e2d3-45aa-b77b-27544c1cd0c1",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "73cbd260-d9d5-4562-8f84-720a785dace0"
        },
        "item": {
          "id": "fe42afac-b0bd-4254-9db5-c18c78552407",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "25f7d2fb-e508-4c43-b57d-5c2dfb1628b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ff8ed3-40bd-41f7-b7d3-e40fd1301a85",
        "cursor": {
          "ref": "8db2168e-c8c0-49d9-9f31-b774a8f55af4",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "1a3b00fd-7207-41cb-b219-9630cb3f86f9"
        },
        "item": {
          "id": "79ff8ed3-40bd-41f7-b7d3-e40fd1301a85",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d701cded-4891-4ec2-8462-45c0ed0e3102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b2e62dc-0e3c-4111-b3a5-da60a8c157b2",
        "cursor": {
          "ref": "548451ce-4958-4660-81b4-7f977d7e75f1",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d7a7f3c1-e7ca-42c9-9816-5f492bde6f5c"
        },
        "item": {
          "id": "5b2e62dc-0e3c-4111-b3a5-da60a8c157b2",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "4f796ee3-d439-42cb-b091-a7f94a2dfe24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "826b3001-81ce-41c3-8df4-ba0cb8f95824",
        "cursor": {
          "ref": "04b62700-fd48-4cd3-934f-a21ead03753d",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f5015ba4-0cd1-4422-8fdc-094caef9363f"
        },
        "item": {
          "id": "826b3001-81ce-41c3-8df4-ba0cb8f95824",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a02722eb-1771-4180-9918-6d641136cd11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b78d457-4b9a-4ad4-8878-1ca1b5a12859",
        "cursor": {
          "ref": "294a456d-2453-4571-a5d5-eda961f0251d",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "7dcd8ed8-6c85-4853-9e3e-476a2dc947cb"
        },
        "item": {
          "id": "9b78d457-4b9a-4ad4-8878-1ca1b5a12859",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "57c10838-046d-463b-a8d7-2b3e59657801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "365eb178-71ba-4406-b049-2914de90c8b4",
        "cursor": {
          "ref": "b84f6341-3852-4b79-8241-ca3b34320da2",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "395ac016-3c5d-4cd4-9847-5f1e59fc3a24"
        },
        "item": {
          "id": "365eb178-71ba-4406-b049-2914de90c8b4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d757b2a8-a7e0-4197-a764-e305ee3f0782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1055a2da-c5cc-4118-bb44-cd9043277121",
        "cursor": {
          "ref": "b962bac6-c7c5-4993-aac3-d59eb574c748",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1da93309-892e-455e-a6a1-f78446b7e0e6"
        },
        "item": {
          "id": "1055a2da-c5cc-4118-bb44-cd9043277121",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "0ddae74e-19f9-49da-864f-ed6bafcb3e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae3d9ebf-a7cb-4b83-93a4-7f05994ac4b5",
        "cursor": {
          "ref": "bc81530e-fa53-45d7-9acc-67a26fc6dd65",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2fe6af37-2d07-4c48-8ce4-165f5aa5df7f"
        },
        "item": {
          "id": "ae3d9ebf-a7cb-4b83-93a4-7f05994ac4b5",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c05e41f1-8213-43b0-9975-cd1cf2a767e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 723,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6892690d-3ae0-42e1-8c49-f622ecd40659",
        "cursor": {
          "ref": "38983791-7cd6-4ec0-89c4-bd318c15a887",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "91062b45-6458-4305-9608-6564104ab57f"
        },
        "item": {
          "id": "6892690d-3ae0-42e1-8c49-f622ecd40659",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "801002f1-5cb5-44d3-ba16-90ca2bb9bacc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf2dec8-3530-44a9-977a-a35f6cb7c2ea",
        "cursor": {
          "ref": "d1df2e28-f718-4a3a-afb0-234acf478149",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "8321aeb9-f82a-4f4f-b514-1bf776f6a337"
        },
        "item": {
          "id": "fdf2dec8-3530-44a9-977a-a35f6cb7c2ea",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "2cfa427e-9b35-4b13-ba5c-a2076d3a88bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f06b3c50-3cbc-486c-a713-95f08f5ff5fb",
        "cursor": {
          "ref": "a20938f0-93a6-4b67-aab7-a6062d643eae",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a527652c-f8c7-4ae7-96d6-fc9b05d2a96b"
        },
        "item": {
          "id": "f06b3c50-3cbc-486c-a713-95f08f5ff5fb",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "572c945e-66f7-4762-8c75-a0b7e4a7d88e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf4b0b5-3028-4743-a07c-49b57ef0a23b",
        "cursor": {
          "ref": "8d4259aa-777f-4bfe-ae49-c9397d7a562a",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8d9a1f73-7fb8-44a6-9887-dec4792bc778"
        },
        "item": {
          "id": "ecf4b0b5-3028-4743-a07c-49b57ef0a23b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "dedad9ec-1a64-4cc9-af4a-a8bf6766291e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "502aa34a-f95e-4767-9a6d-34dc831c21f5",
        "cursor": {
          "ref": "66b0750f-42f6-4282-a758-4b7136141064",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ead714ab-e301-43e0-b2ef-14d0bad65fa2"
        },
        "item": {
          "id": "502aa34a-f95e-4767-9a6d-34dc831c21f5",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8e82552e-87a4-4873-a8f1-7a885c4467d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2b4f6d-9a46-4bff-b73a-9901b68161ad",
        "cursor": {
          "ref": "1fdb4de2-2f3d-4e6b-92a8-7e27b5719976",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e3407846-a8ac-4404-861c-31b358b67072"
        },
        "item": {
          "id": "3d2b4f6d-9a46-4bff-b73a-9901b68161ad",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b895cb57-0b43-40ff-bb21-4ec095c9ecfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd65158a-9459-43ee-8c7f-523295c2868a",
        "cursor": {
          "ref": "6d553638-9904-4b68-bf0c-8f7a90aec2f2",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f37a5f44-1242-468b-abf1-8797fa3cc653"
        },
        "item": {
          "id": "cd65158a-9459-43ee-8c7f-523295c2868a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5840a164-d7f3-41c6-9e8b-fc2fb0b199c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01def57d-8012-4d5a-9e31-3ee4b42c0327",
        "cursor": {
          "ref": "c94921a9-f37f-4340-a85d-eaef5542d9ca",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "54984eba-b78e-429f-9d13-44c50b254996"
        },
        "item": {
          "id": "01def57d-8012-4d5a-9e31-3ee4b42c0327",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6a95346e-b05a-49ca-9dbc-294d150d010f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac58c33f-cc50-4823-8968-dd269c545b64",
        "cursor": {
          "ref": "91fa5381-bc63-433a-af3c-7d5213ff5a3f",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9979d937-41f5-457b-a8bd-be8d14bd80a2"
        },
        "item": {
          "id": "ac58c33f-cc50-4823-8968-dd269c545b64",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "bfd9e816-b5b1-4e80-ba39-fe48e8c6a777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8e7646-ec4c-4974-bfd9-f573454347df",
        "cursor": {
          "ref": "5ea68732-697f-4b97-8485-85ac8847a550",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "04e3d5e5-dae1-4dda-b4b4-6735f2ad94ba"
        },
        "item": {
          "id": "af8e7646-ec4c-4974-bfd9-f573454347df",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "802e1cf7-3500-4c8e-b3fc-3d8bfff73e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1325,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6448c077-5870-49b4-806a-c8a1be260f01",
        "cursor": {
          "ref": "e64b8374-fd58-4a58-bc48-e6e3c016caa1",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "bc32a728-269b-4630-a59b-348943b6e978"
        },
        "item": {
          "id": "6448c077-5870-49b4-806a-c8a1be260f01",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "109c1e85-fe2d-4ef4-a14c-12cd8f772c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1194,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5577bf41-9659-4c5c-b9b0-6231a70f16ed",
        "cursor": {
          "ref": "d7c72017-68f9-4a98-a0f7-d9bf7e031317",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ca59ac55-901e-4cd9-97b1-0a3465a7e5bc"
        },
        "item": {
          "id": "5577bf41-9659-4c5c-b9b0-6231a70f16ed",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "43924d2c-3f0e-418f-ac14-b9ca5786e628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1035,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a543f6f-7a7f-43ea-9bd0-f852fd6db509",
        "cursor": {
          "ref": "e4d5ff1c-280b-422d-9605-65afc925a98d",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "488b1f84-10b5-487c-8173-540a0d7b0219"
        },
        "item": {
          "id": "3a543f6f-7a7f-43ea-9bd0-f852fd6db509",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b8648a2c-4e89-4769-8d67-634803c38bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 798,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec6e95c-ad19-4b29-852e-8e41fc3edb83",
        "cursor": {
          "ref": "2f7de71e-f5a7-46bb-b9a3-b7d90830e8ad",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "5e1fb106-4be1-4596-bd82-9c88fa7aa2aa"
        },
        "item": {
          "id": "aec6e95c-ad19-4b29-852e-8e41fc3edb83",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "96f59bd9-3099-4675-86c8-41b7c4c96a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a55d9a74-4761-4537-87ab-de3890acfb16",
        "cursor": {
          "ref": "0cc9446e-cef2-4d64-b11f-f8a614edcdd4",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "207915f0-ab74-4d88-8673-f29c5a5fa0c5"
        },
        "item": {
          "id": "a55d9a74-4761-4537-87ab-de3890acfb16",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "6590a52e-ffcc-4fb6-8408-88e368e7bbaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e0beba-bae4-48e5-a48e-c1ac9df08592",
        "cursor": {
          "ref": "1cf839cf-35ae-482b-a901-dfb2b100f086",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c251a6e1-9523-4270-8b6a-7484487410c1"
        },
        "item": {
          "id": "f1e0beba-bae4-48e5-a48e-c1ac9df08592",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "5dd4638a-712a-48e0-ac5a-3ae9656e8486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5de0eaa-aa10-4eee-8c1b-6e617dfff6b1",
        "cursor": {
          "ref": "8c4963ab-e6ff-4cba-a202-d0583ecd2307",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6ad34fff-da3f-42f0-bb82-805be9108e74"
        },
        "item": {
          "id": "e5de0eaa-aa10-4eee-8c1b-6e617dfff6b1",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "bc2f2fda-e0d7-44e4-96b2-43a7543c4500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19860a11-cf56-49d8-a850-4a781ff7884f",
        "cursor": {
          "ref": "3c0b5a9d-272e-4fbf-970a-81bb5b1e5a1f",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1cf1c139-1da6-40bb-aa8b-074babbced43"
        },
        "item": {
          "id": "19860a11-cf56-49d8-a850-4a781ff7884f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "19ba3576-dc22-401c-a157-5c259df00936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0aaa51-b509-4099-9f6f-e979eb40e392",
        "cursor": {
          "ref": "2e4f16d5-952b-4de0-b943-7fee8ebbacc9",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "31eeab38-3cbc-4b1b-9b5b-d14c873a8000"
        },
        "item": {
          "id": "2e0aaa51-b509-4099-9f6f-e979eb40e392",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "cbb261d9-cc77-42de-83be-b984bf527529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f7953c-6ac6-4b02-86e3-aef44dbba1ff",
        "cursor": {
          "ref": "f13ccf44-3d80-49cd-90df-0349c5bf1ffa",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8e1612b6-90af-4e76-b656-2eb2edafdb58"
        },
        "item": {
          "id": "d3f7953c-6ac6-4b02-86e3-aef44dbba1ff",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f5af17d2-570f-454b-acca-7dc07a36d7da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28fa5ffa-32e6-47ba-ad28-ac7a7b7f0f72",
        "cursor": {
          "ref": "e411b23f-dcdd-4399-b12a-b99885f27396",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c7b8c6ae-5a92-444d-bff8-5fb0e1137e30"
        },
        "item": {
          "id": "28fa5ffa-32e6-47ba-ad28-ac7a7b7f0f72",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "74c53c22-be4c-4e1c-adf5-d73ab9a9965b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f70abf2-8f80-49c8-b7c5-852d54e4e80f",
        "cursor": {
          "ref": "13adad89-0f80-4491-819f-4bee19439423",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6aec745a-faa2-4e6f-b43a-3993b07dcd84"
        },
        "item": {
          "id": "1f70abf2-8f80-49c8-b7c5-852d54e4e80f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d5a241d2-8b62-4182-942d-8394151cf4f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d948e8-d975-4dbd-a960-ea69a1ee5cc8",
        "cursor": {
          "ref": "8a576b81-1f7c-4c78-bd6e-80000a62d685",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "45698e4a-1f9b-4e28-bf94-458ae5753b0a"
        },
        "item": {
          "id": "74d948e8-d975-4dbd-a960-ea69a1ee5cc8",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "4f1e2ff2-53a5-4016-8f33-04289219bc1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93969ce1-8dc9-4491-9242-c3e3b9ba34fc",
        "cursor": {
          "ref": "26ee6d08-435c-4083-a433-d1131144374e",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "95f8da1f-4ce7-47c7-a030-47b350e19804"
        },
        "item": {
          "id": "93969ce1-8dc9-4491-9242-c3e3b9ba34fc",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "60cd2e97-7572-4a43-b55f-ae247d0e16aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3857b209-41bf-49de-8b06-54db6659848e",
        "cursor": {
          "ref": "16de9212-7bb1-45da-b63b-5fc36ade5a44",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "02bdd976-3047-46e2-bd50-b18fb5121dfa"
        },
        "item": {
          "id": "3857b209-41bf-49de-8b06-54db6659848e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c2786704-afb4-4402-928d-e88141121644",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 755,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a74d088f-6a0d-49d2-b4d7-7c40e53a41be",
        "cursor": {
          "ref": "bfd17351-942e-48f5-9c8a-b96d0735500f",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "7891b5fa-c00d-438a-8281-39e86440b4b7"
        },
        "item": {
          "id": "a74d088f-6a0d-49d2-b4d7-7c40e53a41be",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "fcf4a842-451c-4f4e-979a-6644055ec34e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7bbeef4-fed5-43f9-a127-a3387a49a60f",
        "cursor": {
          "ref": "ca5a502f-6e01-4491-bb2a-79447de7bdfe",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "4a022f2c-5f3b-47d1-bb9c-dfeade2b0d04"
        },
        "item": {
          "id": "b7bbeef4-fed5-43f9-a127-a3387a49a60f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d7b9c092-21d7-492b-8690-595680523f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568e2b62-25ef-4c77-8098-f5ac734dac42",
        "cursor": {
          "ref": "ae7bc7b7-acab-48f8-8ac0-7f36a7f5b4f4",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "494f5f75-7327-466f-996d-516605c8c59b"
        },
        "item": {
          "id": "568e2b62-25ef-4c77-8098-f5ac734dac42",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "953bbd9e-8b0b-4ace-826b-95a2b35fcb87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "435ead89-26aa-4e4f-930e-98554b04bfbd",
        "cursor": {
          "ref": "0478ffc8-aed0-4f63-8444-54fef70062ba",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7c404aae-71d8-441d-8aa9-b89bd0c63110"
        },
        "item": {
          "id": "435ead89-26aa-4e4f-930e-98554b04bfbd",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "2bbf75c4-ad6d-49c2-985b-d96f8e8bc16c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "359d863c-e0d8-42f1-9c91-52a6fc08b7fa",
        "cursor": {
          "ref": "67388914-daa8-44c5-83bb-7d5fb69e21e0",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "89e5e143-5af3-4903-9982-c96f44c2c05b"
        },
        "item": {
          "id": "359d863c-e0d8-42f1-9c91-52a6fc08b7fa",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "55bb2963-5e7b-4bf4-bf37-3bb061e3145d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a22173-1223-46bb-bd32-611776d13e35",
        "cursor": {
          "ref": "e9a6777d-030a-4ff2-8a9b-81b03f3ecb09",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "f68187eb-e32f-4f61-ae1a-0b7a7a729707"
        },
        "item": {
          "id": "44a22173-1223-46bb-bd32-611776d13e35",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8580710c-8ef6-4539-9a8a-ddd055ba71c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feaead1d-a7a3-45ce-960e-e543b86513d8",
        "cursor": {
          "ref": "7d583dd5-5b15-4418-845b-12dcd3e269ef",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c1c837f7-dc8b-48c1-9551-98b8ee341b9e"
        },
        "item": {
          "id": "feaead1d-a7a3-45ce-960e-e543b86513d8",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a401e273-fb0a-4558-bea2-5ce6b383059e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 772,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "574fdab0-efb3-4865-aa81-5aa19b9a104d",
        "cursor": {
          "ref": "53761625-57e3-4378-bf09-cf6fbf960326",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "8e44b470-0e78-4919-80c7-13d470b20472"
        },
        "item": {
          "id": "574fdab0-efb3-4865-aa81-5aa19b9a104d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f07a4d7a-90aa-4665-ae6c-1265a741b5cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328ec6e8-c3fd-42a2-967a-69cd70295ba4",
        "cursor": {
          "ref": "422c03ec-9c14-4fd4-8c4e-0f29699854ef",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e702d6cd-e1ff-4ec0-b9b7-a33f11abe956"
        },
        "item": {
          "id": "328ec6e8-c3fd-42a2-967a-69cd70295ba4",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "8a036559-636f-45e5-9241-4778c9f3e636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9308927-2059-4e89-9e86-6079dc6766fb",
        "cursor": {
          "ref": "00564c0c-5c7a-430b-bacf-073865cf050c",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "05a76530-8175-4227-b67c-8e6bea49f7c7"
        },
        "item": {
          "id": "f9308927-2059-4e89-9e86-6079dc6766fb",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "81a7eb1c-9f0a-4015-a7fd-f91e399a9540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90dc8cd5-a5e0-49b5-9b4f-ea6df83e58a0",
        "cursor": {
          "ref": "0bb17c54-fc90-48b8-8614-167825ea54fc",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "1af63464-a87b-4c66-948e-7cdc53050c2c"
        },
        "item": {
          "id": "90dc8cd5-a5e0-49b5-9b4f-ea6df83e58a0",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "6e52aeec-e72a-46f9-98b4-c641b12af1b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4a4633-c58c-474e-851b-5ff1d2fc1c0b",
        "cursor": {
          "ref": "3c48abeb-e633-4167-94ff-9211d0989e55",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9be5e1f4-a860-4043-bd59-7b9559e96afd"
        },
        "item": {
          "id": "8d4a4633-c58c-474e-851b-5ff1d2fc1c0b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "efab43c4-bb70-436f-939d-6913e3c34249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 690,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84b2f675-214d-4956-af5d-cfe4a8a62a58",
        "cursor": {
          "ref": "8ec5ef6d-4ffe-4484-bc7c-11b4f51d13ea",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "cb2059fc-ff56-4d9a-888d-d7867b53e11d"
        },
        "item": {
          "id": "84b2f675-214d-4956-af5d-cfe4a8a62a58",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f6c7dfb5-bd21-47d7-ac7c-ceac793eae90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dabc73c3-0a07-4edd-bee9-7d431d875ef2",
        "cursor": {
          "ref": "5351cfd1-7573-4a34-bf6a-06c70ece5961",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "9b5e47e1-ef6c-4e20-906f-0a1997cf7841"
        },
        "item": {
          "id": "dabc73c3-0a07-4edd-bee9-7d431d875ef2",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "6d76ca93-87c3-4994-b79b-3035e84504a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae90a8e4-b811-4f74-88c3-c0085df61510",
        "cursor": {
          "ref": "258e9044-53ec-4398-9bc6-b28b360d4535",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f141b38e-ca71-433c-8978-f065b2fc75e4"
        },
        "item": {
          "id": "ae90a8e4-b811-4f74-88c3-c0085df61510",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a8c94158-4bcb-4ff4-b605-97442beac7a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c7bb88-02a2-4683-8c62-010ecf4d61c3",
        "cursor": {
          "ref": "46dc1db9-da21-440f-8119-b25574a69f60",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a9048811-b4b0-4185-883b-c5afa2c18d97"
        },
        "item": {
          "id": "70c7bb88-02a2-4683-8c62-010ecf4d61c3",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "fb066d50-499b-4261-826c-7491cc12cf34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa17997-9175-44a4-bf9c-28c317c07f9b",
        "cursor": {
          "ref": "8cac5772-21d6-45c9-8601-4b301d5ca834",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "0ae76442-5973-4a3a-ac38-cc3b7b8e8a52"
        },
        "item": {
          "id": "daa17997-9175-44a4-bf9c-28c317c07f9b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ad17943e-8aae-4dc7-af3b-7f57dd1c81a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96573754-0788-4440-acaa-817ab982d781",
        "cursor": {
          "ref": "5d0de96b-9c8c-4abd-9bd3-94003912477e",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "9ed1c15d-c2c6-4793-98ec-1fa4b5e6a4ae"
        },
        "item": {
          "id": "96573754-0788-4440-acaa-817ab982d781",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "98ffe861-4ded-4aed-aa4c-8de1d5c5d5a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c73a13d-fe59-48e6-b5cc-b06f20840d64",
        "cursor": {
          "ref": "766bc33f-c99f-49c9-bd0a-d4ca2f523133",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "6ecf96d2-27b6-4edd-a596-d043833545f8"
        },
        "item": {
          "id": "8c73a13d-fe59-48e6-b5cc-b06f20840d64",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "02e8c0de-912c-4356-8f41-e5f4d8afe33e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cfa96de-6a87-4921-8f1b-4196b9c06d75",
        "cursor": {
          "ref": "f63cd085-f7f3-434d-aa56-173aa63d10db",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "14a52b4e-6903-4f27-9512-53048a13e85b"
        },
        "item": {
          "id": "8cfa96de-6a87-4921-8f1b-4196b9c06d75",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "6f79376d-a0a3-4fac-8c62-b6c7fe7d2743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7631d5b-da0c-4d7e-a28a-e194e2747217",
        "cursor": {
          "ref": "f909b5bd-ca48-4b8a-b266-47ed8b18bfeb",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d572b998-563d-4753-8659-3286604f700a"
        },
        "item": {
          "id": "b7631d5b-da0c-4d7e-a28a-e194e2747217",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "08c3de26-7796-459b-a196-7ba3f4c0308d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce07d89-b3e1-4c5e-a040-25cc3cc2c918",
        "cursor": {
          "ref": "70ba2dbe-e73c-49b2-8a3c-857b7ea5ad2c",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "73a23f79-3c96-4824-8870-4d292abddb3b"
        },
        "item": {
          "id": "7ce07d89-b3e1-4c5e-a040-25cc3cc2c918",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f45b5cb4-8e43-48ed-862f-9e7dac4b9efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 778,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c40b6a2-024c-43b4-8db6-fae636685649",
        "cursor": {
          "ref": "26001fd1-234c-4772-849f-55488e65119c",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "61a3141b-9140-43c0-a8c4-6257ee9c1dce"
        },
        "item": {
          "id": "5c40b6a2-024c-43b4-8db6-fae636685649",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a02e9d5d-3545-4f19-8771-b263c0b24007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a03e2e-8889-4485-827c-a805f0307880",
        "cursor": {
          "ref": "73fabbf9-f188-44ba-8ec6-925870a2b2eb",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "586152e3-e183-4ea2-b5f3-0f900f7f0549"
        },
        "item": {
          "id": "43a03e2e-8889-4485-827c-a805f0307880",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "3c8f626f-98a4-44ed-8f69-1873f8c45f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f95619e7-5ef9-4a04-bca8-236c7d8039fe",
        "cursor": {
          "ref": "fc7ddb8d-bd3d-4805-8947-0eb6866e15e6",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "cb879e50-0428-443a-bc78-1c21b06415aa"
        },
        "item": {
          "id": "f95619e7-5ef9-4a04-bca8-236c7d8039fe",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "64a9fdad-45f2-43a7-8393-23fd4504025d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b995b5-6444-4e97-ac30-6fe6a9b5aa21",
        "cursor": {
          "ref": "c75abab7-0167-44ab-aaff-bc498e02e8cf",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f142886b-bf94-4e09-8f68-742137379350"
        },
        "item": {
          "id": "97b995b5-6444-4e97-ac30-6fe6a9b5aa21",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a555ce7c-e672-43bd-8710-67654eb7bc39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1075,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa879e68-6ab5-41ed-8d9b-1158e5bed566",
        "cursor": {
          "ref": "f9f956a7-3e35-423b-9563-b6b5fcfec37e",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1e0eb2e7-74f0-4b90-bddb-21c4a6aa18e6"
        },
        "item": {
          "id": "aa879e68-6ab5-41ed-8d9b-1158e5bed566",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f9087e2a-5c8c-4504-94a8-b2424fe18600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1246,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd98a7e-28c1-4807-a1ff-07df605cf5b5",
        "cursor": {
          "ref": "d971bd28-38c4-4364-963e-160f16f67962",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "8ebd178a-e110-4837-8358-168a6821eb1e"
        },
        "item": {
          "id": "cfd98a7e-28c1-4807-a1ff-07df605cf5b5",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "ede8bd28-d7e3-4538-abf1-04a90d65ada0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1791,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c5b4713-ab78-4b0d-b2c0-074c44c17660",
        "cursor": {
          "ref": "25b3e5bd-0a2d-4cf7-8d3e-d7c033a8f2e5",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1827d294-ad75-49a2-ba6d-a51b7b07b073"
        },
        "item": {
          "id": "3c5b4713-ab78-4b0d-b2c0-074c44c17660",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "219ae717-d1d4-4140-a6b2-6b0f9728d3d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1817,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5aba2b-0a27-4239-82fb-7bf5cd6c6e46",
        "cursor": {
          "ref": "7ba064e7-d999-47bb-9b20-37f1987a9177",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "4d82ae3d-6a38-4404-8936-c96948b316c2"
        },
        "item": {
          "id": "fe5aba2b-0a27-4239-82fb-7bf5cd6c6e46",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8dff372e-76b8-4106-83f4-2002c1c2cead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1467,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ed6a38-1ccc-405f-93e4-e981ff5260ca",
        "cursor": {
          "ref": "33c52f18-a1e5-44c3-aa73-a88971ae03a4",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "712291de-fa98-4c79-a988-f6a7ef3b906a"
        },
        "item": {
          "id": "43ed6a38-1ccc-405f-93e4-e981ff5260ca",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "074c28c0-2842-4fd2-9374-ca8a434528f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1670,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e3ba0d-7184-44b0-8fe0-1199acecc827",
        "cursor": {
          "ref": "01ccb1f5-639e-42d7-b88d-9bbbb1acbf1f",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d3c6ff70-7616-4261-a880-68242a0f6350"
        },
        "item": {
          "id": "67e3ba0d-7184-44b0-8fe0-1199acecc827",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2da9a529-2e9c-4ba8-90ac-b18e313a9dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1318,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4952d5ec-0844-4a87-ab4a-a2417b71e0a2",
        "cursor": {
          "ref": "33db87ef-6167-464f-ab0e-1fdfb78473b6",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0f989695-e90c-4457-bcf5-f862b150196c"
        },
        "item": {
          "id": "4952d5ec-0844-4a87-ab4a-a2417b71e0a2",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e0c52a8a-c591-4f19-9303-743ee6955113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 989,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5bc3bf-c44b-4e77-a64d-a0c1df55d487",
        "cursor": {
          "ref": "ac476710-5c05-4702-bf95-bd0fc1b2501a",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d8734c6f-84b5-4f6f-9ad7-4f00537d4c0a"
        },
        "item": {
          "id": "fe5bc3bf-c44b-4e77-a64d-a0c1df55d487",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "1a5ac4a6-8847-4e1a-8c53-1c25386302f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2bd616-8529-4571-bba6-03a208229a85",
        "cursor": {
          "ref": "a9078351-f464-4e33-b9be-bbc60bde88a5",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ac88648a-0059-4c1e-8f04-2f72031771c6"
        },
        "item": {
          "id": "8d2bd616-8529-4571-bba6-03a208229a85",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "16492c58-e6fd-44d8-8a3c-7c3f7ff51614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7f1b2f-7bb5-4c90-a122-dcb585fe21b6",
        "cursor": {
          "ref": "2e71cfa7-c4ec-47df-bb73-7c522df8186a",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ed516752-c15d-4628-8a8a-1635e8d5bc8a"
        },
        "item": {
          "id": "4d7f1b2f-7bb5-4c90-a122-dcb585fe21b6",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "5095cac0-9e8a-4dff-82c8-02fe9da75c3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b6a4c1-30d0-4b40-8e99-a0605e5543f7",
        "cursor": {
          "ref": "82b9e4c7-5c1b-4161-9535-48e8970276b6",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "2e143124-55c0-4aa4-9548-33f4d32f4f90"
        },
        "item": {
          "id": "d1b6a4c1-30d0-4b40-8e99-a0605e5543f7",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "1ab2f922-179e-4bd8-aa29-5fb2779b03ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190dd523-a03a-479f-a596-6b1ce5e9266c",
        "cursor": {
          "ref": "ea0b8b38-e1ee-41c8-ad9b-c5ff1c7675e6",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e27dafce-4426-455e-ba72-74a0d5180f19"
        },
        "item": {
          "id": "190dd523-a03a-479f-a596-6b1ce5e9266c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "9f29eb05-0499-4434-bdc0-71b7b16da3b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f754f188-01f3-463d-866c-b0c4d894a437",
        "cursor": {
          "ref": "cc11fd9c-edd9-47ec-aef3-9b5eaad4712e",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "913000c1-809e-49e8-8f15-6e780a9a40fe"
        },
        "item": {
          "id": "f754f188-01f3-463d-866c-b0c4d894a437",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "b2500fd0-cf5a-4dbf-baae-c7696aab5813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea03b31-0f0f-4892-8495-88aef4e5e1cd",
        "cursor": {
          "ref": "c5b71a4a-c6d2-4cfa-9f5e-c9f4bd6b6a1e",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "00e949e1-8792-4975-8dae-159bee985f57"
        },
        "item": {
          "id": "1ea03b31-0f0f-4892-8495-88aef4e5e1cd",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3a1bc7f1-2cf9-47e4-b1c4-c443d8f79d80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 851,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "489056e2-3ccc-4bb1-8347-1783a390067d",
        "cursor": {
          "ref": "50fae0ce-ee68-4b92-9a38-9af1e6f31654",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4ac2b0a8-1137-4b7d-bf36-fdda964666bf"
        },
        "item": {
          "id": "489056e2-3ccc-4bb1-8347-1783a390067d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d509c4ba-483c-4aac-8490-c0d7623b90d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1440,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1aeb3ad-58e3-453b-a301-8b87957a4cfe",
        "cursor": {
          "ref": "6d947186-990f-43a2-b4f9-ed032abbf996",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "1db92a54-3c15-4546-8280-1d053349c5f7"
        },
        "item": {
          "id": "e1aeb3ad-58e3-453b-a301-8b87957a4cfe",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "908ccb47-31e8-476e-93e3-a3b1a65e6eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1204,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0fc8b4-289d-4cc1-92f5-3316f453c348",
        "cursor": {
          "ref": "4e42ae09-2f55-40e0-9a5f-8d593809f317",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0e6150e2-788c-4d07-a18b-cb38c7be64f7"
        },
        "item": {
          "id": "1a0fc8b4-289d-4cc1-92f5-3316f453c348",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b0288456-735b-4ff5-8d9c-27e887d0044a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 950,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eff8d40-6939-4ba3-83ee-cfd5860b61e2",
        "cursor": {
          "ref": "f991a171-8535-4470-9803-fb136d7ea99c",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "30cf9cb7-5364-4b49-88ab-d95b50bbe0b1"
        },
        "item": {
          "id": "4eff8d40-6939-4ba3-83ee-cfd5860b61e2",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1bd67fec-d5aa-4362-b82e-6559fe124301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69850e3d-37af-4968-a368-322042a37b80",
        "cursor": {
          "ref": "23ac50c5-30ab-4f65-b0e7-be355dfbae6b",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "af0cd89e-e1a3-4921-acd9-4295b64766e9"
        },
        "item": {
          "id": "69850e3d-37af-4968-a368-322042a37b80",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f682f0a1-2cbd-4bf8-9138-c6665f176702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 706,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3583d6c3-b73b-4f31-8afd-38e638db35f5",
        "cursor": {
          "ref": "b09417a9-2631-49f6-b6ff-0e0a5b629f0b",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "45125f74-d23c-45ed-9e8e-7ee613b344fc"
        },
        "item": {
          "id": "3583d6c3-b73b-4f31-8afd-38e638db35f5",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "8fb0fe48-a6f1-4b3c-ad35-f8c3f9282183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 728,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bea87fa-6299-41f4-8a81-395ef1ce7504",
        "cursor": {
          "ref": "cd43c37f-5fe1-4250-911b-8d55eb9ca4f6",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5e7520d0-3d24-41a8-a639-27fa7aac6773"
        },
        "item": {
          "id": "8bea87fa-6299-41f4-8a81-395ef1ce7504",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "5e6e72cb-44ff-41e5-b4e3-519d07c2a0bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28e4849-9859-44e6-8ca6-ecbb0a0b27ac",
        "cursor": {
          "ref": "4d3e96ec-dc29-46c2-9995-dfd5ad7f979d",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "23d2e6a6-93a0-4472-81e0-ef7173bf0589"
        },
        "item": {
          "id": "e28e4849-9859-44e6-8ca6-ecbb0a0b27ac",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "0f3dca0e-3875-4f08-a9c4-f29a82ddd2b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb009a86-aead-421e-8173-c6481310357b",
        "cursor": {
          "ref": "3d5d7f14-c408-46bd-8ab4-2138a0051f07",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "87713524-c26c-4831-91c2-deab4499b70f"
        },
        "item": {
          "id": "cb009a86-aead-421e-8173-c6481310357b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "becefac0-f456-40e5-82b5-6b501837775b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0544a0f-5eeb-47ac-b0c7-fa50d0947a32",
        "cursor": {
          "ref": "bce68db9-8197-49ce-a500-8f1413e6f830",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "da5514a7-bebb-4a14-9b53-10eb6cb4666c"
        },
        "item": {
          "id": "e0544a0f-5eeb-47ac-b0c7-fa50d0947a32",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d7d4f3db-4f5a-4379-ae27-07d77a6e6e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab6af6c-60ca-43ed-8cff-62c21ea5df16",
        "cursor": {
          "ref": "7b923754-1b0a-47ec-b315-398c706e9425",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ebb510d6-fac9-4c22-a55b-69a13f1b3042"
        },
        "item": {
          "id": "0ab6af6c-60ca-43ed-8cff-62c21ea5df16",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "04cd86e1-ac79-490f-97d6-a8a601d88b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31cc875-8638-42d5-a29c-175c8c07dda5",
        "cursor": {
          "ref": "2635ef12-fc31-4e29-a352-763420cbf16b",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5e749c56-daee-45a3-8c53-16281249c589"
        },
        "item": {
          "id": "e31cc875-8638-42d5-a29c-175c8c07dda5",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ce6105b5-baa4-4727-bb18-613e6b264e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a275dee-d9fe-4740-95a4-2b343f006002",
        "cursor": {
          "ref": "a059e26d-7c63-4045-aaf7-28692edb0de2",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9ae18840-4d94-46b7-9558-695b0dbe14bb"
        },
        "item": {
          "id": "0a275dee-d9fe-4740-95a4-2b343f006002",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "3a60b87d-c70c-4691-a532-4c281252bd49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8559b19-c779-4a05-a6a3-8c92f6e17bc8",
        "cursor": {
          "ref": "8b67652b-cba7-41de-901c-e4346f1ba091",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "9921704d-1d68-4c9a-967e-f27178346585"
        },
        "item": {
          "id": "d8559b19-c779-4a05-a6a3-8c92f6e17bc8",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "8066a139-4b8a-4f0a-b147-ecd3319dd683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14cb3ba9-79c2-4999-92d4-048f5887b78f",
        "cursor": {
          "ref": "c345b5ed-e96c-43a4-9440-9b8f6678741d",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7bca15cb-303f-462c-bc14-29dd1a5613d5"
        },
        "item": {
          "id": "14cb3ba9-79c2-4999-92d4-048f5887b78f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "84bd308e-445b-4324-9eb5-fb9fbd73f1c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce1022a-2944-438e-85ad-af1c34002e20",
        "cursor": {
          "ref": "e67a50f0-8b98-4081-a49e-8d0a571d857b",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "16c54564-482a-4c7e-89c6-da913e838166"
        },
        "item": {
          "id": "6ce1022a-2944-438e-85ad-af1c34002e20",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "563f59a7-3e5e-4654-9049-8d7f2c79ba25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "377f1acd-c4fb-450b-b99a-b9cf50961f83",
        "cursor": {
          "ref": "f1cfdc2b-1837-41e7-bc7d-ddc3e0879b18",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "1ec91c57-8bb9-4ec8-bbe1-dd162e44f1bf"
        },
        "item": {
          "id": "377f1acd-c4fb-450b-b99a-b9cf50961f83",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0ec583ef-3f42-4969-ba64-eec6ac4975d6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db9fa0fd-41be-4655-b5c8-d6bf0e3610b8",
        "cursor": {
          "ref": "85ffd5d2-dee4-4df5-b76d-ea6b8ceffc2f",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0497cf3a-c9ba-4f60-8a79-4b69dc5f9309"
        },
        "item": {
          "id": "db9fa0fd-41be-4655-b5c8-d6bf0e3610b8",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "e0f58782-c401-4e58-b8f5-178d5d50fc00",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 657,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1f215a-e7b5-4fc0-81ce-3bbf45f31555",
        "cursor": {
          "ref": "fe5912c0-59c0-40c0-afc8-58d959d9373c",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d7cfa33c-e813-4c6f-a0f5-b8efcea105e0"
        },
        "item": {
          "id": "8f1f215a-e7b5-4fc0-81ce-3bbf45f31555",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1608c1c3-89bc-4c67-9981-f4538da5d57c",
          "status": "Created",
          "code": 201,
          "responseTime": 6316,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "7057bd32-a1f7-44b9-8f6d-ea97ef63c1c9",
        "cursor": {
          "ref": "b9c807c2-3885-4888-a5f0-786b0109ed3a",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "53b315cf-e35d-4d70-9584-1fa5cad375b2"
        },
        "item": {
          "id": "7057bd32-a1f7-44b9-8f6d-ea97ef63c1c9",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "37c4dccf-3526-4e4d-bfe8-f3c2251770c7",
          "status": "Created",
          "code": 201,
          "responseTime": 8085,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3bc04c1-bc8e-47ec-9734-226f5c2598b7",
        "cursor": {
          "ref": "de861149-8744-4414-886a-6e6eb467061a",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b96e07b0-c9b6-48d3-8ae2-5f637de3cc48"
        },
        "item": {
          "id": "f3bc04c1-bc8e-47ec-9734-226f5c2598b7",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "dfe888dd-67ed-4712-925f-e69a0061a38f",
          "status": "Created",
          "code": 201,
          "responseTime": 5747,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d47c6dd-3753-46de-9c87-575063b349c4",
        "cursor": {
          "ref": "90335a2a-64df-4734-af04-8dd485e870cb",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "035a693c-7a0b-43b5-b201-49300dc825ee"
        },
        "item": {
          "id": "7d47c6dd-3753-46de-9c87-575063b349c4",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ace75b1e-5f89-4b2b-98bc-6a4336e92cb0",
          "status": "Created",
          "code": 201,
          "responseTime": 5829,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ce94d0-8050-45c5-8d8c-44d96e0982e9",
        "cursor": {
          "ref": "b398698a-327f-4db0-abb5-7ceb62349a43",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a4a7e9f7-6021-49ab-9a93-8043ed3a3bf2"
        },
        "item": {
          "id": "b3ce94d0-8050-45c5-8d8c-44d96e0982e9",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "34786495-e43c-48b3-b435-9f2eb335137b",
          "status": "Created",
          "code": 201,
          "responseTime": 6009,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb9e3a22-28c5-4992-9ca1-95955cf70859",
        "cursor": {
          "ref": "f55c1a6f-d406-4e69-beb9-ea486845c259",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "61538e59-9a8b-44b5-8edb-7ccbd82eccbe"
        },
        "item": {
          "id": "bb9e3a22-28c5-4992-9ca1-95955cf70859",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f7859b88-409f-4406-ab42-e249b90724ff",
          "status": "Created",
          "code": 201,
          "responseTime": 7873,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d57244da-6e44-4907-bb9e-5b83fddf26f1",
        "cursor": {
          "ref": "7d0ce520-8f4e-4662-ac21-e1d517d74e0d",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "217b4b80-2030-48b9-ab6c-4d8e05346a49"
        },
        "item": {
          "id": "d57244da-6e44-4907-bb9e-5b83fddf26f1",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b440deee-e303-4ede-ae26-66c574dff012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d57244da-6e44-4907-bb9e-5b83fddf26f1",
        "cursor": {
          "ref": "7d0ce520-8f4e-4662-ac21-e1d517d74e0d",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "217b4b80-2030-48b9-ab6c-4d8e05346a49"
        },
        "item": {
          "id": "d57244da-6e44-4907-bb9e-5b83fddf26f1",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b440deee-e303-4ede-ae26-66c574dff012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9d0148-343c-4a80-a069-7b6b50327332",
        "cursor": {
          "ref": "f3c177db-c222-4274-876b-5be39311208d",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a46318e7-3873-4ed2-bb65-b85ba294678a"
        },
        "item": {
          "id": "2e9d0148-343c-4a80-a069-7b6b50327332",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d45cad8d-e225-410f-9dce-ea5770158d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1214,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85af9a2d-582f-497b-aa3a-771e779b930e",
        "cursor": {
          "ref": "3d3ab89d-1a88-4c90-83c5-9b4e4a1a6425",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9b795068-6eac-4e75-9f0f-197108c4f88e"
        },
        "item": {
          "id": "85af9a2d-582f-497b-aa3a-771e779b930e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8115f249-3f33-4cf1-b4f7-b94e4e355d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1178,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae8b2ac-7c09-4a31-9d9d-b52a7e4c90e8",
        "cursor": {
          "ref": "5dc7406c-e9fb-44f9-9e58-5db7c3eae842",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "4e86480a-5a0e-4c41-bf31-792f83f88f73"
        },
        "item": {
          "id": "2ae8b2ac-7c09-4a31-9d9d-b52a7e4c90e8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ac1688ac-43c3-433e-9a78-2879134e0fee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1212,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6545836-f705-46e6-81a7-7ec08c973a12",
        "cursor": {
          "ref": "494aa648-c720-4e94-adbb-213fe2889c05",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4dbea6ca-cd9f-4b14-b763-2a8282b2cc43"
        },
        "item": {
          "id": "b6545836-f705-46e6-81a7-7ec08c973a12",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "13f385fd-2632-45b4-bb62-adf858794607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 731,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8bd87fd-3263-43e4-ba22-a3381b9d7f16",
        "cursor": {
          "ref": "adfac41e-593a-4833-a465-ace1779551ca",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "dd50dc09-310c-4d97-bd34-b4c0ac06b793"
        },
        "item": {
          "id": "e8bd87fd-3263-43e4-ba22-a3381b9d7f16",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "40193713-0281-46e7-b314-dbdaecad2689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "596b6d79-b918-42a3-90b9-229c3e345c80",
        "cursor": {
          "ref": "f9a525c6-f874-465a-bc18-de77c5a1d79f",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ecc67f93-f7b8-4421-ad87-e3d52c2ec4f7"
        },
        "item": {
          "id": "596b6d79-b918-42a3-90b9-229c3e345c80",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ade9b587-36ae-4b85-add8-f617c3d2d27a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6110f713-fe3d-4c8d-b712-81116854a1a7",
        "cursor": {
          "ref": "63cdaca5-914c-4e45-be32-b2a3c477da44",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c9ffc42c-a71f-4a73-9e73-0bd8f643bff8"
        },
        "item": {
          "id": "6110f713-fe3d-4c8d-b712-81116854a1a7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "393757a4-7800-4354-814a-ad1c3e0bbb28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cadca99f-dc70-4a88-98a6-80b4964f0c84",
        "cursor": {
          "ref": "6de49fb5-9804-49b8-a054-dfb2a2a41899",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c8b9a6d6-00e4-48b4-b84e-19ca0e9aa603"
        },
        "item": {
          "id": "cadca99f-dc70-4a88-98a6-80b4964f0c84",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "dad42eae-e08f-4cad-ba8b-f1bcf6bee444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e1087a-fbaf-4552-9961-602a77562124",
        "cursor": {
          "ref": "33ce3d38-dded-4aa8-a385-6500f84a28ea",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a9c424d6-6b9f-4fac-b372-a17e738af90e"
        },
        "item": {
          "id": "f3e1087a-fbaf-4552-9961-602a77562124",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d23c8df1-469e-4848-9a7e-a4e057844986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3563880-c532-417c-a61b-8026d27b3dfa",
        "cursor": {
          "ref": "16419ad2-0433-4cd3-9b96-e6069a58c20c",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "51235bb1-8292-4738-9713-164555530bbd"
        },
        "item": {
          "id": "c3563880-c532-417c-a61b-8026d27b3dfa",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4dd11bff-391c-45e0-9e3f-f1825bd7f6bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df4bace-f1a4-4937-b7f4-aba811f3fc0c",
        "cursor": {
          "ref": "7ab6d477-fc7e-46aa-ad06-feac83ec01bb",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "55056ba0-04a8-4814-aeaf-06a9553f2972"
        },
        "item": {
          "id": "2df4bace-f1a4-4937-b7f4-aba811f3fc0c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "37b7f7f9-4205-4048-b2fd-241f1f904d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f68dab22-b019-499b-9be6-b301a4c6c214",
        "cursor": {
          "ref": "ce4a0fa8-7461-43dc-87aa-bbcacbd93e0f",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "98881440-3700-4e61-95cc-57d9394abdac"
        },
        "item": {
          "id": "f68dab22-b019-499b-9be6-b301a4c6c214",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4992413e-63f0-4edd-ae05-dd4489161a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d7e088-badf-469c-8bfe-a9aa2702f30c",
        "cursor": {
          "ref": "720e8d25-98ff-4c56-8935-572ad7fc7ad7",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "3e0188b3-39cb-49d1-825a-51fe33e3d7f3"
        },
        "item": {
          "id": "90d7e088-badf-469c-8bfe-a9aa2702f30c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "41d2ac3f-c0d6-4cc3-9030-8720697fac9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 706,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adbcf890-2375-405e-aac3-68f327856371",
        "cursor": {
          "ref": "43728a14-226e-4613-b057-7b7b26648651",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5b563365-fd87-4bb8-a422-969f7966b031"
        },
        "item": {
          "id": "adbcf890-2375-405e-aac3-68f327856371",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "eec19a2a-0c82-4d5c-8ba9-11501609261c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a93a38a6-e54e-46ce-a35c-d717147e9b7f",
        "cursor": {
          "ref": "6546deba-5993-4900-9de9-efacd5d36956",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "4bde2e77-d126-4afb-9348-a487ef79f629"
        },
        "item": {
          "id": "a93a38a6-e54e-46ce-a35c-d717147e9b7f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "aba8f388-e4c4-4b5e-9445-3a92232a2306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "646ae1bf-0173-496d-9fa5-87bcd2b68a2b",
        "cursor": {
          "ref": "88cfd703-e4eb-44fc-9f7a-8c01bd2ae6cd",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "aa8c66d5-6222-47f7-a28b-e8085131d242"
        },
        "item": {
          "id": "646ae1bf-0173-496d-9fa5-87bcd2b68a2b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f781e808-9bdf-4386-9bdb-d3726c36c14d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe73c983-0c0b-4a44-b5f0-688273ee303f",
        "cursor": {
          "ref": "ee96d776-438e-4054-88fc-1ce0ecfbd767",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "aaca7c3e-5ba2-4b94-adc5-1412936fd0c5"
        },
        "item": {
          "id": "fe73c983-0c0b-4a44-b5f0-688273ee303f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8919760b-5d4b-48be-b326-e0e18ecf899e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aadeecd1-4069-472e-8653-af2c4b0e2a97",
        "cursor": {
          "ref": "db2ede47-3784-44bb-9794-3b8343f39cc5",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "78c97af2-e3db-41d6-8f0f-cc3a81bc0da5"
        },
        "item": {
          "id": "aadeecd1-4069-472e-8653-af2c4b0e2a97",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "46138548-c3d7-4e25-9436-edaaec87437a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b3e0c3-0a24-4d53-a842-9e7d0212ca91",
        "cursor": {
          "ref": "4e707763-1504-429a-871c-9a079609a3de",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d4ba0293-f03c-472d-9ce0-11dab355b8e0"
        },
        "item": {
          "id": "a0b3e0c3-0a24-4d53-a842-9e7d0212ca91",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e2313466-6252-419c-bb15-1e8799abd818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a14e38a-d5c5-4cc1-a86c-1cfbc5326e41",
        "cursor": {
          "ref": "cc7fb89d-841b-48d4-b3e7-4513ec328bef",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a4d1bb58-53e1-42db-9643-d8c668fb8caf"
        },
        "item": {
          "id": "7a14e38a-d5c5-4cc1-a86c-1cfbc5326e41",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "530072cb-1e06-4e7e-b30f-d848020c419f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b21457-7fa9-4916-bea5-cfbe0ffa5855",
        "cursor": {
          "ref": "2abe3586-5e65-4c19-a553-2ab5ff53b37d",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "223b881e-e785-49e2-bb9f-c050a083cb67"
        },
        "item": {
          "id": "89b21457-7fa9-4916-bea5-cfbe0ffa5855",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0c092c99-dd41-4ee7-a969-7066b899d330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be357028-0205-4fb2-bb3a-6abd7c408d67",
        "cursor": {
          "ref": "151f107f-4973-4eb1-805e-d1276ed6c3eb",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "18938d54-ebeb-4061-84c5-ceb50533fbf6"
        },
        "item": {
          "id": "be357028-0205-4fb2-bb3a-6abd7c408d67",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "fdbd0d39-24b7-44af-97dd-9c820a0ba26d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238f8133-eecc-4371-b78e-f5c758f037ae",
        "cursor": {
          "ref": "8d1fbcde-b301-44f8-8427-983175acdce0",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e41daaea-7e73-4969-bf91-5f1a97acebb6"
        },
        "item": {
          "id": "238f8133-eecc-4371-b78e-f5c758f037ae",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2521edf9-27cd-4f46-8653-8ba57a83d523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3755fefe-a41f-47d2-838b-c6e336997867",
        "cursor": {
          "ref": "2f9bcb86-cdd3-463f-a614-770cc8f796e0",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "28d934bf-6d3f-4053-a95a-23ad46747ca1"
        },
        "item": {
          "id": "3755fefe-a41f-47d2-838b-c6e336997867",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "55299a82-05f6-4491-b55f-fc6b4f724c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe68514-963f-4632-bd35-32f6bd675faf",
        "cursor": {
          "ref": "4dc4baa1-ff5c-411b-a8bd-e9040489dcbc",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "f32a3f26-f428-461c-8fd9-d208cd07625c"
        },
        "item": {
          "id": "afe68514-963f-4632-bd35-32f6bd675faf",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e62ca4b7-00d6-4d41-88e0-9afb3f00dda6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e267e0ef-3f0d-4d29-a001-4ffe719decca",
        "cursor": {
          "ref": "03849904-ac63-424f-a45f-9f8e64884060",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "157a87bf-3387-49df-ac75-70c7214f2332"
        },
        "item": {
          "id": "e267e0ef-3f0d-4d29-a001-4ffe719decca",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5c1f930e-e7aa-4e8c-8b06-467b2261d0cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635e7eeb-5a7b-4fd5-a4ab-9166ea691120",
        "cursor": {
          "ref": "618b7f20-7324-4b88-a3d1-27b39ca2f5fb",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7b89f660-7500-4494-b52d-bcb201b4a1bf"
        },
        "item": {
          "id": "635e7eeb-5a7b-4fd5-a4ab-9166ea691120",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c3cda713-424c-408a-83e7-5182a2425051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "437cbd34-b03b-4a42-949d-bc9660547102",
        "cursor": {
          "ref": "4331dfd9-1494-4bb3-b76b-a8f49944f2f3",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "8565c625-d8ce-4de0-b2f3-ef4b4fc4e6b1"
        },
        "item": {
          "id": "437cbd34-b03b-4a42-949d-bc9660547102",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "13e3db9f-c68d-4255-9943-f661a41c006c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9dfd3b0-0816-43b4-be21-68fc8029114c",
        "cursor": {
          "ref": "13feb0eb-91be-43c5-b10e-efc3c48b7a1e",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6002a971-e40d-4750-88a0-6032aefa929e"
        },
        "item": {
          "id": "d9dfd3b0-0816-43b4-be21-68fc8029114c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "04c72f5e-baaf-4f5c-a84e-45b817eae29e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "526e50cf-96fa-420a-a503-1bf690f8e6ce",
        "cursor": {
          "ref": "21a1a203-bc1d-462b-8b63-b8711a8294f3",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "39096b32-fb95-4ae8-9f1e-8e4421d9c717"
        },
        "item": {
          "id": "526e50cf-96fa-420a-a503-1bf690f8e6ce",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c56be25b-9136-458c-a09c-8112868c8573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f4b9078-63cb-4092-bce5-30c38766d865",
        "cursor": {
          "ref": "59952c4b-a5ea-4afe-add3-9f4a6e1d7dd9",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "0349cb33-6574-424c-bb1a-c28e14023762"
        },
        "item": {
          "id": "1f4b9078-63cb-4092-bce5-30c38766d865",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "4727b5d8-ef37-4d5c-8e51-79d1cadf4da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9746bdc6-ec59-42de-888d-a17d9472327a",
        "cursor": {
          "ref": "68fcb3ab-7576-4c9d-be9b-6b36fe24c49e",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "dd24cf58-be76-409a-87ef-8a024abb24a6"
        },
        "item": {
          "id": "9746bdc6-ec59-42de-888d-a17d9472327a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4fd526bb-4222-4082-bf3b-021e85bdf589",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2925e83-ac57-4bad-98b9-6661d9f2137a",
        "cursor": {
          "ref": "2a4d05e8-258f-4e1a-bdd3-0359a4c4f46a",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "8863741f-5ff0-43eb-9bc4-e3c4f0a7f951"
        },
        "item": {
          "id": "c2925e83-ac57-4bad-98b9-6661d9f2137a",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "9e493c21-f233-4687-b7f3-9e5a8f95b7c0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 669,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8d2385-01ee-4a43-a9bd-fa875c327dd6",
        "cursor": {
          "ref": "104a6412-4514-43d9-9fe0-d61187cfb9d5",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b3e27bce-f14b-42fe-88cb-51964584aa24"
        },
        "item": {
          "id": "2c8d2385-01ee-4a43-a9bd-fa875c327dd6",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "64cbd614-2161-4876-8573-eeb9d937be30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8d2385-01ee-4a43-a9bd-fa875c327dd6",
        "cursor": {
          "ref": "104a6412-4514-43d9-9fe0-d61187cfb9d5",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b3e27bce-f14b-42fe-88cb-51964584aa24"
        },
        "item": {
          "id": "2c8d2385-01ee-4a43-a9bd-fa875c327dd6",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "64cbd614-2161-4876-8573-eeb9d937be30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c88f66c-2f54-4060-96c7-660f2e193e41",
        "cursor": {
          "ref": "6c9e6f1d-b09b-4fe0-9482-44ae538d6e8c",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "defb2454-f3e7-43c1-8ac1-3e2e6e581add"
        },
        "item": {
          "id": "1c88f66c-2f54-4060-96c7-660f2e193e41",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "99453f57-4f17-44c8-9faf-ba4a91d392ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "517ffa26-1ece-4e34-81e8-edfde229864a",
        "cursor": {
          "ref": "e1a656f5-1cbc-4da7-9f56-3494eaa69cb9",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9aa4d3a8-0e54-4f5d-b069-e526d443d665"
        },
        "item": {
          "id": "517ffa26-1ece-4e34-81e8-edfde229864a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3515af31-df7b-4bac-99d6-9d600d8fabb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d81e19e-5b86-4df9-9bbc-3b4e8184751d",
        "cursor": {
          "ref": "9ec49312-af29-4c81-8816-47cd64e23e24",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6cd612fb-9735-4e20-b26a-9e46a1e68ea0"
        },
        "item": {
          "id": "0d81e19e-5b86-4df9-9bbc-3b4e8184751d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9d4fae78-d4d4-41d7-b327-73dd8c987d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a74435de-ad54-4021-9436-c7adafb18d42",
        "cursor": {
          "ref": "625ce371-0bb9-4643-a38e-cad7a1410f4f",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "9193be47-92f6-4b62-8cd3-5e2b26636895"
        },
        "item": {
          "id": "a74435de-ad54-4021-9436-c7adafb18d42",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7b64831e-6f6a-4dd7-a3cd-88f883f8b3fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "811788d6-c365-433a-839c-60e81e8cbf38",
        "cursor": {
          "ref": "9fc09a84-cfa2-42dc-aaaa-aee24f5f3430",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "8a46b33f-72ec-41d1-b507-266609f0a32e"
        },
        "item": {
          "id": "811788d6-c365-433a-839c-60e81e8cbf38",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "447bce9c-c763-4fc7-bb4b-94582a92cffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbd1dcea-2ca2-42d6-a407-4f3367023be2",
        "cursor": {
          "ref": "aa25ae8b-2735-4bea-bf6a-8eddf3037383",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "adc2ce42-7f04-4ac7-9f9e-1ccc2f07b5fa"
        },
        "item": {
          "id": "dbd1dcea-2ca2-42d6-a407-4f3367023be2",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "873104e5-3f72-4791-a7af-3c99e633c42b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d222c6d-c27a-4f27-8f3c-ded669de0166",
        "cursor": {
          "ref": "b688c316-a09e-49c5-9ed9-f9829a6a8119",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ee616d20-07b8-4f18-811c-356399d29512"
        },
        "item": {
          "id": "3d222c6d-c27a-4f27-8f3c-ded669de0166",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "c2042ad0-ed97-4cdb-958c-a238f607834a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c24d51-5fc3-4cb0-a1a9-24d276fdf97d",
        "cursor": {
          "ref": "c7eea5e0-7494-485c-a2e5-826da281ce3c",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c1d992c0-89da-4d56-9ac3-69e2466e6702"
        },
        "item": {
          "id": "18c24d51-5fc3-4cb0-a1a9-24d276fdf97d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6716e56c-9287-4db4-9ed4-db5717999824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c621ec3a-6703-4215-af45-0005b3934715",
        "cursor": {
          "ref": "9071cb0b-a158-4cfd-b209-27bf2dce4975",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7b105143-6ed8-4ba6-89ee-5fb4bc8e0a92"
        },
        "item": {
          "id": "c621ec3a-6703-4215-af45-0005b3934715",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "797647d4-217e-4e92-ae37-5a1ae126f12e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2926f6d2-296f-48fa-8fe5-cd1cb50eab32",
        "cursor": {
          "ref": "ce2a0f1d-fb52-46b0-bda9-6918813a131d",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "0f697056-de9f-455b-a9cf-1ed078b0cf87"
        },
        "item": {
          "id": "2926f6d2-296f-48fa-8fe5-cd1cb50eab32",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "db642bd6-f33d-424f-96f5-cb5581360cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20080ab1-df9d-4d7c-8a16-67d68dc943a0",
        "cursor": {
          "ref": "29f804dd-53d7-4a64-81a3-403dee6c7e4a",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "c2d38a74-fb36-4cd5-8e1a-17ee1346ab49"
        },
        "item": {
          "id": "20080ab1-df9d-4d7c-8a16-67d68dc943a0",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ea778bd9-d9f1-4d53-b530-e4f9448ff11c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f01c2daf-741d-4fee-b4c1-fd93d6ac89c8",
        "cursor": {
          "ref": "f704808a-9d36-484a-a88c-2ea8b64fefd8",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "2ba31ecd-67ce-4495-81f3-f1902f6ab0f9"
        },
        "item": {
          "id": "f01c2daf-741d-4fee-b4c1-fd93d6ac89c8",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6c18135e-7dc3-409b-8a2a-e0c5ceaf5fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bab7bb0c-515a-4a79-a180-b09205b7cea6",
        "cursor": {
          "ref": "e58c6704-a0c7-439f-8a59-f6f44f5952c1",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b53cf144-858f-4639-a126-30513e25686c"
        },
        "item": {
          "id": "bab7bb0c-515a-4a79-a180-b09205b7cea6",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f4df6bfe-2710-4db0-93c5-5e284f22face",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f79394a-66d5-4157-9db4-73f4f47fd78b",
        "cursor": {
          "ref": "5bf63b22-d15f-45c8-85bc-4772db3cd91d",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3d9a2de3-8424-4713-adc9-e97f2225c2a1"
        },
        "item": {
          "id": "2f79394a-66d5-4157-9db4-73f4f47fd78b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "cf522984-5fed-451a-9a51-f1a70e26e345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0caa1bd0-c4dd-4c2c-8855-c37616fad92a",
        "cursor": {
          "ref": "8e0f12dc-832d-4d96-8379-1aea5c7d0c92",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "0fd1ebdc-a496-437b-bbca-c063d348ddb0"
        },
        "item": {
          "id": "0caa1bd0-c4dd-4c2c-8855-c37616fad92a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "7eb6c855-a2b8-4fbb-b29d-0fc5c2116545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d764505d-1b97-40d6-8877-fb9aa4e2c8fc",
        "cursor": {
          "ref": "9bfbf128-c980-4ce9-8454-42079d7787ef",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c8ab95c8-0e6f-4356-83e3-12b232d4ed44"
        },
        "item": {
          "id": "d764505d-1b97-40d6-8877-fb9aa4e2c8fc",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1e612e53-aa73-4c9f-9169-c0a9ecdfd816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961a325b-48d0-4e0f-9e1b-0bccb41ae906",
        "cursor": {
          "ref": "6314fd06-4021-4ca8-9b88-15b3802ceeab",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2c5ee89c-4042-49fa-b861-a2379e2bb065"
        },
        "item": {
          "id": "961a325b-48d0-4e0f-9e1b-0bccb41ae906",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "eace45e7-7893-4890-8f9b-db83f45760c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270834e0-ff23-4186-ab40-daec69c6013d",
        "cursor": {
          "ref": "baec6b2d-d71d-4d67-b36b-4b4e24805d4c",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "96f8a07c-1876-42a7-baf7-7c662aef0d91"
        },
        "item": {
          "id": "270834e0-ff23-4186-ab40-daec69c6013d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3ec9a006-1a1a-40fe-841c-d8df0a7c735a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb1b1f4-5054-4b07-8369-81e98b64943a",
        "cursor": {
          "ref": "c2d00bca-ab29-4802-a188-fcb090332c88",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c793686c-c71e-43f5-ab8a-ed1e2f2180a2"
        },
        "item": {
          "id": "feb1b1f4-5054-4b07-8369-81e98b64943a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f5c66630-f42b-454c-8499-06441c153b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "926f64c3-aeef-423b-a9b2-1a8585da0502",
        "cursor": {
          "ref": "6f3d4990-5058-4823-b1d9-f697a246055f",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "2a60782e-b211-4b89-b26b-1d5e08fc6168"
        },
        "item": {
          "id": "926f64c3-aeef-423b-a9b2-1a8585da0502",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "985fa8df-efba-4a25-af8d-79eb9ae20c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "562df7e6-6b65-45d7-85ff-487e2e00fcbe",
        "cursor": {
          "ref": "af90eefb-2278-4405-9971-9bcc722afea5",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f94ffee5-5881-43df-90e3-d0ec9468fcf1"
        },
        "item": {
          "id": "562df7e6-6b65-45d7-85ff-487e2e00fcbe",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "770c5fd2-cdcd-480a-bcaa-620120a1427f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c6457e-a638-4bf1-bdf8-d3211c1755fd",
        "cursor": {
          "ref": "ec9f61c5-2ce9-41de-901c-231434d75316",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "04037c28-da1e-42d3-9232-bc919b5e8656"
        },
        "item": {
          "id": "56c6457e-a638-4bf1-bdf8-d3211c1755fd",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "08dd8528-7dad-452e-9bdc-23b6b30b3c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f30b9b55-3c02-4842-98fb-4dc13d24a7e3",
        "cursor": {
          "ref": "56354a21-fe48-4e42-ab64-0a80debf6fb8",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "0c4c7825-2df9-4fee-8a61-460ca20bd8dc"
        },
        "item": {
          "id": "f30b9b55-3c02-4842-98fb-4dc13d24a7e3",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d5e2cec8-74dd-4750-a7f6-14693ab935dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 858,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9353049a-ac9b-40a1-904a-a3c38e3df5d8",
        "cursor": {
          "ref": "db42d3c6-44a2-48ad-a833-9ce6543d3414",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "251202b5-3be5-43f3-8dd6-52590799e8c8"
        },
        "item": {
          "id": "9353049a-ac9b-40a1-904a-a3c38e3df5d8",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "41aef52f-5b7e-4075-be49-1f9697701618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1162,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b70574bf-8b7e-417f-a17f-6529918ff28d",
        "cursor": {
          "ref": "ed0036fd-485f-42c1-8904-092cadcce4ba",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "171d5fab-80e7-4786-b0f4-cb1ac27bbbe6"
        },
        "item": {
          "id": "b70574bf-8b7e-417f-a17f-6529918ff28d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c9279db0-b8f2-498c-9fad-850a8b751a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1322,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1504d125-6f08-49f4-8342-977674a94939",
        "cursor": {
          "ref": "276ba22c-c030-4e88-98d3-d2b1cc494d0f",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "eb4859ec-f48a-4e81-9c52-c38279aec815"
        },
        "item": {
          "id": "1504d125-6f08-49f4-8342-977674a94939",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "439326eb-adaf-433f-b2e5-01bbbf98b5c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1294,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd7e5aa-bb62-43f1-b340-d521b125125d",
        "cursor": {
          "ref": "8599ff7b-7d08-4c4e-9a98-9a97fb2a6b9b",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0a4cfa04-d0ad-4ee0-8378-3f17d178b1d5"
        },
        "item": {
          "id": "2bd7e5aa-bb62-43f1-b340-d521b125125d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "53b5974f-5cbb-401a-914a-29f518a6054a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 931,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee1963b-ae5a-4655-b894-f45243d50e56",
        "cursor": {
          "ref": "d0a21942-10e8-4ecf-bc8d-2a93c3633e3b",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "5b67f0bf-0586-487e-8cb9-aa4205e5cc94"
        },
        "item": {
          "id": "cee1963b-ae5a-4655-b894-f45243d50e56",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "fcd15c7b-6256-4856-87f5-f5b568a069a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1042,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "295f7617-9d22-4f25-9618-1f194e96fe13",
        "cursor": {
          "ref": "b97d1180-2ac2-4ad3-9a4c-7c9d5d61ce42",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d88f84c9-115e-49cd-899f-4df28331333f"
        },
        "item": {
          "id": "295f7617-9d22-4f25-9618-1f194e96fe13",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "623f90d4-91e0-45ee-9929-811a82e19062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 914,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5427f6-d5f5-43fe-a3a0-e5fa6d984e36",
        "cursor": {
          "ref": "0a1763f6-c1ab-46a8-a947-e989354e8737",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "dae41c97-f6bf-4788-80e8-d1a1b4710eae"
        },
        "item": {
          "id": "5a5427f6-d5f5-43fe-a3a0-e5fa6d984e36",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "3711e971-500f-4901-899a-32a16b893c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "853369e8-0254-4a29-9468-32780176ee49",
        "cursor": {
          "ref": "d726c5df-443d-4dfb-9008-ab08e09d94a0",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "7ecd0fd5-59cd-4f4e-988f-da139c7a4cc3"
        },
        "item": {
          "id": "853369e8-0254-4a29-9468-32780176ee49",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "aded3e70-94a2-4f0c-8e4b-320d2f440398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d00bbb3-aea6-4ad0-83b9-86c4631472c3",
        "cursor": {
          "ref": "7a7d5475-1e93-4ea1-ba96-e1221a8110d2",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "23156cbb-fdd1-48e8-b6fd-5a845761ead1"
        },
        "item": {
          "id": "2d00bbb3-aea6-4ad0-83b9-86c4631472c3",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "38a5317d-18c6-4d17-82f2-dfed0ec04d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 428,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176509ca-cf32-421d-a2ff-c87656b7069f",
        "cursor": {
          "ref": "64e4274c-a120-49fb-a220-f11e628954c2",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a6cac8a5-160c-44b2-9e52-8000f30cb352"
        },
        "item": {
          "id": "176509ca-cf32-421d-a2ff-c87656b7069f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "35c271ea-c387-4232-ab99-afe303b7dfeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc95a285-e3a9-498e-b5ac-decb64bd9237",
        "cursor": {
          "ref": "74d20dc5-57fe-4e48-a538-f9d2d27e3ded",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "43d71169-f343-4288-b0b8-2b11bc8cdfa3"
        },
        "item": {
          "id": "bc95a285-e3a9-498e-b5ac-decb64bd9237",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "55a28d7b-08b3-4d7e-80a8-47ef75e36b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2445526a-3b8b-40b7-bb9e-78f3f8eaa804",
        "cursor": {
          "ref": "8df84573-83f1-4440-87dd-62f06193d78b",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "289e9985-eef4-4669-ba15-3d2f5f2c503f"
        },
        "item": {
          "id": "2445526a-3b8b-40b7-bb9e-78f3f8eaa804",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a032b7ec-a236-4c51-8a7e-e364d4f31079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4e5eb27-4160-4551-b133-2042dc842356",
        "cursor": {
          "ref": "c0bb7cf4-d42e-4e90-8846-ed0d946e9470",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "fe15db06-1dff-4d25-9695-ea4d44d718e4"
        },
        "item": {
          "id": "f4e5eb27-4160-4551-b133-2042dc842356",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "0ac18d56-a623-4a80-82d9-0a0f3a6f80a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "134acf17-d75c-4d6f-be70-e4c4fa3680fe",
        "cursor": {
          "ref": "d7803e71-b47f-40ec-8007-5377489f3a0a",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2b2f8b05-a301-4d17-8c86-a97a93f1c220"
        },
        "item": {
          "id": "134acf17-d75c-4d6f-be70-e4c4fa3680fe",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "70aa6b1e-8d8c-4f6f-8941-8665816b6c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59fe7dfd-f4e4-4397-b2c9-e9dc9dc06744",
        "cursor": {
          "ref": "69ae8610-a834-4780-80c2-55ec4e03d26c",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "346956eb-53ca-435f-aa76-c135cb2352e4"
        },
        "item": {
          "id": "59fe7dfd-f4e4-4397-b2c9-e9dc9dc06744",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f5198fcb-ff89-4196-b521-1d6fe404dc5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1404df7-aec5-4512-9129-fe0b772ba2fd",
        "cursor": {
          "ref": "4c332b5e-cdbe-4332-8ca3-2bd68a741662",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c33309c0-7b34-4d9b-ba8a-b93c525e4f91"
        },
        "item": {
          "id": "e1404df7-aec5-4512-9129-fe0b772ba2fd",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "342569bb-a0e8-4f13-95e2-e0dedbf72b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55ae5b1-6217-4b0f-8fc0-dcab47c1ea34",
        "cursor": {
          "ref": "7281bbe3-78f6-4879-8d17-ddf2b8c9272e",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f1d27f8a-bbf7-47a8-b488-831929fe8e24"
        },
        "item": {
          "id": "c55ae5b1-6217-4b0f-8fc0-dcab47c1ea34",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "657f1e01-dcc4-4a3c-a023-c271f976afde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ccee77f-049c-4532-ba25-80f600685d34",
        "cursor": {
          "ref": "00a83eef-6fd7-45b0-925b-1a7865955933",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "39f77ce5-2275-4068-889e-00b4e27db984"
        },
        "item": {
          "id": "0ccee77f-049c-4532-ba25-80f600685d34",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "51989d79-4b84-400a-ab69-80f29fabeaa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711ab245-4ad8-4217-965e-79ffa41487d9",
        "cursor": {
          "ref": "93d1f812-dd49-462b-8838-e1ac2aab4982",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f6b48ba5-8bb5-4d82-b075-f1f7cd584820"
        },
        "item": {
          "id": "711ab245-4ad8-4217-965e-79ffa41487d9",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "902c74cf-7196-470e-a135-3003df21b593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0f8081-da68-4148-a2b2-bd0ff2bc6ee7",
        "cursor": {
          "ref": "fde8096c-b186-4e1f-9a97-03e2f705725a",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "2baf238e-01f7-41fe-8f64-8e91ce1a0001"
        },
        "item": {
          "id": "4d0f8081-da68-4148-a2b2-bd0ff2bc6ee7",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3da5f0e6-3d1b-4e70-aa45-c7471c8b7223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307c40e2-48ca-49a8-b1ee-ef846fb7595e",
        "cursor": {
          "ref": "b820dbe1-08fd-4afc-9515-1fb142287c7d",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "9021820a-c674-4c6a-8107-f5a1de7bad78"
        },
        "item": {
          "id": "307c40e2-48ca-49a8-b1ee-ef846fb7595e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "29aca2d7-137a-4c60-a351-665d95c7bf2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecbd55c6-b73c-4a20-bb1e-843384565809",
        "cursor": {
          "ref": "1c7441ad-0075-43e8-a38b-34fbe3e53c03",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9a1e04ee-1b94-4cfb-bd91-c2a21d41f913"
        },
        "item": {
          "id": "ecbd55c6-b73c-4a20-bb1e-843384565809",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "97bbc21d-fe36-461c-8dda-aa95f2eb95d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a91590-26ee-4f14-bc96-9105dc8f0609",
        "cursor": {
          "ref": "d43db87f-88bd-4748-a267-e2067aa17215",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e585433f-dafa-4ba0-aedf-08fe749f572e"
        },
        "item": {
          "id": "11a91590-26ee-4f14-bc96-9105dc8f0609",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "21f026ce-faa5-404d-b54e-b48fb17321e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 971,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f342d35b-76a8-404e-bc8e-c3644db86427",
        "cursor": {
          "ref": "5258a8b3-a357-4715-a622-8b2ba31083e4",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "982b9ee7-b34e-4abf-a33b-a8cf0c2d2aa1"
        },
        "item": {
          "id": "f342d35b-76a8-404e-bc8e-c3644db86427",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d998f464-a590-40c7-ac52-e29f2bfb139b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1393,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b81b30c0-63b4-42f8-9257-312921b69c61",
        "cursor": {
          "ref": "956ed53b-59c5-4512-9976-672c0997750f",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "02f5a315-71e0-4480-b819-12a099732c14"
        },
        "item": {
          "id": "b81b30c0-63b4-42f8-9257-312921b69c61",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "6ea1f6de-2b7f-4217-b84c-da9a28d4fbfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1657,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3890c3ce-7ec8-4643-af99-e8cbab701eeb",
        "cursor": {
          "ref": "44c5328d-9a1c-491a-82cf-a10af0a2aa11",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ba2b55f2-8129-4744-b335-4040c8b5c79b"
        },
        "item": {
          "id": "3890c3ce-7ec8-4643-af99-e8cbab701eeb",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b66fb9ab-1e42-45b7-977a-a61648922ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1426,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea7edc1-844c-4863-bf2d-e6ea0de16a3c",
        "cursor": {
          "ref": "ceb4ca9e-8aa7-4cd9-aaad-1c4ad793f8a5",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "cf9cd716-60c7-4012-80ae-1648a4c9a6b6"
        },
        "item": {
          "id": "3ea7edc1-844c-4863-bf2d-e6ea0de16a3c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6b72edfc-bfc2-46dd-8af0-74c42ae1eb85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1073,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86048cb0-263c-4ffa-90d1-4cd8e570b9c8",
        "cursor": {
          "ref": "b7da85d2-93be-4412-ab39-cbeb2174ce89",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "88b7c170-ccb6-44e2-8f47-16725031cee9"
        },
        "item": {
          "id": "86048cb0-263c-4ffa-90d1-4cd8e570b9c8",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a98ab7a9-b71c-42a5-a756-1297b084bf4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06265394-ea08-4009-a5c8-72b21a767ab8",
        "cursor": {
          "ref": "3d7993c8-8867-4142-9ce9-c9bbd07cb48b",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c4531920-af5c-4e35-aa2d-d988f550f750"
        },
        "item": {
          "id": "06265394-ea08-4009-a5c8-72b21a767ab8",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "88b878fb-1fb6-4603-8c4e-4e716a7c9272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62e1ea6-15bf-4a05-8f1b-c22b807eee04",
        "cursor": {
          "ref": "bb39b05c-8e31-4dc9-a3bb-7466cd78e241",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ef9026ac-5538-4144-9a5c-e0caf0b0f984"
        },
        "item": {
          "id": "d62e1ea6-15bf-4a05-8f1b-c22b807eee04",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "3505e2b2-093e-4767-ac6d-cc3724991ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb072266-c3f7-4166-80b6-2dd7001037c6",
        "cursor": {
          "ref": "4b6fb43d-7087-4828-9bc2-d37cca561f43",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "0c9034bb-f4f5-4d39-ba4d-10c1acc53ecd"
        },
        "item": {
          "id": "eb072266-c3f7-4166-80b6-2dd7001037c6",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "192c62d5-9c43-4da7-97cc-9c6615f28d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585ac952-f565-4709-89e0-676694c132a3",
        "cursor": {
          "ref": "e1eb8787-1a48-41e5-9027-717aa8637aa2",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d20369c6-e8ab-4f2d-a4f8-11b74d143dcd"
        },
        "item": {
          "id": "585ac952-f565-4709-89e0-676694c132a3",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "9d0a952e-9f27-48a0-8901-1b61e81461d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8284b95a-70f7-4ecf-aa97-85c1b9eb3233",
        "cursor": {
          "ref": "05a43b37-129e-4ec3-acdb-74111fbd3b73",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "68ef09fe-ede2-4ac6-a90f-9f2ae66525fb"
        },
        "item": {
          "id": "8284b95a-70f7-4ecf-aa97-85c1b9eb3233",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "03e16d38-23bb-4b38-8185-7201dc92bc86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27613aa5-d223-4444-b3f8-4c702d63095a",
        "cursor": {
          "ref": "1835390f-d56b-4695-b331-0b9ed53afbb1",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "95d4aacf-ec37-4dfe-b11d-3c5b1014322a"
        },
        "item": {
          "id": "27613aa5-d223-4444-b3f8-4c702d63095a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d904c085-b580-4a83-b7b6-0d7b2f0a2ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "626d3712-b177-497e-a71f-ca9b8e5bea24",
        "cursor": {
          "ref": "7089e88e-40db-445a-a0b7-9c5d29c5a534",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1d80e242-aa52-4b77-ae0a-dad136f7daca"
        },
        "item": {
          "id": "626d3712-b177-497e-a71f-ca9b8e5bea24",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1684c00e-cdfe-4573-ae8f-93de2bfde766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456f572e-0f3e-4b2b-a2e5-20759658e1ef",
        "cursor": {
          "ref": "5f3e9557-db35-4a71-8166-29ed8c8e835f",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "0cdb8c8c-fa18-4614-81f8-8f26b1822c5f"
        },
        "item": {
          "id": "456f572e-0f3e-4b2b-a2e5-20759658e1ef",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "be4121d8-ba60-49c6-9784-b01cadd359c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15483dc3-da69-47c0-813d-ebeb22810bc1",
        "cursor": {
          "ref": "f1e22e84-7e76-43a1-b058-9bb303a8d8cf",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "05420372-77d1-412b-ac22-3ee6ac660f66"
        },
        "item": {
          "id": "15483dc3-da69-47c0-813d-ebeb22810bc1",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c5ae09a8-d5d3-4cfc-b865-36e49405917b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e7acf8-0c0b-47b2-a139-1126c7c760e9",
        "cursor": {
          "ref": "e0e2f5d5-dd73-4765-84c2-cec24aa760fa",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "2f005e95-0051-40e9-95c5-473e39a10405"
        },
        "item": {
          "id": "d3e7acf8-0c0b-47b2-a139-1126c7c760e9",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "fc81dca2-4c8c-4d24-b822-ba1c1180ff74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d39dbbf-dbd9-463b-ad79-41a3535cdeeb",
        "cursor": {
          "ref": "25419239-e61c-4a03-a8ad-97edb08c7a43",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a328d37a-d093-4233-89d0-13c471880d3b"
        },
        "item": {
          "id": "2d39dbbf-dbd9-463b-ad79-41a3535cdeeb",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ed14fc1d-8f33-4af4-8f0a-c036eb1fb7da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e136857-1bd7-4350-9a75-462475412bca",
        "cursor": {
          "ref": "a914756a-0e3f-4b95-87a4-99d1c852ce60",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "302d0cc7-4cce-40a0-8c30-9f217f1b9972"
        },
        "item": {
          "id": "1e136857-1bd7-4350-9a75-462475412bca",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "6a5b0616-5d4c-451a-96c1-f9225b212ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c39cea-f861-4516-abca-53082f62ca5e",
        "cursor": {
          "ref": "fd0500c1-d606-4322-b796-c77fcddae06f",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "489a2b72-0748-4b12-a1bd-1486d3ec3cba"
        },
        "item": {
          "id": "43c39cea-f861-4516-abca-53082f62ca5e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d3b2e383-2a81-4062-a502-3e5e4ceff647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7b5512-2385-45df-a9b5-a08a2b371dca",
        "cursor": {
          "ref": "98e53a81-83d1-4d22-8bc9-b365b52308f8",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "4af4e521-a5c4-4546-a36f-2b8348adad84"
        },
        "item": {
          "id": "9c7b5512-2385-45df-a9b5-a08a2b371dca",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "89c8f685-ced1-4218-952b-57f016e936af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a4e52f-f2b7-4492-88d1-fd61468acfb8",
        "cursor": {
          "ref": "41b94a72-2050-43b2-8275-6a6fa9240c07",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c1c5df30-74b5-4f77-8050-a82b63a42e32"
        },
        "item": {
          "id": "a4a4e52f-f2b7-4492-88d1-fd61468acfb8",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "808f8b98-44f4-4463-840a-af0ed1a2530d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a84a00-e4f7-489d-8779-4ecbd2501dab",
        "cursor": {
          "ref": "67c5e78a-a8c1-491d-b088-56e8fb578b46",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "7394cbff-99bb-4279-8a84-56588e408bd3"
        },
        "item": {
          "id": "84a84a00-e4f7-489d-8779-4ecbd2501dab",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "eefa92cd-3836-408b-862b-a6331e297341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8761a1-b3aa-4b60-a6dc-90b516ae954d",
        "cursor": {
          "ref": "50cad3ce-7181-4e94-9863-d4a63b9167b3",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "00973b61-c3f7-4165-992d-103a28cdd768"
        },
        "item": {
          "id": "8c8761a1-b3aa-4b60-a6dc-90b516ae954d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "92c635f8-a348-42e0-b613-efaf25542bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e6550c9-0cf9-4ae2-80da-0fa4b7a81727",
        "cursor": {
          "ref": "29aa76db-4525-4623-8ea2-01e334092ea1",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "fdc73a03-bbcf-4a54-8f48-133aecf39708"
        },
        "item": {
          "id": "1e6550c9-0cf9-4ae2-80da-0fa4b7a81727",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "31c4a976-1298-406f-9ddf-a1777261b8f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed2ba1c-fdd5-4e22-88c4-f692eac4ecc4",
        "cursor": {
          "ref": "bf8040b3-7a59-4a7b-8d96-86880dcf044d",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "20328c8b-720d-4b5b-b6e2-0bed61ce6891"
        },
        "item": {
          "id": "6ed2ba1c-fdd5-4e22-88c4-f692eac4ecc4",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "23e4f807-4b16-43de-9d70-52f37fc8827a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d662f443-b3b8-46c0-8aa6-f43873d56c52",
        "cursor": {
          "ref": "a474b3e0-7b46-484c-be56-d5526cb3db8b",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "495580c0-05f9-42c7-9d18-32329f7b02b8"
        },
        "item": {
          "id": "d662f443-b3b8-46c0-8aa6-f43873d56c52",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7ac85db6-dad4-41e4-a3c3-b3774e1b88fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0859bd97-0164-4f26-95a7-9052b600d4d6",
        "cursor": {
          "ref": "d076f81f-5502-4110-ad48-5929f9bc4f9d",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b7c90bbd-82ec-4a4c-9076-0986e842d68e"
        },
        "item": {
          "id": "0859bd97-0164-4f26-95a7-9052b600d4d6",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ba3d4f28-38b0-43ae-90dc-62f4c8c4e8e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 901,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5125a812-686c-47c2-90a1-63e80e9e3f8a",
        "cursor": {
          "ref": "123714b5-a40c-45af-8ac4-1722da0dab65",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5189c09d-c0fb-43c0-8092-83e30055d635"
        },
        "item": {
          "id": "5125a812-686c-47c2-90a1-63e80e9e3f8a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "117e3f4e-4ea0-4872-a4f0-0129817e9179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 850,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60af7214-ad8d-4074-b89b-ce75ff670dc7",
        "cursor": {
          "ref": "77066783-6da5-4fbe-aa81-c7b7fd8cbc8f",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "0ff08dd2-601f-4a38-822b-fce991507681"
        },
        "item": {
          "id": "60af7214-ad8d-4074-b89b-ce75ff670dc7",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "773e09c8-695b-48f4-b6f7-2e5f789e687e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 854,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a6dcd1f-40e8-4b72-8051-16064c5a4adc",
        "cursor": {
          "ref": "e071d2c9-3454-4ab4-8ed9-c9da62499c09",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "edcaf3a5-7b3d-437e-b288-9dec47092d08"
        },
        "item": {
          "id": "8a6dcd1f-40e8-4b72-8051-16064c5a4adc",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "8ecab914-8f96-4a4a-b136-f3a976c17ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 926,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45aa3c28-3ad1-42c4-9a7b-0c009d9ff72f",
        "cursor": {
          "ref": "92df740b-f2b4-4e99-b5f0-36a8e99a6ed8",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "904f9983-c6c9-4270-9644-c9726baf9e5f"
        },
        "item": {
          "id": "45aa3c28-3ad1-42c4-9a7b-0c009d9ff72f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "cecc0e68-6039-4b46-9f8d-9d57d7400dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f1482e-3f46-4849-85b4-220de0592eb5",
        "cursor": {
          "ref": "e965574c-2946-4a6f-97c3-7862bfbe8e46",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "92921c2b-8b7e-4c38-87a2-3715762363f5"
        },
        "item": {
          "id": "f2f1482e-3f46-4849-85b4-220de0592eb5",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "5e812d8a-f488-4361-a7fb-c01231538e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee173830-876a-4fcb-b498-3928d74b31bd",
        "cursor": {
          "ref": "a28579bf-02b1-4d3b-8191-c4b043ac390a",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "17983e4a-6640-4a37-bdba-1b8213f7a961"
        },
        "item": {
          "id": "ee173830-876a-4fcb-b498-3928d74b31bd",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "845f4eb9-3448-4311-bde9-cf2efb94838d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3963127-8e88-4744-b799-2f547aac3c03",
        "cursor": {
          "ref": "eb3caafa-8d67-4e24-9b66-1f9a2b4f7fdf",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e0be8047-5270-4e01-9acd-39b32727cb59"
        },
        "item": {
          "id": "f3963127-8e88-4744-b799-2f547aac3c03",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3bbfecbe-16bc-47dd-aeea-298ba02bc305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d065e9bc-a105-47ae-b816-dde63b0f04eb",
        "cursor": {
          "ref": "4a544fe1-7fb3-4a3a-a95f-ac5420ebd59e",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "662df86c-8207-461e-8285-c5b70dc1a0eb"
        },
        "item": {
          "id": "d065e9bc-a105-47ae-b816-dde63b0f04eb",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "dabe48f0-7810-4f71-87cd-46f9e50c3ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cdd8281-34ac-4ed3-af59-84788cd7309a",
        "cursor": {
          "ref": "e8b21f04-4204-4737-bd1d-29b0c7d40653",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4fe80d99-80b6-4766-924b-7a44284e6b1c"
        },
        "item": {
          "id": "3cdd8281-34ac-4ed3-af59-84788cd7309a",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b431da94-f189-4607-8f54-56b26b6a5fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f4d3dc4-b7fe-4dd1-b023-58c730cceaec",
        "cursor": {
          "ref": "dbd5db33-a13e-4a78-be4a-83d3580979a7",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d664d8da-08ce-40e2-8417-e4de72788df5"
        },
        "item": {
          "id": "3f4d3dc4-b7fe-4dd1-b023-58c730cceaec",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e6fae05a-04a7-4cfa-912d-19112e911efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93859cee-b2b5-4b11-a8c4-6581a9799cf6",
        "cursor": {
          "ref": "7b66ab00-2130-48db-b0ce-d905b6b13c6e",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "6de62042-283a-4e20-bfee-22b8c9d3dd55"
        },
        "item": {
          "id": "93859cee-b2b5-4b11-a8c4-6581a9799cf6",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "552d6578-ebf3-4960-b9da-47e3c08eb522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ebf53cc-ac5e-478b-9b26-b51578584d19",
        "cursor": {
          "ref": "c2995c8f-9c0a-496a-bc6c-5b97c5d4401f",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "fc37116d-b25c-41cc-bb38-1d37d77ca185"
        },
        "item": {
          "id": "2ebf53cc-ac5e-478b-9b26-b51578584d19",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d38ae897-ef3a-4644-b531-d515f561972c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad87c1c2-007e-4087-bb9a-4c67345ba3fe",
        "cursor": {
          "ref": "56ba512e-8896-4776-ba9d-31777c1465ce",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "856a1528-1c07-4170-85fb-4f262dd4968f"
        },
        "item": {
          "id": "ad87c1c2-007e-4087-bb9a-4c67345ba3fe",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "0a745ac7-6389-4379-acd0-0d5eca5b948e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a5069d-ab27-4cda-9c5f-ef451fa6bbe7",
        "cursor": {
          "ref": "a943541a-14cd-4261-9988-3c2c0a0a7b55",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "143af2d8-d20b-43f6-8729-712edf979184"
        },
        "item": {
          "id": "33a5069d-ab27-4cda-9c5f-ef451fa6bbe7",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "62474089-f273-4351-9e40-e8c793042ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011f6613-a8ae-48b8-94ac-caf273974f34",
        "cursor": {
          "ref": "77747b86-16ba-4980-bc42-e80d18e20b42",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "bad510b0-395a-4af3-b069-58ff5bac6517"
        },
        "item": {
          "id": "011f6613-a8ae-48b8-94ac-caf273974f34",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "4eeb7137-7a69-4039-9870-ced5af2a0806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c179c6c1-6f00-4ec0-864b-36cd2fa1d598",
        "cursor": {
          "ref": "a3ed8548-d86d-4455-9300-e06c8526ad77",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "9967141c-8186-4bac-88af-48ec354aac2e"
        },
        "item": {
          "id": "c179c6c1-6f00-4ec0-864b-36cd2fa1d598",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "faa829b9-1983-4a4f-bd94-9f2551b74150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e1ce17-c6c7-428f-9af0-ae3c7c3ceba0",
        "cursor": {
          "ref": "6425d0f2-751d-4ade-95a9-54124b79b068",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "fd44cbef-0bcb-4f83-8045-baeb62996df0"
        },
        "item": {
          "id": "a9e1ce17-c6c7-428f-9af0-ae3c7c3ceba0",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "74a15cbc-d3f9-45eb-80df-d13f40fa198c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a0f92b-39e2-4c92-928c-b52b2cf262c7",
        "cursor": {
          "ref": "6901e2c7-fd4c-4380-a234-5c2e58f5eec2",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "218d7fb7-697f-4a9b-b01b-9ab860ffec82"
        },
        "item": {
          "id": "c3a0f92b-39e2-4c92-928c-b52b2cf262c7",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "faf4985b-399b-4f4c-851c-8711fb3084bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ea809b-648c-4fab-a5fe-6e3f9d162c98",
        "cursor": {
          "ref": "0579f48a-0dda-47c6-81a3-caf8ea3fdeeb",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d1b40000-c27e-4129-bfa7-7ec2d39cec35"
        },
        "item": {
          "id": "c4ea809b-648c-4fab-a5fe-6e3f9d162c98",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4d9c7910-afe0-4b1e-8c11-1e9060e51454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52fdd24b-f61c-4ccf-a10b-99064f8672a0",
        "cursor": {
          "ref": "39858b8b-2680-4d1d-a8fa-b592fedac872",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d0bdb8e4-f61d-4697-9f85-8340d59cee18"
        },
        "item": {
          "id": "52fdd24b-f61c-4ccf-a10b-99064f8672a0",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f09b2e32-aa1c-4902-909a-808647dd2918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "899c92a4-31e3-4c87-b721-87c3f5360777",
        "cursor": {
          "ref": "8956a5ff-94d3-4b58-9706-1d7dd987aaed",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "68460576-6539-4523-96fd-87e4be5e3139"
        },
        "item": {
          "id": "899c92a4-31e3-4c87-b721-87c3f5360777",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "3822073d-e2e3-4eaf-a163-79fff0a8f9c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ab304a-eb72-4e43-b6e4-6cea70daa049",
        "cursor": {
          "ref": "75ee4e89-a494-4e69-b9a6-525cb43e2319",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a47c64a8-f0ac-4574-b286-725823304e66"
        },
        "item": {
          "id": "e6ab304a-eb72-4e43-b6e4-6cea70daa049",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "10269784-529d-40b0-aa95-13158d556fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d4448e-11e2-41b6-978c-da8cfb516d7a",
        "cursor": {
          "ref": "70f383ac-7273-43db-8cda-9113e28f09b6",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "43a32abc-32d8-41ac-a602-f2b6990d303d"
        },
        "item": {
          "id": "92d4448e-11e2-41b6-978c-da8cfb516d7a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "8cff28e3-b0d5-4267-90d7-bc4b4114ada4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e530047a-4696-4161-9c20-f31a6a256868",
        "cursor": {
          "ref": "378c4265-3b2e-494a-a4bd-b75a0cb0f1b3",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "6ff086f6-b2de-45eb-bc7d-f8a7cb5a2d76"
        },
        "item": {
          "id": "e530047a-4696-4161-9c20-f31a6a256868",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1bfc86d9-9cd6-4d19-ad39-41b0dc904e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb4e364-5e3a-4474-b1b7-93a1ef9860b1",
        "cursor": {
          "ref": "f29f9727-fbaf-42a8-9253-a6ee500ff08b",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "4e143034-552b-4421-aa1b-51d92a967188"
        },
        "item": {
          "id": "7bb4e364-5e3a-4474-b1b7-93a1ef9860b1",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d2343099-ef95-42f3-aad4-664c300fdd27",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f5e4c8-a0c7-4215-bf5b-f02a06c0e1e3",
        "cursor": {
          "ref": "c83132b5-ad77-487e-8913-3b8f0cf5e3fc",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3d7a3989-52a7-4480-ac56-74f4f570ace9"
        },
        "item": {
          "id": "41f5e4c8-a0c7-4215-bf5b-f02a06c0e1e3",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "19a060ae-ed8c-4e73-b65a-10cd2c4cd36d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 430,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50698423-4c27-4e65-9602-665278055530",
        "cursor": {
          "ref": "1340603d-9018-4087-9f4e-7e6bc42ebdf1",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1e781660-91a0-4b40-af23-123a5aa3c221"
        },
        "item": {
          "id": "50698423-4c27-4e65-9602-665278055530",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "43ddddc9-29bc-45c7-8f63-dcf8deecad7b",
          "status": "OK",
          "code": 200,
          "responseTime": 503,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a3fe4d-228e-4c1e-9749-df92878a987a",
        "cursor": {
          "ref": "a40207d3-8434-4032-b6e0-9a375fed315a",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c4a6ebfc-391f-4365-b7d7-9e637c757064"
        },
        "item": {
          "id": "c0a3fe4d-228e-4c1e-9749-df92878a987a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "67c93efd-ddce-40b9-9bc5-a3233551dc52",
          "status": "OK",
          "code": 200,
          "responseTime": 1906,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ae6590-865c-425c-9e2b-048e300aa851",
        "cursor": {
          "ref": "061afb65-83d7-4a73-842f-41ea0a9121e9",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "96beba11-aa06-4ee0-8bf5-f34a21e9fb52"
        },
        "item": {
          "id": "97ae6590-865c-425c-9e2b-048e300aa851",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "8d81ba34-9573-4349-8eca-6d8a7f46f1f0",
          "status": "OK",
          "code": 200,
          "responseTime": 2031,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "175b3699-7e36-4b9d-962a-ddd94251a8db",
        "cursor": {
          "ref": "ae02f771-d56a-48db-b670-6635772517a2",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2510a659-ac26-4b3c-a69a-eb07c13d3807"
        },
        "item": {
          "id": "175b3699-7e36-4b9d-962a-ddd94251a8db",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ae692152-7a58-4708-bf9a-9d2227b33a2d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175b3699-7e36-4b9d-962a-ddd94251a8db",
        "cursor": {
          "ref": "ae02f771-d56a-48db-b670-6635772517a2",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2510a659-ac26-4b3c-a69a-eb07c13d3807"
        },
        "item": {
          "id": "175b3699-7e36-4b9d-962a-ddd94251a8db",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ae692152-7a58-4708-bf9a-9d2227b33a2d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175b3699-7e36-4b9d-962a-ddd94251a8db",
        "cursor": {
          "ref": "ae02f771-d56a-48db-b670-6635772517a2",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2510a659-ac26-4b3c-a69a-eb07c13d3807"
        },
        "item": {
          "id": "175b3699-7e36-4b9d-962a-ddd94251a8db",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ae692152-7a58-4708-bf9a-9d2227b33a2d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6afba3cd-4de0-4ada-aae4-82f504fdecce",
        "cursor": {
          "ref": "ce63728e-1e67-49ed-894c-2ac4f4e2d46a",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "54ac8eb3-e85b-4ed0-815d-270bca6989f1"
        },
        "item": {
          "id": "6afba3cd-4de0-4ada-aae4-82f504fdecce",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "6c2af8c0-4743-4a61-aa4b-3df380a95b2e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 464,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb8dbfe-219a-4a85-b8ec-b549e6f955dc",
        "cursor": {
          "ref": "b060d22a-d9f8-458c-93b0-9ed3387f43e3",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6898047a-451b-49b7-b881-c411085c1e0d"
        },
        "item": {
          "id": "eeb8dbfe-219a-4a85-b8ec-b549e6f955dc",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d063c846-fd2d-4570-9cff-078eb7c4a355",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb8dbfe-219a-4a85-b8ec-b549e6f955dc",
        "cursor": {
          "ref": "b060d22a-d9f8-458c-93b0-9ed3387f43e3",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6898047a-451b-49b7-b881-c411085c1e0d"
        },
        "item": {
          "id": "eeb8dbfe-219a-4a85-b8ec-b549e6f955dc",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d063c846-fd2d-4570-9cff-078eb7c4a355",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dce1b64-8c87-4f54-893f-86177d19b022",
        "cursor": {
          "ref": "7eadb24d-72bb-429b-bb96-07919555911e",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "6d5ae438-4b54-4a41-9688-52d510cf492a"
        },
        "item": {
          "id": "9dce1b64-8c87-4f54-893f-86177d19b022",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "cad6ae8f-38ae-41d7-956a-357d53946241",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 648,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "184cf485-f60e-45ee-ad3f-36147609d8b1",
        "cursor": {
          "ref": "d6b47615-6a89-4a00-9ffe-f71ffeb708e5",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d7cd08e8-39cf-460c-9d73-cf98edee36be"
        },
        "item": {
          "id": "184cf485-f60e-45ee-ad3f-36147609d8b1",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3c5ef9cc-71de-46ba-90bb-bfc6ec3c540e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "184cf485-f60e-45ee-ad3f-36147609d8b1",
        "cursor": {
          "ref": "d6b47615-6a89-4a00-9ffe-f71ffeb708e5",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d7cd08e8-39cf-460c-9d73-cf98edee36be"
        },
        "item": {
          "id": "184cf485-f60e-45ee-ad3f-36147609d8b1",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3c5ef9cc-71de-46ba-90bb-bfc6ec3c540e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a1bd9dd-1960-4836-addb-3b280ea2a1cd",
        "cursor": {
          "ref": "c7139230-d735-4bd2-89de-0b9fb368b322",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "300a802e-83f1-49cd-98ba-de9622c24a8e"
        },
        "item": {
          "id": "3a1bd9dd-1960-4836-addb-3b280ea2a1cd",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "64a5a9e4-90a8-4421-abc7-b3415a022175",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 660,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}