{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "6601cab8-95d7-4609-b056-66c9d9aece6e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "5140380f-c1c0-41d2-a2a7-fdb586765ee2",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6fbda6b8-650a-4b92-8424-f4bf6d8b6e10",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3d2d8edb-2c48-4c93-b80c-27a4cc4e015c"
                }
              }
            ]
          },
          {
            "id": "7f7b47d8-964f-4339-8e30-38e955c7d39d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8cbbafb5-cccb-43f3-a2b1-a1567c79703d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "dca52f05-1410-40f2-a8ae-563d911e93fe"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "81c0b75c-d613-4610-94b8-78aff59f0a55",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "f53ac9eb-de15-435b-8598-eac3fc35d0b1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6ac08d99-19df-4d09-a860-3d102780ca44",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b78de3e3-db03-4268-9934-d76609d73eb4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5ef8bc43-be40-4162-9a94-dc3a4088acd5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "93544e74-9b1a-41ad-a120-f9c483189f8d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b0ae315d-904f-48b8-8003-984df962068f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4af051a0-8bcb-4698-9287-f202c6530b3d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2ce762aa-4bf0-4800-9396-eba4cb65f567"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e055a0b3-c9d0-4716-94e0-ac8241b034a8",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "cbf32ddb-9b19-48f9-b1f0-e4c030d9914c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "08e2f4be-7f14-49c6-84ad-98404bcd093b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a210c931-69ad-41ec-9ed5-6373d60cd228"
            }
          }
        ]
      },
      {
        "id": "586d38ca-3d4d-416c-a111-1ef8434cf418",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3456d0ab-931f-4001-b426-0091691df01c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "656c101d-6107-4d27-879a-3f439f498e48",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5f11b8c1-ad47-42d7-8427-a74c61beb176",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a209d00e-12d9-4e83-98d4-4644f4834898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "213ffdce-0b0f-42fa-8fa8-8a93d4d73a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a40fdd8-f1cb-4906-8f0d-539d7034f8d2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e7b772e-ad71-46a4-a42a-8edaa02801db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c825e9ed-57dc-4195-8a59-ba5afa764a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb26df94-e565-42e4-bafe-da82ec95e607",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "417903fe-713b-4bd7-9465-306005aca76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "300658a4-807c-4167-b729-1dfba95125ba"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "68d71dfa-023a-4075-bc15-84c65f2e32c2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2e17f4a9-28c0-48dd-9d06-3206d8438252",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a8befe-1586-4cbd-861b-197cebd0b475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c9618cd-5086-407b-b471-53026d2cc2a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ea6712-e449-44c0-b42c-641bd024c0e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c47e52e5-c441-424f-8be7-08aee5cf2101"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "766327df-b624-4f3a-a548-7da81ca3d7a7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "54c2dd95-b7f5-4293-b188-4ec49039b572",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4efba9af-0be3-41c0-be4e-c248b6c9acf3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "029431b1-d175-43eb-9414-6ceea8d289cc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "96981f6c-ade6-4b9a-b6c8-212f4ef4ec24",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "9b6043f7-1f83-4828-a865-3210bd315c0e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "939aef41-26c4-4972-aab4-a9c87389b902",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "50dd5016-9673-4bc3-a0e7-5de49b52ee6e"
            }
          }
        ]
      },
      {
        "id": "12c0d6f0-4f5b-4fc2-a4b1-f344aba83644",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "2e9df1c0-568e-4f30-993a-90cd2fe6ab9a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2f8adf32-f53e-4c36-aad5-410a65276397",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "6d75db46-576c-41b3-a9ad-40741cd6c506",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1119a12-aeae-4451-9b8e-73d6cab962e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e78d3fc-970b-4ed0-a1ae-2bbb2698c674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4943576c-956e-4229-bb32-8fb8a455cd64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9bec4db6-1f20-4794-ae5b-2a3fac90ed72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb18ada1-bc50-4660-bb02-ec3b3519662a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "389e4ea0-1d46-4398-8ad6-bc6f57016f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d97d060-ac10-428c-9527-d3cbb48ce3aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bdd781d-b7b8-40d8-868d-1838f5856398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af327b6c-a2a8-4dcd-bf2a-4bdf018d45f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb512d52-56e7-4e30-ab81-b5c8f982fce6",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d93c144b-44ed-4d65-a5e5-c9395b412cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69a49df0-06e5-4836-b9aa-422a68921d5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c85f3d9-035b-407a-9749-6fc2898f0c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80773467-c6b7-4d10-bf78-d5c9037273b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "610f6b4e-3d96-4d8c-b086-b0d56084e1ed",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e95900-2b75-47b8-be4d-346c0bdc052b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "332a39eb-3875-42c7-a06e-41a587a77e84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6921a7b-9280-4b05-aa0e-1cbe301a1b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e50eb42-35d4-4274-b5a7-4d50a712debb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d56d44a2-ec89-4184-b5ca-52f76b480ff8",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a425c2-9af0-45f1-ae21-15a00a7ebef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f233650-6be6-4c3b-92c4-f04eed01eb91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e8f2aa-ad34-4a1b-9f74-f1bdfa939bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f48686e6-4aaa-423f-9597-e0bbc3d01ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b78e502-124e-4299-8ff2-2d79b41e1fe5",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25407d7b-c219-4e69-9ddc-cade34cc1110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec6e2cfa-287f-47b0-9b2b-e4239a89635b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88db3f0d-5516-496b-ba6d-862255642358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "929094d7-5f11-4d6f-bfce-1db4de7be635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aed110b-73be-401b-9e01-7e934fe11483",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "055bdaae-d7be-4422-b95d-bbcd986233af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a90e844-24ff-4647-81ac-15e87dc07886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da56e50b-0c7f-4058-b58f-45242fff66ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e634af2-4817-4156-8f7a-8bd0413c9b7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac3d97c-df5b-4790-b347-2c76ffba6db9",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be047350-d060-4976-b46d-77f7b2b986f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d49a2dcc-bc6a-49b2-8150-1f97ae5f7d2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29999f19-d837-4eee-8a3a-b041a35d959c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c91a54d0-2208-4ef5-95d9-fc0b1870c6db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68aee507-545f-4419-bc93-5ab78e4979d8",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c4a4d3d-25ea-4830-a793-b81d1341abf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00a365ac-85ac-4bb8-b024-8f8969ebb948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83482616-8348-42f6-b4df-3bb9abf2e08b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7df97cde-c30c-49ce-850a-2b9acec4c153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "accc6051-0156-4e68-9fea-8dc0ad10ebf2",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b216a7b5-abfb-434f-b218-041ac45f0843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dcf357c-8512-44d2-8bae-5b4e8019560a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7759f6cd-4f32-46b2-9606-fb50d54b5554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1d9a601-6e0f-4c68-b135-f64c8d8d8eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f528bf-d120-48fa-a794-8b2cabcf4f3c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a952b27d-f4d3-4e95-bd70-d6b8b74d1347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12eecb2d-9b23-496a-bab0-fb917cf778ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd4e92fb-7ab6-422b-afa5-628a4ac3a9fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "126f0bab-7392-4226-9635-6ef28aa12f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd08fece-ec0a-4133-9475-f0c3cd7cf72a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2936ed-2e95-4efc-a143-119d19b64742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96224e54-7a2e-4471-be01-bd24e7eb8da9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed1f5c94-715f-4109-aeea-d1c580faaa04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4f0a255-f283-4c54-99ca-6a47ebff5238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00199720-e621-43f6-a9c0-83fbea841594",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b119bd70-bef8-43c7-9022-72d68724e270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "310f9620-527a-4ecf-85e1-083c30b21fb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b4c87e-8981-41cc-995f-875c0ecf3ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db1ed3f8-5057-4237-8a54-a5cdd38084a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d1d40d2-23a8-41ba-88e1-a1f116223dc3",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc86ab85-db78-4a0e-82b0-4c44af7005dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44287ffa-baa0-40d6-acd3-e7dfb5308c40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa483a0d-990f-44ea-87aa-e917d7be52aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dafe507e-5557-49dd-bd94-5d818bfe71d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41bf6aa-150e-4e70-ac2b-e68e9cff3c2c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea308ab4-b2b1-40c4-844b-3b8dfebc5c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9587aefc-a19d-4de9-8e6e-1cd2957519d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23433633-98d9-4336-9ba1-12f4704ee8c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc90b69a-c5d4-436f-8bea-f7b0bca69c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cfe215a-d480-4f58-bb59-7fdcadcff39f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9a62f3f-d775-4728-8ecf-ce4c3e139ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3e75ca0-816a-42bc-a857-d6e97aedf8fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9383392d-0645-4c38-9b83-7bf1c863b45b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76ba6e04-e8b6-4848-a543-8091906a2dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b6e2a5-7c21-4411-9758-bbedc4105f9a",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "960af155-7b14-482b-a6ef-87ec7b38ca60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58efa894-7c43-444e-97f4-0f5d4256b7ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca35cfe3-4989-4df2-a730-69be4e729f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2740f293-b89e-412f-8778-8c0d6ff13255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cabe412f-1ab0-4302-9165-d35d3e4ebe5a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33944208-557a-4771-90c8-5f64fe5abd2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "367a6dfe-f98f-4dc6-b2cb-a64ccf9f078c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b096b1a5-e707-418a-9109-2e7adcce1332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "43542531-7131-4499-93dd-31f864c4d4e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3f995ee-d156-4954-a974-0db98f64f747",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a15178d8-4b61-47d1-a861-a89a0be02475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "613d5f30-851f-43c8-bc37-75ebcea1ab77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86f35be-d308-4918-b2d8-5dc57a968e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5ff2ac6-6604-44b6-a663-60993b87dcf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d64ea5-6297-4271-bb3b-3c3d1d8a3112",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f55d42-36fb-4f7b-8bf4-e5810c8beb8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7df156f8-9f05-4273-bd8b-7a694bc07af1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf78b1d-36d9-4635-94a2-1b5cc7f5ef92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2d76644-37a4-4f58-86cb-a36cec4ac8f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3425ce30-8c44-47c6-9095-fb78e703707f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f22a91-32cf-4283-9211-7ac82403a278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "212dafdf-16aa-4ad3-8b88-f4d2baa621c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c012cd1-d657-4630-8403-1a85cc8c5ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "829bb0a2-5c55-4ba5-b5c8-ec7c24341113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "059f181b-5467-423c-a6be-69d5cae45ba3",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "187961cb-58b4-487e-857f-983647121b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31bd2334-310d-4ff7-abd9-804a19a2e488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa5788e-f666-41ad-97a6-b2e85826b3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "73a57df3-0390-4130-86cf-4881fc2ec382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ca0919-bc13-4f9e-8029-2b7d8da06513",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59679c35-fb81-4625-956f-7fdf197346c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d98958f-2a45-40f3-a951-3d3ee163614f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f5181fb-d815-4629-88d0-a8468e6b436f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fdf52666-f8cc-41df-899b-d761db201f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c65f0f-f918-4742-8171-bf14fe5e98a7",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a62ed0b-ace5-4b23-8a39-4c5d4cd21362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0cdba17-0622-4ce0-9470-eee2c8f2df1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1169197a-d9e7-4e1c-a93b-915420d0dcfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "519665da-972b-4fc6-a969-5616be39fb50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c2ceace-2be7-4b67-ad88-14002ff8d97d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca884cea-aa5e-49f2-88d7-1be246ee4114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a07db2f-c999-4a6f-a443-e7fe3d1df5ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46618bb7-0c09-431e-8753-3f678445f765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "94609df0-12d3-409d-a3ad-b70d1df41852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96699455-3273-498f-a172-0119a6897f30",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef1d693-9089-4b00-aec3-222cb3dade41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f567fedb-6fb0-43bb-940e-ab6d6a08e73e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e53ed94b-2cef-4c9a-9dd9-5ea1e67bd43e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d113da0-ef45-40e7-b576-277efbcb794f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "429f8243-7815-4daa-b7b9-4b07e33ba5e8",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c2eef6-f6dd-40a5-9013-ad0a1a49f8d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d219833-9e8e-422f-aae3-1a1bb3911ae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266989bb-ca8b-4134-a815-db3d74bac329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e846daeb-a139-43fe-a7d4-7432b07684a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0dbb645-921b-4be9-8c37-55b05b4fda11",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "530862b2-4b79-4683-97f8-45414dfb6039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39f1c32f-1c84-41c6-b4aa-06dcf4fccdf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d31738-289c-4c2c-9339-20445ee76645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1de6ee15-54fa-44c8-9f4d-5572e58805e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b85935-7445-4c34-b6c6-323fd43d300a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c86600-9547-4633-9875-03e6c2b2bf75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7df95188-5368-4b67-ac5d-1f8c5708a98b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a8b84f-fcdc-4640-b628-0a364de2bcb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b744e8b5-f389-46b9-91d5-c446671e6c5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04587de0-dea1-4505-bfa8-461b8c36026b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76638a7-cf46-40cf-9f0e-76c396281d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c9075cc-5168-4097-b40f-765c3334ab7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b55269-2e21-4499-84a1-f2f1daaad174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6792f766-411c-47b4-a2dc-35037bcb06f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd33067-8304-4cda-ae7b-dc677a946193",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "787fefa9-5b0a-410a-b6ef-1059d94a437d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b190d767-7f80-4053-8059-c51f7707fd18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4159936-f6d9-4a01-ad65-5338a9dbec53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a700121d-71a6-42e4-b44a-4e18c43dc5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74590341-656e-4c26-ae4e-498ff7449b1e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20ad34c4-6a1b-4cb1-81fa-db4245a806db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1b2de0b-2a10-472c-b01f-d00672527f52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28853131-ee6f-41b2-9252-b8976c4bf1b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "65cb93b1-d271-4a3d-869c-ddd5bf0cc5b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d23038-9751-4f40-b968-6b5ac1b6198a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1febe84d-8dfa-4c01-b128-87a407f6289a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e77bead-eeec-4466-a70e-c5546338b68b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8cc4768-5620-4b80-adbd-1e72226770c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cf118ba-15c3-4e31-a173-1df65724bd0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "438529b3-823c-4128-9ac1-551dc9029e21",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffeca5ac-c890-4c33-8c4d-4cd9365bd1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "858b5c30-a9a3-4107-b357-94384f1f27ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ae6d10-632f-48b6-b46a-9ea128eab042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "babc9e35-b7ff-496e-aa72-3172c0ccb3b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b24b9ec-a53d-4848-a04e-31891bbb7561",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9212ddc-f99b-48c4-ab29-48a22fbbfd8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90077e73-0ecf-4fa6-9873-3ba177839f8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad71cb64-802b-4f5b-8c36-ba5b25e74e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "221a9b00-4089-4b2d-b0bd-d370de74634b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206e8791-7d99-4c25-b18f-1fb39c9dc9ff",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b340741-f001-45b0-ac12-1c20f8ee26f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f387b4f-a261-4edc-a9f0-bdadf736fc1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4301264a-036d-4db6-9088-fbd6211b93b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "84cac403-d1e3-469c-8d87-7a2f49e71336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c2b434-16d6-46dd-8abd-defa2e1637ec",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d65d77f2-c996-4a57-b88d-d5efb590d24b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7a934da-6feb-402c-8d6d-e270a8c2fcb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b3b2e4-862b-4813-8eae-29fa2705afda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ff88ef1-2311-49d7-9dc1-9a74914de668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f27ca3-eeab-4e7e-8b55-185428415489",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce882851-e50f-469f-85c2-a6b96d1d0828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bac8504-9a81-4eb0-9158-9b9766bbd847"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0543a240-10c6-4813-868b-fbb02a48e6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0947a2f-ed6f-4099-be87-b8fff3a961f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de4030b1-1e51-4e0e-95ea-13672e55fdec",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "877d65c6-2e65-4d11-b5f9-ffe022c123fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fa10027-38d3-4e1b-a5f6-5aef292e031f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44de48a4-bfe6-461e-aeb3-1d413a5814ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd9fa589-52fa-4219-b78d-325464afec83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbf9636a-0254-4eba-8ad4-e1877b6f19d2",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e74d7dbb-dbfd-4437-85a8-9abd464c8fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5907212b-ecff-4cb7-ae9d-f41be094b4cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c431d0ef-1b25-40c0-8771-e141059583b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2eb69157-f0e4-42ea-b09f-16dea039edfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36870abd-0bd0-473d-96f6-5889ab58bfba",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c424fa33-8844-460e-8104-96d8fb7a72e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8d3d389-1cdc-42e4-a90a-dcfe5fe0496e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1055b2e6-5e35-46f7-80ad-c91e2005352a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a5871ad-9bad-4468-b0e4-34a0801034d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e7b248-56b0-4788-87d0-4ff9c22c7fdd",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32679e04-bf3b-4b4c-9fa0-44a43eb91047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a46e763d-f1a0-4848-9c45-19bb32a5231e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79953b88-5390-47b5-a884-8ab8874be4dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "7ec4368b-1a34-4c21-a1b2-22d0cf59adb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a01ebc6-dba5-4cae-83fa-ee11478dee82",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c8f18d0-bd61-436d-b764-0b3c1a3d15f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "079122e4-e561-4f1b-b2c3-2e063d77f590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771c2d4a-7567-4bdc-a1f7-99638abe9840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed289e1a-815e-4adc-aa4e-6d98e59e072a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbcaf47b-dacc-4963-a34d-de4809d482db",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f29f60a1-c483-4475-b84e-daa9d57e84c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80d274c1-932f-4cb1-8d7d-e49efc73f193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2265bf9-8d0d-4ad8-884b-447034f22bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d86184c-876e-440d-baf2-071f9829ea06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6379ac-d185-4594-8d95-2296ee1f1850",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "547f2959-905a-420a-8c57-bf0c9b1ef9f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27472ebd-5b0c-4216-a27c-b9ab13ae2a07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4b3ec4-7f7c-4453-af7f-66c6b135bacc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c98d516-f3c9-497b-9d23-3af71b6af270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f21a33-bbd6-45bc-9e0d-57accfc5075d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6e50e9-d7a9-443a-9e6f-66ec0c1b219a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d90355b3-3fcd-43bf-b16c-8ce2dbc102a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a45563-4ab4-470b-991d-3bc7c6549e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3348cd5d-5633-495f-8d4a-c04d54b34cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d777e260-5ce8-4f68-ba72-1eb82c40c283",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c73bf7-5f85-42a9-80cb-f1aafb8f2f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7c0fc6a-4546-45f4-bf5e-cf242f3875ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21c6845-2756-40d2-9dc8-cf6dc362a7c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "45c76a1f-7281-4f4a-b66d-e448e20a6edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd43e43f-f020-4c6f-b19b-c988095f7222",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be9863e5-dc73-425d-8199-c52d2f5f198e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5f7a37d-9049-4d1e-b519-59bcbc025028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "695945aa-a93e-4df6-9e96-fe0f1e035b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d3e69a4-01e2-42c7-ac04-7ed4730a35ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d6fbfde-3a2c-4837-a94f-7820bfa7d5f3",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d5d656-b840-447e-9d75-29d76829acd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e954607-a923-455a-ab3f-b3c4adfc68d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d09d08cc-1f8b-42a7-89f4-fc0265f42e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "36486433-fca5-479f-8077-c908166c6480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f0df36-9581-4947-9789-489ad4d67d79",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a45de2-6ebc-49cb-9d56-dd36e3874d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75253895-ef69-4b45-bdb5-0b3230bf51ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dc2c15f-cc69-4c6c-83fa-01137947c56c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aab8b461-d104-4f6d-a372-373d7c733540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50951ee6-a79b-45d3-a336-c55f8cb14ee5",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff4a5e5-12c3-4eab-8b34-337c36afcf7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26137dcb-3831-4406-803b-8eeadb3e2b7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e316e5-0776-4dc3-8b75-96984eebbaba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cd77fb9-4026-494c-b2e2-0726e303be02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab4ad68a-f5f2-4e1c-b5cf-740e19e6abe8",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47636dcb-65b6-4018-966c-4622bd912a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c4320a8-a3d2-4fe7-aca7-62ae6801306c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e830a3b-774e-4483-b1f5-d6863d61c7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7591047-09a3-402f-aba7-1599cf95b8df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a871491-191c-41cb-8c0b-dde118cc6c95",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f5d5cc-d803-40b5-8185-c77790a16074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a665b690-5326-4ea6-a007-844ea9261f28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbbdcca4-2f92-4090-89a2-476ac7a1334a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c74d838e-6883-4226-8d6a-f10c09275298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d355ac19-9a5d-4837-99e2-a516890262e0",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a8a67e-06af-4652-bbf7-513f8794709d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54882356-c0cc-4d32-a369-589b165d022e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f99ced1-f434-411a-b4aa-2ea846ab9e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "36074027-f5cd-4b14-b1cb-ecf61c70709a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a01bc419-94f1-416c-abff-23e13ef91760",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d483ab5c-049a-40fb-b03f-98ab28692ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8497c9e0-dd21-47a6-bfc0-527534fe6e0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5c6136-c0a2-414f-8c1f-13e090029529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff97b844-3a2e-4e7f-bec6-2e7a7b2b8d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "882a5fc6-1bb9-4696-8da7-c9507f158ffe",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e524c8f1-f7c0-40cf-878d-d5bb8674e2a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a245cc8-eb01-4bf1-a26e-2daad8cbfa47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c500bc7-9594-4e41-a0ef-d8e6100c863e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "910ac41e-81dc-4978-8680-5e0303680ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "285d046b-73d7-4c75-9eb5-e1965156dbf7",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e334ea-d462-4de1-b8ad-dd367429fa95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80e9abcf-7728-46dc-a73d-a5fc9c2846e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea982617-d8e3-4e77-93ca-5e0a2a5a91b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "badbc359-e725-49a9-a7ae-9368aead618b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18056136-b405-4844-baca-2957dd6d52e8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "249fcd90-b5b6-4ea0-8a64-4c369e6b6468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e2830d2-2de9-4f20-8c9d-44237ea69781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b8a84ef-3664-461c-bcdd-25a117a0911c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1051196-4ccf-4baa-be78-75fd28cc50e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06438bca-b671-4bd8-bc19-35a21226c85f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef5ac93b-da4f-4371-843c-7ccc06387010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67198f3b-8c17-44f9-956c-6f9cfc6378de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca40ac4-f75d-402f-acd5-21e034c2c492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "01c7ecb3-103d-4427-89aa-9a23c079ba7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "603031bc-52c4-47c9-a411-7fb886c80a91",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d33ff02-2ff2-4f45-b751-9080c2a0cba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de8dde15-6e79-4d65-b869-007f5e626670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f638c5f9-5810-4e42-a9a3-db4885acef6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "948f0987-33c8-4ae1-9f2e-beee9cb96b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e7e809-6118-4689-a049-ec2f6e530e62",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc3dfc7-210e-4073-8646-f10b512154ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1d0f786-b69e-47a1-bcb8-817847e14624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4078f907-a08e-4d78-9f6e-7597eaed4fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3866107d-fbc4-43ec-8c76-fc0528128afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "445cc404-bd57-4233-90c2-c5ae9a8d491d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e04b1381-b129-4f80-be98-a73d37224ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ea811e5-9af7-428d-9ecf-709e789674cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09bce822-ca06-4529-b1f9-8cda863533a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d80df0e-579e-423b-a20f-d9633aa40270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28968f9e-b02a-450f-9ffc-e06b59945d31",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f7ba39a-4410-44a2-9559-b3546575e8d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4d3a85a-eb6d-4989-ada9-3b2e5b79df84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c3b590b-eecf-406b-94f5-617931072f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "173beb24-d2e3-487d-ba1d-9c6ddfb0385c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a89aed-7575-4b91-aebc-1e421920573b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fab46c84-9e2e-4af5-ac1c-66b4c6f723b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e60a8b2e-2627-41f9-b242-ca9921c3a039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b092a538-f788-4dfc-b2fb-c740c3c6bd01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ca5313f-3f35-40fb-bc24-374fe8bfbe12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c6dc78d-e023-4888-a7da-68bd67352a1a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d8f2f5-1283-41f0-9469-ce8651f8fd74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b27a141e-3551-4dda-b7ab-45fb80ecc9a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cca5eed-8327-43e0-b951-ddda96727c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "82367720-d6d2-43ca-b827-b44c52a8e7e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf8be178-4390-4dde-b9d1-1bd73bac1466",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f923410-69fb-4907-8070-e6d213c59a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ce67609-6ea3-470c-8116-bb70f17d8e8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c4eab1-8573-4b7c-8cfb-f103add59341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "37148cfe-f393-4a48-bf86-160a40d40180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdafc1b0-4ff4-4932-9941-61bd9f63dfab",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "911c4887-b90c-41a8-9438-4f6e52cf90d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58917e89-64a9-484c-bc4f-aa3173bd37c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f9889eb-9cbc-495d-8c15-8fa3f764634d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4c9e80f7-7277-4654-9e0b-4ecc81400ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e8f439d-40e0-4280-b88e-9aa0648d27ed",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c30d694b-5671-4333-81a7-10e9fe882df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dc5ecf8-1e78-465c-9a78-2aa969e4ebd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8310066-c656-4179-bd49-480ca50a0a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "26e1a667-8f6e-47e5-a466-5196a3710f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e819600-7aa2-4792-aa3c-89245dc7083c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d71fc1-1663-4799-b347-b0b92656febe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88b3bed2-7902-4fc7-ba5e-f3222d051817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71e2090f-d9ec-4846-b55f-98db11821034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ddcef0c-1f83-47c8-8ae0-7072a5fa16cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e44126f1-192e-460f-a6b3-702085bd6fb6",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f13371-d3a9-4aba-8000-d56eff1e4392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "041f1eec-45fe-4f00-8596-dbe835eecd45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98658ea-d1b5-4899-a598-c0403a64618f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e10afbd0-4a55-4273-859a-c21dc77ca91a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43d8764-680b-4c82-afb4-5180893ab186",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d09d03d7-efef-4402-b701-adf04f14868d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f21defa3-8822-472a-8997-0c909bf1ebe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6e450d-282f-4da7-aa74-eeeae81f997a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c1b9e6f-49e2-4ed0-99d6-442ceb73f5c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff0db982-3f72-4a68-8144-4301ede3809c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14858b02-6d6f-4b46-8b1b-6ed93363571c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20957817-1186-4ef0-ad41-f7ad37ee2c52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f1686c9-f5be-453e-b62f-e85c80f74504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdb5d4a2-3fd2-44c1-a49c-b0b13640695e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb2903e6-506b-45f0-90ff-bf3c3ce705b0",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "608cc921-2052-4cb3-8056-8a780d650ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "793d0df8-83ce-42f8-a812-42ebed564939"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b254455d-a3d0-40cb-90fb-900058e29f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6d23751-90cf-40dc-b208-df82e638abd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f43a318-08a7-42e7-9105-d199faed45d1",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e463ba42-947b-4596-a0c8-6e75f672782f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c288efe6-37f5-4eb7-a5b9-a2c185c8021c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "579e5717-743e-42d8-b536-d45cae258532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6387a98b-426e-44a8-abc1-9e5438d554b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe1e8c9-98fa-46ed-a1f1-093c3b8b0d91",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b4bd957-21cc-47dd-9ac5-c52e63c92e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9012812-4cc5-4db2-9344-530ec8f8ecc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496ccdab-b3fc-41ff-8fcd-bce6266ddbf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea4d3e77-55dc-4ad4-bc09-cca032911019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e5ff7c8-e943-44e3-a837-565b48cbf40f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c61af6ab-a26b-4ddc-a75e-419750d63c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90f5e3e5-9522-4963-ac66-bec0368139bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480af534-3299-4b1b-9347-ee30e4ad8abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1919853c-1a5c-4c1d-9aa3-6f611f118f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567548db-1662-44b2-9598-9b31c32989fe",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a1c3e5-e9ac-48fa-8874-dcc92beee6bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "865d9847-3b2d-4ff0-891d-52c80f4b8924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c56b1f03-4dd2-4cc2-9066-79c3c3f5d140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "feaba052-f694-4263-bc0d-8731840b69c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f3e2da2-0c7d-4529-b8e7-4dea8a45049e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "932ee061-0c00-452e-94fd-7f6ee65065ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04f2cbc5-01dc-46fe-9b65-75bb108ff8d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a6756b7-6b08-4958-be0e-6efcf1e9cd8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "646aaef1-4858-44a8-9b4d-6d8bf2689219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "805883e9-6228-4898-a1cc-b8d3eaba89b0",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed23c1b-bf12-4dcd-8229-e5d6399b7346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59923ec2-286d-404e-929b-5f6665de2dbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80929225-e6a9-4949-b6c9-505085126be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d048706-d476-47fe-a766-9ec82061fd4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad4e4104-4f08-4a59-848f-6993941b066e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcaed7d6-c8cc-4a03-b47d-09528b7ca46f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c1e094f-c174-4b43-9cf8-b7ab6822dfe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b79042-cb44-4a8e-839a-4854a6882f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a75bc398-4c51-4403-be2b-acf5c870b60c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "545c5845-f558-4b7e-bbad-8d001967ac48",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c40417-20e5-4e66-a6f1-9f3e34a78163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f0b1ef7-75ff-4bc4-9cc4-4d8ce5633dab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79657eac-a6db-4840-be7b-54eb0925abe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fcdbada-76f9-4272-8cbe-824477994caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d8c0b2a-39ca-46c3-a66d-a70e02025d4a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f6f170d-ceb7-4b17-bf65-842348cc879f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "925fa7a0-4141-476f-8d66-0b24a963c577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d8d9719-dd52-40a7-a460-a1edf1d29c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa7dd38b-383c-41db-a106-eee2ed76819f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a765bb71-4704-462e-8f79-97871346ecfc",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08fc735-ac15-4106-8406-bda59a9f2658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9bf49b4-52be-48b3-b344-2143d7b3179b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc6c0bb-393a-4b14-be3c-80891bfa567f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5b87bdb-656e-4738-91dd-0120675a20ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c26060c-e8b8-4583-87a6-6894576efecc",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d43839-2071-48c1-bff6-986fc808d1a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db94bb89-effa-4761-844f-ab7cf2272fa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00666ac5-071c-4639-baef-0b0cbaf2fcb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "091e70b1-3b7f-4364-901f-32ea22f23b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "779c58af-3231-4771-bcde-b66bb9847ac0",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4c230f-d328-44bf-9a32-fa8f8f37f8ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "908affcf-cbd1-45eb-b033-5801ef136ded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df77b71-1e43-4dec-9509-2c74fefc7f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a4762ee1-2304-4e38-9567-33677c2cb262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04dab828-ae2e-4749-9954-4c99cce3adb8",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6368d676-2a5d-4cd9-b879-fc3416efb642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a5ef717-784e-4759-b256-c79a31b1e4de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f800cb6f-15f7-4baa-9300-4f8e326d6be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "69e6bdbc-ad8d-4a07-82de-18f9ede409cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a5485d2-a8df-4063-b7b9-3a773ed22d9e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54204f71-78a8-4a65-a4e9-63682b052cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "096e8edc-6dcf-45c2-9aa6-6104227471a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d965df-b901-460b-a4a0-73092f9b5445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "da582fd8-835d-4f23-a4a5-346dfe5d68f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc8ff99-8127-48e0-a30f-524eeac7e322",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade969fa-eb5a-4ff3-9997-abbf4a8e7d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "615f82dd-9816-42ce-979a-5299f5326b0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d92b98c-9fe0-499f-bcdf-b67b38598581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0ed34e9-b713-4d96-b257-dcce6df113d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84847132-6e1f-47e8-82af-0ff1fd6c48dc",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f56349-e9a7-4ceb-abff-11cd7d2b0d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33ee0a91-346a-451f-baff-f62f76d91308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c89fb605-82a0-41bd-ada0-2c154a91841a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "36678a3f-540c-45e4-b004-c55e801e4339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d69bef2-2593-4511-b084-c5211673c002",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf76951-fb42-4fad-87aa-34b674d2bb5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89e24be8-1373-4fde-926e-0f8846379f35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d26ac2ba-1d5f-4acd-b7c8-8ffef6e2c8ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "24dc2d5d-1237-499c-a2ff-f0d168617705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f1cd2b3-e592-4872-b6e8-0ff45fe11cc8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb764c1-65d4-41bd-8dcd-3055158dd298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be35bf25-012c-4e48-b3be-1de837572151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ad43dd-6be8-4b93-a91f-9f6d4c67e874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9154f791-dcc0-4915-9974-530fbdfcf6cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "964bec07-3ef0-4c2e-b516-e4d5448eb731",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "168d7474-f039-4fc9-81c4-a2b456d00586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4917c106-d867-479b-93e8-adde462efd16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb89d8c-3bd9-4ba9-84b6-82e292afb6d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c47e439-0060-4835-9f20-f32f95f0ad3a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1f2601de-e50b-4024-93fa-76a67d1a45b6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5cbc8318-b785-413b-890f-033d77d68349",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b14c04a-7948-4c6e-bdfe-13c36eb0d216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ce8ab0ec-d1ee-48db-a478-b490d6e0b328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db412741-0682-4f1b-aa67-9fe173fe921f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3dcb87fc-aeea-456b-8083-33fd22cf12c5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88124cb5-db4e-4f2a-8690-6967ae34b6ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ef86f76-5f1a-4f8e-b9ea-43c12e443faf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d4a52af-ba12-4f28-9982-013a0dc279c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a5eaf9f-14c2-4b90-b567-801164c02fe0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4a08a5a5-4434-4d3c-9e34-4202f037a9de",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "66ae41be-8afe-48d5-8c2b-6ecb40e96dbe"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "01f3895c-e1eb-426f-a26a-ea5e4e383bdb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "85f7d752-ddc9-4923-ac45-71312a918ec3"
                }
              }
            ]
          },
          {
            "id": "0b88d6dc-a7d1-4d13-ba98-e6565c025186",
            "name": "Positive Testing",
            "item": [
              {
                "id": "11f63ba7-125a-431e-a6e2-e073dfb8d173",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "1ae2b04f-6d00-4b88-9f69-f3726706f05a",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dafc2a4-6284-4157-8375-92e8adce14d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c4f81205-476d-432f-8a21-972adfaa778d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5582df21-7b67-4cbd-91c6-c20da7de5945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff132624-606e-4058-a33d-181a02fa206a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2d731f77-70a4-41a4-acbc-d1c28e7867da",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8af05c47-24b7-46ff-bdc8-96de9336bea2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "13ba767a-216d-407a-aab9-0c59907997a5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c54a25e7-4c2b-4d62-840b-dcf8545549fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "186cf70b-e16f-4e5d-b0e1-72f85ee1ac7a"
                    }
                  }
                ]
              },
              {
                "id": "434e4fcb-629d-42ca-9770-ca56e8606799",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "748a551c-abea-4632-9e70-88cf64e15f9f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ab0122d3-160a-41fb-afca-24f8e32142c4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "82e9c98f-ffc4-4ec5-8df9-43b31dc1e9e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0c21d542-64dc-40e7-affa-6f1e123e3b74"
                    }
                  }
                ]
              },
              {
                "id": "6e437666-b095-4d79-aaba-cd4b0a5bd15d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "312eec1b-499e-4c14-8bc6-ea1692e518d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6aa5600c-25e2-43f7-8c59-ffd4760d8b56"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f718649a-cf5d-46a5-9d94-3aa98ee074a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "927ef3bc-c4dd-4ca9-a753-80c70a08de76"
                    }
                  }
                ]
              },
              {
                "id": "422dc7ed-d45a-4e7d-8a79-f8bc18b677ed",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "64c004c6-52a0-48a9-86f9-1d4661dac645",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5e84264e-1b0c-45f2-92f8-c726349ef7e8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6fbbe1d0-a5d5-49e0-898e-87de999c18f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "3134f1f7-93ec-4d4f-afef-dca79b2ae3b5"
                    }
                  }
                ]
              },
              {
                "id": "7e308059-7bc2-41ea-a70d-5a084f26647e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f02b9ca-0f47-4bd9-9ad9-64d68818bfcb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "33df57a3-2ed2-4d68-b2a3-5621fd77049d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b441df3a-7aa4-4fe0-abf0-5abcb4c6e4e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "66293f9a-542e-4f73-9679-1058de21d42e"
                    }
                  }
                ]
              },
              {
                "id": "0404cdea-2116-4568-8438-b27b5b6581ce",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "46d016fa-bb01-4e8e-b7ad-8f323478d453",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "19904878-0cc3-41f2-a776-52149f4d07ea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d94c868-28b4-462a-a223-b88c66b4f23e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ed1760fa-4a47-4880-af51-142b23ea5d45"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e9320668-2a26-4cd6-ab0d-7c4e47c70809",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ab6a4664-0d48-4900-8dbf-92f87a187d65"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "74d0c6cb-5cf5-4195-944b-56025eca4b8c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dfa88915-af7c-4747-b389-35157224168b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "77e9c6ce-9f09-4af8-b878-d599eed30f01",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8708e145-0975-453e-ae10-9a44ac8bbb9a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f172d1dd-1861-48ff-bb1e-f06a029356f5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "53f41922-5b81-4ea6-bd07-5a730d51eef0"
            }
          }
        ]
      },
      {
        "id": "7846efb7-72e4-4abb-a284-941a01bdb95e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f82038e6-e48a-4f5b-99f5-bc9920686d4f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ac5f0c28-eb22-4689-bc38-37c15cbf9f84",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8fe1a0b4-d37f-41ed-87f2-771b3231e17d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b6d3a20-1011-4601-a1cb-699cc460a725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d58bda60-d997-47c4-bb20-8c27cdcb6229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ae58c1-991e-42d2-bb04-fa062c131ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7828a3dc-3938-4b9b-9cc5-9d1b07158e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b0abd7-f59c-4d40-91de-335a3e9a2ccf",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85e81174-f025-49ed-94e5-5869aa4f3658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59f1eb8c-d7ca-47d4-830e-0e35b2c9befd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ba09ed-c43e-4241-8acd-2b691b86f00a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b2d60b3-170b-4b25-81b0-aa3343ae7d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ef01aa-bd86-4135-abe5-1d3ee5420f7a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f3fcf5-bdca-45e2-8235-7e51aeba4fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ea365a3-e36b-4ddc-854e-a02d67ec5056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c05ee08-be2f-4364-979e-9045374728c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "57503177-7566-481f-9982-62abefe13537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "045ecb1d-41e3-40c2-969e-1ee528d44adb",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c5eaa1-6def-40ce-82f6-8ff5d7edb7ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cbae9a0-585d-4c7d-be0e-208258f79316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e13c09a-c997-4e87-9b06-859345f9fce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0977d1c-3ba3-4e14-a72e-beebe3832ded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ccd820c-02ac-4d2c-9a2b-51b1832df558",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbfee639-b038-45fd-9dd6-ef8b011ff861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac77b446-2819-4302-ad9d-e036445e98d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5013363-8a01-4fb3-97a2-b85647c2da45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a235ce0-d200-4e27-8cbd-d4737d1b888d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c35901-7c62-4936-9e8b-9399540244cf",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d9d97ee-ba41-4c62-b8bb-3746815a3c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d142c9a9-eb6a-458b-b4a5-2cbe914eda53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d1315aa-2968-4d7f-aed9-1b6274f972f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a26653d2-a98a-4abc-a410-57f6b4f0cd5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b2bd2b-6da7-4198-b116-96e9f853ae63",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ef2898-966e-4739-87a3-cf965f6e073d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b67d3b8-a874-4d96-b2af-6d19e8b4b258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe71771-4f98-4126-8e1b-3b54e92e6f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b75c75c-f4ed-4736-b6ff-a6acd249d099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46bf9a5e-2194-4096-92db-873b0f939541",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40fc4f1-62e9-4558-b198-b31659c677a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0472d412-ae25-4382-88c3-8f8643de4345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b24079d-6c58-46c3-aa22-71c0699099d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7f50d98-b4f1-446d-9bfa-f83febe2dfa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c800794-7046-4762-9f14-92131ba7fefc",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc3bb78c-d04e-496c-90cc-7c965bae2fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6adea0f0-0323-4399-9ba0-476cf50167bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e946498-b06d-4f9a-9e06-6e891420b4e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "01a9bcda-df28-483e-a4ce-20683b2098d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08616ae8-7648-4398-a67a-aaa64d0b534e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd3d6f1b-ee01-4fa0-9f4e-9e0abf87f74d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63d3c58a-a513-4b26-b7e8-082cfa88c568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d6d842a-d0ed-485e-885d-8c962d664ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e8dcbf6-bd49-4a21-8d81-2f3f08aec5ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7868ff98-25a5-4229-b3f5-56db521eeaff",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca69300b-444f-4159-a3ea-b9a393066c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33172c18-8530-4ab0-80e2-873e5969d0ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de1f761-3bd9-470c-b29c-0d3796a0ff8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9ad1f66e-5163-486f-989c-1a5593f0ad2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e539c60c-fb3b-4aac-962a-e413b1a6dff1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c02258-9864-4233-9ec4-aa559ac8fa1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d007f5d4-953e-407b-b034-d549eb9aa75e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1059930-9c29-48c5-8047-e2d2af1d862a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "06e7918d-1e49-4730-abe2-9c45772dcded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fccfc85-6d61-4510-a764-e59fb6efa4d9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a28bbd55-f65f-402b-912d-4409fee94b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "008fadba-5255-426f-8e5f-45a9a9f611a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ba1716-6a71-4918-a937-c33e816b29cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb6f109d-3c25-4366-95c3-04f2aba634e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b743bf5-bdfc-4cba-8f41-9292d8be2d71",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cae4237-d68b-43a1-9ed5-7202ae1f9982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b3f076c-6250-4830-9304-f0f49ec68921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4646c146-a46b-448d-a925-e28c728f8c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f48f180e-4d20-4c19-b6a1-228d7027fb68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80f1e76e-46e0-48e8-b84c-828f6ca16c34",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14537ddd-de6e-428d-a8e1-473f0a115243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2539b4e0-712b-4d2e-81bb-16e3a8d29c51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd8e21d0-20de-443c-bddc-ed5739d5cc8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bcd68c2-9df0-4b3d-a597-143836f3b73c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea184f84-04d8-4c8d-b5e7-da222c9c06be",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17d29c8-b317-4d70-986f-b466cc957f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de1be15a-90e5-4316-8b9b-7530e51efe80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d84f4aad-6277-4481-8bf9-ee42ae262c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "af91985a-cd88-40ce-b9e2-8570a9f0adb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e986de5-f0ed-4589-83ff-661a937820b0",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "212c3a67-37fd-4ea9-b7e1-ac3b0cc83e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa39ae8f-40b4-4645-96fc-53dae67cb59e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b3edab-fab1-4379-98a6-266d4b8b6add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8ccfe4e-5696-4176-9a30-06f2e3de2a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfdd0155-6f7e-4d88-bbe1-0b19475dd913",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9487c6cf-39a3-43fe-9251-08d313b276b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9657463e-904f-4ac7-8c77-0df62c9e8e47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96032b04-f135-40f5-b5d1-4d1107e6ef89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c03b8caa-9e83-4ca7-b4e6-e2bf64aa5419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8d9848-2e6e-4830-b472-2f91880dfff0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc03b16-a019-4ba5-b670-46243cc4cd0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2414790a-c0a6-495a-aadd-93aeb142ce91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b40f69ce-3720-49aa-8e49-54f55ec4d188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe683740-a50b-4b6a-bbd6-ab5914125c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc79d8c9-dcdd-4ab3-9e16-1b61acfc073c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "166bbb4f-fd60-4ea5-8b2d-187d3034dab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f5eaa66-7902-4ef0-8511-671e886b4fd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19695f6-d209-4503-bcc2-ec13ea7c58a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50137f82-7a5a-404e-84c1-52591163e955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8d6b64-10a5-446d-8ce0-923b7fec0b0e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d43bc236-1143-4af1-ab88-01f144e330ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "485faf8f-ed26-4020-abd1-37a5a325cd62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d6cb7af-a9e4-4af2-9fde-7802d4d9d30e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21056ed8-5768-4141-81ab-c5793f6fcc5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce20d2c8-b2ef-4e1c-81ac-15a799cbfe21",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee9d05b-cccc-4ee2-a05d-bcce1cddaa5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d281fa9-575f-4609-891b-39b3d801d5f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da778bf-7d7b-4a6c-a1ec-a934ab61e061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15ff4b63-acc1-445f-8136-9782bbbc9cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e46fd15c-b5a9-45b0-820d-769e70ef4f94",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b2eb270-1c6c-48d8-8cf9-07b8117e7d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e41cc073-343b-47ac-928a-fae22c4a790d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50173006-0605-41dc-8c5c-4d86972d25cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9cb54f6-3c3a-4539-bddd-d888afffa0bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc381b4e-b515-4ecb-9bea-67ce6573b277",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e64897-0700-450e-94ce-2d355d843dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "267d464b-4b6d-4474-956d-2014e38fdc63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a652be7-2b39-41a4-af4b-85045dbdf4d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e046e9d-8161-46cf-85d3-9e80e885a847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b64eb85-be58-461a-8fd1-5cb528aab781",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d88a22-74b1-4caf-9ed0-9c4fb9e52495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bc2629e-4caf-4e1e-abb1-df7fa0e55b56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da2ce169-4d28-4fcd-a4f8-bbba2d718410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bc8fe4f-7283-4f03-9765-cff9c7625cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32d987bf-11b2-4f8b-b721-3710f39d5c26",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38829888-6f7f-4d5d-b9a7-8012078d2903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f38cb0b-8cd4-4a9c-bb41-6b503898a7fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e26b91b4-11df-4c6f-8bd1-1c53d702e04d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bf864db-ce05-4f50-abf1-d1eea338b7df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886c5cf7-6019-4796-89ab-fac0e0a0a085",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50b1fec-1171-4bc7-ad6f-fdc882eae8d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbee8027-60ad-4072-aa9b-b3c8c2e608c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67de5708-b33e-4f2a-a714-da6d4e62f675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4bc079d-c649-4cfa-aed0-d319691f8abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "692db456-f1b5-4b34-a702-a26b7d369229",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "679451d0-7bf1-40c5-97e1-ace4efd03000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a442dfe4-759f-4488-906d-5506afa408e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4cf4fc8-22b7-420c-a949-ea463afc3437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9d63a91-a49e-4836-bbde-95d0092e66d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9c9a1e-04e9-445b-9755-283c976c8515",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6242937d-1716-49bd-a937-ac0dc94f7727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cacaddc-75f4-42db-8da5-ccbec8c7b099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596dc80b-f536-4e6c-99ca-70baa13c20e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45200d82-48e8-4b9c-86cf-159574f6db6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8849887-d232-4168-89ee-18ecd4d98866",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff69a749-afcd-47ea-bc65-ad79bd4e5dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b694aa83-30e9-4745-af50-0043f388e6b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63cd14f3-8190-4c0a-bf62-0ff930f1b3df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbe45fe8-7575-40ce-8b2f-0e49a5695019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c056a7-9bdc-47b5-a3dc-1201c9d7fbe2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "859f68bc-f438-419a-8199-b971136e9a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51ea3740-5fd7-41ec-9282-1de234f814b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d9ab8b-c245-43fa-83bb-a6c91ac2815d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96dc9a1b-0c43-4e36-98da-3a041e901bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c2ef81-382d-4945-9316-dfafab578cb1",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ea274a-c872-4acd-93c0-f1f4ec92afb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b157b226-7054-4d69-bc78-a6aab74742ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1713afa0-f4ff-4167-a3d3-708ec1dac5fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3be69bcf-0e26-4b60-b8ab-b74bad43b785"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b70eb0d3-a146-406f-b206-38ab55451a13",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4cdd85da-11ba-4cfd-9455-123c504fb093",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d84eed39-170a-468b-a694-f9e8a5ad5088",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "cce0241f-6ade-4406-82d9-a6a482ed303f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f5d0db-bdee-48e1-b418-f4ab8aceb765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2560d5f9-2d35-4515-b73f-ad98f8ce5734"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a68d35c-40f8-401b-a2a6-5acc4f0e43e8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b421af7-9250-495d-aa6f-7f4559e57726"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4cd0bb30-b1a9-492b-8332-b854d0a51d1e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29c7f0da-a9b2-41b9-ab79-e3073fe1e3dd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4ed79fbe-9670-4535-9d9a-0ad4442b65ae",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c7bf19ef-10ec-45ff-afd0-e53c54c8ab48"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f51f79cc-84a5-4f74-8dbc-32667e024041",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "526cc24c-3552-47b5-97ba-cbc82f9c2265"
            }
          }
        ]
      },
      {
        "id": "981b85dd-fb6a-4d4f-9796-c7e248ec731f",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "d7b24b6c-3e53-464a-bfad-7308beee347b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ec40b600-fe29-414f-a95b-f69037b11c7d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a95a40c0-e49a-4c43-a8a1-c2c142a88750",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fab0473-9ac3-4a94-b1d8-8c61be2f9277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29c25f44-6db5-4d32-941b-7f5c04fdd8c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d13d7801-5502-4513-9005-d2380260249b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "df28971c-e46c-4fd8-a7c5-cf5cbd439e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe0d978-6700-4d7d-9cad-d8cbe2281579",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc2e526-cacc-4c6b-88de-abd55e4fda9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e59353c8-eea1-4860-9e80-e0e56ca908e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903655f8-5820-4a8f-86cc-1fe587f78594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcb1a644-f447-4278-bb3d-c26bda60f9c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a62bab-0316-4825-961d-5a40cf95dd02",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c318d92-4176-4087-80c4-45307d9d7ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa434e3d-e363-4ffa-ac83-f5e809f8df55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c1965fd-6af0-4293-a899-6416d1cc4564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f59fc691-8736-4728-a095-fda62201f3e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465e5b19-017f-4836-b0ca-3098f9a58a28",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d1e1ea-b5c4-4162-8962-2a29f0048d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7951fce-8d53-4ce5-8e67-3161fe552690"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e0a41a-2b95-478a-94e3-674699585e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "269511f2-049c-4d5b-a6b2-164496235f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2e21cf6-728b-425f-a7fd-9adabce562c0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1cd204-30e7-4780-88b4-00fe8f676dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1156f1d-57f1-423e-a8e9-1f7f96361340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f89ab2-f143-41f0-a774-84fb86b4376f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "16721cae-6c29-406f-a027-5e68081579d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aec2f2f-564b-4941-931a-451900e4f76a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79917c2-7896-4997-b08b-9512df378ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbd6617f-2287-4edf-ade3-15d3bc196caf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d0c8ea8-ba9a-4886-800d-5c2d45d8fb6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d9b6c54-c3ac-49d5-82b1-cc4d76431b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af2ad925-ef88-470c-b51c-656849cfe74d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe9d0e6-baf5-4a30-b1a7-b69588cac083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23c36e06-329a-4e92-80aa-e065a77cbca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "554e9772-11cc-4b7a-bc03-a933ea30dfe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "242de262-b0ea-43e9-9ec7-fdc5730fa344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87450f1f-aefa-4aae-8e63-322262ff6675",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa7637a-3e1c-4002-b65f-8f57b8088ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2977ec90-10d5-4446-9a5c-c0810b2bd057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44aba23d-2baa-48dd-b61e-94c9769bba19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4913413b-44fa-45d7-b735-6b843630297e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc11b421-741f-4c4c-8f79-9c4a513eaa56",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e75ee1-288b-467b-8829-50b8015bfb72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b980391-bdc0-473f-be5d-3c155d8481c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c408a9-f9b8-4c4f-9358-89c9f9a864df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "310a741a-7502-4492-845b-d163154ad803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d82f2e7-c546-49b4-ae0b-a29ae6ac2c3e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c48e362-4633-4138-816d-f5151062c0b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a96c35fa-f0fc-4476-a414-4d2cfc4cea9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1464d910-8940-4312-9407-8d9bf6e711d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "09323ecf-02ea-40aa-906e-a82d20d2edac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbaa1aff-1d6a-4a54-a084-3fbd006a5c3d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6945f8c9-1772-4736-89fa-2f7c40b15db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed446602-6836-459e-ad4c-c07083de1530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0d568b-1398-4bbc-82fc-1450823603eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "fa908750-9d7d-469f-be9a-2ee790080cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd0185a-c721-45f5-b68d-4c6e9d83df74",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8300a0b-a21e-4839-bafd-6d6de9995d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c458ccb-48ca-4fb6-aa4e-636a5147d451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91815220-15c1-45ea-a227-05e691521ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bde183c6-c70b-4f1c-ab58-73ff08a91bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb40e42-9947-4412-9041-1c92709cab8a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bea631f-9dc0-4116-a2b6-b15b65ae6046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "678fceed-d077-4f23-9cc2-39af273b9ed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cabb1b61-8e8d-45c0-aa59-382686ac3944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "62675a6d-263d-4a3b-94e2-399522d51e39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "968b8b48-c02e-42a8-bd06-f97c37e704e1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "054fb69c-6381-4729-85dd-9f53ebf4c5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fa42d67-d270-4f42-8229-12ddc487447b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede510e0-d285-41d9-9057-71c0e33c05c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "18709977-754d-4450-b234-5e71e3bd8879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d4b965-54d1-4869-b10d-c92b86934940",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b03052-efbd-403b-b1c7-77b708d6aafc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72690c90-8696-4cd8-931a-63b19b18a3ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e2017be-12c7-43f7-a356-22849206b980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e4cc4bd-00d4-4764-9688-6af7ee56676a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c22f7959-9cbe-4d35-aa72-5452be17a185",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed25915-9d7b-4369-bc38-7eb5bf8ec8b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c60e6379-22e2-435d-9949-62f91d209185"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6072bc8c-ede5-4fae-830a-b556315c907d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5760d010-fd2d-4b04-9cb7-437cc16d9d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b26045-ae3e-42e9-8b9f-437c44405b28",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd5c36a0-d78a-4d6a-b773-cb4dd450c7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae6125ed-a083-42e5-86ca-c6e005b01115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "021c0fe0-383d-4bff-8a75-9d6437bb4488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3858d20-ae89-4934-b15d-c0199a87a9fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c1eb04a-f221-4db1-87fa-96949b36e13e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e413983c-016f-4d9c-b89a-39c93ca7fbf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45e29b7a-2bc1-469c-82c0-9e5fde5f1cd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874d2829-40de-40a1-a0d8-f333dfd8505d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a077d8fb-bb3f-4b85-be6b-d23c1c816daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8f5ca6-e371-4363-a0af-945e113087b2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be29ff71-dfd0-4bdd-8bbe-42162923d845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5c382f6-6748-485a-a3cd-964a47d7c068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "618d03e2-b4d6-42dc-86ff-6f75831ba410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2e227de-d293-478b-a422-39c74a23e2f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "803ec8d4-fdec-4cc2-a246-a1795b2a2470",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f932686e-0bb1-437d-b512-61764fc751c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e699b1cc-72a9-4e96-87e5-9939bff48c00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0dd911b-d3f8-4f4e-bf00-79045ec6dc81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fb2027f-8600-4382-8577-73b7fffc359f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f438c476-6135-4588-961c-7e4764f45d83",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef2b5feb-685c-4cdf-886d-445d756d4b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bd7d0c2-3e56-4eab-9356-ea8409b4f408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e048f0b-99a4-4834-a12b-7eb207eeaf50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68c653c4-77ae-448b-abbf-7b2db51e6f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "310c1ca9-6aff-4894-9509-a0ef7838549a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07650091-fc75-4bb4-bc94-e437f0f52574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad34df3f-df5c-44e4-bd1f-4df2b276c580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76d88346-c4b0-4569-9c1f-89364b948a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cd6902d-9d96-461f-9134-ecea69639144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b173c31-f654-40e0-8655-afc6c5fce471",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc48e58-5e15-476f-bcff-e78fa40f23e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86206181-8c0c-4738-9d93-0d220f5420ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57080e71-8a12-4e0a-9947-4635ffc7aec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7bc645c-108d-4bcb-8149-07ae4605a976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff69150-4192-454b-b3e8-e4efbde74595",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6184d85-2341-4bb6-9a7d-132943ac5513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c392b6f-11af-4f4f-82d5-df640710b87a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f852de46-fa0f-4ac9-b860-7b8f7e135ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76c0a284-3375-4c91-aead-977f2dd5daeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10151327-7324-4045-8442-7b1d938b1d5b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19266754-6b91-4fb2-a247-6658da605fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60fe53f1-753f-4297-8f70-171ec1a16f26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b44951-2279-4e0a-86a2-171eee6a4eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c32e8a8-7e9d-46d8-9160-eea96f2065ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e788c22d-7fac-4045-8851-ac629e0ba79d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f91de19-bc5f-40c6-b725-32854378fe6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd737970-70d4-4e3b-b1dd-6dbf0b7e96cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "010aec36-e739-489d-a98d-fadab4e98a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8ac6cf4-cd78-4120-ae69-c89cd3623e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b55c369-8129-4ef3-8491-1748c2642976",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5aab8bf-baa9-479d-8e73-27a2aa90032a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04d2603b-afdf-4d4c-af0e-2e1ff460ab93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b48cef4f-d6cf-4ba4-bbfb-68ad8c27f27d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2570d96-30f0-451d-a2de-3a91a823d4e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "145196de-4dd3-48f6-8b4e-75d92bd98aad",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b5c3ae-df1b-4f51-9b47-e12332ffca3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57f2de32-990d-4999-96bc-05659bde70fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a50105cf-a388-456d-bf37-89081b583feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13e73489-b592-48bc-b12c-e560dd1478fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37a31ae2-ca09-4ade-b756-f091cf2d80e4",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c3e37c-8377-431a-bfd7-e2f205bfea5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08310c67-161c-44ad-a4f8-497e06098edf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5ac6ab-78f8-45ea-a30e-92ae6fa6dc42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f609b44f-aeaf-4265-89ab-e03ad5f3585c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0863b26-f73c-4a63-9251-52097da7a39e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60992393-86fb-47e1-94cc-0b480bac80b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bc969eb-301b-49f7-82fb-36b4e78d98fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c6b6ca-7726-458a-9786-928af523f8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aad65e9d-5e25-4eab-9651-fbd5ea7a8366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f0f0d7-2f30-472b-a304-3ce8b7d2fcab",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd5b596e-19b4-4717-983f-690d858dadcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72da5043-37ac-44fa-9ecb-5942f5a265e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f27a38-c6a4-49b5-9435-20210fe4e151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aaffcdc7-cef3-4988-8e35-722a2ef91a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c257f853-5931-4c09-b226-37f899191cdd",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df34d39b-6fcf-42e5-86da-3f95a02b0645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c1a1b4c-7ddb-451d-904f-758e551975cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a42c938-5ecf-4e97-a025-337781cef43b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0f8ba36-59ed-46cb-9d36-ad80749f51ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c14f2729-ec7a-439c-8d9b-2dbe7a819b5e",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54cf90cb-0245-411e-8511-64697e76a57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ec34830-7df4-43f8-ba1b-3ccf49af6d32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8cb754-1745-4790-917a-568361820e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f5b3597-7993-468a-ad96-001f61775c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e127c89f-407f-470f-a313-f9e104fe037d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06761e7-694b-4747-9fbe-7f4ebebd229c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39ff371e-109f-4d49-a0c0-1bfd9008c0e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b0bc2b-9c48-4468-b93d-5b9e45257b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bbf5bda-e4e4-4026-bce5-9391ac1da9b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32269f17-2792-4a62-a464-a165aebdd2f8",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "540ae1c4-61b8-4aa4-a8cb-4ea812d1b8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef14d78d-ef33-452e-9f53-c7375b9f3760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e38d18-22c2-49e6-8b41-b5e7d9cc921f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c6180be-615e-46b9-8b2b-c93158ca5064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2257d1aa-f41a-4c2d-854a-2b7431939730",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa0fcf1-1ce7-4e7f-b1f7-ffa573238eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "734cf28c-eae4-4e0c-bb54-eb85e10c93d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a793228c-b7dc-4d90-b082-dca1669d68c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06e9485c-afee-4e0e-b966-0a1ec4b24c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03daf958-7da5-4bfd-a65a-642cba60235e",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de10039-bd43-404d-b104-e4138ea3db1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f798bde-795c-42ff-a778-2ab4bccae6e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d84983-5348-435d-b130-670155796ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90cac999-d5b9-417a-8bca-d4a5ccc0a861"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1807d3d6-f0a1-475e-aaf4-d33afdf8843a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "632671e0-56bf-4a36-9f5b-c62a06b22c94",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d539cbbe-1ade-4118-9b7c-77ecdf5a9c9e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "426ccf83-21ad-46ec-8535-8af767e316ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b480bd-dd70-45af-a17a-82a1c0daa0b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "93b2ad6f-1414-429d-a62c-bc39e3dc2fa1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3872915d-9847-4bc7-95a7-ccca5a2215d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13c9d3f0-f815-4855-b86e-998c70e5113e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1db38cc2-04d2-4bc7-857f-ec40a36edaef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af9ed6cd-667d-4383-a751-1762fd9be38a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8182749e-11f8-42e8-869d-b5b6686dfdb4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e5c7564b-0056-4737-ae81-109dec4c7f74"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "41e1101f-dba9-403b-8abb-58914da41a47",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "67afce02-9308-454f-8fc6-f9657680be3e"
            }
          }
        ]
      },
      {
        "id": "7e5f3b69-19ad-45f7-90dd-e8ffebaaf235",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "46c93fc6-50f5-4f87-9f2b-cbc2959895ae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4766fe90-f5cd-4af4-b0b4-55a6301b6415",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b55ffb5a-8363-40c3-907b-f69c70d2ec9f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4628cb61-77a8-4d46-a112-afb6b6a8c746",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8930fab9-614d-49ad-a58b-4d66d4b873f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb5438e6-9287-4100-b317-1612881737df",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab60ace-97d8-413d-b40b-9f4557fe1cdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6f2d988-fb41-4f70-bb6c-83be144acdd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b1c2117-68cf-4ccf-b658-931dc912df7c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac67502f-850f-441b-af43-02f063a0057c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f56a5226-cf1b-425d-aedd-d8a119df14bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a80b5b1d-ed7e-4257-9f83-52422275b624",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f887342d-9186-480b-a657-02e9a1dd5479",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23b2fa45-2791-4057-9158-69b04da765c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "371da1f4-2654-4e97-aa3f-a342d863f8ef",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d64c07-2434-4a20-abc4-5c0ffc296c32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3323f24-9e84-4baf-865c-fd384cd9b0ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38dff978-ccfc-4fc8-b4a1-953fe2dde3ca",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a98399-22cf-4d7c-8dd1-d89771250d8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2a24c6d-34d6-474d-a7a3-7157a3771526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91fddad-10a3-4504-a9b6-21a0a7ddc1aa",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18976d7c-7a1d-4b63-8067-e51cffa8489f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85be74c1-113b-46f9-8628-85fde775520c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59244ba4-ad10-46b0-afdd-bd0f8459bd32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a19a100c-5294-4767-9818-e33c662145f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f38f82-2812-46f0-bd1c-8364bbe9016d",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4bdb2a6-18cb-4144-80b5-7ee4f8e6b9f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b04fb7c-58c3-4154-8906-0149e5c7d64e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c0b34f3-1de8-4b23-ad6e-d4320c6abf2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80217855-9835-4373-b586-6640b18c3266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a5f3824-3319-4a91-8959-b78730c68e49",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bec71872-dccd-4034-89d2-e7a2d8408b6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72217189-f595-4c95-a641-8c250098a097"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e3cdd00-8d2e-42bd-b904-879380471610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "628cd4bc-213e-425f-be73-e375e761eaa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f491f1bd-3e7e-4870-bb7b-f2e3aa4aeeb8",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c89b62e-882a-4982-a7c8-448ae93a25cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ae25e14-83b3-4fc7-8172-da77f7a7909a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34228020-3635-4ddd-a3ea-5e74f6c998d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8bd22b1-b45c-4241-a209-31b1d44189fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a02b83b7-babf-4d81-b36c-6c09d89ab4fd",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a19409e-9b46-40ad-863c-794db2b64e5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b52e7b91-9de2-4ddf-883c-c7a2682a48dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "448b3fb8-5c5c-4ab8-b06c-9421171a3f58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5811d322-8e2e-4318-98d9-afdffdde43f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a23251-9d82-4e26-84e3-65db04bd0b64",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff405e23-1392-46ba-9576-b350d92fe220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d92d72f-173e-4275-a8f3-6ce1a0ef50da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e5357e7-e39c-4f75-b017-f103140c5fb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d85003ac-25db-4162-9914-bff13b90141a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd4168b-15d9-4b2b-8821-b5aa2ad67853",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d687db3-19a8-4a9e-9909-8f07fe5f3152",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fcee85e-0c35-4e34-bac4-c623a8d0b236"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e721e5-59be-4257-96e7-63dbc0b3de33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "813ba804-6221-4dfe-9297-4c957808aef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4313071e-a40d-4c03-bdce-66b8a281dd22",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f2c5cff-f6b7-44af-8fac-7df14d0d67aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "928579d6-4f25-4130-9682-6ce60b3a4207"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d957b3f-976b-4fea-a434-bf544fe5e9dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba06ee98-573b-4a22-a7f4-5db33b2b4a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2e0c72-343e-4a1a-86a6-e308c99e82f8",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f329e9-9e7a-4927-8837-5e55461f521b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f47f7f04-8d20-4818-bfcd-64a92cf4bc70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab2f2ccb-8e83-4bec-87a5-7e17c09480c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49529979-84b4-4adb-99ed-ff0e3e9c4198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0340abc-4ad1-4587-b2c7-382076101bdb",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f87237-5b4f-4dce-b42d-b43df34c16ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adee763f-e2e7-4b28-a283-911b9bf70411"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb622ecf-814e-488e-bed3-f8e92ae313e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d7f2866-f47b-46a7-8fa5-349040e60df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd5e65b1-ba22-4b39-a80a-e48240b2581d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f686d4cc-4a05-498d-875b-c6064a87c93d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca1203c6-d0b5-4338-b583-43268fb008c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fab4d65-6b86-43f6-b08b-aaf9c893c024",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e440a169-8a3c-4186-b507-e5c9983c34aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8663a7a3-82f3-44a9-8468-a3de1ab8cc18",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763ecedf-28a1-4b34-b1b6-c8bd1be08ed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2be72b99-9a43-4b40-a2b9-b8633da6ed7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04012598-f797-4448-b287-024231e066be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aabd5f0-449b-41ba-b311-8ef6359bd1b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdff48a1-4bd9-4aa4-9d53-28fa0e2f0153",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a21ed7-557e-4e27-bb72-39ebc06cee46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95d26ffe-17e4-4e89-a3a5-db70321808af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2520c7bd-0f28-4e0b-aa69-e144ca141d4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e8a4bfd-d4e0-4c9e-8115-93f7ab9b48d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd973eb3-7c5f-4f1a-8832-25d853d71f6e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "167dfdba-c2c9-48a5-b8d3-01374148d1e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "777d3b4a-a584-430c-8325-4e740832b292"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "068b1673-eb4a-4b26-8cbd-83eb43ad36dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20dd2e80-7fc6-40f1-8c0c-fcae798ed6e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aadbcf73-a50a-42d7-b85b-30eb34324a50",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "615f19e2-9f6d-4c3a-a005-bc4a7924ac64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddea27c4-5c09-4685-9bab-c848fa619fde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c71f63cc-f7e3-4875-bf0d-d03067a11cad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63885ecf-13bf-48d5-847f-e402023bcc9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "129f2888-fe43-468a-9c11-d5543109ef69",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1603349-cb37-41b9-a5e2-242e5552f2a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bd12ef0-b021-4e4e-aa88-461847a5de95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1af97de-5304-4a5b-8cc2-0c07203947d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f39bad2-6d5b-4e5e-a175-ba36bd02edcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d9ec93-5df9-468f-8124-c097564c6000",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b241018-9d97-4bd2-9132-b6ef44ac69c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "468bb771-5c48-457c-9d86-3f7e12847a2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19464e69-72a3-4f0c-b2af-8f2c61691442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62e1c2ae-3609-485d-b9a0-a753b764dd44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58915717-81bb-4f0a-ab83-9636f656b774",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53873c46-1500-49d3-89a1-15281cc961c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6caf52ca-7919-4a1b-b154-b5671befe6da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77725709-6870-40ce-946c-86817fb5a85c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "660c7599-22fd-4beb-b395-422b3631a878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb43c6f-7010-43b3-be84-4c75a6a566b1",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4269240a-aa97-483d-a253-9558d772f2a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "861bc807-2005-4cae-8af7-61ea8acc3f1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b069565b-bb42-4548-939c-dc11c60a00df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd07caec-f736-4051-9f10-4fec2e4b14a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f96966b4-ddb7-4703-ad6c-9fb1dcadd985",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a568c6-abf7-4e19-bd2d-f589aea94b65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcdf6692-b135-46d4-a5af-463997729ccc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a0816e2-b1d0-42fe-846f-c64336809917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17719967-41aa-4873-ba79-737706965e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e80ae707-f7fb-4a49-ba35-3504e86d82eb",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fbf3498-5440-4220-8839-81c5a1a24965",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e267fed-f6fc-4438-97a9-123e7e811e88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12fdd4f8-7d4a-4ec3-86c8-8ff5d0b7d6d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09765f1e-b40f-4329-8225-40c86e529588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50bd791b-3033-42b6-94c6-cf68ccfd73ee",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c60530-5f60-43ec-8513-cf0626a73435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d31fa251-2154-44f5-996a-63f3ace7dc2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "785c9959-b432-4280-8cc9-70f36680e922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49de3678-878c-40e8-bda1-ff8e8cbe5ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9945876b-d300-44c3-ae8c-63531b23621f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37529ada-e734-4fda-8047-f54d99a33c2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29188925-ca4a-4fd8-b29d-e37a845fe9ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf3832e1-3ea7-4879-9061-25f340eca6ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc678faf-3818-40f4-8018-19d110c4a32d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ec338b-15f3-47a2-acfc-e3b500640e25",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b3ccae-b8a0-4190-bba8-0efe36e2f5b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2591e817-2928-4d3e-b513-138e9abddea3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a70d2bf-eaa3-45b3-a83f-59989e5a7577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01bbda27-e54f-4c36-b7dc-6457a13a8c73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "008e72f5-750a-47e1-bf23-b78de5a5642c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d68d2ee5-6817-41e7-960d-ae11ce03a7a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c36199a8-db6e-494e-b495-180a8a7b1bc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e98c142-0033-4b16-a640-82d20af30d27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0b61601-907d-4f54-9951-87b079943add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5486997-4179-446b-9ec0-4a59b335c647",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5485b5-a3c4-41b4-abfb-6599f1728338",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c08378c4-a683-4e45-9ba6-947e22bf00f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b9aafc-c3c4-4a2f-be4a-10f6394112d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cd1c3bc-bdb6-46bb-8c83-8cfb8d893c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa0c33c4-d921-44a8-aec0-c06171b73011",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e65fa6-1e50-4185-b6bf-12c11738ecca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f96224d4-650c-4d7a-95ad-2f1100115acf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef6d0a1-1267-45e1-89df-c66718689ba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a57faece-9663-4f00-ac89-7d235d0b3703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b24795f-b83d-4043-b70d-96a180dd52e1",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa2707ef-8dec-484f-90e0-98a77a9bf8ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f99b1b9-2af4-4619-b2b8-f22b7b57d98f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a704e344-0d4d-4004-b971-4d727969a155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d01df71-29c2-4bd2-a723-cfd41b1296bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a3f0d1-d10c-4abe-b590-56c5c2788c42",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9fa5544-b3b7-4121-acb2-efee713a8c23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9683cdb0-f3dd-4aef-ad24-f837ebc61b7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cedb6d5d-9050-4370-b4d7-ae9613f958c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a585201b-6126-4806-a93d-5f490c32f0c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c3939a-a268-4e5f-b766-a5634fb2fca1",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b01a51ad-3b0a-4af7-bb46-f1a14af2dc25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e0b9973-c2e2-46d4-9ec8-73dda37cd999"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c2a0ad-011b-413b-aae2-66fa76e38bf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3983bcfc-0bd7-4771-8597-74c18c3f5656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3728f974-91e7-4144-be97-9c889185490a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e294dbd-9da4-4858-a0af-c443ae8dcd61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85f55ab6-cabd-44a8-8e4e-2322d2add068"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d071a1-62b1-4206-87ef-95c3d182d1de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "941abdd3-42fc-425e-a393-fc6f443d6387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "293a8c07-a1cb-4292-99a1-ecd42d74166c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6830bce-d479-4d54-b32b-56385af22903",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79791e90-a945-482c-bb97-b6ca1b66e83b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a07d49c-8241-438a-b98a-c7f45949ecfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27f4e68d-5353-45ee-a6fa-6a6e5be2e1a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3fdac5-4cbd-40ea-85c3-62d0f9b50cb6",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d55187a-532c-4839-90aa-2a9682c54456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9dcba23-1970-4c32-8cc3-6a3584fce651"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b09967-eca4-42a0-9993-c0226f9515ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24c53df5-9a92-4c68-99ce-d4f852b176ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b69d95b7-06da-43b8-9cbe-fefe2622a428",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b7ad03-0945-4ab5-96fb-4a11b059a0dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66bfe800-5143-4ff2-98ab-671d2ed2729d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f1ee534-9b5b-45b4-a8ec-213fd066e641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bff20195-8c0a-471f-880d-50280d584d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5abfa737-16ab-4036-b520-b228bae1179f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd9a43a-46c4-4ac1-93e2-15ec98429c57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1937a99f-cd57-4cb3-90b4-3df2f18d19ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "412e68e0-3b43-4d6f-8197-6d9326b78cc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56f6095b-982d-49f1-b8a3-46955f1c9a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad653d7-d5a8-444d-843b-95de3885cf76",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb9b263d-3c1c-445a-a43c-ea817f29d96b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e61ef9dd-c0c2-41e5-8055-273a78d293c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a05fbc2b-2d99-4a33-9bbc-39f4a23aa982",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca353ecf-2420-4200-b67b-c9d6881483ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09652d6d-92ec-427a-bf16-0bcca6e19cee",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c74a3d2a-3c12-4250-a72e-30ea3229c054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2bb5183-eaf6-4cc9-92af-041f5832948b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05c698e1-399d-4754-bfa5-8180de4375ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a69141b-c561-4f92-8b62-ba7c03e6ec2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03dca132-3c0a-4b86-866f-71c14064f1a7",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e808e9b-c1de-4364-82e1-f511430649df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63b45106-66f1-40bc-b13a-997f2b97fb4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77628da6-a596-4713-b882-1176aff39b9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a4e7a98-a0e6-4cf5-b375-374f3f36c681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ed498d-34c8-4df6-9d07-8400a9b0ddc5",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a990b2ab-4769-434e-9c56-824ba589107e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "058c1252-6df7-4bda-822e-75bc29544e67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7566bd10-9c97-4f2d-8b11-8078dd05046c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af5df476-82b9-4e34-93c1-e79ee894bede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a275d50-a072-4f65-8170-599a5ec24988",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11b9bed-18bd-4238-9141-fd27983e82a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c07e41c5-abef-4cf0-83d1-e67491edf99f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cdcfc72-ca64-4b83-8baa-cefeb4ca9dcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5e865ec-6605-419e-b563-1493e21524f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1cff7a7-b11a-4d4e-86d5-b480b91ea250",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d7ea089-ae2d-4686-9b7e-be69b8e69eb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c55bac4-5070-42c2-b025-53fce5d2dae5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2fa20b6-351b-4cd7-9ef0-3d6e1629f1b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6295dd5-98b0-4417-8ff9-90a09038f639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d07a28b-f5c7-4940-9237-2563f539a42c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f233a69-8373-47ce-992c-9a1e2d64c55c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07b9595c-e088-43f5-a682-bbdff9d86b80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8179cef3-3e2e-4f01-87f8-07214afb3b78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60607bc4-1f38-4227-bcca-ddbc230847f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "532ac217-057b-4c67-afd5-4c6393021b29",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83418e7d-c420-44d5-ba51-3aa8f8abd48e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbf4b6a7-bd4d-4c01-90b0-af566883cd03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fafe9186-0306-4802-811a-50ed5c48483a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5014cd20-1e96-4f80-938c-e5699fb77adf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f500602d-9ef4-4953-9133-91468bf7a9d3",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1c9073e-a82b-4405-ba4e-baf584dbccd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27943ecb-a33a-41c8-b55f-407ae8b6e1b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe39214-1738-47d5-9ba2-dfd2e730aa16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ae12a8d-1563-4c4b-a1da-b8c2461548b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc175b0-12f8-4b7e-bc85-f8b7196fe62b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f12da4-f0b6-4fa3-a790-f50c83fd8c7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e682e90-60c0-4928-bee9-e95c7b457e57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65402a2f-a699-49c1-8888-372da14a6c18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "807e6890-b6a0-4094-a1cc-3da717ca81f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2160aa2-980c-4a95-8aca-394e6adfa868",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9292f50-ffb5-4c21-9034-96f698907824",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b110f90-7631-4481-8c29-8ec7cd3f876f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae370a7a-6231-4da2-b23c-9b3e688d1fde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "933bca8a-9245-4595-a997-f9dbec7a867d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "183f7c37-53e4-4081-b70a-cf80698ce372",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3068e6d-32df-424f-ac38-2fb3c8b1fafa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c40b5e6-bc92-4acf-b921-58016e4286e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55ee944e-36ab-4945-97b9-76111ffc2276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "254e4b72-6b4c-4461-b174-7bf70edae50d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db8b4bb6-4c9a-444e-95ce-b2ef63bd2461",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7542f349-3e74-4a98-91b8-39d3fedcfe10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc1f651e-9171-417b-9b88-291542c3e1b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f36e28-3041-4a16-ab90-c15d850b486a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52f01441-aa31-4095-b51d-eafc8032aa2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ade61ed-c563-4f95-a1ee-11cb3e85fbb5",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "999f01a3-8b8e-467c-8497-71cabde86e67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0552bc16-72c6-46d6-9c00-76719ef61339"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc64cc28-edae-474e-82d8-cb418ab73ae1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6df150b-3300-4f62-a859-524a474a4e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5647e47c-2b9d-46cf-a9e1-6be87fc3830b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "225066df-2d18-4b46-a4a9-0c1ac97e9ff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "580f660f-3c8c-40ba-83b1-c1daca3e843d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c43f8a8-2cda-4ca7-8117-dc5d748f1dee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "208e5c76-98ab-43fe-be22-635933f5f227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f60207f3-841f-4c16-9c79-5a63859243c2",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ecb3f5-4642-4bba-a089-98e2d1908eeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0374fea-d04e-4d7b-aeb5-6b4e99f53db5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e51727-67d5-4ef8-b844-829bb194abf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cedd8de7-d579-4ec0-859e-e90b5f1551f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f06dd5e-33ba-4938-adad-63f1a276d219",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "439c10b9-2683-412b-adba-a2609a66d1bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ffbe71c-13ba-4610-aa32-621d26976480"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66dc147d-39e7-4d46-8276-b463f1f19b27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0959f9b-8133-4c86-ad49-616a27e16106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac08f204-a3fc-49d2-a8b8-eb3b8d0c9db0",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "559af27c-ef61-4a2e-90d3-7bc70fc5ed76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2049991-a5d3-4a81-b8ba-cfbfac9ba0cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "672d9959-71aa-4ce1-998b-67b2550ce656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce7efa12-ba7a-4966-b55f-92b577210088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd7ebc53-e781-4ad1-8869-cdca9f943499",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a6b04e-6fd6-4f71-8a8f-853f6b6a1461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f253918-72d3-4b47-a812-d29a2a967b47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39cf8d62-4f1a-460c-a921-a92a997e554e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab40dabd-2b1f-41cd-996b-61fead0b47a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce89f96d-a88b-431a-90c0-e2a04934dc7c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ce2abe-00fb-460f-9fc9-39143e374949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daf7a9f3-ae60-4dd8-987b-4fc73010223e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c517f52-5d9c-4eed-a539-ad5d5b042802",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bba73a4-caed-459d-9af9-92f1e0802ab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b3407e-ce75-4c53-9c27-7c8e75672b5f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85406e2e-db5f-489d-9dfc-7c14cc425098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e09fb5c0-d338-4de1-bc86-ba965fa3a81e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7818b99a-dcb7-4ac6-8e5a-d9e855a3d826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c71b85fc-31bf-4056-92e6-9680260de52f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df7eab7-1a7c-4ce0-aace-ebdd514bae57",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7bbc7c-61be-405c-ba43-c423f11640ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a341efc-0b77-434c-bf15-c17334a28830"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96de4c59-4b43-426f-933c-b79dbcea7347",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d362d243-a5ac-4959-b288-7ddaa2ec121e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b3f846-26c3-4c1f-b950-346b12aa5e28",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31354eb4-4d13-4ce6-8e45-07e3f579879f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09c84c63-26ba-485d-93f8-93c9ff562a19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c48de5-d658-4948-b1f1-992070e866cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60bf7ba2-e4b8-402e-b018-0c12fd2382c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e34fe8-255e-4826-b996-5a1a346bcb50",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ecbd846-ebd9-470b-ba00-d9c6f5dbdf4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2441499b-fe0d-4324-8163-d63fcfc45d43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba7c759d-1eac-4ffd-9d6d-0a9e3c116c85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b49eef82-95d6-4a98-8d5f-ffac51985f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f5dd135-7a2f-46f4-97f6-8933d38df50e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b41354-7633-4900-a7f3-534a0b8a5d3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58e52c6a-f93d-4c13-aa01-61cba5bc6516"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2282df07-9628-48c0-816f-018edaca0809",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e0068b3-45e4-4479-ac43-9dd64a3bb450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4780f533-7873-4e14-a3e1-3355bb0e810d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7fb5635-21ea-4419-9a35-77616d93774c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba141738-dee8-47cd-9b73-685e006e2101"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca176ec0-9c59-443b-9c3c-cb94632b8734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c8bdd89-be07-4c38-93af-49d31738d1b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b4717d-c456-419e-a9f4-8822327f0fe7",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da0ba18-ca47-4ced-b26e-e6fddd51c24f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9902f456-ebee-4551-b10c-8238f0e26b3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed4cd0df-f26a-44a6-9661-141273331b04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3071f9c1-0c38-4af2-9d10-f1e765a30f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8268a9c7-36c4-4fca-8474-1b5df6e64fce",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ed388a-f2bf-4dd7-a73c-d99bd6dd1d78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f672bfc-78d3-43e7-9747-c90e5f6585b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5398907-a87e-42b1-8da9-9147b952fd46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4773b6e-aa5d-482c-b693-1cf704eee1da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e6f335b-e86d-44fe-b3b2-e17b1269e1a5",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b494282-719a-48c5-b397-391883148560",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f5e6658-1120-470b-9803-186d62c14341"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad41252-205f-40dd-bf37-ada36af0df7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2cf0d3e-69a4-4469-a51d-7d07be7c06b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8dd811-6533-41ce-b106-c9528584a3c0",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "756eec66-17c6-4fc8-bcf3-ad7e4a90bb7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf2a9240-0304-4582-b9eb-dfe3e7c8f2b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee8770a8-d88a-4b7b-9977-d0c53b454fac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea68703a-6262-4078-bc98-43774793bb06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3590746f-22be-41ec-80cd-5cd3156196c4",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb15fde-e9ca-45f0-a1bd-763460b50b16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d00ad1f-5b29-4fa7-bcf1-b6847bbd62c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5647b91-6513-40ec-8a43-a26cb1068fe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "185e3627-5002-4106-aed4-5c2acd5cd2ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6137d3f8-c00e-407c-b790-b66ba5a7e23d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f612e79-caba-4776-87b9-9477bef204ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7dc7bd7-9cca-4d42-bdc0-015c4a244628"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fac86df-7ec5-4168-a1d2-b252909724a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9869b796-a4de-4b83-b592-a2bacf5ed0a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd30cc91-a211-4cd6-b741-5660c7e5c49a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb4dba74-54dc-4b84-8d37-8bd2c17e1283",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6829e33e-afea-45d6-be78-027c9a4bfc10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b94f94-3323-4d8c-a9f5-3cb1a364654f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c1c0508-1f58-4290-9353-879543239544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b317e5c-a7f0-4be3-9574-6e0d3bce009f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "387e328b-6bbf-41e9-b977-53d9ba9f562f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f7bc2e1-fc2d-4643-9282-efb8b2bf4fb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b45bc6-43b7-4717-9a12-a240a44052a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e739c2e-5d2f-4307-911d-6e3d45dc698d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "108822c2-5020-4299-9004-088bf9997b08",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda256b5-2418-411c-bb5c-cb7186639731",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69f11dc5-fb2c-4ddf-8c3b-05c90f8ad5af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "058f6c8f-2363-49d7-92c7-0cf2c4d8fdfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d2f5111-5a52-45ba-b541-9aa66c4141f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32435037-3b52-4af3-b419-348ddb695c08",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e03d53-d6f8-4baf-81e0-6c5594052443",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2064293d-409b-4a43-bf36-dd1e8d6e2bdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c445d67d-dd6e-41c1-a411-6eb84a66d265",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa2b3d88-6f68-48dc-99c9-0b4da2a7c3a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a4cfe26-3388-455a-880c-7843dbcf9436",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0730e80-21a2-4961-bfca-1abd4d8ddac9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53b7ce8a-db8f-45f8-a87f-1e2cb58c27b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed731b58-77c4-4266-9a75-4a6f908a9a93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b711a932-3e04-4d14-836b-1d9ce13264d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ae75120-4b35-4c91-a3da-36581480ed91",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "996047c9-873f-448f-9a0f-647a5313cb46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e25dc572-03a3-42e2-a91a-c150359784d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "059ffc81-cc15-40e7-9287-b2a9400bf8a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94690806-7ac6-45c1-9bdd-d07e2c5fd858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "062120bf-f203-4168-8417-96be2f401e59",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a6044c-733a-41ca-bc54-c0656531cf88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af0399fa-32af-4828-b204-2f85b677a837"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "833177b5-f45a-4373-95c3-52985b1a71a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "072a7845-1feb-46ca-b8ea-998f542923f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dbe348f-8f02-4239-8112-4c181a4ae9f4",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb27038-c694-4641-adfe-9f9d110b23ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34328c4d-88bc-46c8-992d-fa63f18e2ae7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f40cd40c-5448-4617-8cb5-43ab68f0079b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b937e8f-6e78-4549-bc72-5369f11935dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbc03884-5238-4bbc-892c-bf45a840c462",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c99a8bb6-7974-49f7-9441-44dac95fcaf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e951834-2788-427c-b3cc-a916ae74fc83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f292d2d-9a32-4839-a14e-890de2059b12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12de1a03-37bc-4607-925c-6b380b9b8009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd2e7d93-e92e-45c9-8af4-2e942ab5af93",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1988d92e-88da-4db7-ba53-c6faaae3857a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "924daaff-4c91-4283-a5e0-1640d09b845c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3642b4b-9ce3-43f2-98cb-f553758efd88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa590553-ecf1-4298-8a5a-0bd0425a238d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd177c54-7db3-4be7-9bf2-0d012676c519",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4163456c-be00-4b83-a712-5edde89ce042",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56036c54-f7eb-4dbb-826f-14c18b25264e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc0c12f0-1f70-4f6b-81e5-6b637e07ae1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "053cd193-5f0b-46e6-84a1-1240d17b7d9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c676fe1-ae65-4275-8166-5a61efedd154",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37746671-e192-4dcd-bd3d-85eee1d43ecc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8cf6c59-ba59-44df-9831-e314fa50970d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a1bad0-b64f-45bc-ad40-217a52e9b03d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "568629bb-ee9d-46da-82ac-4c9fb7141cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afbf5d12-f0fb-48c5-a1f0-4ce5af112389",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f486fe-43d6-4be9-bd47-f0547b329591",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43ba8acd-9a8c-441d-892a-9bea3f962cb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "334feb54-966c-43c8-af06-c966e4af2f9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dde1f8e-3497-4e81-ba2c-98bd7b65eab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21dab0ab-0ce8-4660-9969-b933e191b310",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691df1b4-4b2c-40e5-9e5f-ca656822fee3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4008b5ae-7491-4103-b4a7-effd33e17e6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c727332a-e89c-48ad-9fc1-f2106e21e79f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c288232-3f69-4178-a476-8ab5930ed099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6c18d06-ee40-466c-ad8f-20e35d003c47",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb6ad331-3e2a-4a10-a8c8-bbd2b6ec6e18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73ae77a4-92d6-4d31-95f3-8b18cb179136"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2099d265-3224-486e-a3ff-25f1f4162990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "253fb4a7-f826-4b0a-83c8-edaa62be218f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d3dd29e-60f1-4623-9c10-509b55247ccc",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "276a7ce3-84c3-43e3-823a-d265b1e5393a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac4bf3a5-2b96-48aa-903c-8f5337ae660b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b6e3c0-4057-49d2-91cf-8935764b7785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7fb791a-34da-4e79-a8ae-d0729cd720a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b9226a5-d28a-4ae5-9098-c6792acb9ab9",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed7eb09-34c0-47ba-afbf-5f96e98e84d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98b07f5c-1051-41f2-be32-2fcf9b99e972"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd0265d-8c39-4ad1-ae09-0a57509f535c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03076a59-475e-4055-989e-e5070d3c960b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "768707db-6422-43b3-a466-fe25710e4172",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e68c35-5047-40f2-8010-1cf59fa6915c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cd6ef8b-fad1-4629-b006-57d50355e7da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "396858d9-d233-4866-a68f-71447ddde02b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "751385c5-376b-4b03-9547-e106602daed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8198df97-685f-45bf-a275-2da267e614f0",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad10006c-9d13-493f-b966-c589686598e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d676565c-f302-4eb2-afa8-3d09de565232"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c18484-5af0-4afa-ad8b-97a7aa17a3c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9fd5faa-61d5-414b-992c-9f6fb85cc782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f69791-e4c2-47fe-9717-048d3907cce6",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe41cc0e-0658-4fb8-86cf-ccd6a51b1b4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e20491a-d54e-40af-bf74-603cde515c27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1123ed49-e363-44f1-95a7-d06e10acfd89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1943b4a9-a08d-418f-bc37-eceb3cfdcd40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d786a3-44bb-4e35-b323-90df80fffc23",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d373b3ec-3147-474f-b387-db761896ce46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce9cbc56-9bf1-4e63-8bd5-01d2cd062a8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "863b4920-cae3-43e9-a7e9-e911beb6a53f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbee3eb3-fe8a-467a-8b68-ed4a95bc4133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f66c26-228e-4636-8dd2-24b1665602b7",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da552936-221b-4f17-abc2-ad238c0f2196",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f7f5132-91b1-4330-8ad7-092abc4f7d34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ef17a9-c369-4610-9b11-b524c1f5e45e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a24a890-3560-4e27-9347-7d071c99930b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa4ce709-9694-41f2-b4ec-004cc357dcac",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b011b131-acdd-452d-8367-373276461479",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "778403d0-973b-48fb-8ba6-6744277bd97a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eadc4c9-a328-45ff-9a29-2edd630dd445",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "990fd412-9ece-44c7-ae1e-db93befbf16d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc34ce01-283d-47de-a4f0-16eceed00c5f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2d7e6b4-69d6-444f-8453-69a29d0854f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c46c295-c713-4c09-b7e3-34d11232b673"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06616fc9-496a-4bc6-9b2e-8b18a9477992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91521aa3-5fe7-4af4-872f-efbbbe342897"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "933f664f-8fa3-4151-ad8e-a1eb5e520bf2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78f4b997-4a98-43f5-9176-209f575b5d64"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4bd9b010-3aa1-4546-91c0-42625f787eb2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c7a73692-746c-4c82-9dba-685095487396"
                    }
                  }
                ]
              },
              {
                "id": "8d6774bb-7e29-4745-85f0-f0e0e85f21c7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d9cf26fc-8c0e-4d7f-b0f2-ece76ab16957",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b00390a-5ee1-425f-9832-f3be9a8f517d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "2162eadc-0b34-417b-ab68-fb0044fabdf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e89cd34f-79fe-4078-b284-ef7d9212cbaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ab0f9ce4-4990-47b8-9054-7c9abfd7541d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b418de61-e0b8-42a9-b40e-8c86be320221",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0732750c-40d1-4672-a66b-ff45bffe8dbf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b08e3400-20e2-498f-bc83-66787e83a8fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c983e266-82ea-4b51-b807-fa8dd2a12dd7"
                    }
                  }
                ]
              },
              {
                "id": "d671b44d-5fd5-4e2c-b4b5-4def035560fc",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "1998ff20-809b-43f6-926b-0a982a803b44",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8998db20-85fd-4d1a-91a0-7ae2f426fc09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b43d0d83-73ad-4039-b6db-3b006d8fda29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03fe9b56-2ebd-4ef8-92c9-4b919820e9a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "976188be-85bd-4258-8bd4-96ed1ef0c593"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "17494bcc-add0-4000-886f-8c6b0a8a9ff6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ee8cf73a-e453-4e29-893f-b15e29f30a1b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2d1ff1f-684c-4bc9-b270-732904edbc8a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "361ea630-46c7-4c63-b4db-ff2481e45602"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a1e23f4-0126-4180-a31c-7f20092d1dbf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e7bfcf7-c917-4fd6-809a-7b2a200d5f03"
                    }
                  }
                ]
              },
              {
                "id": "23fa9803-b99a-47ee-93e1-a5d009bb1dc0",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a25293bb-9a68-43dc-9dfd-f5be5fdfe28a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1fccd920-883f-4574-a77d-6b20a0e70111"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35859a25-905d-45c5-a878-78aa1b6461fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23394c9e-9fb7-4796-b980-e4dc66735b72"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0c1f2e48-062f-4a76-8fc1-a6ae05307ce1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "36d2cd13-ca08-46ca-8420-1e427c7b6f47"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b3af8c8c-93e8-4eb8-8e56-dc0b2eedd7ef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5b91b164-c5df-49fd-88f2-a0e570db885a"
            }
          }
        ]
      },
      {
        "id": "ea9f0632-5cb0-4a71-b09d-90296a9d7024",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7f27a41f-f7e0-4596-a1fa-8c01bd16696c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "442606a3-82ff-424a-b39d-00b3863f9fa1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9dfcf72a-0cb5-4ea7-a1ea-2e81971b2fdb",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "788c8361-0efa-48f9-b366-8d0e7e189887",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "52db0872-bf14-4026-9567-a9846e829fad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8a3b37-bc2c-451c-b597-378e4a80d61d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3814102a-1da0-4879-9669-1fae95e20f5e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a35f993-08ff-498a-a738-63c8c5ad52a5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7cbe173-d9f0-4722-9325-7470fba189cc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "558e8170-82e1-46c8-968f-2d7f85f8c78c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9eec6ab-f091-4cb9-b5cc-c3d70964b760"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0c48bf17-6d88-4a80-b0f6-086bafaa20fd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b924778c-202b-49ed-b6af-89b88685f194"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "59de44f5-03ac-4e4b-998e-cc90f0c284c8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1fd7f3be-8a6e-4230-a43d-a698666ab6d4"
            }
          }
        ]
      },
      {
        "id": "f7bf02b4-6cf1-44c1-8367-2fba16190b24",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "26b82156-41a8-4d93-bb16-6f3f5ead888b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2314b9b2-17ce-475a-a8d3-90ebe7e0efe7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "56456341-4577-4d31-87d4-e31d0d34317a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "648e60ee-add2-4de9-9d6e-d94b84e2488b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27a3bdf2-ed83-425b-b08d-fc156494b9fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb9e536-fc97-40e6-b739-700681f6052b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "35b0580b-5ab8-4455-9e00-919ece12127c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a4c05ad-ab45-4766-b784-7b89719439ef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4494d17d-ac63-4282-8959-e2d7da80026e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "070739ce-6982-4551-898b-f7e7f0683cba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "39c1befe-51a2-4303-b11c-8852437fc090"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "79d46144-97fc-4f95-b45c-d0d52c6c0162",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8dfe8466-d133-47e8-ab55-0a4fe9df1831"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6118d073-47f4-4712-bc56-2beaec5e5705",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9959198c-efa9-4d3f-9e59-1bb4e2586720"
            }
          }
        ]
      },
      {
        "id": "624d1307-68c8-432a-bceb-07fc1de618b0",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0785057c-88c6-4b04-9a9d-8126273ab299",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f05e0ff8-3b4b-468d-860a-61d8de1b3df6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "be894d2a-8ed7-4d69-950f-39e8d435d3c2",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c8e8c8b-55d5-4e45-8318-b9e96415d41b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "642cb93a-56e6-4ad7-a112-15d2ae27dae3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96970c0b-f644-4b99-8902-c7c76780de6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "92431c55-6177-4832-bf29-f678c59e9143"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "60f7e2b0-e265-470c-9d4d-32fb8f348aa1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9fdc5883-0b55-422b-80c8-4e2cccd9ac6c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "df258772-bec7-4807-8bae-8e521dcf91e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed086b56-394e-4b6a-980e-c8db00d5505c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5af3f1a6-0d65-4b2a-a51a-6f3e00f4e9d8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a217f37e-5856-49ab-b5ca-28566667c7d2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4db91b97-87fa-4053-b56f-23ae8f86be7e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ad32a38d-8797-431f-99fe-fd7de87990ad"
            }
          }
        ]
      },
      {
        "id": "cffd66c4-a6b7-41ed-b373-34bb96765d59",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8e8d3131-b787-4a1c-9a9c-848335d74412",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "940e0ab4-5d89-415b-b491-4392debda201",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "5145e3fb-e2ff-43e3-b7f0-46127eed4650",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b9323eb-2321-4605-b258-a84d388ea741",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4c2f942e-7033-43d4-8b9f-eb91a383a62d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 6.315789473684213,
      "responseMin": 2,
      "responseMax": 256,
      "responseSd": 19.817374881243733,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1707179622903,
      "completed": 1707179633503
    },
    "executions": [
      {
        "id": "5140380f-c1c0-41d2-a2a7-fdb586765ee2",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "22d77800-d750-4a6e-b084-95efca44a24f",
          "httpRequestId": "8024ec4e-2931-4c06-abd8-153322347aab"
        },
        "item": {
          "id": "5140380f-c1c0-41d2-a2a7-fdb586765ee2",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c029e0c4-06a1-435f-9655-d214acf8fc28",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 0
        }
      },
      {
        "id": "7f7b47d8-964f-4339-8e30-38e955c7d39d",
        "cursor": {
          "ref": "87088ee6-0072-49a3-ab2f-8796ac91c0d8",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3ec366b6-2424-4870-9205-07f054e50120"
        },
        "item": {
          "id": "7f7b47d8-964f-4339-8e30-38e955c7d39d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "a859edd0-ffdb-4e06-82e6-11f051ecbd8c",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "6ac08d99-19df-4d09-a860-3d102780ca44",
        "cursor": {
          "ref": "beda4981-33fc-4479-97e1-113b0474b364",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e6a04cb7-312d-4be9-9dd4-0ad37237b33f"
        },
        "item": {
          "id": "6ac08d99-19df-4d09-a860-3d102780ca44",
          "name": "did_json"
        },
        "response": {
          "id": "e5231422-34fb-4228-ac8e-74093419cb6c",
          "status": "OK",
          "code": 200,
          "responseTime": 39,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f11b8c1-ad47-42d7-8427-a74c61beb176",
        "cursor": {
          "ref": "4a9bfe8a-8ccd-42a4-87cd-c7b3847b1517",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "555f7f89-0c18-4499-aac7-e9f289b1c3ac"
        },
        "item": {
          "id": "5f11b8c1-ad47-42d7-8427-a74c61beb176",
          "name": "did:invalid"
        },
        "response": {
          "id": "e4570a59-9e91-4573-b4b6-9e0fc7d414ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f11b8c1-ad47-42d7-8427-a74c61beb176",
        "cursor": {
          "ref": "4a9bfe8a-8ccd-42a4-87cd-c7b3847b1517",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "555f7f89-0c18-4499-aac7-e9f289b1c3ac"
        },
        "item": {
          "id": "5f11b8c1-ad47-42d7-8427-a74c61beb176",
          "name": "did:invalid"
        },
        "response": {
          "id": "e4570a59-9e91-4573-b4b6-9e0fc7d414ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a40fdd8-f1cb-4906-8f0d-539d7034f8d2",
        "cursor": {
          "ref": "4b1dce6a-a16b-4cab-b08e-b6d8c8338361",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7a81b755-6919-4af4-b2f2-09060a93edcc"
        },
        "item": {
          "id": "8a40fdd8-f1cb-4906-8f0d-539d7034f8d2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "32145ad9-87a4-4873-92d7-4a8158d5cb98",
          "status": "Not Found",
          "code": 404,
          "responseTime": 68,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb26df94-e565-42e4-bafe-da82ec95e607",
        "cursor": {
          "ref": "7c3cb104-2803-451c-8a5a-3ce06255c6c2",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5ec2945b-20c7-4a9e-94d1-f6f75b98869d"
        },
        "item": {
          "id": "eb26df94-e565-42e4-bafe-da82ec95e607",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4de4be84-9cb6-44b2-ae50-a161139143ac",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e17f4a9-28c0-48dd-9d06-3206d8438252",
        "cursor": {
          "ref": "7f379f9d-b6c8-402a-9b98-1392294f2291",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "956bd5e4-9422-43de-84c4-4ca00302c3b0"
        },
        "item": {
          "id": "2e17f4a9-28c0-48dd-9d06-3206d8438252",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d0fa2119-ec5e-4af7-99b1-4747bb85490d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c2dd95-b7f5-4293-b188-4ec49039b572",
        "cursor": {
          "ref": "4fc6545e-a4d4-474a-a4a4-43ed7bad0a41",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5b57f018-812e-4f9a-abc0-66a22805bd29"
        },
        "item": {
          "id": "54c2dd95-b7f5-4293-b188-4ec49039b572",
          "name": "identifiers"
        },
        "response": {
          "id": "5d4d0bbe-7f7a-4310-94d7-fe15895c798c",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d75db46-576c-41b3-a9ad-40741cd6c506",
        "cursor": {
          "ref": "cb3970ba-3ab5-4c7c-a14c-7ed6c8200622",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c46d20f5-f786-47d7-8f7e-4195e424bf6b"
        },
        "item": {
          "id": "6d75db46-576c-41b3-a9ad-40741cd6c506",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8d449e51-9bcf-403f-b497-99188f1c974b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb18ada1-bc50-4660-bb02-ec3b3519662a",
        "cursor": {
          "ref": "0923edeb-ae2a-4212-9482-3440c9778bf6",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0d387a32-747a-4ad5-840e-0d18b78aa838"
        },
        "item": {
          "id": "bb18ada1-bc50-4660-bb02-ec3b3519662a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "86423663-456a-4329-83ff-f86e8f4316e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb512d52-56e7-4e30-ab81-b5c8f982fce6",
        "cursor": {
          "ref": "54c6f307-fc97-4d92-995e-e1a265606122",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "70c893bc-6c79-48b5-bb7c-f89e7b235cad"
        },
        "item": {
          "id": "fb512d52-56e7-4e30-ab81-b5c8f982fce6",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "cfdc9252-fc46-4aec-be3a-e347033010a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "610f6b4e-3d96-4d8c-b086-b0d56084e1ed",
        "cursor": {
          "ref": "c0671dd9-a968-46dd-b883-ce9dc67167bf",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2cbada97-4b6f-4c14-b85d-c5136364a9e1"
        },
        "item": {
          "id": "610f6b4e-3d96-4d8c-b086-b0d56084e1ed",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5cd07e0e-2be2-42d2-8c23-77c4a53cd4fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d56d44a2-ec89-4184-b5ca-52f76b480ff8",
        "cursor": {
          "ref": "e818a38a-5c6f-49f7-8cdb-a6e14229c7ba",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2a5e572e-8564-4dc3-9076-19e5e3253a78"
        },
        "item": {
          "id": "d56d44a2-ec89-4184-b5ca-52f76b480ff8",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "092ed7b0-2cc0-4409-af0f-b285fdfc8cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b78e502-124e-4299-8ff2-2d79b41e1fe5",
        "cursor": {
          "ref": "6be58074-b8f8-4ca6-b40f-39da5b8160d5",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8299a29f-136b-4c43-9de0-a4e1fef29720"
        },
        "item": {
          "id": "0b78e502-124e-4299-8ff2-2d79b41e1fe5",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "af23dac1-0a6c-40f5-b1aa-32fc3c7194cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aed110b-73be-401b-9e01-7e934fe11483",
        "cursor": {
          "ref": "7fdc29e3-7db6-4446-9d74-9efa3d46ecc5",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d7ec46cb-fd93-4ca4-9ecb-5969dfb993a6"
        },
        "item": {
          "id": "3aed110b-73be-401b-9e01-7e934fe11483",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "97f2cedb-6c77-4438-acb9-bdb585c2e344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac3d97c-df5b-4790-b347-2c76ffba6db9",
        "cursor": {
          "ref": "e473a5f3-5b25-455c-bb0f-55727bc463b3",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e9863f1a-d807-4e23-a85b-8bab3441b01d"
        },
        "item": {
          "id": "aac3d97c-df5b-4790-b347-2c76ffba6db9",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8a9edeb1-7d92-491b-9086-1af99394705c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68aee507-545f-4419-bc93-5ab78e4979d8",
        "cursor": {
          "ref": "bf5b03ff-45f9-4c5a-82e0-eafdbb5d0294",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b26d1a61-9f2d-4123-8841-b88e3b233c2b"
        },
        "item": {
          "id": "68aee507-545f-4419-bc93-5ab78e4979d8",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "4d126c49-2e9f-4b63-8c38-20765182aa9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "accc6051-0156-4e68-9fea-8dc0ad10ebf2",
        "cursor": {
          "ref": "cea4f108-3329-4348-874e-391507425a09",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5e3abed7-2fb8-4391-bde6-b83635157624"
        },
        "item": {
          "id": "accc6051-0156-4e68-9fea-8dc0ad10ebf2",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "9ac8440c-019c-42fc-8a45-f49e93ec3567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f528bf-d120-48fa-a794-8b2cabcf4f3c",
        "cursor": {
          "ref": "5f15852e-e54b-4f74-ae7b-86ec946e3ab8",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "459a240b-de92-48bc-b2c9-2d4e00715da9"
        },
        "item": {
          "id": "73f528bf-d120-48fa-a794-8b2cabcf4f3c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e07bcb65-119f-49ce-8cc6-61c96c7bcdc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd08fece-ec0a-4133-9475-f0c3cd7cf72a",
        "cursor": {
          "ref": "1151c78c-0b29-4a3a-9e9d-26351c070fdc",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2eec8116-14d0-484f-bee5-0904da66d184"
        },
        "item": {
          "id": "bd08fece-ec0a-4133-9475-f0c3cd7cf72a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a65b1cd9-0eeb-4014-9def-150bd4779036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00199720-e621-43f6-a9c0-83fbea841594",
        "cursor": {
          "ref": "c053dfb0-74eb-4217-b04a-c8bb3f9ec60d",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "abf59287-2c13-426a-ad56-62d680225850"
        },
        "item": {
          "id": "00199720-e621-43f6-a9c0-83fbea841594",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d859ef38-f6f3-4ea9-80a4-5b143fb40a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1d40d2-23a8-41ba-88e1-a1f116223dc3",
        "cursor": {
          "ref": "35e0a5cc-6e8b-4257-861c-22f33ed1d1b9",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "bfd5ded5-998d-47bb-93b1-fee15aa65743"
        },
        "item": {
          "id": "3d1d40d2-23a8-41ba-88e1-a1f116223dc3",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "6ddf9ee0-ecc1-4b21-a13b-bde60bcbbe26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41bf6aa-150e-4e70-ac2b-e68e9cff3c2c",
        "cursor": {
          "ref": "c645b2f7-4ce2-474b-a54d-bf26d6bdc743",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "64e45c41-3b0d-4f27-b5a2-024d69184b5d"
        },
        "item": {
          "id": "a41bf6aa-150e-4e70-ac2b-e68e9cff3c2c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b352c515-bf45-4cbb-b669-56ba0bab63e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cfe215a-d480-4f58-bb59-7fdcadcff39f",
        "cursor": {
          "ref": "17d8a1fb-9982-47f9-9c4b-ca766860b424",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d4db453d-25ad-44ce-9f0f-f6fd22a2ef02"
        },
        "item": {
          "id": "7cfe215a-d480-4f58-bb59-7fdcadcff39f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "06314fad-255a-484c-844f-a37a4a361ddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b6e2a5-7c21-4411-9758-bbedc4105f9a",
        "cursor": {
          "ref": "e9d5b0f2-23a9-4dd1-bbfc-0ec8e6953365",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "fa165f62-f2d3-43eb-83b0-0de51733d853"
        },
        "item": {
          "id": "d1b6e2a5-7c21-4411-9758-bbedc4105f9a",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f66f2f2e-4409-4b1e-bb28-ad28e781643b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cabe412f-1ab0-4302-9165-d35d3e4ebe5a",
        "cursor": {
          "ref": "64f2d0ae-f9c4-4cc1-882b-3dfcbbb8aabe",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "bdc6a7a6-b154-490a-b8bd-c9c6809934bf"
        },
        "item": {
          "id": "cabe412f-1ab0-4302-9165-d35d3e4ebe5a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f0126dab-a47a-4a40-98d3-81b496c60421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3f995ee-d156-4954-a974-0db98f64f747",
        "cursor": {
          "ref": "afdb56a7-5efa-48f5-b5d6-4dcadc1d2c8a",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "82cacc7e-8dfb-4fa2-8e8f-25219d7af2da"
        },
        "item": {
          "id": "e3f995ee-d156-4954-a974-0db98f64f747",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "946aa6b6-9030-4c92-9b29-fe353825945d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d64ea5-6297-4271-bb3b-3c3d1d8a3112",
        "cursor": {
          "ref": "f7e86051-aa22-4eed-93ed-50b2ff773a5c",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "0fe554d7-b2c7-4172-8aeb-31bfb31cb2be"
        },
        "item": {
          "id": "c0d64ea5-6297-4271-bb3b-3c3d1d8a3112",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "9a92290c-df9f-4539-90e4-4cd858f518cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3425ce30-8c44-47c6-9095-fb78e703707f",
        "cursor": {
          "ref": "cfb6f59f-7a0f-475c-adb3-8a7bd539c09a",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ac13d22a-c789-41e2-910f-c8c529d3f1a2"
        },
        "item": {
          "id": "3425ce30-8c44-47c6-9095-fb78e703707f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "c21a523d-5003-4320-828c-0cdfff5e796c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "059f181b-5467-423c-a6be-69d5cae45ba3",
        "cursor": {
          "ref": "3ad08de8-739d-4e6b-bf25-e9f40797778d",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a7a56729-cc51-4c9b-a480-cfb165d7ac18"
        },
        "item": {
          "id": "059f181b-5467-423c-a6be-69d5cae45ba3",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "25251db3-a947-4031-81ac-ce8e8c3ca823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ca0919-bc13-4f9e-8029-2b7d8da06513",
        "cursor": {
          "ref": "0c70f72b-3f22-4db7-acf7-bd3a0c54d935",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "dacc9dce-a159-4b91-8936-5c9a37c3cbef"
        },
        "item": {
          "id": "a1ca0919-bc13-4f9e-8029-2b7d8da06513",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "3e462e03-11d1-440e-8524-f0ae0717f140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c65f0f-f918-4742-8171-bf14fe5e98a7",
        "cursor": {
          "ref": "6ad83deb-f6f8-4121-9442-6a88aaf7f332",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f66134f2-f63b-46a5-8802-50a1bbaba6d6"
        },
        "item": {
          "id": "f4c65f0f-f918-4742-8171-bf14fe5e98a7",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4004d6e7-8c2c-40b9-ac27-20cac95a97d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c2ceace-2be7-4b67-ad88-14002ff8d97d",
        "cursor": {
          "ref": "26fab0fa-66c9-428a-9986-e1689eeee11e",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "1632171a-0a44-4293-94b9-4fee85f18bbf"
        },
        "item": {
          "id": "2c2ceace-2be7-4b67-ad88-14002ff8d97d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "518346d6-63f7-4fe8-bdd3-83b6ee51a43e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96699455-3273-498f-a172-0119a6897f30",
        "cursor": {
          "ref": "ba94b52e-aa9c-4290-a7dc-3c8b51a7e1e6",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "fe9ae589-b764-4e8e-926c-24fab258fcd2"
        },
        "item": {
          "id": "96699455-3273-498f-a172-0119a6897f30",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5cd0fcfe-ac38-4d5f-b9b3-807fa919d5e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "429f8243-7815-4daa-b7b9-4b07e33ba5e8",
        "cursor": {
          "ref": "b5af46a0-9bd8-48ed-bb42-81f2123fb167",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4df78190-2cb6-45e9-abd7-e11c580accbf"
        },
        "item": {
          "id": "429f8243-7815-4daa-b7b9-4b07e33ba5e8",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0580223f-9da4-466d-a77c-c21a989e9a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0dbb645-921b-4be9-8c37-55b05b4fda11",
        "cursor": {
          "ref": "5116d248-c92d-449d-ae37-a944d5bfdbe9",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e59890ca-9ea4-4f6b-bc25-d7bffb50d051"
        },
        "item": {
          "id": "a0dbb645-921b-4be9-8c37-55b05b4fda11",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "31bcdaab-d886-419b-876e-7617561e07ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b85935-7445-4c34-b6c6-323fd43d300a",
        "cursor": {
          "ref": "93e604ee-1be4-4fa8-82c8-dd6c965517f3",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "39600569-1c23-4083-9cb3-69d324671ae2"
        },
        "item": {
          "id": "e3b85935-7445-4c34-b6c6-323fd43d300a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "916c7159-7e33-43b7-a823-84e289e28daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04587de0-dea1-4505-bfa8-461b8c36026b",
        "cursor": {
          "ref": "3a938675-23be-4e11-8ea7-fb5d6e436841",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "8688c49c-cf7b-40db-9568-b9aeecc55380"
        },
        "item": {
          "id": "04587de0-dea1-4505-bfa8-461b8c36026b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "7ff3e291-179f-4b3a-b70a-fe37a2f1f3d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd33067-8304-4cda-ae7b-dc677a946193",
        "cursor": {
          "ref": "69b88d6d-9dd6-4887-9f60-c8f825c98d1b",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c055811a-3301-405f-95b8-ccd7aa465606"
        },
        "item": {
          "id": "ecd33067-8304-4cda-ae7b-dc677a946193",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "af783610-14df-46ab-b34c-a232071d24fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74590341-656e-4c26-ae4e-498ff7449b1e",
        "cursor": {
          "ref": "fbe8e816-66fe-4ce0-ab45-dca2a36cadf5",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "fb494add-02a9-4ff4-bfa0-6bef06731948"
        },
        "item": {
          "id": "74590341-656e-4c26-ae4e-498ff7449b1e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "55aee8b9-4a0b-49c0-8acb-46190bc7ff4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d23038-9751-4f40-b968-6b5ac1b6198a",
        "cursor": {
          "ref": "c2821c76-82ee-4c39-9305-d93645f14070",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "6735c671-27c9-4496-bad8-b23131e33885"
        },
        "item": {
          "id": "20d23038-9751-4f40-b968-6b5ac1b6198a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "2418e59e-325e-404e-a05a-6e37631bab0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "438529b3-823c-4128-9ac1-551dc9029e21",
        "cursor": {
          "ref": "edf3b4eb-f3b7-4f02-8954-b4155f3df11b",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "fe063c22-d6da-492c-9709-82bfc7978050"
        },
        "item": {
          "id": "438529b3-823c-4128-9ac1-551dc9029e21",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "00837caa-7cb0-44d6-b017-73adf48dd7f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b24b9ec-a53d-4848-a04e-31891bbb7561",
        "cursor": {
          "ref": "e9de2ee2-9786-4beb-a684-568931b5aa13",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "fce04986-eef3-4b9d-9830-56a672b6ce13"
        },
        "item": {
          "id": "9b24b9ec-a53d-4848-a04e-31891bbb7561",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d2237c95-6248-43ec-8eab-6a0a39c84e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206e8791-7d99-4c25-b18f-1fb39c9dc9ff",
        "cursor": {
          "ref": "7a8531a5-7363-494b-850c-125273c7bbbe",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "8c0dad37-49a0-46bd-a96f-07c1c8b81b8c"
        },
        "item": {
          "id": "206e8791-7d99-4c25-b18f-1fb39c9dc9ff",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "bb76474a-74f7-4a74-a945-8b39f5574dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c2b434-16d6-46dd-8abd-defa2e1637ec",
        "cursor": {
          "ref": "f5a88e09-c4f8-4da5-94cd-488763668d00",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3b0861d9-6449-408c-ac62-3ef97068e44d"
        },
        "item": {
          "id": "a8c2b434-16d6-46dd-8abd-defa2e1637ec",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "cb060280-76d7-430f-b8d0-5b0f687c78a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f27ca3-eeab-4e7e-8b55-185428415489",
        "cursor": {
          "ref": "3cd193db-7f6a-4497-a363-5a65295a971d",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "65d9938d-7f71-44ce-bea0-cddeca2b4687"
        },
        "item": {
          "id": "69f27ca3-eeab-4e7e-8b55-185428415489",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "7c2638a5-e169-4253-8cdf-fbb5d7bb7ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de4030b1-1e51-4e0e-95ea-13672e55fdec",
        "cursor": {
          "ref": "51f0b893-c9bb-4326-898a-1178a4d1a166",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "4dd52033-6dc9-46f8-ae52-a8f5ec7cc52f"
        },
        "item": {
          "id": "de4030b1-1e51-4e0e-95ea-13672e55fdec",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "131adfb6-216a-4a8c-b324-c9bb3d1bedf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbf9636a-0254-4eba-8ad4-e1877b6f19d2",
        "cursor": {
          "ref": "54b8153a-7abe-4a7a-bb1b-0ce28baf57ae",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c6ed7545-8b2e-455d-80a8-290b6b3aa03a"
        },
        "item": {
          "id": "cbf9636a-0254-4eba-8ad4-e1877b6f19d2",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "fb2bb360-7924-4702-b274-aa356f294745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36870abd-0bd0-473d-96f6-5889ab58bfba",
        "cursor": {
          "ref": "4a1fc356-e5ed-4b03-a4e3-826d49225fb7",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a0b26b7a-2155-4240-bd48-42a14fcc73e7"
        },
        "item": {
          "id": "36870abd-0bd0-473d-96f6-5889ab58bfba",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6c57cb86-511d-4bff-b632-532d81e25171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e7b248-56b0-4788-87d0-4ff9c22c7fdd",
        "cursor": {
          "ref": "4a30bead-244c-4695-a460-0c2a2d4a5555",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "4a9a5f37-2543-4f5c-9cbf-b86359057a66"
        },
        "item": {
          "id": "57e7b248-56b0-4788-87d0-4ff9c22c7fdd",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e0a9effc-ee90-43af-8ba1-d0536dd45f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a01ebc6-dba5-4cae-83fa-ee11478dee82",
        "cursor": {
          "ref": "12a14870-4d4e-4a77-8a99-fbac8ca123b6",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "23601462-6114-4acc-82d3-6adeb24cdd81"
        },
        "item": {
          "id": "2a01ebc6-dba5-4cae-83fa-ee11478dee82",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "9815f216-4464-48c4-9df5-cc3acdbb41ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbcaf47b-dacc-4963-a34d-de4809d482db",
        "cursor": {
          "ref": "03e2f420-553d-4bf6-87d6-a4bfcf5d134a",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "907d6f69-b16e-41eb-8faa-7e235ade1652"
        },
        "item": {
          "id": "fbcaf47b-dacc-4963-a34d-de4809d482db",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "9ea239f6-2aa1-4a03-8efb-995f0d4356fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6379ac-d185-4594-8d95-2296ee1f1850",
        "cursor": {
          "ref": "d4419360-a374-424c-9f0f-effc7b6d2914",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "966bf79c-be52-4b5a-a0f1-18759935a4a8"
        },
        "item": {
          "id": "dd6379ac-d185-4594-8d95-2296ee1f1850",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "32a6758e-3806-4f83-956f-396fe471c975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f21a33-bbd6-45bc-9e0d-57accfc5075d",
        "cursor": {
          "ref": "db0ec2ff-643e-4ff0-80c6-6111d258e882",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "2c09458f-07e6-4460-8085-e205b9b6c6ff"
        },
        "item": {
          "id": "28f21a33-bbd6-45bc-9e0d-57accfc5075d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7fb378e8-18f0-4f86-8da5-7bda21c813b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d777e260-5ce8-4f68-ba72-1eb82c40c283",
        "cursor": {
          "ref": "83c2a8b1-1677-450d-91a8-9e89123029ca",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "47ddc678-2250-4ed6-8efd-c3f04a8c29f2"
        },
        "item": {
          "id": "d777e260-5ce8-4f68-ba72-1eb82c40c283",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c1bc4320-c7e2-46ad-9428-edbe47582ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd43e43f-f020-4c6f-b19b-c988095f7222",
        "cursor": {
          "ref": "cf4834e4-25a9-4c47-ac32-4cfd2f4621fd",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "93a1bd37-92dd-498d-aef1-389c8c15f4ed"
        },
        "item": {
          "id": "dd43e43f-f020-4c6f-b19b-c988095f7222",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a680f9f9-c830-4b91-b853-86f576b5636f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d6fbfde-3a2c-4837-a94f-7820bfa7d5f3",
        "cursor": {
          "ref": "4d760516-eb05-454f-bf6c-e42e01fff8fe",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "66608c01-52fe-41e3-bf78-03002628ca1a"
        },
        "item": {
          "id": "7d6fbfde-3a2c-4837-a94f-7820bfa7d5f3",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "6191bdf8-29ac-4298-8387-05863972cd52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f0df36-9581-4947-9789-489ad4d67d79",
        "cursor": {
          "ref": "3edf41a3-934b-47b4-9e96-9d4d8e0b08dc",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "1a4447f4-9bf9-4f93-8118-ebe0fa1973bd"
        },
        "item": {
          "id": "a4f0df36-9581-4947-9789-489ad4d67d79",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "71fe4d70-0f44-4d0e-a7cc-e8a6ed3573ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50951ee6-a79b-45d3-a336-c55f8cb14ee5",
        "cursor": {
          "ref": "32bea519-96d6-458f-b4a1-2c4a1bf1bce3",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "58a7819c-5e9c-4bdd-8663-0cfddc4758ca"
        },
        "item": {
          "id": "50951ee6-a79b-45d3-a336-c55f8cb14ee5",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "031b0ad0-11f0-43d2-9c91-3d5e58d5629d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4ad68a-f5f2-4e1c-b5cf-740e19e6abe8",
        "cursor": {
          "ref": "c656506b-f3ff-4346-8885-7c94d174cfcc",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "8e4c224f-a29b-48c1-a9d8-fbb2922e739b"
        },
        "item": {
          "id": "ab4ad68a-f5f2-4e1c-b5cf-740e19e6abe8",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "7daff196-9f81-4b29-a6bc-9d1577e4f400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a871491-191c-41cb-8c0b-dde118cc6c95",
        "cursor": {
          "ref": "522454be-1b6f-4da7-8110-ea11e6b3f132",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "8f3d388d-1a20-4d05-bced-a1cfca9f3aaa"
        },
        "item": {
          "id": "3a871491-191c-41cb-8c0b-dde118cc6c95",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "94145e80-5cdd-414e-bb6e-6b5e02600f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d355ac19-9a5d-4837-99e2-a516890262e0",
        "cursor": {
          "ref": "9258b3af-7042-471c-ade2-e2acd01391aa",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "fb542678-d78e-4d93-abe0-0f84ae90df24"
        },
        "item": {
          "id": "d355ac19-9a5d-4837-99e2-a516890262e0",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "cb587375-9f59-4fab-bed3-0eb2da4ba260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a01bc419-94f1-416c-abff-23e13ef91760",
        "cursor": {
          "ref": "7a89d706-76ef-4bb2-a0d3-5a46f8562d77",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "35df20ad-025b-452b-9f68-9b9946767a6d"
        },
        "item": {
          "id": "a01bc419-94f1-416c-abff-23e13ef91760",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a22e8bbc-f9d7-482d-9b4f-f5abdddc46b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "882a5fc6-1bb9-4696-8da7-c9507f158ffe",
        "cursor": {
          "ref": "a0551735-3e6f-47a4-a051-51f976829bdb",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ba53d9ec-55c2-45d6-89fc-18eeb9c1990b"
        },
        "item": {
          "id": "882a5fc6-1bb9-4696-8da7-c9507f158ffe",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "099e1f1a-1dc6-43af-93bf-df340ea48ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "285d046b-73d7-4c75-9eb5-e1965156dbf7",
        "cursor": {
          "ref": "cfe188fd-ce55-404a-a6cb-2042302415f7",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e9afbc3a-c2ef-41f7-9dff-ada14587cab2"
        },
        "item": {
          "id": "285d046b-73d7-4c75-9eb5-e1965156dbf7",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "13963166-b427-4cf2-b370-cfe0ec5b1b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18056136-b405-4844-baca-2957dd6d52e8",
        "cursor": {
          "ref": "8e83969a-7356-452f-8d48-b3da3a83e7a0",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "78c6b15d-5216-475f-bb0e-1ad6f9c7604e"
        },
        "item": {
          "id": "18056136-b405-4844-baca-2957dd6d52e8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "9368aa33-d700-4293-bf38-99267f759095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06438bca-b671-4bd8-bc19-35a21226c85f",
        "cursor": {
          "ref": "04228321-9c63-4ca9-9b55-c2f1850734cd",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c8bf59be-e1b2-40c8-9c17-994ee5808961"
        },
        "item": {
          "id": "06438bca-b671-4bd8-bc19-35a21226c85f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "39552f5d-5d22-44bd-a1b9-6cfb1beb7cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "603031bc-52c4-47c9-a411-7fb886c80a91",
        "cursor": {
          "ref": "a052d6f3-76dd-473e-b708-dd422e22635c",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "9966db7f-ac66-4f1c-8a0e-244927173118"
        },
        "item": {
          "id": "603031bc-52c4-47c9-a411-7fb886c80a91",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "aa7f65a4-258e-434c-b915-7853dd08787c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e7e809-6118-4689-a049-ec2f6e530e62",
        "cursor": {
          "ref": "27f6cb4d-df90-44f4-9dc8-19f43036cfbd",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d22e3aef-993d-4166-bed4-59c96bea3b6a"
        },
        "item": {
          "id": "94e7e809-6118-4689-a049-ec2f6e530e62",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "fea1ede9-f9af-4d5d-8d02-c1d267611f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445cc404-bd57-4233-90c2-c5ae9a8d491d",
        "cursor": {
          "ref": "58b15974-bf6e-442c-8870-b46b6d1e7509",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "fe23710d-5873-45dd-8db4-6db78f9415c4"
        },
        "item": {
          "id": "445cc404-bd57-4233-90c2-c5ae9a8d491d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7352caa4-2737-4f14-9641-2b00d4650f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28968f9e-b02a-450f-9ffc-e06b59945d31",
        "cursor": {
          "ref": "9714c6e5-2291-4aeb-a5ce-3434b1637dc9",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ecf0c8fa-864d-407b-8a71-ecd1a10e0ac6"
        },
        "item": {
          "id": "28968f9e-b02a-450f-9ffc-e06b59945d31",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "4e7ce586-3085-49c7-b6fd-7301ce4e0596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a89aed-7575-4b91-aebc-1e421920573b",
        "cursor": {
          "ref": "76bb75b8-7384-4ae5-91ba-0eafeea79d97",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "abfeb0f3-3bdf-41f9-9711-5aa3eb5fd8ec"
        },
        "item": {
          "id": "44a89aed-7575-4b91-aebc-1e421920573b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b65730e3-26ee-4991-8d1d-b2b6623e9c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c6dc78d-e023-4888-a7da-68bd67352a1a",
        "cursor": {
          "ref": "c1f514b3-edaf-47b0-81b5-35ce8cfdd0f5",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e797c005-c044-4226-b909-64876c9a5911"
        },
        "item": {
          "id": "5c6dc78d-e023-4888-a7da-68bd67352a1a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ca509058-0d76-4424-9f71-9268dd12dda6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf8be178-4390-4dde-b9d1-1bd73bac1466",
        "cursor": {
          "ref": "c2ab8fc1-e191-4cbd-820c-6a03f04142d2",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "dbaa02bb-8a64-4577-a63d-88d22196ac8c"
        },
        "item": {
          "id": "bf8be178-4390-4dde-b9d1-1bd73bac1466",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "be516923-9453-439c-bcf5-65cbe5f40a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdafc1b0-4ff4-4932-9941-61bd9f63dfab",
        "cursor": {
          "ref": "2516d54d-169a-4385-a645-60f7335cdc36",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7dc6b3e9-7b72-44e4-9952-553961f6591a"
        },
        "item": {
          "id": "fdafc1b0-4ff4-4932-9941-61bd9f63dfab",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "1b3192f8-9fb4-4cb5-ba8c-37b5b01474f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e8f439d-40e0-4280-b88e-9aa0648d27ed",
        "cursor": {
          "ref": "15a01e94-c17c-4a46-9304-7e44bc9ac416",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ec15e045-2301-4a24-818e-e46966156a8b"
        },
        "item": {
          "id": "2e8f439d-40e0-4280-b88e-9aa0648d27ed",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "21f0c44f-484b-4940-a8ea-b20b3eb80020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e819600-7aa2-4792-aa3c-89245dc7083c",
        "cursor": {
          "ref": "b1fd8e34-3adc-4156-81a6-f1674374843e",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "fd90c87c-44d7-4af4-bcca-78346122c51b"
        },
        "item": {
          "id": "6e819600-7aa2-4792-aa3c-89245dc7083c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "dfd79264-d290-46fb-8185-a427dac6e7a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e44126f1-192e-460f-a6b3-702085bd6fb6",
        "cursor": {
          "ref": "ce8ac0fb-0168-4e15-a3a4-f92928fab6fb",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "e190e50d-9a1c-446f-b621-82b9c23c0207"
        },
        "item": {
          "id": "e44126f1-192e-460f-a6b3-702085bd6fb6",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "7de5ee96-b58d-4d11-9a2c-879a56d8a593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43d8764-680b-4c82-afb4-5180893ab186",
        "cursor": {
          "ref": "5fa28dc8-d342-46fa-ac88-1889ba6641a9",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c256442c-c295-4b85-bd8f-7edd148dfd88"
        },
        "item": {
          "id": "b43d8764-680b-4c82-afb4-5180893ab186",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b05f15ba-bb83-438f-9b62-114667a4934a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff0db982-3f72-4a68-8144-4301ede3809c",
        "cursor": {
          "ref": "3af44701-15ad-47b1-8423-fd9877d13f48",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "88552202-3e6f-402e-9e5c-477aae20953c"
        },
        "item": {
          "id": "ff0db982-3f72-4a68-8144-4301ede3809c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ac606be3-3923-4d97-978b-c406bb18063c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb2903e6-506b-45f0-90ff-bf3c3ce705b0",
        "cursor": {
          "ref": "0999432e-1b92-4371-963e-a7b25cc551c1",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a3fe96ec-bc78-476d-8771-48ef9cce6d91"
        },
        "item": {
          "id": "bb2903e6-506b-45f0-90ff-bf3c3ce705b0",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "07438e49-9499-46da-888d-1145b8b8347c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f43a318-08a7-42e7-9105-d199faed45d1",
        "cursor": {
          "ref": "54aa53f5-779a-46dd-ad48-5c0e9062d4d7",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "37c26a21-9f35-406b-b1b5-a1dde3186f52"
        },
        "item": {
          "id": "7f43a318-08a7-42e7-9105-d199faed45d1",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e290adf2-05a5-4e50-909a-038ce19f5386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe1e8c9-98fa-46ed-a1f1-093c3b8b0d91",
        "cursor": {
          "ref": "186c3012-62df-48d4-b29e-6996fcccdac1",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0d80a6d2-8c3a-422b-bc3e-dce2b34fcf7b"
        },
        "item": {
          "id": "0fe1e8c9-98fa-46ed-a1f1-093c3b8b0d91",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "40d25e23-af90-4da0-8573-a6e2a2644fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e5ff7c8-e943-44e3-a837-565b48cbf40f",
        "cursor": {
          "ref": "90b5846e-392c-44a4-857f-47a59f48482c",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "f48d6bd4-48e7-4a49-a969-57baaed3816d"
        },
        "item": {
          "id": "0e5ff7c8-e943-44e3-a837-565b48cbf40f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "68f70e7c-f43f-411f-a33e-7cc3b52bb9e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567548db-1662-44b2-9598-9b31c32989fe",
        "cursor": {
          "ref": "48563173-7e9c-4371-8305-ba67ca476853",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "7dfd8bef-2da6-43a0-9223-07ab9080e455"
        },
        "item": {
          "id": "567548db-1662-44b2-9598-9b31c32989fe",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "156a499b-aff9-4b28-a00c-7e1fbea9929b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f3e2da2-0c7d-4529-b8e7-4dea8a45049e",
        "cursor": {
          "ref": "a49d9bb0-ffb0-432d-9878-74fba3603926",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "bf177a75-bef8-475a-9024-91bb9cf184f7"
        },
        "item": {
          "id": "0f3e2da2-0c7d-4529-b8e7-4dea8a45049e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d8e987be-f578-46d0-9f11-4a434cdfe0a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "805883e9-6228-4898-a1cc-b8d3eaba89b0",
        "cursor": {
          "ref": "4fb364eb-0d09-40d2-8208-89c72e4e8f9b",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ec2fae5c-cd46-478b-8b20-0e1b5c0df936"
        },
        "item": {
          "id": "805883e9-6228-4898-a1cc-b8d3eaba89b0",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "27a168d3-e0a2-4bf8-9b20-16c375ba29a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad4e4104-4f08-4a59-848f-6993941b066e",
        "cursor": {
          "ref": "805243a6-aa83-4730-8598-4ec121eddd4a",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "002caff4-292e-4afc-bdae-029c08b1a909"
        },
        "item": {
          "id": "ad4e4104-4f08-4a59-848f-6993941b066e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a33287f2-1b57-472f-a7eb-aa6417329db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "545c5845-f558-4b7e-bbad-8d001967ac48",
        "cursor": {
          "ref": "9bd8de9a-a621-4bb6-8b55-e747cef7ab93",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "23b6366e-0cc2-42dd-b622-89de7f5ad596"
        },
        "item": {
          "id": "545c5845-f558-4b7e-bbad-8d001967ac48",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3e662e62-f12f-494c-849a-260706a08be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d8c0b2a-39ca-46c3-a66d-a70e02025d4a",
        "cursor": {
          "ref": "02e5f932-d9af-4b91-b5ea-f53b95e52c45",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "8854c70d-fcc3-4539-9a10-7843846bedf3"
        },
        "item": {
          "id": "5d8c0b2a-39ca-46c3-a66d-a70e02025d4a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3845f9e5-f785-497d-bc6a-59bc8cc8c5e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a765bb71-4704-462e-8f79-97871346ecfc",
        "cursor": {
          "ref": "8d55dde5-55a9-433a-a0f5-ec374d833fe2",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "da8faae3-f843-4b0a-87c7-56b9625d6039"
        },
        "item": {
          "id": "a765bb71-4704-462e-8f79-97871346ecfc",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "cccb08f3-1f1a-4337-a49e-44f78827b23f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c26060c-e8b8-4583-87a6-6894576efecc",
        "cursor": {
          "ref": "797eb751-0be3-4c65-8940-102f86dadd86",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "fa213718-41a1-40c4-8064-822f2d28b514"
        },
        "item": {
          "id": "9c26060c-e8b8-4583-87a6-6894576efecc",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d4ce98d2-47e1-47a1-a119-351024dde684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779c58af-3231-4771-bcde-b66bb9847ac0",
        "cursor": {
          "ref": "61563504-409a-4c0b-bd11-6efb9bc0ad48",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "924e01c7-4325-4474-b298-2eb5641a547a"
        },
        "item": {
          "id": "779c58af-3231-4771-bcde-b66bb9847ac0",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "5b62efc4-c3e7-44d1-9836-0d83280e7d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04dab828-ae2e-4749-9954-4c99cce3adb8",
        "cursor": {
          "ref": "bfafc8ff-512c-4dad-a2ca-939d41c1398f",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8e75af67-8c4a-4362-9001-d3475aa06307"
        },
        "item": {
          "id": "04dab828-ae2e-4749-9954-4c99cce3adb8",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "9a8855da-7fbb-4c42-9753-b6ab0097b413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a5485d2-a8df-4063-b7b9-3a773ed22d9e",
        "cursor": {
          "ref": "1c808648-21a9-4ab6-9367-e8ce7222bb33",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1ff1d109-369d-466b-813b-9232cef430b8"
        },
        "item": {
          "id": "3a5485d2-a8df-4063-b7b9-3a773ed22d9e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "f041721e-275d-4801-ae48-e933ab65a50d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc8ff99-8127-48e0-a30f-524eeac7e322",
        "cursor": {
          "ref": "f0b2dfed-d33f-4379-a72b-78ab7a06ff83",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2de99acb-c605-4b43-9b58-5a5985aa8294"
        },
        "item": {
          "id": "1bc8ff99-8127-48e0-a30f-524eeac7e322",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a8ad1d2a-9533-49bd-a022-f3d79704448a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84847132-6e1f-47e8-82af-0ff1fd6c48dc",
        "cursor": {
          "ref": "d0a596b0-0753-414f-a565-135eff52b62f",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "34133d7f-3fdd-4415-a2fc-cfc18fde91e0"
        },
        "item": {
          "id": "84847132-6e1f-47e8-82af-0ff1fd6c48dc",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "32da6760-4c00-4f69-97c1-8c230d95d1ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d69bef2-2593-4511-b084-c5211673c002",
        "cursor": {
          "ref": "5db5b094-ffca-456b-ab89-b7302584df90",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1b46f45d-7fb9-4d6a-93a5-c2ab3306ee63"
        },
        "item": {
          "id": "6d69bef2-2593-4511-b084-c5211673c002",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9f311df4-2191-47e9-b5bf-26d6f03fb7a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1cd2b3-e592-4872-b6e8-0ff45fe11cc8",
        "cursor": {
          "ref": "44383cff-8246-4c4f-a5be-380fa6c521d5",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "372ebb33-391e-4c64-929a-a73e7835419f"
        },
        "item": {
          "id": "0f1cd2b3-e592-4872-b6e8-0ff45fe11cc8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "438e0355-1ab4-4a0b-b5b7-d7bb5ccb5548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "964bec07-3ef0-4c2e-b516-e4d5448eb731",
        "cursor": {
          "ref": "df44ed8b-9793-485c-999d-3b5115ae08d9",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "dfc54be2-dee1-41f5-a453-e648ff2f7576"
        },
        "item": {
          "id": "964bec07-3ef0-4c2e-b516-e4d5448eb731",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d0504ef4-e114-40d9-8289-794499371401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cbc8318-b785-413b-890f-033d77d68349",
        "cursor": {
          "ref": "f703496b-818d-4f4d-8dfa-5520e30c7438",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "bef299a1-7c88-4f1c-b659-5b2bb1bbde69"
        },
        "item": {
          "id": "5cbc8318-b785-413b-890f-033d77d68349",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b87482eb-19f3-4659-b134-3c5ff0e0a1e7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae2b04f-6d00-4b88-9f69-f3726706f05a",
        "cursor": {
          "ref": "a8b3feb8-54cb-4ae9-8405-2a57a1e28286",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "bc859d76-3a8f-49b4-895c-5929e3397826"
        },
        "item": {
          "id": "1ae2b04f-6d00-4b88-9f69-f3726706f05a",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "6ec6e24e-816a-43e8-8cf1-147360f53da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "2d731f77-70a4-41a4-acbc-d1c28e7867da",
        "cursor": {
          "ref": "dc1202bc-b39a-4c6a-92ba-7d4716de5108",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9b98d74b-caa3-48dc-b33d-2755c83419ab"
        },
        "item": {
          "id": "2d731f77-70a4-41a4-acbc-d1c28e7867da",
          "name": "credentials_issue"
        },
        "response": {
          "id": "7e74e3f0-d38e-474e-a300-bd8829be5c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "434e4fcb-629d-42ca-9770-ca56e8606799",
        "cursor": {
          "ref": "34bd589c-f386-4eda-8b9b-ad93946f265c",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ca56f680-e45e-44e3-9cc2-3a623c775eda"
        },
        "item": {
          "id": "434e4fcb-629d-42ca-9770-ca56e8606799",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f977189c-412c-4e73-a383-78f3f9c63e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "6e437666-b095-4d79-aaba-cd4b0a5bd15d",
        "cursor": {
          "ref": "1b7a03cd-3acd-4a8d-9331-3a067b5d1285",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "bf2d972b-4a80-4808-a99b-ec733bd61287"
        },
        "item": {
          "id": "6e437666-b095-4d79-aaba-cd4b0a5bd15d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "31d42ee6-fd57-45a5-99de-6753e826e293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "422dc7ed-d45a-4e7d-8a79-f8bc18b677ed",
        "cursor": {
          "ref": "485ad3df-d66e-4d3c-bf6e-a1288c15ac63",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d55cf8cb-6fc6-493f-a7f4-984cf0d9e553"
        },
        "item": {
          "id": "422dc7ed-d45a-4e7d-8a79-f8bc18b677ed",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "fcbc0d82-4416-4658-92f7-2c7697ae1a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "7e308059-7bc2-41ea-a70d-5a084f26647e",
        "cursor": {
          "ref": "0029ee8e-7e5a-4416-bd4e-1f3ee49f8326",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "cbafd576-d3a6-464e-8811-344b48795b1e"
        },
        "item": {
          "id": "7e308059-7bc2-41ea-a70d-5a084f26647e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c3f397d1-bd2e-4f1d-9e70-4340d9a2bbe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "0404cdea-2116-4568-8438-b27b5b6581ce",
        "cursor": {
          "ref": "06ce7993-8275-461f-b795-ee7110521234",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d3d217e6-c3c2-4696-885e-29028cf3aada"
        },
        "item": {
          "id": "0404cdea-2116-4568-8438-b27b5b6581ce",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4a54b736-b8f8-4cd3-83e1-bd52f4f91279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "8fe1a0b4-d37f-41ed-87f2-771b3231e17d",
        "cursor": {
          "ref": "f34a9f0d-c51b-4937-90db-745c8ea59def",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "90c931d0-b6c6-44e4-a69e-f906fd1a00e5"
        },
        "item": {
          "id": "8fe1a0b4-d37f-41ed-87f2-771b3231e17d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "174cdab9-7170-42c2-830e-dedcfd62bc37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b0abd7-f59c-4d40-91de-335a3e9a2ccf",
        "cursor": {
          "ref": "f90fe3ce-02bb-4ac8-b81c-7f0e69fe6c9e",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "53e5b37a-127c-45f2-b1a2-75a9d0eb82ce"
        },
        "item": {
          "id": "f1b0abd7-f59c-4d40-91de-335a3e9a2ccf",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "aba18479-fec5-4eeb-8acc-ea57e1a81d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ef01aa-bd86-4135-abe5-1d3ee5420f7a",
        "cursor": {
          "ref": "cfcff706-4598-42b0-b7bc-5d2df6f87399",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "9307e178-05be-4d73-bd8b-320101c27e10"
        },
        "item": {
          "id": "20ef01aa-bd86-4135-abe5-1d3ee5420f7a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "155cc9aa-9a7e-4c96-8ad4-7e529b1cc31b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "045ecb1d-41e3-40c2-969e-1ee528d44adb",
        "cursor": {
          "ref": "be3b6650-1ca5-4404-a94c-049803a43521",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "0fc3baa8-e513-4268-95f0-d01b256846f5"
        },
        "item": {
          "id": "045ecb1d-41e3-40c2-969e-1ee528d44adb",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9755f647-2dfe-449d-a6e0-3c2fe4b646da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ccd820c-02ac-4d2c-9a2b-51b1832df558",
        "cursor": {
          "ref": "f0bd07e4-a67c-4ce6-ba67-8d3d42f87d7d",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "941a7b20-1e5a-407f-a580-031f210f9b5b"
        },
        "item": {
          "id": "8ccd820c-02ac-4d2c-9a2b-51b1832df558",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "278b70e3-baf3-423d-a033-b66c406c8bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c35901-7c62-4936-9e8b-9399540244cf",
        "cursor": {
          "ref": "238bdcc7-6e47-4a1e-80d2-0baadcaf9354",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ccda97fa-8df4-47aa-be94-542b1e2d59e8"
        },
        "item": {
          "id": "27c35901-7c62-4936-9e8b-9399540244cf",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ded0eec6-2f9b-4ab9-bba9-e3f979ac6a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b2bd2b-6da7-4198-b116-96e9f853ae63",
        "cursor": {
          "ref": "3f14ede7-14b6-4bca-8e7f-b3c032f6bb1f",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1a7fbe56-9c32-477a-a1b6-a71c86036ac3"
        },
        "item": {
          "id": "33b2bd2b-6da7-4198-b116-96e9f853ae63",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1c11da4c-9df4-439a-b423-69461deaf414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46bf9a5e-2194-4096-92db-873b0f939541",
        "cursor": {
          "ref": "33735997-dfa1-4fab-bf29-927ba29ba2cc",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c284c797-8210-4684-bbfb-71cadaa7cf08"
        },
        "item": {
          "id": "46bf9a5e-2194-4096-92db-873b0f939541",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2914ea4e-7820-447b-a850-984d43d3d01c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c800794-7046-4762-9f14-92131ba7fefc",
        "cursor": {
          "ref": "158b6a85-4d37-4382-b79c-074acb4b19c9",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "713d8a0f-af2c-4a27-9925-eb2f2945beb8"
        },
        "item": {
          "id": "9c800794-7046-4762-9f14-92131ba7fefc",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "86752c25-8f80-47f9-be10-4312ff0ede4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08616ae8-7648-4398-a67a-aaa64d0b534e",
        "cursor": {
          "ref": "26287ace-8b33-4091-a961-f9d83bb2d346",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "aa7ca856-413d-439e-a188-cc1e3f8b3a90"
        },
        "item": {
          "id": "08616ae8-7648-4398-a67a-aaa64d0b534e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3d00a6ec-dc10-43aa-9100-fd16b6f04aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7868ff98-25a5-4229-b3f5-56db521eeaff",
        "cursor": {
          "ref": "cd2fc4d6-d4b6-4185-9fd0-1472bb17ee7e",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "752ccf4e-41d3-49d0-bccd-b87e5d5e2951"
        },
        "item": {
          "id": "7868ff98-25a5-4229-b3f5-56db521eeaff",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2ee8c5c3-134f-4225-9b26-e60af81c8107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e539c60c-fb3b-4aac-962a-e413b1a6dff1",
        "cursor": {
          "ref": "a369d028-5bad-483c-83e8-22803fdc7f1e",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a8b78652-79fb-42fb-9011-bbe61cb7a9e7"
        },
        "item": {
          "id": "e539c60c-fb3b-4aac-962a-e413b1a6dff1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ea487bcd-860e-41a6-92d9-25b451cbfaaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fccfc85-6d61-4510-a764-e59fb6efa4d9",
        "cursor": {
          "ref": "702f5ce4-3dfa-43f4-a37c-95fc4389b602",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "47166def-045b-4c42-90c5-d6e554f2fe9b"
        },
        "item": {
          "id": "2fccfc85-6d61-4510-a764-e59fb6efa4d9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6b30a3c2-7b91-46bf-9ffc-9f36ca7a5415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b743bf5-bdfc-4cba-8f41-9292d8be2d71",
        "cursor": {
          "ref": "7fa11798-fa56-48f4-8227-b186d167e122",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "134dff05-a156-4d99-b6cc-6b98159fedba"
        },
        "item": {
          "id": "2b743bf5-bdfc-4cba-8f41-9292d8be2d71",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b58159c9-8a46-429c-a347-f7c5cf57f510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f1e76e-46e0-48e8-b84c-828f6ca16c34",
        "cursor": {
          "ref": "a09bdfbe-c235-4fa6-935e-f72541b14cd0",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "86592e06-7589-475f-844b-d3d2c3001345"
        },
        "item": {
          "id": "80f1e76e-46e0-48e8-b84c-828f6ca16c34",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2d99670e-a5ef-4d14-a69f-1039841fe710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea184f84-04d8-4c8d-b5e7-da222c9c06be",
        "cursor": {
          "ref": "7b8c270a-6e72-4846-a87f-885c79338130",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "29bc18c1-0e68-4648-a91b-30da5881da56"
        },
        "item": {
          "id": "ea184f84-04d8-4c8d-b5e7-da222c9c06be",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "efd03890-91aa-4fef-bedc-437b2ce30ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e986de5-f0ed-4589-83ff-661a937820b0",
        "cursor": {
          "ref": "002420da-609d-4a9c-910a-0488a6bd0a46",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ca5fe3e1-1973-48e8-84d2-6bb4aa916627"
        },
        "item": {
          "id": "0e986de5-f0ed-4589-83ff-661a937820b0",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "04df421d-9501-4aca-849c-ba6186590986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfdd0155-6f7e-4d88-bbe1-0b19475dd913",
        "cursor": {
          "ref": "90c695eb-09d7-46ea-8cf6-4167fd341bf7",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "bbc7ce56-ab17-4daf-b5c7-9ee19ff50781"
        },
        "item": {
          "id": "cfdd0155-6f7e-4d88-bbe1-0b19475dd913",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0048809d-4a63-4d4d-92f8-6e543b6090e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8d9848-2e6e-4830-b472-2f91880dfff0",
        "cursor": {
          "ref": "e541c938-33f5-4bf5-ad42-2d91d9e60ef5",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "e43188c1-63c9-4af0-8156-4a143d34869b"
        },
        "item": {
          "id": "0c8d9848-2e6e-4830-b472-2f91880dfff0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "54a3fb83-f3b0-42de-ba18-6e2a6fe97e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc79d8c9-dcdd-4ab3-9e16-1b61acfc073c",
        "cursor": {
          "ref": "723bee72-868c-4457-a374-619add501ea3",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e25bd81b-9daa-469d-a953-8e631b443120"
        },
        "item": {
          "id": "fc79d8c9-dcdd-4ab3-9e16-1b61acfc073c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5633ea8d-66d4-4176-afd5-0c78b48c891c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8d6b64-10a5-446d-8ce0-923b7fec0b0e",
        "cursor": {
          "ref": "61aa2ca0-e98c-48fd-8ce0-b1ab72c4d162",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a71b1458-4fb1-484c-8faf-404b36918e3b"
        },
        "item": {
          "id": "ba8d6b64-10a5-446d-8ce0-923b7fec0b0e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f91f76aa-c622-4f31-af44-8e00492fe5e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce20d2c8-b2ef-4e1c-81ac-15a799cbfe21",
        "cursor": {
          "ref": "715cf5dd-cd2f-4a97-8f61-b4d3054e76b8",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "ecb667a6-04a2-4912-8a9a-8ab6dc698a9c"
        },
        "item": {
          "id": "ce20d2c8-b2ef-4e1c-81ac-15a799cbfe21",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9e63cc42-2a35-4a93-a537-e6c219e48b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46fd15c-b5a9-45b0-820d-769e70ef4f94",
        "cursor": {
          "ref": "ba1a55ab-ce17-45d7-b1a0-36519fe20b1b",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "620542d1-4821-4a49-8df3-b080dc184ef6"
        },
        "item": {
          "id": "e46fd15c-b5a9-45b0-820d-769e70ef4f94",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a4690608-1336-4474-bea8-1c65695ce2d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc381b4e-b515-4ecb-9bea-67ce6573b277",
        "cursor": {
          "ref": "11a65f68-e1f8-4b64-b4ef-8b765049fa99",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4e61ac15-fd89-41d3-8e8e-1f71a5788c73"
        },
        "item": {
          "id": "bc381b4e-b515-4ecb-9bea-67ce6573b277",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "42af1756-bd5a-4f12-b5dd-70a4a62b1d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b64eb85-be58-461a-8fd1-5cb528aab781",
        "cursor": {
          "ref": "19202c5e-cfba-4c25-a57c-6285294eaf18",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "58e72fb9-f1aa-4177-92ec-826efb1d122e"
        },
        "item": {
          "id": "0b64eb85-be58-461a-8fd1-5cb528aab781",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d013bf7e-3a0d-4443-af91-60cf9c5b1069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d987bf-11b2-4f8b-b721-3710f39d5c26",
        "cursor": {
          "ref": "4f68cfbb-a5ef-4b59-a648-0932dea266cc",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ff9da8db-0b77-43e5-bf6c-e93f61152ed9"
        },
        "item": {
          "id": "32d987bf-11b2-4f8b-b721-3710f39d5c26",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a354d406-0d4b-47e9-baba-b0762d108337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886c5cf7-6019-4796-89ab-fac0e0a0a085",
        "cursor": {
          "ref": "5d21516f-1207-4bb1-a7c8-f23f6157666d",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4e886d9b-09c6-4891-a587-32ccecb26e7c"
        },
        "item": {
          "id": "886c5cf7-6019-4796-89ab-fac0e0a0a085",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e026c1af-cca9-4ff4-9226-b61a55823527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "692db456-f1b5-4b34-a702-a26b7d369229",
        "cursor": {
          "ref": "56f3f774-37c0-40fc-a6de-b1c8b92e858a",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d4bc6652-926c-43e7-83f2-879784e31cfe"
        },
        "item": {
          "id": "692db456-f1b5-4b34-a702-a26b7d369229",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "92155439-9eb0-4457-b147-727ee9bd9bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9c9a1e-04e9-445b-9755-283c976c8515",
        "cursor": {
          "ref": "1ffb4199-3541-4772-8f87-d651b1a231fa",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9bea4294-c3f4-4caf-ada0-c8d723b29f55"
        },
        "item": {
          "id": "0b9c9a1e-04e9-445b-9755-283c976c8515",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c7fd7442-6ac5-4fa0-8f53-758185f64fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8849887-d232-4168-89ee-18ecd4d98866",
        "cursor": {
          "ref": "2a7f67e9-d32d-4737-836b-772426eb3ae0",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6d9f8e94-b007-4c9f-8a1e-79b9a36bc55d"
        },
        "item": {
          "id": "d8849887-d232-4168-89ee-18ecd4d98866",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b5c13909-5333-4c7d-928c-f0724186950c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c056a7-9bdc-47b5-a3dc-1201c9d7fbe2",
        "cursor": {
          "ref": "e822d0c0-4c41-40e5-b89a-5ffa7c60e2f1",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c570a728-c09b-4dd2-802d-9eec66f2a44f"
        },
        "item": {
          "id": "44c056a7-9bdc-47b5-a3dc-1201c9d7fbe2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b97e8efe-f356-401d-ba7a-e9cb8a930c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c2ef81-382d-4945-9316-dfafab578cb1",
        "cursor": {
          "ref": "837da01c-c9b2-4dfb-ad14-c4f9660f1a2e",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "92deb34e-3ad8-406d-aeaa-d53cb5a6b2b7"
        },
        "item": {
          "id": "d1c2ef81-382d-4945-9316-dfafab578cb1",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "3bcfff5f-f568-4401-984f-b4087446c026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cdd85da-11ba-4cfd-9455-123c504fb093",
        "cursor": {
          "ref": "e45f9450-2499-40b2-b9de-923a702adcb3",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "2600b53f-6322-4557-b446-f4f5b9c8b6df"
        },
        "item": {
          "id": "4cdd85da-11ba-4cfd-9455-123c504fb093",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e0a78dcf-b30e-4206-afe8-5e23ce2be0b5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a95a40c0-e49a-4c43-a8a1-c2c142a88750",
        "cursor": {
          "ref": "79efc9a4-d883-430b-889c-b06725bad018",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4e6f4c0b-ede8-44c6-8e69-a7daa101fdf2"
        },
        "item": {
          "id": "a95a40c0-e49a-4c43-a8a1-c2c142a88750",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7bb6318c-819c-48b3-a2ae-a102b7491983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe0d978-6700-4d7d-9cad-d8cbe2281579",
        "cursor": {
          "ref": "097eeb2c-2ba8-4e23-abf6-6a3f91ce09d6",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f79e7b8c-71ba-405e-bdaf-0d40d12bd64e"
        },
        "item": {
          "id": "dbe0d978-6700-4d7d-9cad-d8cbe2281579",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "cb21ac88-2673-4ae5-a725-7ae00b8cfc88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a62bab-0316-4825-961d-5a40cf95dd02",
        "cursor": {
          "ref": "6572d8ac-14d6-4d75-848c-f6a30db14cbb",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "de564059-c1e8-49ca-81a1-30e35c45c243"
        },
        "item": {
          "id": "54a62bab-0316-4825-961d-5a40cf95dd02",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5b85952b-af6f-4dbd-aeb9-077cd91d5b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465e5b19-017f-4836-b0ca-3098f9a58a28",
        "cursor": {
          "ref": "2f5bf0de-bd35-4f14-886d-2d6bb359dad9",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "74ae776a-b777-4ce5-a595-8ec8e6e83e44"
        },
        "item": {
          "id": "465e5b19-017f-4836-b0ca-3098f9a58a28",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c19ff070-14b1-4813-b1b0-44d8029bc6ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2e21cf6-728b-425f-a7fd-9adabce562c0",
        "cursor": {
          "ref": "3f119595-428f-49c8-b870-3313468ecefe",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0369387c-cde6-41ee-97da-349ade93804f"
        },
        "item": {
          "id": "f2e21cf6-728b-425f-a7fd-9adabce562c0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e59e5006-155a-4809-ac11-ccc0c84433f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aec2f2f-564b-4941-931a-451900e4f76a",
        "cursor": {
          "ref": "1ba1baad-321a-49d9-8871-09350f8193aa",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "456be8bf-a755-4b1f-baa9-934a626bc30e"
        },
        "item": {
          "id": "5aec2f2f-564b-4941-931a-451900e4f76a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8ee374ee-9dba-4f26-bcf8-cfca16e1c360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af2ad925-ef88-470c-b51c-656849cfe74d",
        "cursor": {
          "ref": "daa13dcc-fd10-4291-af91-6ad6f990b6f8",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "95fe4c33-0508-45d6-96e1-0462a2548069"
        },
        "item": {
          "id": "af2ad925-ef88-470c-b51c-656849cfe74d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "fe9483c5-922f-461b-99c4-e0045c0866da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87450f1f-aefa-4aae-8e63-322262ff6675",
        "cursor": {
          "ref": "78cd01f9-9aa4-491e-9cbf-d93ff68db7a9",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "2e46bf13-cede-4ee2-b4c3-c6afeca513ed"
        },
        "item": {
          "id": "87450f1f-aefa-4aae-8e63-322262ff6675",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5c3762b2-9f74-4da0-9662-3828fefb8411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc11b421-741f-4c4c-8f79-9c4a513eaa56",
        "cursor": {
          "ref": "80d165d4-d758-48b6-9fdf-bd028c7e4638",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0a58a0ea-159f-4f8f-a1d2-1c8b2e43e1d1"
        },
        "item": {
          "id": "fc11b421-741f-4c4c-8f79-9c4a513eaa56",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3a920d09-a89c-4525-b2fc-996bb1d3903e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d82f2e7-c546-49b4-ae0b-a29ae6ac2c3e",
        "cursor": {
          "ref": "a4bbe878-ab07-490d-a8f9-b145b29fb1d6",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "9985890d-d6b8-476a-a1eb-0cbf67e13542"
        },
        "item": {
          "id": "2d82f2e7-c546-49b4-ae0b-a29ae6ac2c3e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c7b4eaa1-dc24-472b-b5df-31bdf54fa727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbaa1aff-1d6a-4a54-a084-3fbd006a5c3d",
        "cursor": {
          "ref": "7fcf9dce-0071-4a20-8eb4-058d289aa841",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "0b81d283-0c11-40d1-82bf-8dee82beacdf"
        },
        "item": {
          "id": "dbaa1aff-1d6a-4a54-a084-3fbd006a5c3d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "16a5e495-b7fe-451b-8aaf-5a40d0744186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd0185a-c721-45f5-b68d-4c6e9d83df74",
        "cursor": {
          "ref": "f17a2fa4-225b-4a79-a9c7-e13d3ed24bca",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "779089d3-8785-4677-94bf-af307ad4db60"
        },
        "item": {
          "id": "2fd0185a-c721-45f5-b68d-4c6e9d83df74",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5c553f7b-54ce-45ca-af0a-9f784d120d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb40e42-9947-4412-9041-1c92709cab8a",
        "cursor": {
          "ref": "9c4c9d43-ebe9-404b-a9b5-d96ad8f9b303",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "15a74c13-bb4b-42df-9f1a-16848e25b5b1"
        },
        "item": {
          "id": "edb40e42-9947-4412-9041-1c92709cab8a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d1e122b0-b864-4b9a-ab99-638854026129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "968b8b48-c02e-42a8-bd06-f97c37e704e1",
        "cursor": {
          "ref": "b85ae737-e5d8-46d2-ac0e-749efab0a5a4",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "543382b7-0ccf-450d-9453-4d6b4a583356"
        },
        "item": {
          "id": "968b8b48-c02e-42a8-bd06-f97c37e704e1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "916c3f8a-24bf-40d9-805e-723bd8610aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d4b965-54d1-4869-b10d-c92b86934940",
        "cursor": {
          "ref": "d2c2fcc2-45d4-4aac-8fab-3dff315062da",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a6efc2dc-dc21-4b0a-b504-270982299282"
        },
        "item": {
          "id": "59d4b965-54d1-4869-b10d-c92b86934940",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1113f0fa-0d53-4032-830b-f9734c3056c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22f7959-9cbe-4d35-aa72-5452be17a185",
        "cursor": {
          "ref": "000beb31-3363-49b9-ad73-d8fe28625a0a",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "53822bd5-b2eb-4f4f-86f1-666adee51f3e"
        },
        "item": {
          "id": "c22f7959-9cbe-4d35-aa72-5452be17a185",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8b78dd34-c8a3-4d1e-abfa-fca259772b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b26045-ae3e-42e9-8b9f-437c44405b28",
        "cursor": {
          "ref": "6abc3a25-ff2f-473a-92d3-773790da7e7e",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8994561b-ff6b-472b-86cd-201b5c9a499c"
        },
        "item": {
          "id": "f8b26045-ae3e-42e9-8b9f-437c44405b28",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d9115090-8668-4b90-b961-29957b9d472f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1eb04a-f221-4db1-87fa-96949b36e13e",
        "cursor": {
          "ref": "badb6575-2ddc-48c2-afe8-800c193f2fdf",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "5e74f704-f447-4967-959c-1612d40ff64c"
        },
        "item": {
          "id": "0c1eb04a-f221-4db1-87fa-96949b36e13e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "525abd30-b96e-4f47-91c5-84a9cba4f85a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8f5ca6-e371-4363-a0af-945e113087b2",
        "cursor": {
          "ref": "010af103-cbaa-4627-b457-0f0d7861be51",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "1cdcf9da-b8b8-49d5-b30e-35c07335ba26"
        },
        "item": {
          "id": "0c8f5ca6-e371-4363-a0af-945e113087b2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "56577eed-781f-436e-a323-08e88a748b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "803ec8d4-fdec-4cc2-a246-a1795b2a2470",
        "cursor": {
          "ref": "abc2e82c-9981-4104-98d0-2aa37f0e998d",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "8ef1eca4-8b31-4162-83e6-1aef1d795e94"
        },
        "item": {
          "id": "803ec8d4-fdec-4cc2-a246-a1795b2a2470",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8668b5ad-94b1-47df-8edc-e114441bda98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f438c476-6135-4588-961c-7e4764f45d83",
        "cursor": {
          "ref": "8d65376b-3699-437c-98fc-eee24aaf3fbe",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "61d53676-9aed-4c98-9768-5777d44fbce1"
        },
        "item": {
          "id": "f438c476-6135-4588-961c-7e4764f45d83",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d95200b6-8b4f-403d-b423-f6f9f02552a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "310c1ca9-6aff-4894-9509-a0ef7838549a",
        "cursor": {
          "ref": "7473007e-381c-4627-99fe-1433ed63a9b7",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "44f6bf83-6b31-4ebf-a6b9-90f0c2201067"
        },
        "item": {
          "id": "310c1ca9-6aff-4894-9509-a0ef7838549a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "90e1a40a-bdfc-457d-98af-940220e40a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b173c31-f654-40e0-8655-afc6c5fce471",
        "cursor": {
          "ref": "246fd09b-e9f6-43c5-8106-9d382eba732a",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f4589b9d-921f-4b8e-bb95-5a155ea1a1dd"
        },
        "item": {
          "id": "8b173c31-f654-40e0-8655-afc6c5fce471",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7a6e3a99-e71b-4684-b786-ae7546d3bf01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff69150-4192-454b-b3e8-e4efbde74595",
        "cursor": {
          "ref": "c9548060-9ce0-447f-8c8e-9e6d28b46f34",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ed460180-9460-464b-bb07-184659717378"
        },
        "item": {
          "id": "dff69150-4192-454b-b3e8-e4efbde74595",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c9770d8f-cf19-4d93-9cd4-b0fbcb1a13ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10151327-7324-4045-8442-7b1d938b1d5b",
        "cursor": {
          "ref": "b6daacdb-5a73-497a-ad01-7d5f5332d124",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "01770d2a-19ed-42d1-9eef-29eadb601b4b"
        },
        "item": {
          "id": "10151327-7324-4045-8442-7b1d938b1d5b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "61e7a49c-8f33-48d3-bb4c-422caa27883e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e788c22d-7fac-4045-8851-ac629e0ba79d",
        "cursor": {
          "ref": "7eb33f72-e294-4e29-ad53-2d0b148010ed",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a6a1808d-ffe5-419d-abe0-729dda614f17"
        },
        "item": {
          "id": "e788c22d-7fac-4045-8851-ac629e0ba79d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7e00bc32-5aad-4d17-a6f9-d83b490654d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b55c369-8129-4ef3-8491-1748c2642976",
        "cursor": {
          "ref": "08052927-b558-4ab1-99e3-99f51a3205bf",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "48b13207-fcc9-4cd2-bb6b-c7848516d452"
        },
        "item": {
          "id": "4b55c369-8129-4ef3-8491-1748c2642976",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ff6361e2-d89f-4d47-92c8-01592e3331c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145196de-4dd3-48f6-8b4e-75d92bd98aad",
        "cursor": {
          "ref": "23771f75-bb6e-45f8-8062-a51cf86aa533",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "aefbca26-2c42-4366-b0eb-5a590fc619ad"
        },
        "item": {
          "id": "145196de-4dd3-48f6-8b4e-75d92bd98aad",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "538b4a3c-84cd-4e0b-809f-d9f519ba021c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a31ae2-ca09-4ade-b756-f091cf2d80e4",
        "cursor": {
          "ref": "132ebe23-1338-4c85-a78b-2e1c7cd76a9a",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "99477ad9-3ff3-4ca1-beff-3db73f10543e"
        },
        "item": {
          "id": "37a31ae2-ca09-4ade-b756-f091cf2d80e4",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8a82858f-a662-4f5c-9146-b762e6047275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0863b26-f73c-4a63-9251-52097da7a39e",
        "cursor": {
          "ref": "bb730d44-e7c8-4728-bb00-6a287f43ca49",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "6f70f82a-e047-43c8-9b1e-2da93ca85ccb"
        },
        "item": {
          "id": "c0863b26-f73c-4a63-9251-52097da7a39e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e7d8e548-54cd-4c84-8797-1f9bc6e8aec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f0f0d7-2f30-472b-a304-3ce8b7d2fcab",
        "cursor": {
          "ref": "ea058335-d1e8-449e-868d-24ae6e790a75",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ba767307-7a6f-4a09-992f-066cf51fd9fd"
        },
        "item": {
          "id": "60f0f0d7-2f30-472b-a304-3ce8b7d2fcab",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "77174397-d669-4810-abc2-cf9f85872bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c257f853-5931-4c09-b226-37f899191cdd",
        "cursor": {
          "ref": "8a0fcebf-7fdb-4ec5-bd96-f7562fd64353",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "453f42f5-a6c8-4fdf-abd1-678fb23a1bc6"
        },
        "item": {
          "id": "c257f853-5931-4c09-b226-37f899191cdd",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "c9119235-2bd7-4ece-82f0-9a5486b9816c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c14f2729-ec7a-439c-8d9b-2dbe7a819b5e",
        "cursor": {
          "ref": "729881a0-f0db-4b92-8193-a579bb7a1a0b",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "215ea851-bad6-4123-b7c1-2ac53a8e83af"
        },
        "item": {
          "id": "c14f2729-ec7a-439c-8d9b-2dbe7a819b5e",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "604964a4-ef52-4f7f-ba7b-90325838040e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e127c89f-407f-470f-a313-f9e104fe037d",
        "cursor": {
          "ref": "e510545e-6670-4b1c-974f-45e0cd686906",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d8572565-5cd2-4525-969b-1b0145388735"
        },
        "item": {
          "id": "e127c89f-407f-470f-a313-f9e104fe037d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "711aa3b3-b789-4e5f-8af1-5580d8b32861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32269f17-2792-4a62-a464-a165aebdd2f8",
        "cursor": {
          "ref": "5f54710e-d235-41d0-87fe-51db50b20926",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "25e87d1d-3aa5-479a-9c14-709938edad35"
        },
        "item": {
          "id": "32269f17-2792-4a62-a464-a165aebdd2f8",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "3a622418-5d7c-4de2-80f0-7c63c33e6211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2257d1aa-f41a-4c2d-854a-2b7431939730",
        "cursor": {
          "ref": "a7edf649-f8a6-4b64-a80b-14ae0ce67510",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "0b0b063d-5304-4f6a-b213-4a3f056b40f2"
        },
        "item": {
          "id": "2257d1aa-f41a-4c2d-854a-2b7431939730",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "27a6a918-bf13-4821-a8fe-3088b0b9189c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03daf958-7da5-4bfd-a65a-642cba60235e",
        "cursor": {
          "ref": "497a030c-2c8b-4de3-837a-729540368394",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "46d7ace5-f6ca-4f65-bb91-efcfe2922f7d"
        },
        "item": {
          "id": "03daf958-7da5-4bfd-a65a-642cba60235e",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "23c0ce59-05d9-40b5-bb4a-cc2e3022986f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632671e0-56bf-4a36-9f5b-c62a06b22c94",
        "cursor": {
          "ref": "1826f562-2607-4603-accf-75048eb3d260",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "019a098e-d171-4139-becd-cf64379f8902"
        },
        "item": {
          "id": "632671e0-56bf-4a36-9f5b-c62a06b22c94",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7b9fe925-c5b3-40c5-b919-b40ca65b3842",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b55ffb5a-8363-40c3-907b-f69c70d2ec9f",
        "cursor": {
          "ref": "8d48a8e9-ceaa-4e27-9e5f-da5d101f3e4a",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "12212c6f-7002-4d7b-9a1e-c1c9ed45bd8c"
        },
        "item": {
          "id": "b55ffb5a-8363-40c3-907b-f69c70d2ec9f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "772bef54-d93c-4d82-bdf6-11faef70aec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb5438e6-9287-4100-b317-1612881737df",
        "cursor": {
          "ref": "fb944770-552a-418c-bba7-57362572b172",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "405b8a40-9ead-4e2f-9b96-e1612d64f3a5"
        },
        "item": {
          "id": "bb5438e6-9287-4100-b317-1612881737df",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "6d4435c9-0249-45c3-ae1c-f0a048e0287d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b1c2117-68cf-4ccf-b658-931dc912df7c",
        "cursor": {
          "ref": "32fba015-0569-4330-a1ae-2262c72b0ecf",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "6d27a9ca-5e97-4766-9f2b-bcadfdf3d314"
        },
        "item": {
          "id": "4b1c2117-68cf-4ccf-b658-931dc912df7c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9e6350ec-7bcc-4647-88b9-3898f997d757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80b5b1d-ed7e-4257-9f83-52422275b624",
        "cursor": {
          "ref": "0ac13f3a-5abe-4900-a8a6-bd140843454d",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d58608ce-a50b-420b-9dfa-7a6561ad28b5"
        },
        "item": {
          "id": "a80b5b1d-ed7e-4257-9f83-52422275b624",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "bda4b2cd-c580-42ae-a95b-2c7d39e6b667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "371da1f4-2654-4e97-aa3f-a342d863f8ef",
        "cursor": {
          "ref": "3e338efd-9426-4100-99c8-a0ce1402e4d9",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b56e1f7d-bbde-4d23-8540-89bf0fbe806c"
        },
        "item": {
          "id": "371da1f4-2654-4e97-aa3f-a342d863f8ef",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ee15e8fc-a642-46fb-aa9a-bf5c18e7d20b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38dff978-ccfc-4fc8-b4a1-953fe2dde3ca",
        "cursor": {
          "ref": "1cb0657d-ee71-4591-a9f0-27d69ec17dbf",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "0e431bf3-4e9f-4447-b60e-f834cd790c3b"
        },
        "item": {
          "id": "38dff978-ccfc-4fc8-b4a1-953fe2dde3ca",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "200b5e90-4b0f-4550-8707-bb3d2b44c947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91fddad-10a3-4504-a9b6-21a0a7ddc1aa",
        "cursor": {
          "ref": "3502480d-4fb9-46a2-9c92-be659b5e31a3",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "bbe73e63-4a6d-49eb-887d-3bdf06f44f4c"
        },
        "item": {
          "id": "a91fddad-10a3-4504-a9b6-21a0a7ddc1aa",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "bbabb024-83d0-4f30-9bd9-c1a3c7143de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f38f82-2812-46f0-bd1c-8364bbe9016d",
        "cursor": {
          "ref": "08043f6c-a1ce-44a5-acca-d47a37b6883e",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "2e8d69d7-9140-49b4-afdc-185b19279048"
        },
        "item": {
          "id": "43f38f82-2812-46f0-bd1c-8364bbe9016d",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "bc45d2d2-0090-48b2-827c-887346a925d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5f3824-3319-4a91-8959-b78730c68e49",
        "cursor": {
          "ref": "27b61e0e-7218-4d9e-a79e-1ff589277f0a",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "5582f29d-ebce-467a-9c24-719b71be242f"
        },
        "item": {
          "id": "5a5f3824-3319-4a91-8959-b78730c68e49",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8511d6ff-abe8-47a8-9581-ea5a1d97b51a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f491f1bd-3e7e-4870-bb7b-f2e3aa4aeeb8",
        "cursor": {
          "ref": "b15bf430-37e6-4555-bd44-dfdff1deb7df",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "456118e7-b610-4ce2-949b-eb045a9e7fc5"
        },
        "item": {
          "id": "f491f1bd-3e7e-4870-bb7b-f2e3aa4aeeb8",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c9768cc2-c98d-405f-a9bb-88f30b2862b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a02b83b7-babf-4d81-b36c-6c09d89ab4fd",
        "cursor": {
          "ref": "a528f21f-b762-4c63-9eec-a79971e6efae",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "70ad4999-ce14-4bf2-a62f-88d62b4d3609"
        },
        "item": {
          "id": "a02b83b7-babf-4d81-b36c-6c09d89ab4fd",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "7ac2d459-eeec-45ba-ab34-9f182fbdf593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a23251-9d82-4e26-84e3-65db04bd0b64",
        "cursor": {
          "ref": "ad78e5a2-7923-43a4-b90d-ac6108b2a418",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ecfa067b-1aa8-4af1-a476-f9e5f181f60a"
        },
        "item": {
          "id": "28a23251-9d82-4e26-84e3-65db04bd0b64",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8f2bed86-eb96-4462-9ddc-77078e5ac74a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd4168b-15d9-4b2b-8821-b5aa2ad67853",
        "cursor": {
          "ref": "dd2017a5-e327-4078-b390-cb3ce104bfd2",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b95506ac-fa8b-442b-a3b4-0dacf387c70a"
        },
        "item": {
          "id": "fcd4168b-15d9-4b2b-8821-b5aa2ad67853",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a80035be-d230-4b2f-966d-cc6cb09be0fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4313071e-a40d-4c03-bdce-66b8a281dd22",
        "cursor": {
          "ref": "a24befc8-7941-44dd-ba80-127965627643",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1cd82f9b-d62f-4a74-a753-349e0e7e23a4"
        },
        "item": {
          "id": "4313071e-a40d-4c03-bdce-66b8a281dd22",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "94d98281-8b30-424d-a26f-025979a597c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2e0c72-343e-4a1a-86a6-e308c99e82f8",
        "cursor": {
          "ref": "6a49dc1c-0ee8-4ad1-a078-39dc9ccb8d2d",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c3a5d75b-ccc8-41e4-a81d-f9535d8a250b"
        },
        "item": {
          "id": "1a2e0c72-343e-4a1a-86a6-e308c99e82f8",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "0b77c154-a1c0-44b8-8376-a5fed2e9640a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0340abc-4ad1-4587-b2c7-382076101bdb",
        "cursor": {
          "ref": "a7eced96-f172-4196-8952-300fc121d50f",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f7419e32-602c-4a8b-9b67-76fb38b308f4"
        },
        "item": {
          "id": "f0340abc-4ad1-4587-b2c7-382076101bdb",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "1c16ad5e-71c5-419a-ac23-780b3fe8e364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd5e65b1-ba22-4b39-a80a-e48240b2581d",
        "cursor": {
          "ref": "aec4d57f-fcf6-4aca-a545-e6e4ae851c10",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "6e759629-9c18-4669-bc67-baa85b36b124"
        },
        "item": {
          "id": "cd5e65b1-ba22-4b39-a80a-e48240b2581d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ac1e191a-1614-4e17-8d4c-cd0cd40480f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8663a7a3-82f3-44a9-8468-a3de1ab8cc18",
        "cursor": {
          "ref": "426095bb-f134-404e-a184-ccf2ee82a300",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f6e71309-6c61-48a2-a551-1f658bedd39e"
        },
        "item": {
          "id": "8663a7a3-82f3-44a9-8468-a3de1ab8cc18",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f16c0e8e-f6ea-4775-b301-e11071f9d694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdff48a1-4bd9-4aa4-9d53-28fa0e2f0153",
        "cursor": {
          "ref": "e9f5bc18-a7c3-40d8-a450-08351806435a",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "0e284118-034c-435c-9e08-1c036fc8a2fd"
        },
        "item": {
          "id": "bdff48a1-4bd9-4aa4-9d53-28fa0e2f0153",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "39212a55-7797-4f68-913e-9ad12de7aad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd973eb3-7c5f-4f1a-8832-25d853d71f6e",
        "cursor": {
          "ref": "4ecb3456-1cca-425f-9ec2-f096f10e07aa",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "469818cb-81d9-4729-bbaf-b7976c8f5614"
        },
        "item": {
          "id": "cd973eb3-7c5f-4f1a-8832-25d853d71f6e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b08e6641-0063-45a9-a4b4-76b3b4b4d063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aadbcf73-a50a-42d7-b85b-30eb34324a50",
        "cursor": {
          "ref": "fac9c432-726e-4c8f-8027-e6ee2af48594",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "3550978e-7965-42df-9165-80c09cca39ce"
        },
        "item": {
          "id": "aadbcf73-a50a-42d7-b85b-30eb34324a50",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a5a14c9f-2a5d-4831-bd84-8958ecbf155d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "129f2888-fe43-468a-9c11-d5543109ef69",
        "cursor": {
          "ref": "b0e4c96b-5ba5-4535-bcb6-f1a17758e8a7",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "73b3ddaf-ddf5-4f0d-8ead-21ba6a9415df"
        },
        "item": {
          "id": "129f2888-fe43-468a-9c11-d5543109ef69",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "2eb9a3da-0a2b-4525-bab2-2e8a1f976490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d9ec93-5df9-468f-8124-c097564c6000",
        "cursor": {
          "ref": "1d81936b-19e1-4ab3-bd46-9b20e74cbf5c",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "2fd8f190-cd2a-47c9-a923-7c0bd7639558"
        },
        "item": {
          "id": "e5d9ec93-5df9-468f-8124-c097564c6000",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "2d343359-a98d-46b5-8c14-b1666791148c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58915717-81bb-4f0a-ab83-9636f656b774",
        "cursor": {
          "ref": "23423029-d0ba-4f78-90df-72e3c46dadb1",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "87e619c0-5b73-4f29-ba3a-c487250ccc02"
        },
        "item": {
          "id": "58915717-81bb-4f0a-ab83-9636f656b774",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "41c3fa85-42ff-4ab8-be79-e5e9d40a13db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 193,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb43c6f-7010-43b3-be84-4c75a6a566b1",
        "cursor": {
          "ref": "874229c5-969b-4159-84db-3316ee3073af",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7d9127a9-77ae-4456-87f3-afde8dc4eac6"
        },
        "item": {
          "id": "ecb43c6f-7010-43b3-be84-4c75a6a566b1",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "9a29a896-e669-4084-be16-e26dfe8f4a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f96966b4-ddb7-4703-ad6c-9fb1dcadd985",
        "cursor": {
          "ref": "6d9b4b33-bff7-4b2e-85ba-123baea2a961",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0f88edb6-06b2-4e9f-b257-94af0ae34ed9"
        },
        "item": {
          "id": "f96966b4-ddb7-4703-ad6c-9fb1dcadd985",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "30f315d9-87ce-4c59-82f5-ae4ee7a2691b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e80ae707-f7fb-4a49-ba35-3504e86d82eb",
        "cursor": {
          "ref": "2e0c4451-6f05-48da-b6b2-1378cf113fec",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6e1cc3dc-2e1b-4b5d-b086-b91abe1fdc2e"
        },
        "item": {
          "id": "e80ae707-f7fb-4a49-ba35-3504e86d82eb",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "987ffc96-2754-42ee-8cf4-c45665ecde52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50bd791b-3033-42b6-94c6-cf68ccfd73ee",
        "cursor": {
          "ref": "3099d933-a310-4a45-8650-22495a6194a9",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "63f6743c-003f-4078-8d9a-dd96b1d99883"
        },
        "item": {
          "id": "50bd791b-3033-42b6-94c6-cf68ccfd73ee",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "46d775c1-3294-42bb-a955-b393df2432c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9945876b-d300-44c3-ae8c-63531b23621f",
        "cursor": {
          "ref": "771104f1-4db8-4b98-bad0-bb6d00576231",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b1683420-059b-442d-ab70-59185093b2f1"
        },
        "item": {
          "id": "9945876b-d300-44c3-ae8c-63531b23621f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "73e00cc5-1e59-4d26-8689-f6402c3089d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ec338b-15f3-47a2-acfc-e3b500640e25",
        "cursor": {
          "ref": "301dd0fb-4e6e-4160-bbae-e6fb248ad494",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e1bd33ad-9661-4d56-a3b4-8b5b9b0fac22"
        },
        "item": {
          "id": "06ec338b-15f3-47a2-acfc-e3b500640e25",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "dc501503-ee0a-455d-a0ba-821a1f28e1bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "008e72f5-750a-47e1-bf23-b78de5a5642c",
        "cursor": {
          "ref": "82b7df9d-8c8b-499b-8ef3-be29096d64e1",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "5d64fac5-06b3-4478-90c7-97d9a5d7cd6a"
        },
        "item": {
          "id": "008e72f5-750a-47e1-bf23-b78de5a5642c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "430c0fcb-4188-45cd-861f-d8f335724096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5486997-4179-446b-9ec0-4a59b335c647",
        "cursor": {
          "ref": "65a80222-5cef-4fca-af07-321505a4202b",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "66167749-a2e8-4fc4-bd85-7cf2ce7c20ea"
        },
        "item": {
          "id": "b5486997-4179-446b-9ec0-4a59b335c647",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "6741babc-e323-45a4-adf7-910443c05900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa0c33c4-d921-44a8-aec0-c06171b73011",
        "cursor": {
          "ref": "4524d079-f968-45ed-97ca-a0419439dbbb",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "bfcc897b-628d-4c7c-bd16-b2177f86758b"
        },
        "item": {
          "id": "aa0c33c4-d921-44a8-aec0-c06171b73011",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "1fb43a53-81c2-487b-bb94-7821e6d49c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b24795f-b83d-4043-b70d-96a180dd52e1",
        "cursor": {
          "ref": "b0cd1529-de2b-4e8f-a135-ad7c07ad9e99",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "844b6382-7428-4e26-9897-9d879f4ca577"
        },
        "item": {
          "id": "1b24795f-b83d-4043-b70d-96a180dd52e1",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "dcbb1f19-4a05-4588-b17d-c7ec1df2e145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a3f0d1-d10c-4abe-b590-56c5c2788c42",
        "cursor": {
          "ref": "bc53824b-60f4-42c5-8adb-8a9e2510bb74",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "67ba26a7-83d6-479c-ba93-074481107b3e"
        },
        "item": {
          "id": "c1a3f0d1-d10c-4abe-b590-56c5c2788c42",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f22effa2-81a1-4129-9a23-89a485bb1c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c3939a-a268-4e5f-b766-a5634fb2fca1",
        "cursor": {
          "ref": "aeb0b571-02c1-47fa-9475-fe1faff88726",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "8bac3f94-6647-4141-88bf-85abb8aa8562"
        },
        "item": {
          "id": "53c3939a-a268-4e5f-b766-a5634fb2fca1",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "27c4227d-c49e-49df-8505-c86b9602f52e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3728f974-91e7-4144-be97-9c889185490a",
        "cursor": {
          "ref": "d88d8e42-4a2e-4d5f-b072-25c3b666b7af",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "ce091c0c-ca1f-4e98-8574-63613ef7b6fa"
        },
        "item": {
          "id": "3728f974-91e7-4144-be97-9c889185490a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d26b7cf8-dae3-4f60-8eac-5b0915d31a8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "293a8c07-a1cb-4292-99a1-ecd42d74166c",
        "cursor": {
          "ref": "5b7fa0af-8d1c-4995-836c-f01ab0ecfb63",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "8cb967ed-0744-43f3-9657-cd029fe3d716"
        },
        "item": {
          "id": "293a8c07-a1cb-4292-99a1-ecd42d74166c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f836873e-3b9b-4f2f-ada1-a4b1b9bd25ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3fdac5-4cbd-40ea-85c3-62d0f9b50cb6",
        "cursor": {
          "ref": "7d8dca9e-b9b0-4da0-aecc-5f8417c387bc",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "87e251d5-6d69-4a48-8a57-173fed2d1752"
        },
        "item": {
          "id": "7c3fdac5-4cbd-40ea-85c3-62d0f9b50cb6",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "26ba2fae-b698-40ec-94fd-37d968fccefa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b69d95b7-06da-43b8-9cbe-fefe2622a428",
        "cursor": {
          "ref": "268caa02-24e2-4bff-a44a-17d234ef0ec3",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "88bedc90-f34d-4d13-b497-228d1d615b0d"
        },
        "item": {
          "id": "b69d95b7-06da-43b8-9cbe-fefe2622a428",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "79f5b17a-50dc-435c-8416-0e14dc2f50ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5abfa737-16ab-4036-b520-b228bae1179f",
        "cursor": {
          "ref": "5fcb4662-4db7-419b-8580-5f39355f31ce",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "76ea9f03-2f09-4cc2-b1de-ccf52affe38c"
        },
        "item": {
          "id": "5abfa737-16ab-4036-b520-b228bae1179f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b02f2e24-aead-4334-87bf-fdf74c0c0fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad653d7-d5a8-444d-843b-95de3885cf76",
        "cursor": {
          "ref": "8fa5a7ff-5557-4f8f-bbef-deeab691cbd2",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "0e3ab76d-0974-453d-bff6-6e33c7b96961"
        },
        "item": {
          "id": "0ad653d7-d5a8-444d-843b-95de3885cf76",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e4a706a2-fe73-4ca1-a2a6-cdb493f9c092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09652d6d-92ec-427a-bf16-0bcca6e19cee",
        "cursor": {
          "ref": "ec987543-54ef-434e-91a1-a5406f8b7d66",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "1f6dfa9e-14fb-48ae-9e85-555a01cbfa7c"
        },
        "item": {
          "id": "09652d6d-92ec-427a-bf16-0bcca6e19cee",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "dbbd3228-6d0c-47e9-9b33-3e8cdc93cc03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03dca132-3c0a-4b86-866f-71c14064f1a7",
        "cursor": {
          "ref": "cc53a839-1d92-4f44-a0f1-fb21bee72754",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "bf93755b-830e-4502-8f7b-390e6ecb7712"
        },
        "item": {
          "id": "03dca132-3c0a-4b86-866f-71c14064f1a7",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9d012cc7-f411-498f-9978-8e925735b203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ed498d-34c8-4df6-9d07-8400a9b0ddc5",
        "cursor": {
          "ref": "b89ad2d2-0321-4de7-a4a7-eec664e54e03",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "4dde4b9b-b267-40d7-bc90-56eaeb1af290"
        },
        "item": {
          "id": "26ed498d-34c8-4df6-9d07-8400a9b0ddc5",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e59266f5-9d83-4c03-91ca-0c2ead320ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a275d50-a072-4f65-8170-599a5ec24988",
        "cursor": {
          "ref": "97e39058-a5c1-4daa-9916-2d52b39676c6",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e39e2787-53bb-4f61-b663-098bd26e3e6a"
        },
        "item": {
          "id": "6a275d50-a072-4f65-8170-599a5ec24988",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "45bb2289-3471-40a1-8fd6-6228d39d7d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1cff7a7-b11a-4d4e-86d5-b480b91ea250",
        "cursor": {
          "ref": "45ff87db-f931-46a1-975d-3d6a5bba5065",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1beeeac0-a475-4afb-bd68-6d586e7de464"
        },
        "item": {
          "id": "d1cff7a7-b11a-4d4e-86d5-b480b91ea250",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7652b7a3-ed74-49bf-87a3-00e38ade1126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d07a28b-f5c7-4940-9237-2563f539a42c",
        "cursor": {
          "ref": "3277c94b-4d00-4f76-acff-290848933173",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ec756ffe-2e98-4c78-9130-345c6e17f454"
        },
        "item": {
          "id": "2d07a28b-f5c7-4940-9237-2563f539a42c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "791ec432-b2eb-4cf8-b69f-8f00d8694720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "532ac217-057b-4c67-afd5-4c6393021b29",
        "cursor": {
          "ref": "ea9dbc9f-e6b2-4375-8a72-999f747e3b61",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "39491b3b-5c00-49f0-942d-eada53d586c5"
        },
        "item": {
          "id": "532ac217-057b-4c67-afd5-4c6393021b29",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "6ceddd7d-7d5a-4d0a-ac4d-1f69b042942d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f500602d-9ef4-4953-9133-91468bf7a9d3",
        "cursor": {
          "ref": "cb582352-c51d-4546-a6fa-cb873d56f445",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "967282a5-a8fa-41ed-8241-904ec7d31188"
        },
        "item": {
          "id": "f500602d-9ef4-4953-9133-91468bf7a9d3",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "2eb76da9-a1b3-494f-a757-d5f6cbf2e865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc175b0-12f8-4b7e-bc85-f8b7196fe62b",
        "cursor": {
          "ref": "9fed2ce7-5f4d-4b6d-bb6f-d6c82f34fb45",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f372d699-709f-45a3-ad09-ad0da4c9a5ce"
        },
        "item": {
          "id": "afc175b0-12f8-4b7e-bc85-f8b7196fe62b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6a5fd3c2-2b20-4ef7-a397-8da720e60d02",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "d2160aa2-980c-4a95-8aca-394e6adfa868",
        "cursor": {
          "ref": "151941bf-b94c-4620-acc7-bf086c4d47f2",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "32f661a6-a73b-4367-8fe6-587ec0626ef9"
        },
        "item": {
          "id": "d2160aa2-980c-4a95-8aca-394e6adfa868",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e9998ab9-2591-426e-86c2-7d77a20275e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "183f7c37-53e4-4081-b70a-cf80698ce372",
        "cursor": {
          "ref": "d6a6b167-f1e4-47b4-8dd0-63a0d02dc239",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b35526a9-6714-4041-a296-b8abbec01113"
        },
        "item": {
          "id": "183f7c37-53e4-4081-b70a-cf80698ce372",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "8e1f6017-994c-47ca-8c3c-5d933130eb40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db8b4bb6-4c9a-444e-95ce-b2ef63bd2461",
        "cursor": {
          "ref": "7dc53d6f-046e-4716-b847-d2983a9c051a",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "348378df-054d-4cbf-8c11-2fa06f520ef6"
        },
        "item": {
          "id": "db8b4bb6-4c9a-444e-95ce-b2ef63bd2461",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "3d59049f-43b8-4b24-a2be-845c87c4cacd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ade61ed-c563-4f95-a1ee-11cb3e85fbb5",
        "cursor": {
          "ref": "7438654a-84a3-48b1-a342-ac95c0ecd4c9",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "efda003e-6b99-4115-9392-9e439983b2b7"
        },
        "item": {
          "id": "7ade61ed-c563-4f95-a1ee-11cb3e85fbb5",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "fd313e06-633a-424c-b0e2-9fcaf4887cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5647e47c-2b9d-46cf-a9e1-6be87fc3830b",
        "cursor": {
          "ref": "5dc10dd6-10fa-4f0d-ac14-07d3b50db51a",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a94e8ed4-c5d7-4acc-9113-330d0423fc58"
        },
        "item": {
          "id": "5647e47c-2b9d-46cf-a9e1-6be87fc3830b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "bd52040e-5fc5-471d-add9-8a79bbb52c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60207f3-841f-4c16-9c79-5a63859243c2",
        "cursor": {
          "ref": "bd8a1eb4-e017-42ba-a05f-64d899b9339d",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d6460fb3-c15b-4da5-9a83-657322914d73"
        },
        "item": {
          "id": "f60207f3-841f-4c16-9c79-5a63859243c2",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "79ed929a-811c-4857-9935-40078a1b6682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f06dd5e-33ba-4938-adad-63f1a276d219",
        "cursor": {
          "ref": "ce154138-8df8-433e-8a1f-072065ce2f98",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "71793d29-95a7-473a-aabe-50fe2b654ad1"
        },
        "item": {
          "id": "0f06dd5e-33ba-4938-adad-63f1a276d219",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "382bd5bd-06da-4983-b5fd-f80acb60d204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac08f204-a3fc-49d2-a8b8-eb3b8d0c9db0",
        "cursor": {
          "ref": "423b288c-0ccc-4f43-82d2-410c484bc402",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "cc46b4f6-02b3-4600-8f54-7b43814c8392"
        },
        "item": {
          "id": "ac08f204-a3fc-49d2-a8b8-eb3b8d0c9db0",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f19197f5-131e-42fa-935b-7711fcefec64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd7ebc53-e781-4ad1-8869-cdca9f943499",
        "cursor": {
          "ref": "0ae7b1af-522d-4ba4-a241-312fb58f56d7",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "59de2cb5-780c-4885-b9fe-dd3a6305c912"
        },
        "item": {
          "id": "cd7ebc53-e781-4ad1-8869-cdca9f943499",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "15a965d4-b030-4359-905d-4d5559d1383d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce89f96d-a88b-431a-90c0-e2a04934dc7c",
        "cursor": {
          "ref": "f25d6378-55fb-4ee3-b2f9-c2d5cfeeee24",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d3c167e0-b71e-44fa-9bf3-798b3e5b48f6"
        },
        "item": {
          "id": "ce89f96d-a88b-431a-90c0-e2a04934dc7c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "2d10b3f8-a324-49b1-bbae-377eece42448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b3407e-ce75-4c53-9c27-7c8e75672b5f",
        "cursor": {
          "ref": "e6f635d0-aad3-472e-867f-09bcf53fef38",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "7e749982-ed97-4d06-9d3d-9d3bb93b4ecb"
        },
        "item": {
          "id": "40b3407e-ce75-4c53-9c27-7c8e75672b5f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ab206066-750f-4721-9d88-3d673f7bc58d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df7eab7-1a7c-4ce0-aace-ebdd514bae57",
        "cursor": {
          "ref": "7b5b6a08-9c34-42d0-a4c9-cbe98d0cb2bc",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a74dac57-9cdd-4df7-b81f-25016ee9cba1"
        },
        "item": {
          "id": "8df7eab7-1a7c-4ce0-aace-ebdd514bae57",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "0e8c7f6e-27f3-45e7-885d-0c791bcbbfbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b3f846-26c3-4c1f-b950-346b12aa5e28",
        "cursor": {
          "ref": "0d2c4107-a3d5-43cc-af2c-28eede0c95b3",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "463803f7-5c84-4d9e-bd43-320226915c55"
        },
        "item": {
          "id": "f8b3f846-26c3-4c1f-b950-346b12aa5e28",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "4ed725d0-1969-4911-a1c2-77dbc43d296e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e34fe8-255e-4826-b996-5a1a346bcb50",
        "cursor": {
          "ref": "cb9cae3a-f601-43ad-9e1f-88bd6dd18179",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "63888602-0084-4000-bc11-6257e78eede8"
        },
        "item": {
          "id": "64e34fe8-255e-4826-b996-5a1a346bcb50",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "77ced2a5-401a-48ca-8876-28f85524d56b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5dd135-7a2f-46f4-97f6-8933d38df50e",
        "cursor": {
          "ref": "15a2fd10-f383-40d2-8db6-47dee18229d9",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "bc827548-3b63-4234-afda-6fcf64981ead"
        },
        "item": {
          "id": "3f5dd135-7a2f-46f4-97f6-8933d38df50e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "78b0d123-6ff8-4be1-9bb4-670d2b6ebe77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4780f533-7873-4e14-a3e1-3355bb0e810d",
        "cursor": {
          "ref": "317dbc11-5485-4229-8d22-2d7652a9ba49",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f2c2cf79-b53b-4f73-bbb6-3eba9e2c78e2"
        },
        "item": {
          "id": "4780f533-7873-4e14-a3e1-3355bb0e810d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e01a41c7-b3d5-4a65-899d-31065e2cfec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b4717d-c456-419e-a9f4-8822327f0fe7",
        "cursor": {
          "ref": "2bae617f-972e-4b6b-b5d1-175a4677c919",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "0ffe8f28-8a08-4227-9c49-73a8c29e4bf7"
        },
        "item": {
          "id": "e5b4717d-c456-419e-a9f4-8822327f0fe7",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6357126d-214e-4e69-a320-0647a53550a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8268a9c7-36c4-4fca-8474-1b5df6e64fce",
        "cursor": {
          "ref": "d62b26cf-772c-4519-86f6-9f21711c13f9",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "45d1ba7b-edd7-42c3-8571-4aeb34433643"
        },
        "item": {
          "id": "8268a9c7-36c4-4fca-8474-1b5df6e64fce",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "454f22f2-8558-4655-a398-f812908f48fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e6f335b-e86d-44fe-b3b2-e17b1269e1a5",
        "cursor": {
          "ref": "6f2f725f-e10a-43d9-baeb-16b13ca03d01",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "1bcb50f6-291c-463f-8ee0-05d97464b496"
        },
        "item": {
          "id": "1e6f335b-e86d-44fe-b3b2-e17b1269e1a5",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "69a4123b-8276-41a0-9013-189624379bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8dd811-6533-41ce-b106-c9528584a3c0",
        "cursor": {
          "ref": "9b314df6-d462-434e-b1d7-85b1e9941c5b",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "aa45a3f5-49b6-4861-9038-474329b014fa"
        },
        "item": {
          "id": "7d8dd811-6533-41ce-b106-c9528584a3c0",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6343a4e2-95dd-43b1-bd8e-ec06654002ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3590746f-22be-41ec-80cd-5cd3156196c4",
        "cursor": {
          "ref": "91f8b80a-eb81-452c-abfd-dd567669ce59",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "3ea92aec-3d35-4e2c-b5cc-b01aaa1741f6"
        },
        "item": {
          "id": "3590746f-22be-41ec-80cd-5cd3156196c4",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "07190787-5e85-40cd-b9c2-8ed134e865f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6137d3f8-c00e-407c-b790-b66ba5a7e23d",
        "cursor": {
          "ref": "655b45f3-df13-4331-9d7c-cf6fb3429dae",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "304ecd74-4a83-417b-b7e8-9de29e65975b"
        },
        "item": {
          "id": "6137d3f8-c00e-407c-b790-b66ba5a7e23d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "daf1847b-4a6c-4e27-8728-8bd75fe9b895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd30cc91-a211-4cd6-b741-5660c7e5c49a",
        "cursor": {
          "ref": "3b68dceb-5258-4ca7-8beb-21ee6a5b4ede",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "42280309-6196-4963-82c7-db645add156e"
        },
        "item": {
          "id": "cd30cc91-a211-4cd6-b741-5660c7e5c49a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "259a409f-eb97-4eb2-acd8-c106e3077e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b317e5c-a7f0-4be3-9574-6e0d3bce009f",
        "cursor": {
          "ref": "a9e9b608-9d81-4264-9813-adae1a0d1772",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "adcddc15-6a62-4a1f-bcfc-6035d5e98b59"
        },
        "item": {
          "id": "5b317e5c-a7f0-4be3-9574-6e0d3bce009f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "cb7d3c3a-cc43-41d5-b282-d4f6e48a5f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "108822c2-5020-4299-9004-088bf9997b08",
        "cursor": {
          "ref": "357e0354-20de-4d0b-8f14-d4625dd5b1f1",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "4f03cd08-ae1c-47f0-941f-d5349df0f2af"
        },
        "item": {
          "id": "108822c2-5020-4299-9004-088bf9997b08",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ded1c243-0282-4f9e-be33-ac97fc18812b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32435037-3b52-4af3-b419-348ddb695c08",
        "cursor": {
          "ref": "38f91fe0-68e1-4fb4-9420-3c724ec597a6",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "a5e1d456-a643-492e-97cf-c8f67895178a"
        },
        "item": {
          "id": "32435037-3b52-4af3-b419-348ddb695c08",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4c819a4c-47c8-4226-81a0-bd3f0e2c7bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a4cfe26-3388-455a-880c-7843dbcf9436",
        "cursor": {
          "ref": "67f64f15-253d-43ac-b593-fcbdd604c572",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "26f5c713-bd0c-4866-8a81-f14481657c02"
        },
        "item": {
          "id": "9a4cfe26-3388-455a-880c-7843dbcf9436",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "53eddbc7-8451-4ad1-b3d9-d2421d89b47e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae75120-4b35-4c91-a3da-36581480ed91",
        "cursor": {
          "ref": "e0474544-16f8-45d1-982f-2e0bfaaa449b",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "4de30684-85f5-4db7-a2e8-f7ad7f6db975"
        },
        "item": {
          "id": "3ae75120-4b35-4c91-a3da-36581480ed91",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "44eb4e73-6df7-415e-9f7a-e98ae0c39f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "062120bf-f203-4168-8417-96be2f401e59",
        "cursor": {
          "ref": "c7ee6227-cbc7-43fb-a415-2f462cfb7a38",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "365e4e1f-5a04-49c5-8204-181f538b29c0"
        },
        "item": {
          "id": "062120bf-f203-4168-8417-96be2f401e59",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d9e78eb5-baeb-41ac-9643-94a47a83a901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dbe348f-8f02-4239-8112-4c181a4ae9f4",
        "cursor": {
          "ref": "83d3697d-9fd3-4a8b-aea2-6940d2bd91ff",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "aa6be7db-5b8e-4847-af6a-5c93c83de0dd"
        },
        "item": {
          "id": "0dbe348f-8f02-4239-8112-4c181a4ae9f4",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "3b0f381a-3d1d-4b23-92e4-922adad4be02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbc03884-5238-4bbc-892c-bf45a840c462",
        "cursor": {
          "ref": "1d85122a-ecf7-4a7e-9e70-ee8cb54a2076",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "00fb84a8-d5b4-4677-ad01-1d23bead349d"
        },
        "item": {
          "id": "dbc03884-5238-4bbc-892c-bf45a840c462",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "23ed544f-e260-4071-a6fd-68d80adfa577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd2e7d93-e92e-45c9-8af4-2e942ab5af93",
        "cursor": {
          "ref": "e160e470-5617-45ab-a93f-1f78e48dde5d",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "cbadce71-6df1-404b-8f1d-60fce04def64"
        },
        "item": {
          "id": "dd2e7d93-e92e-45c9-8af4-2e942ab5af93",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c1d088f5-c706-455d-98ea-b9963230d64a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd177c54-7db3-4be7-9bf2-0d012676c519",
        "cursor": {
          "ref": "787fd227-96ec-4a48-85b0-4af72bb41e3a",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "1f46e488-0214-4369-a772-b3521c239334"
        },
        "item": {
          "id": "cd177c54-7db3-4be7-9bf2-0d012676c519",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "6589f02b-5cea-4bee-bc07-66a8d94bb97e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c676fe1-ae65-4275-8166-5a61efedd154",
        "cursor": {
          "ref": "3efbf65a-238b-4a9f-85fa-091ca28f583f",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "b91e2865-2bc1-436b-81d9-b280cf4fc94d"
        },
        "item": {
          "id": "7c676fe1-ae65-4275-8166-5a61efedd154",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b65af05a-6992-453f-8726-253c006078b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afbf5d12-f0fb-48c5-a1f0-4ce5af112389",
        "cursor": {
          "ref": "a2667cdf-d0f8-4836-be82-2feb8ede6af9",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "47e6dff7-8d9b-45eb-9498-087b55c703e4"
        },
        "item": {
          "id": "afbf5d12-f0fb-48c5-a1f0-4ce5af112389",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "5c374ad3-2833-4f4b-8c3b-ad71d5700814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21dab0ab-0ce8-4660-9969-b933e191b310",
        "cursor": {
          "ref": "a5f31635-1fdc-4a89-8502-cf0d2b12746a",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "9457bd4f-56ff-4d44-9f60-42cd5bf0c36c"
        },
        "item": {
          "id": "21dab0ab-0ce8-4660-9969-b933e191b310",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f4f0ea51-bd3d-4d34-b913-302315eafb10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6c18d06-ee40-466c-ad8f-20e35d003c47",
        "cursor": {
          "ref": "b13b5eab-7c86-41b1-83d7-5b58d340319a",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "57e797a5-f97b-431a-a30b-7364aec7adbd"
        },
        "item": {
          "id": "b6c18d06-ee40-466c-ad8f-20e35d003c47",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5fe827a5-f92d-4283-9f2d-c483e9b85f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d3dd29e-60f1-4623-9c10-509b55247ccc",
        "cursor": {
          "ref": "0fea0229-2989-48cf-a5ae-9f4efa4f21d6",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "07ad8c89-bcc6-401b-ae48-0e3ad478809c"
        },
        "item": {
          "id": "7d3dd29e-60f1-4623-9c10-509b55247ccc",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "70f87748-bec5-4542-bc07-532bb628ec95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b9226a5-d28a-4ae5-9098-c6792acb9ab9",
        "cursor": {
          "ref": "db230e13-a203-4f05-93c1-fec038acd210",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "1f329766-2a8f-4114-8a3e-baeb6900a542"
        },
        "item": {
          "id": "8b9226a5-d28a-4ae5-9098-c6792acb9ab9",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "2b242101-99e9-4db8-bf45-f81925c01f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "768707db-6422-43b3-a466-fe25710e4172",
        "cursor": {
          "ref": "4035ef2e-3197-46c1-b758-dd516f6ea6e9",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "fd2d5112-c52e-473a-a9c2-660c3dfea4d5"
        },
        "item": {
          "id": "768707db-6422-43b3-a466-fe25710e4172",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a2fa02c2-9f23-475b-a1c3-959a48e857a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8198df97-685f-45bf-a275-2da267e614f0",
        "cursor": {
          "ref": "c154493f-da7c-484d-a3ac-4c777d4d464d",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "436207f4-9a1e-4e74-b856-c584fbed879a"
        },
        "item": {
          "id": "8198df97-685f-45bf-a275-2da267e614f0",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b18fcb89-f03c-496e-9542-ca4485e2fad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f69791-e4c2-47fe-9717-048d3907cce6",
        "cursor": {
          "ref": "4f9115f8-4a1b-41ae-ae43-2ca822493b77",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "c26f0bd7-457e-44c4-8601-d49602c7bee7"
        },
        "item": {
          "id": "42f69791-e4c2-47fe-9717-048d3907cce6",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d24b11b1-9cfa-4a07-b499-9faa3f95ad1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d786a3-44bb-4e35-b323-90df80fffc23",
        "cursor": {
          "ref": "8ba28317-91bc-4b7e-b622-4936a1879ff7",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "bc03d86e-3d9d-4e29-a463-9e460c67bba3"
        },
        "item": {
          "id": "28d786a3-44bb-4e35-b323-90df80fffc23",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c35a1759-64b3-432b-92bb-c72b3c5c8f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f66c26-228e-4636-8dd2-24b1665602b7",
        "cursor": {
          "ref": "95dc23bb-c8b1-4e86-93d4-01b9b70bd581",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "f30b97c0-65f2-4708-a5e4-3337d8b3a3b1"
        },
        "item": {
          "id": "61f66c26-228e-4636-8dd2-24b1665602b7",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ff13083e-4010-471d-ad39-e746227e9cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa4ce709-9694-41f2-b4ec-004cc357dcac",
        "cursor": {
          "ref": "3a8f161c-f94b-452d-819e-a6680a899644",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "089dfb4e-63c1-4523-a27c-1883d30c5cbe"
        },
        "item": {
          "id": "aa4ce709-9694-41f2-b4ec-004cc357dcac",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f7d8d594-bf28-4cc8-a9cc-76daeef1f3d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc34ce01-283d-47de-a4f0-16eceed00c5f",
        "cursor": {
          "ref": "6b81f296-f624-4470-96a5-cbcf6785d829",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "4d66c4e3-6376-40c8-b9b8-4b284456a8e6"
        },
        "item": {
          "id": "dc34ce01-283d-47de-a4f0-16eceed00c5f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "9d22603d-da82-4ca0-8add-fff10198009b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9cf26fc-8c0e-4d7f-b0f2-ece76ab16957",
        "cursor": {
          "ref": "5522b2f1-b075-4502-8531-e5e956e2c4cc",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "022d379e-06f2-49c5-9969-1c94f68cc1f6"
        },
        "item": {
          "id": "d9cf26fc-8c0e-4d7f-b0f2-ece76ab16957",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "05b99d0e-2712-43a0-b869-6db8418675b3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1998ff20-809b-43f6-926b-0a982a803b44",
        "cursor": {
          "ref": "92dc0eb5-bb5d-415b-a20e-9fec55c1d774",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "65eb5f60-8257-455d-afa1-604e4b361be9"
        },
        "item": {
          "id": "1998ff20-809b-43f6-926b-0a982a803b44",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "efbe21ef-991c-4025-8009-fc812bfedef6",
          "status": "OK",
          "code": 200,
          "responseTime": 4,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8cf73a-e453-4e29-893f-b15e29f30a1b",
        "cursor": {
          "ref": "94e3426e-5afa-49d2-a4d4-3918aaf7c299",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "27aaeb2b-2e92-45fd-89a5-4a5b3dd58f54"
        },
        "item": {
          "id": "ee8cf73a-e453-4e29-893f-b15e29f30a1b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "1bc03135-d205-42d7-a3fd-c71f30203ca1",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "23fa9803-b99a-47ee-93e1-a5d009bb1dc0",
        "cursor": {
          "ref": "74778557-4a97-4c3d-90cb-55d637fbd5dd",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "35a304ce-dfbf-4104-9af4-320faaea0bc3"
        },
        "item": {
          "id": "23fa9803-b99a-47ee-93e1-a5d009bb1dc0",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a1a9c81a-992e-4692-87ab-73e3fc1c6c9b",
          "status": "OK",
          "code": 200,
          "responseTime": 16,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dfcf72a-0cb5-4ea7-a1ea-2e81971b2fdb",
        "cursor": {
          "ref": "a2d1c33f-9c7f-4851-a3ff-aaa31f308251",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "7335103e-9bb8-42d9-be20-13e5b2f2ed41"
        },
        "item": {
          "id": "9dfcf72a-0cb5-4ea7-a1ea-2e81971b2fdb",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "94d50717-eabd-408c-b12e-bb8c515e739a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dfcf72a-0cb5-4ea7-a1ea-2e81971b2fdb",
        "cursor": {
          "ref": "a2d1c33f-9c7f-4851-a3ff-aaa31f308251",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "7335103e-9bb8-42d9-be20-13e5b2f2ed41"
        },
        "item": {
          "id": "9dfcf72a-0cb5-4ea7-a1ea-2e81971b2fdb",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "94d50717-eabd-408c-b12e-bb8c515e739a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56456341-4577-4d31-87d4-e31d0d34317a",
        "cursor": {
          "ref": "eee91392-4c99-400b-9b70-be5388ed6b0f",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "0cacb3a5-58f1-4e14-996f-1fbb526893b4"
        },
        "item": {
          "id": "56456341-4577-4d31-87d4-e31d0d34317a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c9ac5740-96b3-480e-a40f-f2467b08c387",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be894d2a-8ed7-4d69-950f-39e8d435d3c2",
        "cursor": {
          "ref": "cda8452c-24f8-4a3f-9d3f-3afc874dcca0",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "782d3f36-d9a4-4221-9841-96b2ac707974"
        },
        "item": {
          "id": "be894d2a-8ed7-4d69-950f-39e8d435d3c2",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "033c6453-f140-4dfe-9da8-d41f72f63a65",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}