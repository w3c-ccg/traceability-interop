{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "418188ff-dd9d-4cb6-987a-7bcf65a5b772",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a98f6a3f-cdc9-4936-b2b1-90c17092f033",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e1c4a8ac-e9c8-4537-b999-f042e1c67c3d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5dccf636-fe1e-49cc-8bc9-dffe8f17d5a6"
                }
              }
            ]
          },
          {
            "id": "f59bce1b-51ea-4ee8-b533-6de0bf6e0950",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f9932107-b559-44c8-8943-b50afe689c1b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "aec8c572-12ca-492f-ade3-00e1a7908c2d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c49b7aad-9487-4334-a673-5f71108a29b2",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "90ad10bd-6a77-4ded-8605-653352db87c8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "41d3bdb3-4b0a-457a-9d97-d53e85180453",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8eb64a2d-d885-4583-a5b4-2b5eb2d51564",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c036a158-9877-47b9-b319-782c5528e74a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7949602f-de61-4bd0-8510-87eba7ddef5b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f14a6952-18db-4db3-9ab7-d438a0a55d30"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6e30e422-4132-43f3-b1ca-5ff00dfd7aeb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d142d056-094c-45f4-b8ea-8812b8041a9e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "64d8017f-e7f0-443f-84dd-1b29682adca3",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "81606c0f-ec83-4113-b073-92aca2f56ea4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "72cb43f5-7ed5-4462-adf8-1182e629e94d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a03a05c7-81a0-4356-ba97-108f6c69fcd2"
            }
          }
        ]
      },
      {
        "id": "85b93471-e430-43c8-924f-ab93b32dae79",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a3c322e5-cb29-4976-8477-f805c47c227d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3c61e1aa-8f66-4e8f-9113-8372499fc763",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d1f46ca8-6b6b-4246-afce-567eac467596",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c78ce07-bfc6-4e00-b1f7-f57ea8160ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "995e4a6c-a9d6-4773-9bd9-ec0959120162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b06f275c-b167-4ff6-8b0c-dc6bbee1f587",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0660ccd1-8494-4e2f-bf40-625a08bd215b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d5f40232-617e-4f3b-b1b3-395c9e50f109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da39ff1-478e-47db-abba-6e31f5e348fd",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc09acd8-d1cb-495a-aa30-9aa1c121cae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31485888-294f-412c-81ad-ad4074d61a5a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8ebfd328-b417-4eb2-99b9-32d36eaf16bc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b305d90f-6b11-43fe-80b1-6a204d965b3a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15647e4-5c8c-4146-b661-d59fd19dc211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "953115c9-b9e7-409b-8a01-61728df7635f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23550763-01e6-4665-98d5-f6488e9591c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce9d1283-a44d-4400-8d94-68f8723702fd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7bd5c464-17be-4229-b746-02c9d8f43d73",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9ee5d2d9-15b3-4251-99cc-990284622ecc",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea0f1b90-e022-491a-9312-d3475062146d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "473e6c5e-75aa-4284-a061-e3af4d19ef61"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c65bf3ac-732b-4367-b289-daf5f3f7afa3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "99247aa9-8619-49d3-a041-d7561ff38b9a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7d15c14c-3210-448e-9102-78e37a88e0e5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "51800fa1-229a-4d6e-9730-ec8473ae8121"
            }
          }
        ]
      },
      {
        "id": "e88e53f3-7adb-4ccf-9fe6-8bb228bc9605",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c72b5f1f-9843-4cd7-be10-1337eebc1385",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fdcb73a4-d6b6-483f-a406-d81ac6a5b9a9",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "522e2d1f-6d34-4575-9061-47b854d7c61b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0782640-9f47-41d5-b38f-8e5bd631cdab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc1fb7fe-8ab6-4c24-8210-d05cfbcb6e4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92116af6-b69c-4e2d-9fcf-ad6ad347c08e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "504b51d7-b561-406e-be8f-360976ceba7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b42efd53-243a-438a-b628-c84013bb4eed",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dcf75e0-73fc-4f81-af74-d85ab78f5f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35d33244-95f0-4caa-842c-1db3a5d5bfc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5bdff7a-66bc-4068-a0c3-a93432bacc9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2d1c441-8564-4bd7-a39b-09f43412658f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2ca8bfe-8714-4955-a00f-26166ae12e53",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f9ddb4-d7ba-4ce0-ad67-f1b1bf97ec50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbff8eb2-3149-4439-91f5-7f8e5a273da3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d1a71d-758e-433d-a831-8e2af4fd7298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "899c9a17-d926-4e45-aa9e-923565ae6fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68393544-0239-41e9-9443-3b1fb87f2eeb",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52acccf4-674a-47dc-a1f8-2eb82b336d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa025854-e786-4f93-8e35-60e722f025c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d770e1e-37c9-4e97-9b1f-69b74c99d234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "531ea2b4-dca1-41c6-8640-e6998e902231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c04e5e-a16e-46c0-9692-7d1315ce42f8",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa22b60-b369-49e6-885e-b2aa825b5526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "629b0dc9-4344-4078-a67f-b31cafa11bea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16825270-111f-43ef-98f6-36c75d4666a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ae5dbc9-cc77-4c04-876c-9c065339704e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda959f3-870b-4310-be1d-f2c4face483b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45988c4f-4cbe-4c32-a82e-d78fcc1d670d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d56268d-4e70-4a44-8d1d-ad0d0b6519c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c6784e-b20e-4b30-83be-fb5b1a24c123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1447afc2-a082-4ff6-b1fb-10400de1804b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f22c5d8b-5833-40da-9643-01a81289ea53",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da3af01-0700-4f7e-8030-0fccde5e0c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "985c8dd1-3dc8-4bca-9832-b2d2e3fe300a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8352c570-bb76-4905-b6be-5d604ada0a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf4c7f91-a498-460c-8fec-938e6b0fef3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b469611-518e-4b2f-ad0e-46df77bd2d6f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a707e4-2a75-4e0b-8505-6fd2ed8eea20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3875667-e69b-4e50-babd-d936e9577431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2396e6c9-d446-4036-918d-baf29ee99a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0837c324-e1d8-4ae1-8da6-342d52da7f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da282645-0af0-4136-a2a1-2a30e83a88e2",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ecb7f7-d06b-41bb-9703-a2c1884a3970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02f1cff4-eb30-432f-938c-8d27120b5e06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fe2f054-83bf-4d72-8d36-87044e8fa339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02978878-56bc-4ee8-9c18-e0ae403282c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc74d611-782b-4c82-a9b8-e16334014b18",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9629ba68-e216-4aea-83f7-919f8501ec52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d456637b-bd0d-4932-8d04-1799e28140db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0614187c-ce4f-415c-a387-6110ff0eb438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3229e86b-f571-4843-bb23-19a601dd59f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b227066-85c3-422e-beb6-7503f9a526b3",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d30faba-36f8-4e9b-bad0-eb8b13b19366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "331471f5-31e8-4284-9784-7e5b341656c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ddb77cc-13e0-4aa4-9014-bc18c7dbaa65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac34eee7-a5ff-465e-b254-4a4f0cb07e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f15bc838-fd1f-4f65-b3fb-00b33fb1a85b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "070155b2-2f8b-48f4-b97e-3aa05c42dcc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b17c8f15-0f2f-4508-bbf1-40ea0bddddbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c831bdce-8aaa-4022-bfa9-230a04ec71c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5aec59f7-c873-4301-8b4c-420fc8695421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "998a16a3-5d04-4eae-a8ec-ef184da670d2",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9207e6-787f-4807-a343-a4a58951a836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef634a28-fa5c-4f61-8020-986491d36ce5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "505b4258-3ad1-4805-9ec7-0dd221e7f36c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "525d7e5e-7131-44ce-bad2-6a6b778aef87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa225dd7-72bc-4c60-b04c-3b2a5722dae6",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce9010f4-2897-45eb-a99e-325baf7e57f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d9fbde7-9046-4b10-a959-a8ac6faf84bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8ef7fb-9ec6-4e8c-bec6-761813fa61e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a443884-0873-4e5e-8243-e63d50091b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "227820fd-525a-4b9b-8346-e0a97a3f7608",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efbec11b-3d1e-4152-b23e-89bbe3e5fcef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1cf58d8-55fe-4a56-bd9b-e6a5f5c3ddd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d5ae50-7700-4974-885c-71da154cbfec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "700fec96-6c4f-4e06-b5ec-ca13d5bb972f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ccc4525-668a-4e91-8c85-a110a0070235",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec96a8d4-d66e-45f6-8149-55fda4bf0083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d38efb77-785a-442d-857e-024246401f5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a86e30a-2ded-4350-985b-6e7a88ca2cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8aa509ea-026c-41d1-8618-ce1c653ef46c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d122163-5d1c-4df9-a0f2-a9347bc70d10",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec269ac7-e05b-4b00-9515-3bd047d6bf12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d45afd8-b052-4af4-a948-ab1c6e4c902c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "527ad79b-1542-4d13-81b7-02c5829797b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "04b0f727-0676-4849-9071-1edd5e966489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd81dd6-5a46-48b9-8be9-265adae625d0",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e39454-8a02-40af-a7e2-8be67ac0c2e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce402d05-a872-4e6e-88b5-71d523d72151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14494825-6b11-4d58-87ac-3015f40a111c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "693e6d8f-8d5c-4078-8e79-27cf144104ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23504c8c-29fd-4473-aa9f-cd80dfe737c2",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb9e1b9-3d9c-41b5-b6a0-2b79fb789ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e40ca1fe-fd12-4791-b3a3-e8fa11ce2969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "134af323-dcf5-4c85-9983-3e3c7b0509b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3b64fd0-425d-429c-bf0d-3e593ec91377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb1380e-278f-42f2-b6b6-84e80fffb56c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db8b4f89-248f-44f8-b11f-38fbbb7b5633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8b4d9f5-93d3-4301-810f-4b5e1851d799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a0548e-4d0f-4c43-adfa-b3a6b7191ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b54f69b-d585-4fe6-b5ca-d536bc8240c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "599a342f-e392-41f9-b3db-ba80e149a22e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c002ccc5-b914-46df-bb41-71b1d24fe8a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c72ed32-ea46-48e6-b2c1-89ec9f521958"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea6e026d-d1ed-42a0-8e1c-697b5a416b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "853012da-4daa-4076-a042-68d84ecb3237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "546fd30e-cf43-41d9-ad59-5ea5b88499d7",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "852dad5e-c0c9-4546-a405-b1455d856101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e81a1d8a-ab25-45d2-bf93-7135b6c2890f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46fa6054-5f00-482b-aaa8-3f9ed1c42a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "670987f7-7f7b-4eea-8796-5c7066e9790f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfb76cdf-65a2-4bf7-a57a-1a9902c73c45",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97614ec6-7979-4f1e-b11f-4cb17d31bf9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7d82d96-f475-47dd-a4b5-db950c2efd70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e675279b-128d-4edf-9386-62e65e2ada5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "404a0f45-dbdf-4fba-82ca-ed0121d8204c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b48be1a-9767-4986-a56f-0efe9f078040",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c9ee8bf-5ec8-4efe-bf10-25dca4980201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d13fe94-0150-48b5-abed-e3af58693e5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a89063e9-9614-44fb-a907-cb9ee7d5f138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a98ae90-a71b-44db-8301-2c0589ebc888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a32ff20-f326-481e-91f3-0273f8788368",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb48f2f4-210b-4ad8-92c1-406828dd2dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "484572c6-32bc-4492-a398-08f04c346e12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba98ffce-19a2-438b-9bc9-dacfe03f7417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a6f52e5-0f0e-4c36-be11-04f4340f92d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea21f611-34f7-4f6c-8786-83469b0144a5",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7337806b-ef68-422d-a0ff-26f5cbc66dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26fe84f5-216b-403e-826b-09826df78e56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aadfa5a-4980-4b93-a1e7-e1a79d3f5786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cd795b3-6fbe-4344-8110-d2b22cea40e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "850c00f2-97be-452f-bb41-331dddcbab69",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91f273cd-0afc-48e9-910b-db34c5b150a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e168dbb3-fe2b-4894-b1bc-24aca84b2dcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb167006-35bb-4d4e-b93b-ac26cb50ecbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6721aa91-03c9-455e-9311-5094dc6b7bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f10bf44c-13e8-410d-8d15-1224f07fa34e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c650fa4e-5587-4a08-9ea0-570c0ac59686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0652dcb6-95ee-4002-b6b2-e65bbf5f5e52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1368fec6-71b3-4869-9713-c05647fdc792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "50cd0d16-3477-4c52-a356-d653bbd47406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03656845-1d7f-4e27-bff9-2957751f2657",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8103b2c-26e1-47c6-b68f-cb1a3a655be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "046ac946-7727-4fd0-a370-a02413de7f1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e74030-3131-42d2-bd5d-cd828cb2ed41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebb90bb9-ac1b-42d2-93e1-54b8ba5b304b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "453f4aeb-83db-499c-acef-b6371f2df4bb",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "577973e4-fa73-46a7-9242-425780df1e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bcb1080-1ff2-4e2e-8dcb-17e0573debff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2238ba72-cd11-4300-b024-baa77a91890c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "47fa919a-471e-41bf-a219-5349c8919417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "085b0655-54d6-4779-807b-ddec8a2f6920",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33397a47-fc05-42f2-9526-6299fefcb1a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac4fc561-f005-47cd-b676-2e2f93ae8d7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6cbf79-970c-4d2f-81f2-49d275b08991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "06ed71aa-e56f-431e-881f-44666aefc293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da724a8-1099-4792-aa44-5aa181eedcd2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e0e219-89c4-410a-b489-a385381652f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62b1faf9-f0e7-4baa-a744-10d504664ad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cbca758-41cf-461b-a433-8ca0b27865de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6526c256-418f-428f-b234-55d768dd8331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ae85bd-483c-49f6-b2cd-0f3bb3e2f850",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "186be1f9-ecf6-4c24-8470-f29721b9388e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f577e58e-a074-4cf1-871b-c289081a7d44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d54519-0e33-45a8-ac6a-0329ba54ff43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e783ee06-b037-422f-9414-b7d6eb867794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "693bf83f-68c2-4ac5-8ac3-16ee9f7f50f9",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc94469-eaea-4486-a6e9-244dcd0bc758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49e89f08-3fc6-4765-af76-111a3e3b5188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ea83f8f-43ed-48b7-8eba-61493fb54b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5109a0d8-98b8-471d-af1c-589e93989875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c73490b4-6ec7-4c96-8ef1-d54b6d5d2507",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a67e233d-0fb7-40c5-9941-88368f89b160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74377d70-6b0c-495a-9c99-ec0d7da7c3c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbda206a-1301-4436-b09d-085e8acd549c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e8fba1a9-28d3-4fd2-942c-893d1d44f853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec2fad63-7ec6-45b7-9ff6-eaddd1f66025",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66b5c63d-aa50-4d8a-a750-a68c397d7bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "18fedba2-f49d-4cec-a02b-894c2e606237"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "885fe09a-ad64-4b03-b41f-193b058a13c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "297fad63-17c2-49b6-8152-f1164835ad0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d26f2cfd-79ae-4eb3-9f09-db9aa577e174",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5312e7d-5e89-41f3-802e-5626cb61a291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b6f793a-7983-482f-8165-5782e3c1ad3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebfff76-de40-42a0-8234-b278567ed595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "25f8fcd8-64d6-4d1c-b93b-e4296c8c3c9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a346341-74e4-4a5c-acb1-f386d4c5058a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e87ccdfc-707b-44d1-948c-d329f82f73c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f12570f-0a55-4b10-a82c-bc110c654e5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2268b60-c87f-4289-a44d-01782a7bbdf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d08c223-4ac3-4e81-92fb-af67c780ce35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ae77ec-b779-4168-bcb3-a2fea4d7301f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83caabcb-c25f-4f84-b6ea-4e68845910c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "446f7395-49b7-431c-b055-80e4b9e4e3be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "100f8ef3-a618-4c61-bde7-d53e70fe8ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "48074301-dd76-4b88-ab54-7cecd8db8a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f3187c1-793a-4097-9ec0-881b67d9aef3",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "658be240-3746-48d4-a107-3f90de886348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30c28e8c-1667-4637-96bd-d43130a29cec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8be4f1b-6b41-425b-96ca-906942410a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a6276e2-8c8b-4dc6-81e4-b9c2a0d9e1d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "442aa7ac-11ce-41c9-a5d7-2c4704957b17",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "943c903f-3e0e-4764-81bf-5780bf48b9f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e836b1d0-f82c-4c48-8b37-944b68038f14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d9e676f-644b-42aa-b2ee-6c6b2f1f0693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f87d1d63-7101-4382-ac9c-99beba38a959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd002065-0676-4807-ab85-84f8b30a8ef0",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc78e17a-2a40-4c99-aff0-3203c18b260d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11eae79e-d009-429a-9ad2-e5b42c390b07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0388c9f5-55ce-4d04-9781-1ff6fbe81a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a45e7137-cca6-476a-84b7-75b9ae2122f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb9b2a4-a714-4426-9561-ad4e6b621416",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75120277-a5bb-4270-9c7a-cb21cd08be96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a63b2d3e-7f72-4a83-9546-7079c3d31a7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c198d2ee-de94-41e7-967d-a48c283d0fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "00c414c6-35c0-4316-98ef-bfaeb8cb69c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c668393-8bc3-4239-a8e4-5c258b415ed4",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecfdb626-a7bd-4c71-9bfb-15caf313e13f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be5ad875-8d6c-4491-ba3f-c776e70ac655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28f7fc3-6c6f-4ae6-888f-a8983d27f4bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ea7577e-9452-46ab-bc09-6eb6c7767092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a287029-8b55-4ad2-a518-b387b49eceb2",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "851067d0-59cf-406f-bb25-0c7559f1c2af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "354b9ca2-83af-418c-9ffa-dca8e7b63197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d80e2840-d8a2-41ab-befa-d2f49c8733ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7570e22e-0d68-418c-a720-57d03b355b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67655c63-e76a-4115-b395-7c3d1b4bddcc",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db8416c-c22e-4fe1-8990-5cbe0b279550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6db5c2ae-335f-44e1-9f15-ee59bb877b74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5159d118-64ec-4667-8213-d0d2d2da727f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f818c576-7d3e-48fb-a5c9-a87ea2fe6754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed5824b-ab52-425b-a036-1e144978768e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a8ee3b0-8aa3-4221-81f6-626e1421d989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f157ce1-05a5-41ad-9793-06f4177ff523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ca55a5-21c2-4a5e-b34f-93a0c06f8ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb06a1cb-d3b5-44e8-ad58-7d4626b7889f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e01c514-926b-408e-94fd-e853f7c345c3",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "767fe87f-ec1a-48bc-985d-fa5a78f57ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "011d6b22-b20c-4cb3-867f-a38c7a5bb29c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565dbfe0-9dcf-45d0-ac0d-4abf367208ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a147c781-54c6-4e41-97f4-3e573c9ba36a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "997258ec-1725-473f-9ea6-6377a3815f45",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f696dba5-ab45-46b2-9239-fb90b4a7f864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a09a5218-2f8e-42de-89d0-4bab1deca8b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c59489f-d08c-4f8d-af47-d0db70f82d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7914dd2e-b7ea-4547-a652-829574a14510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca32cf3-a566-4c53-ab87-e4e5a3ac8599",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d4de8a-80a5-4e49-8b3d-926c9379b45b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a9fa275-b447-439a-814b-3a389b53efd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9aac6d9-89b5-4ef4-bc80-7379547891b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1d744b3a-4fa9-4b58-89f8-9502740231f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6654b0f-d78e-4bf7-9ceb-4a5a3f977fb7",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b3d011a-c45f-44e0-bc0c-8a052c6326c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71c6b5d6-2767-4dbb-b6b7-58130f9e4aba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce157b6f-cdaa-4e8e-b768-28c7552206e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3392b4e9-9a5c-4090-89ae-4ffd7e915649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff3e2534-4835-4af4-9daa-4953a33f4300",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd5a661-ba56-4732-b1f0-4b2a5f8f069e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e4dba5d-3e8b-42c5-a5a5-46c4cbcb886d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929f4bbd-aeae-44fe-8d08-c3352bcd1c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a221aadd-ff4f-49f7-9d7d-dae023733458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca47a66-baac-4482-a57f-bd52ff33bb61",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3cbb0dc-1d7a-493d-a914-078f07c8e785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cdb8373-2ca1-497e-a786-17a06b65b49d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d32a9282-ffdf-4027-bd58-3fb2669e3f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d899a75f-34b9-4f95-973a-14ec03c41c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd4778de-6f19-4055-90a1-355db1c87f55",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c916fb0e-7f7b-46b0-a05b-7d3e488e59c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7e9d298-8693-49a6-a1b6-e6dcfb548fde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eedaad6d-5c71-4fdc-b558-4b2ef8e66f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d5b6e20-9b97-4e98-9c65-4321261b87e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cdd39ca-2108-4697-9441-851e99d0e68b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40bbe57e-f2ab-442f-9dd2-6ec64478e0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bea607c-dc52-4dae-a9e1-3c7e15a2b012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d9d39d-1c48-4dcd-8203-ba1826a93dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b30dd93f-337b-4fe6-9577-7dc952121b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd20f377-5111-4b07-ba7a-7251cde8052f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94fd857-69dd-4dbd-aceb-cde9e871ecce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0f5a9f3-02aa-4628-866a-0d1794857234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9533e6b5-74ca-4109-aaf5-765fd684da32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "356f68c3-dd4b-4160-928d-9773772da0e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ced9597-3e02-408f-a49c-fea8b79ccf1a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c58b22b2-45e9-4c9d-b34e-c62a45084dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b85554d4-809c-4a70-ab56-b3b00deaba81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d53ecfb8-6b56-4886-8709-e35b2af2348f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "40bf968b-b82a-45c1-a00d-c3fbb063e470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a3a9027-e781-42cb-9292-48867545a973",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a61b119-ba6c-4429-8691-4babb5f68fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f37ced4b-97fa-4107-888a-d93ca2a43d8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7e0930-7a6d-4f0f-9bc8-da7af32a2b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f07d97ca-9f4c-44d4-b885-bc41ad36c7c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe87dd1-fe40-4f2e-b183-7cba93a2c0fc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "752ae096-0e10-4c56-948e-5da2d8a1f56a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "526f4300-f69f-4ab0-b622-a1bc9d8baa10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b0deca-788b-485a-8a94-c8cabcb2fde4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2f73538-6eb1-4366-8b9b-e9e252425255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "300a9caa-ed62-4b18-b5eb-cea06d7d05f3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b66640-241b-4fb3-ae36-6ae8e2d0f272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "008c072e-5952-44fe-a0dc-fd248ae3d65e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92516f73-d1b2-45f4-9881-d4d24e0f0a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2be7baa8-a23c-4e42-8195-1c5aa47613ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c971b9-f7c4-4faf-8947-9d33f0403c46",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f6a6afd-fda4-4e79-bef9-229fcbaac4a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f00f1fdd-e8b2-429a-8afd-e0780aa53946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "985e1f61-ef6d-48e6-9ce0-f5d6db1a3861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e55755ae-de99-4b30-b14a-66d02239da6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ca48b1-8a72-4c36-b69d-7053acdf3edd",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28947d48-2547-4fcf-b133-0de31f1a7976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32230be4-0309-4d3c-9cb8-30a7e64ea39c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0efcca83-ef17-48a2-b5ce-607cc357a2a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fd8eecc-0e35-46eb-b9bf-5b4611207ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9687dc6-36a9-4e2b-9f33-960162c90ee0",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e7319e-3239-4305-bf1a-33753d8deac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1a200a9-3858-4aee-bcdf-a1e03d5d1120"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f1c20e-b788-479c-81db-54965f1580b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "99115e2d-1159-4f9b-97be-e7ffa99c2e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa7dafa5-b883-4710-b872-08551f3bcb05",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "034f6717-0c8e-4aab-bea8-29ced14e3ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54519a9c-78e8-4409-815d-ca520a9ab56f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65dd123-ab4b-496b-adf8-7802d09266ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "34179582-54fb-4150-b798-8ad5c36824e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4628951-fe3b-4045-bd15-2a8785d7168f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a8b7f3-1d83-406b-8634-9686630fed0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "052375c9-938e-47dc-9046-7e914d798b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "773c6af8-8e56-4685-b78e-fa86a3a12f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "87b6b414-a79f-43ad-a528-cd4e0785f971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cacc7707-c710-43bf-b95e-f1e364946c5c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d18a874c-4078-4140-9853-b82a3f74cc76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b11cc136-6d33-48c0-b884-dcf15d97cf6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462e73b7-af43-4ffc-b026-7d070b83431a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9800e544-008f-4ba5-aadb-66af036caef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b46f75e-710e-4935-b890-29a8873fc41c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3da14a4-225c-4a41-8441-b7a1b45fdc1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76f6959d-bbd3-4d39-8100-7ed71462af30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67eb366a-bcc7-4a7b-a9de-739c59a2b358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cf0e6c46-941f-4256-a367-2402236431b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b2003c7-1eb3-4b37-a3b0-7982d2857239",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e7fada2-0cf8-4268-b351-6215691281b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "888fdde1-e750-4d9a-9190-502e86ec7239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37740584-d720-46f2-80a7-e2e07265db7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "64e4f976-899c-4ac8-8267-01f317e0209a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2828d68d-4807-411e-831a-4d6ee23799a1",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7377541-8dcc-4cc8-9787-bb987f2f576e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77acef56-f31e-462f-9d10-1413893197cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad7df47c-4c8e-44c9-96ce-473b9f7fa009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2968f6b4-9f1d-4df0-aa74-135db600f15b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c16dba40-fcec-4726-91f1-1368d7f54d60",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5275b03-cc11-4a89-9e14-0ea9f272e161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8dcabc6-0305-4333-bbdf-f70659670c1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4cd30e-c910-4c54-a43c-4c26b557a588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1533ff90-9cd9-4d79-a640-c9546c9e42fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d3b461-7597-45fa-8eb6-c9c795e2482b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "001abeb3-d6af-41bf-9327-702f6ee206db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c69a19d9-ca24-421b-a6b2-4d0df29ef290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b36ee7-d902-433d-aa5c-6a75f20e600a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "44277a35-48e7-42c7-8d9b-d608410200a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb2a7aa-3ad5-4696-b098-fbfee29b7f3c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f5e5db-24a0-4271-9e3e-81ea805bc336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04bc2128-ecc5-4240-918e-dcdcd986bcb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb70881-262e-46f7-aa10-ab8a8269f731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f46bb8fb-5582-4b7e-bb30-d071e9f24469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e5659f1-04c0-4358-8aac-30bbdd799bc7",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "380dde27-0086-4621-9f66-cb6bbca5cf68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0557d2d3-c54d-42c5-b347-2c15cafff3b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ffc7913-7e11-407b-a7bd-6cb6df0d791b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "205a513d-e2bf-4717-9c34-fe8c4d7654fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c05d01-7ffd-4267-98c9-bd72e02e7427",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe051eb-afa3-45c0-b246-2f703c310ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "641dd30c-5649-4544-a8f1-d89956998518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc23a6b3-8435-4c07-9c20-35d922197161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6adb7045-cb4b-4a3b-9969-86eb607479b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5576238-8e50-496a-ad57-7962f8893faf",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa98885-0aed-445f-bcaf-b0900536d5c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a50e47a8-da63-4c13-8a66-f0668d67a064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed0ff7a-51d8-4c50-9c35-fa4b5db719d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "45754418-f29a-4f1b-8d12-70d92f0af55c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d01688-5dc6-43bf-aac2-201a75ca7587",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd9f073-c9b2-4f21-af87-6c67500155c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a88d07da-111d-4ddb-9bcd-e71fbbbc8786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ad1c55-1d00-45ec-a61a-59cf70357852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "40936787-747f-4bee-963d-61b5efb2d850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d524ca37-038f-409c-9db5-4ae70ab4d65d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "314a72f5-a097-464e-831c-1f73cb823aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40bf802b-902f-4850-a348-5fb06ddb0202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88688b96-83b9-4982-9145-e084b93d1278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d6f7aa8-9e7a-4004-bf8a-22f58d8c2526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d3c5050-4d15-4769-9ace-3d770fe45062",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2bd93f4-335d-4b45-9e06-442780b0b1e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baafd9c4-fd17-47f2-84f2-57e47a74eab9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56898bfe-df42-4ac8-a301-dd4746444732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "19e16881-6d9a-4d53-842a-41073f8d2f7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db9f5f1-7bce-4b58-ab4a-3600344aafeb",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83da7182-33c7-43da-ab81-02a3a3159e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe013d5a-ff2a-4418-a82e-8a32b94bdade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad8cd170-aae9-4684-94c1-cbaf9e6a0ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d4ba488-e03b-4092-82a2-d346b2554528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "022249e9-99fa-4bf6-89c3-2f809aed4627",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0214514-f48a-4161-9ced-e15c170ff2da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5e3c899-6157-470b-82c3-127915dabbee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5439c0ed-345f-446d-901b-119ec244e5c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "37ba12ec-9a10-4eb8-b278-e7ebb09ec309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a6c32e1-e859-46a8-bb0a-79cae55c63ec",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a326ac86-5920-4f30-b9ce-31cb82eab434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94fdcd52-70fb-4760-acee-6acb75be43a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72aa28c8-ebe6-4b5f-95ff-84f7e6d7179e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fcfe081-2484-4d7c-b5d3-44cf288b449b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af886b0a-60e8-452b-9509-56a0fc7a078c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f49b1f9-2d57-4794-8ab6-7e4f427f0eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d4c23ec-9581-46d2-a0dc-dd4e24a02b1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d2f336-2d68-47bc-8d6a-7394624d982e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a4e6870-9995-42eb-b189-83559eada28b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec96bf4a-44a4-4226-91a0-d12ff8d96494",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5faaec9e-6b9a-49af-8fdf-72b6738dec7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c119771-8053-44cb-b8db-efe2fc6d2986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f48d00d-e396-4f07-9b62-9af5e340fad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7e7c91c-71ba-41a0-b502-079253d02eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b99a67fd-9908-4eee-9d29-b147e2b484cc",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9090044e-aeab-4386-8a0a-669757201bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a34df98b-7c13-4478-b68f-5690b4b45cbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca88f059-66c1-4689-ba9f-6535f490e3ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b9177d3-b44c-463a-a7ce-5f0b1062e3b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b144e3a-7f56-40d4-b984-d9157179a7a1",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae43ba95-8265-490a-b32c-9f8801aa0bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66ac8300-972c-4a07-ba80-82134d8012f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f21b4f6-806a-4baf-bf05-30cf95478788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "22cf5340-59e4-41db-ba07-05cf5c7632af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b1a73e-3db0-42c2-a588-d79316e1ec12",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df3eb517-a8e7-4532-ab0d-e5e461f3e59e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55726dc3-0cbe-48f1-b814-ff74f651f7da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee072c6-ddd9-4dca-ad3c-bdaab4796449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2b4c596-2199-48f2-bd0f-8f47a57e56b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7331978a-4f50-45b7-b7f3-0c7b680a76b5",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8713483b-2990-4370-9f5c-0dcc1615c243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aea05cef-982d-4def-a835-82a9132ca734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec18018-c018-4cfc-bbf8-ba282135ad1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "88787e3c-93d1-4d66-a5b7-621b3220c4e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "482d4b46-8c59-40c7-8568-4340006c75cd",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4973405a-5925-4c63-a81c-190ac252f987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dc2a49a-01e7-4f27-8297-1f5fef3f9fef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64132841-def3-491a-a1f3-8009b7cf81ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce7a6514-e3f5-4f6c-b804-acbc9409d681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f204b407-cda1-47cf-a798-1325becd234f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c31da6-bca9-47dd-b1fd-02e80f3a8da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2783a064-23cb-44e0-8f10-54ed4cbfacc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada5a80f-ee1a-49c9-a32d-bea4d9d46aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "27f444b1-c9c9-4028-bfaa-256267b80228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "879c4524-7b09-41a7-97df-af26e0d8c66b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c9618d-eb93-4261-84c3-eda24e8a2c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1523749e-d763-4a65-8846-49a179423820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e293e16-8cf8-483c-a399-e8e5033b40a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d7d1d32-e44d-4490-9fc3-e3512ec514f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1353c9dc-db4b-4457-8936-7c223f2f8df7",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98206ad3-161d-4327-b099-77e04d0b444b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73ac65a0-34db-405b-bfc5-cda3a3fe0adf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f1422e-c7c2-42f7-85d8-638bd20e5a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8467d49-a16f-49f1-b72e-1891fe5bdddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e635038c-de58-4175-b05c-488d7cdd0c55",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd68c8f9-75d4-4c05-b5db-7219dc2d38e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "19f4c15c-fb2d-4db0-baf1-e9be0019fd67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08bed354-1334-4aec-b4d0-a2dcb3329600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "12367921-bb70-42a2-b7ad-9138a144bdf3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3a4b1b52-7f7f-46ac-981c-f15365b08224",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5a676152-f073-4633-aad9-5a92d4ec0f44",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc32b1ef-ca61-4e15-852a-f9511ffffd7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1dabd147-86ed-4896-b2dc-b954b9bda9a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f86a6b3-2355-4676-9fc4-e4145bc669e6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01fbae50-74fe-4c5c-83cc-9a4fd4917227"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22d74502-887b-4df3-8125-9fe1562b919b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4aa2fc9-e2a3-47d1-b5a3-ab29397dd7f6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "59852aac-f185-4384-b391-a7f150ceb456",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c6d5fb5-f092-4d7a-adde-37f5bcfcc695"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "12c984be-b4fd-4e7b-9d64-2a52fc00a0fb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2d0078e3-ce07-48b9-bd90-23ffdea19431"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0de75e01-2177-4821-b201-2da306d91141",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2c5f1f26-493c-491c-ba7c-b051ba44d281"
                }
              }
            ]
          },
          {
            "id": "0c42e3f7-9acd-4cfa-983d-a62af79674c2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9b5d32ec-6004-4d44-acba-630100a1f2f2",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "c366325c-0490-4c39-90a4-f960c2307348",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c6dc0a-00dd-4ffc-a2ac-a2363392fd8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "855d946b-30cc-4c51-b8ed-7a9d0d4a7ca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d652720d-3733-4424-9c40-e9f958a99e58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cc06c66-6ebe-4770-a240-79456e8f4782"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "840623aa-9e7e-4214-a25a-73eeab53bfe0",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "11a71ab3-678b-4bcc-89d4-ec9924cf57a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8e9f27f3-bb0a-4301-88bf-38c0c625f95b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "353632c8-8058-44ac-bdfe-3d6262e4c72f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2ed73621-93fb-4421-abe5-531132f78f5f"
                    }
                  }
                ]
              },
              {
                "id": "4e29c993-613b-48fa-9d68-a0eea4dfc196",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bae17aa2-5795-4ed5-ab00-92608e1cb9e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7f91473c-87eb-46ef-8627-af51d8bce0c7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b0d6431-03fd-4354-8ff0-ebc1485453a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c8fc6f12-3abc-43f9-9019-466ee0c8450e"
                    }
                  }
                ]
              },
              {
                "id": "8fa8a278-b41d-47fe-83f1-49645dda37ba",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eafff9a4-75ce-4447-af22-765e5edeab44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "988eef4d-2b6f-46ec-85a9-3e98443f0ff0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e164d56-03d7-49f9-95bc-25f4e02b37fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "36b6c828-f3f5-440b-a7bb-e8c8c0519545"
                    }
                  }
                ]
              },
              {
                "id": "57c26245-73da-441c-b6b5-abb5b8fc4d89",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9db51b4a-595f-43ce-94c6-2b389a1d7d76",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "616b8d58-cef2-4472-a415-56ca42afec52"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ce11dd9-7574-4eb5-8dde-4439826bb31d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "828fe39d-cf67-4cc3-9256-5064c1eeb9cf"
                    }
                  }
                ]
              },
              {
                "id": "c2377529-68ca-420f-b02e-d5f2355b5521",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db5a2b46-6a9c-4d35-96af-33ebe83373a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8d8919e7-0bdb-40b0-b63e-426bfe53433d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "49c3e9e6-9bcd-4ddd-9fde-1b2db18dbb49",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "aa1b2b51-a9e8-42f2-8177-2148f8d7f54a"
                    }
                  }
                ]
              },
              {
                "id": "a3846184-2428-47b6-9f73-499405c97c1d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5cbbae21-fa6f-4898-965b-0830a2b8b337",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "202de093-c94a-4744-beb4-781d5f9f5b18"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f21bb35d-084b-4d4f-a425-1d9ed5ef1136",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8f9dd1ae-5372-42ec-824d-63c4d298e855"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "477c490f-2960-45c4-970c-5b6d1cc7d822",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6991c637-083d-4fdb-ab48-dea3dd180222"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e0a5e8aa-9368-4bed-a7f0-070a66464e91",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e976d1a8-0e10-48f3-9abc-f5c3da669fa0"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8011f9de-058d-41fb-920c-de480b3e7a6f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "31acf839-3acc-474a-bcb5-157a167ce367"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "80b9832a-d528-4444-bf93-e0c817c6e479",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7dc60bb3-cdb1-46f6-9298-bfca266acfcb"
            }
          }
        ]
      },
      {
        "id": "06928ee7-0c2b-4afd-a280-448e6249665b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "b08aebcc-f1a5-4525-bd4b-833f875f5c6f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0868e6e8-db05-4b92-ae83-b22a2ee20e86",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "04afa2bf-0831-4ae4-b202-ce9ddbf3afbb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe88f42-1c87-4866-b3b6-074131dccbed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63c0609f-ee68-4529-a08b-bd2af3f872fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb24332-1e16-4b41-8601-65143c20652e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "46356eac-08d6-4e4e-9360-33f58d16e5da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a734e6da-3e32-4cf1-8a67-a951d2642292",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38514667-c46f-4f36-9783-52a776a99f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22a1d061-52ed-4607-8f11-ee7df627e46d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7448fb9f-b0fb-49a0-928a-e0329fc6ba94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6dde824f-cffd-4b2c-b737-02a012a505a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf3247a-6d85-4faa-b099-d38bd6c92192",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "099a2ec1-e890-405d-bce1-a20bce280f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dc3b14a-1e91-4338-a429-4ea33a050644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "142c8db7-6b43-4ea3-8c4b-badc8cfd04c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1667c93-f3de-491b-9295-aac55464cfbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd826ea2-eafb-4e75-9c39-d8a013f8c5b7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e7e3530-4564-44b4-9d54-6011fafc065d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6374a965-df2a-475e-a2f3-4b76736ec73b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd7ad8e5-fb43-413b-9679-6c696af049e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d3527a8-eded-4f63-a572-36e1e3c62266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b41165ab-4686-47f0-8caa-0675a99ce463",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d4e9b0-2cd5-4673-aa6d-e23e62d0ad37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92e815da-6685-4108-b824-2a1e71ba8854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7976150a-cf45-4b16-84d6-d44452285145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "893e3ec7-2423-4fc9-a383-0042b0be201a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c82e704-46cb-49b7-81aa-45a6d0926766",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01da0e99-7612-41af-b771-bba2ba3d6ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e82aa2d-5036-4388-bd34-5419e727d735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3755c0b1-b8ac-4f5f-80c5-67b35c658ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf4e47cf-1472-46b5-a52d-11d67cfb517e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee22256-0914-438b-81a1-0c93f3b9ed9d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b89843-3ca7-43ed-88ea-673265658211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9c352b5-ab60-475d-bdc2-1a25703dab32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f470b7f8-094c-400d-a4c4-243b8223681d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "47e62b0b-15e5-49fa-8353-cfab9dcd204c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a209ed7-77df-4542-8dcc-e0d988829e05",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e12586-849a-49dd-8dee-bac315e816e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff01f70c-ae59-4c81-9348-6b3c85c9c253"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ec9592-00a5-4d56-ae1a-9a0e2609d7f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8479f40e-7f69-49cb-a46f-cfc3e3b46af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "576bf05b-cbf4-43ae-9202-3dbc63b5ea50",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "559d8fb5-8fc1-43d5-a9ac-b6917e9b9971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "017d5f34-c6ca-4186-9d1d-ac1094e79262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5bac76b-18de-4fb2-a602-7c60d4fa60d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "78c7d648-5232-4334-bfeb-61a374b0f54c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef9835c-18cc-4b3b-836d-c1e9f64215ae",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f96ff1-b5ac-4bdf-806d-bc76306b89db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86cfbf91-17b4-497f-8678-2c21ad231815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e1902ee-2d71-4405-a72d-32fc3fafc690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b286775-0791-45b5-84cf-618d5b717354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e7c0d69-6223-48ea-bc3f-a868ce8f7a1f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d00f958-94da-4e7f-a567-f6a96db2922a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76200e11-a629-4299-a533-e182dbe45f18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69bc635a-7a3a-4495-83e2-3faaf4c3a6e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1b25ed51-dc2a-4d72-be24-cce0af03f88f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c06e78-27d2-49e4-898e-5f340137874d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa919d0-d563-4a16-a058-6b6aa9f5711a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ae45e20-da39-4132-aa16-70168a6c7545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0fa3f2a-ff33-4466-96f3-eb6020c978d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "366329bb-ee7d-4468-a3a9-656ee50b1c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6667c7d4-32aa-4b39-8b16-f86957494931",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ce8c33-3186-4e4c-aaf9-8924b2a77b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4792203b-4f1d-45cf-aa30-d8ba95db912f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45aa124d-fec9-415c-85a9-ed7ae1a07273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bed9b005-206a-4468-b409-c2adf50d37a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "484f4ee3-ce52-400c-b13b-29f6a37b6856",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53de49d8-285c-4303-afd3-667cba8c1e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ec81726-6a48-4d22-b616-c83ffe8e170e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c9b320-be97-4b92-adc0-5bfedf1315c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8535f710-4aea-4779-adb7-ab3bf4cd3737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6f5777-deb2-4f0c-95e6-83ef5e50492e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6698f25-89b5-4485-9582-894bc984dd9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "249ba594-6d50-43c3-8838-73f442cc6f3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ac85ac-31d6-4a5b-9332-6bb2b1cb00e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cb60d33-3a2c-4749-939e-a0cdabbb3f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57277afb-2fa0-48f1-a34b-0b6f205983e6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "844d3080-00d6-4b87-a1a3-001330368b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2416d799-07b9-4938-81c8-0cb39eaa13f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18ab800-1d14-41d5-811f-0f501d874204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3625ac14-638b-4ef7-b573-f7da601a65cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4545b3ae-83b6-4cb6-96a3-fb791452d69e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5662c841-89cc-46ab-a478-bd95e24395a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0561fe0e-446b-4ccd-9536-1ee3fd6b31b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f58e5286-79d3-4997-a8c1-7d5c43293bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "26e33541-ad46-4134-abf5-50d13253ea73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d83008a-6b07-4a03-91e7-17f36b9a48dd",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b841b66e-d610-441a-8dcb-2ad497eb8d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d809896-2525-4f57-9c7b-24cf3772b40f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d9a0099-8e50-4dd0-8310-f528d1a20705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5115c15-46f3-42ee-9f84-41bb00d21969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab5d9de5-0ee1-4114-bcd1-532f53900389",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b07887a8-17f0-4d8a-9b5a-128b7c05e7ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03367e3d-5e72-4fc4-99f6-92c553d81a3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0591632b-80e7-4685-a369-833d6f2d24ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4881c20-3155-4d92-88b9-4a2f57f69864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20082fc-4d1e-42f7-8bfd-9d69e5b6a761",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7757177-1dfa-4bab-980e-a3f6a2131127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d68288b-8283-44cb-9039-80007cc2fe63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3058fa2-7995-41f4-9294-a815e6a2bd24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "114d569a-e37d-435f-a911-709271018b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3d36ed-bcbd-412a-ac4c-e29a44842106",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8930ab99-0e3a-49d3-a631-ee48d0043b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db1813f7-ce3f-40f6-8109-cd97666dc3b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1bd9882-7157-40d9-bb8b-6dcdcc1ba1cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "990519f5-2283-47a2-bf30-350dc8828c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f05959e-a716-4f15-8afd-61bcb5915ed8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "825a0fdd-0b22-475b-b2f7-75a7ff7c5192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d79a87cf-7426-431e-9635-8d9276d6b4e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8900cc4-c7da-418c-bdf8-21db9ac529eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3957ad1d-8c0f-4ed2-814e-350c15d5041e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a2ae75b-6b2f-4e59-8626-61f46d559712",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4a156e-8fa7-4963-84c5-b2fd442dc91f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ca227df-da58-4a63-b97b-ff2869d3a66e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c23d651-f936-44b2-9a2f-9c51baa5eb11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cea98af2-23af-499f-8d63-57aece917d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a256d4-29e4-49c3-b515-c735bca12aee",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99561d0d-f396-4002-80a7-0a102b38c6bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38cd404e-3f4f-4f15-ab9e-d20bd77249af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab68f26-1a89-44b8-b95f-2ecbb3a379bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45436613-b57e-4310-babc-5604c3c9427b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "516d5017-4e35-4d05-9494-6f5e8d98e990",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ab91a6-c510-464c-8748-51c594148f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90dabbad-d71c-43c3-a200-5c7f116c4a26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0451875a-af93-409c-8297-1283526c7aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30786a02-b67e-44c4-a56b-27c7cfb79d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd19f37-0f8f-43ae-afb5-c4f3851e1c8a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a7daf47-02e2-46ef-ac17-5b7005ea5095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d1542d9-ff70-4d7e-b508-2c47c884e667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b867d542-9e3e-44d2-9959-6974d42ea7d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5a0f1c0-7ac8-4354-bba0-0f0103b6593f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcbfb1c8-80a2-425c-ae2e-c93a70d772d9",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef17974d-4e79-4079-81ca-829101cdf839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06e3cce8-a235-4288-b6f6-a27408fa7383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c4d33f-66e1-47c2-9034-dfc9b360f6a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dca0ef3b-b990-459b-88a2-6c27e1964b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b7f11c4-3675-4246-8a27-c21806576430",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bceb149-b34b-4af7-9ea6-0f5bf0e86415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5cac598-9dc0-4b1c-be04-86f0dcbe343c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a62e931b-14f6-4660-9dcc-435c8ee34888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4be082c8-1906-47cd-9a86-e74c39568c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1996cc83-8156-482a-9aa3-1e4696958477",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36842ae1-073c-484b-a75b-6f0bba1c7c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5aa7ab4-a1e5-48f3-9d9e-4d5eb6df2eaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06f4ec5-8527-4bb6-8ef8-05f11519ad6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b308f54-16cd-413b-8d6d-bae0e36336cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf4a483-9f2b-4866-8cc6-0c5d301bc206",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5adacf6c-0213-40ca-a592-8049e67611c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9478db9c-02f8-4dea-bbe6-82caad31de5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee7d9574-c407-4b76-83a5-0669e288cefa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ebbf74e-48c6-4e9f-812b-1c56e96b2bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1758e573-8844-4ed8-8b66-f9e339fcb060",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c97ae545-1591-49c0-bc0d-9df6601c17ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f31b629b-6f11-4e46-8625-fdc8214f5852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b7d5bd5-ad69-4c61-9fe2-df88d8bed47c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "923d6647-8081-4c42-bfa9-618d261b3a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f582ed7-44f8-4f53-8a96-102848583285",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb633c1-6f60-466e-b63f-5b99ef7f71c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5655af98-4793-4540-969f-46549cd714e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8763884-5584-4d2e-8c7a-5d4a7ac55a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ab1dec6-e200-40a5-a191-e0af8a1532c3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6e38dbfb-7763-4867-bacd-b833183050ee",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "46d7308b-5869-456a-bd14-b63941e4783d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d12124e-89f1-47ef-8411-9720130d201a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "80591ab7-1fc1-48f5-a1cd-cbed70f08358"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41d403e5-ca69-43ba-8be2-4a1b5ae89e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f9aa5420-c727-4735-949f-3bda231f6a8f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fdb1c797-5ed7-4b15-a1c3-cacf2285c34a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2dc32bf7-0ba5-4bd8-b06b-2c966ec42f30"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1faafd56-d011-4cc5-950c-3365388b6280",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "44645c1a-1fae-473f-bb27-a51f4db4259e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4db54c19-b83e-4709-8f79-8c30760d4bda",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c7111bd6-48eb-4100-89e1-3d82f907bbb1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cf2743c9-2c2e-415c-b0d3-93cc37355eca",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8667755e-1efb-4205-8660-57914f2f08e5"
            }
          }
        ]
      },
      {
        "id": "7bfaaf81-772e-4bbd-86cd-149101871387",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "4b202956-a1f4-4950-ab64-dde78f2b0dd7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "866a536f-cedd-4545-aa38-402be4c9e5da",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3bb4cca8-def0-4e87-ae75-b68514508280",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "634161db-e467-4f12-b62f-d59f0dd7963b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37babd55-7b29-461f-8e3d-525b542095e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28f9865b-894f-4321-a204-ebe5d1a33802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8ced1c4-6d84-4639-9dc9-5e62e4d1dbd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2784e78b-93e7-4877-bd9d-9819590a2eba",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a1630ed-63c2-4b62-bc56-9eb9c30f9120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6037078-ab58-49d9-b90d-c6e2f2ae8727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37748a6d-3bb8-4a85-b104-7dc1c704022b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b421d6a-0859-45fc-946e-62feeef3ae07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be175069-ee5f-4cea-8553-154c7c5a3ab9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e5e2888-8fd2-4efc-965e-a6d9d7abd9a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39967866-e513-41fe-b15a-481516783368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c23b377d-0f16-41c4-b3ea-ffd023c9d483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c30612f9-bc4e-446c-a66d-141701e9bedd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a30939-1175-4103-be30-0d985961dc45",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ccc96af-1528-4d89-8e6a-782797fc374b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "756e645c-34e7-4b71-a458-bd767bef6465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee45679f-e883-4826-9d69-3a30c67f7ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9104eb5c-b57d-4b5c-a22a-0e3b0e9b7bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "511c4c61-53aa-4219-a812-da83af0b5968",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b870bfe-ac1b-42d2-a551-35d270db9565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbaa2e81-4ac0-45c9-9cef-bf4f89ded729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88793e62-9988-4258-8f67-e0bd27eeed9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec02276e-686f-491d-b07c-5f7535f086c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20e95830-8afc-4e30-b474-0b87615a5fd0",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43335959-f052-4319-b87a-0ad8d7da9bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf11241d-9e30-49b4-bfc5-0f9504abd4ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b02b02f-10ba-4e86-a5fc-6248fd290479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3424a92-fc63-4b04-a1d8-daa6de622c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee44942-cceb-4e10-b393-912936ed2a34",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46abf848-3ba5-4393-a9f6-7183ce3f2c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed920d36-1e39-4315-971d-83d8c364ce1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "832399a5-9d61-4eab-9c19-3e62e4d67611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "18ae8353-6d4f-4bf6-b3c1-e2ec8afafb27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b36136a1-7460-41cc-925c-e5c7f3acb493",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b41ad0d6-124c-4af1-adb7-afc0a5beb296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11cf57df-b6c1-4bdb-8c0f-4f56f2e784f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69fb91ae-2284-4674-9100-e4b7737baa50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9fe5f4f-0698-46e1-9d30-7aae81c9c1d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baff2db2-25f6-447d-9570-2b248dd0eb2f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4113fbb3-8c65-42f9-859e-51f29ae9868c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9d8f5e8-749e-4b07-8636-3c7b85686d8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd196811-47f7-436a-8d9a-64ca64c98171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3836f52d-f9f7-4066-a0e7-4f51ac48dbcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f404766-3021-42a7-8fe2-63d644178704",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8694557-cbcc-45b5-a860-248ad3ed2d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4787c0ee-8f6a-4366-b44d-c7fe077cf0c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa34893-a489-48fa-85ba-aac720a19e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce546564-a604-4600-b8b6-9e36d50fb98f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "066e53aa-fb34-4a9c-8db8-fa7493537089",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b324834e-8af6-4552-ac38-b10858bd3a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6dadf6e-8bcf-45d7-bafb-c7671fb962b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d70b599b-7e70-4429-b803-44accb56eb82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ddc245dc-af31-4e7d-bc26-b79b798a6db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b907578-2e1a-41e1-8564-1cf7d9f11e07",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be063c9c-3ecc-41c9-9231-1ceeb1a454bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfe5d380-daea-43b3-bdf8-b22b46ef5e56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c02270c-9e4b-43a7-8faf-a122532a8fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ba23d33b-4eeb-4022-8329-cbfcc0878667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0170dc8-2735-47d9-b218-7d3f827afb98",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9840a75f-4ad5-4558-a6db-ffa7efd56d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dec6f189-346c-410d-a5cc-096b3bf624ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4632063-0189-414d-9ab0-bffe40a4fea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "82c580ba-18bc-460c-b6ae-35cd447993f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93245f4d-ba45-4212-8f70-e2e3af11cf3f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b8bd69d-e7bc-4a56-a9a6-cf60caf7829e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35cb9a3c-6c6a-4259-9b50-788cd006cb87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25c5ad6-a442-40e7-b630-a94c658bce30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5b548a8-6eed-4341-b7b3-48dc46719516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a722170-b420-4946-b7af-07ebc0b50963",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7704d5bf-9754-4a31-ac51-25e62be7f085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39fd0c9e-3c77-4353-ae0b-8c0e26a39c6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c832051-25e8-443c-850c-16b09573097c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f631da6-be12-49bb-b243-fb769b71918d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f583c27-509b-4214-b070-32988536bfac",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "917bff81-cbcc-4695-8b4b-44fd5b341746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c126165-29f8-4888-abf2-cfa0bbf526b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8efdc53b-0ec6-4f90-be4d-a24dfdc9924d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "46be5c44-0712-4179-9015-0039006a9942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5023266-79a8-4a58-83ae-4ba1a83346e6",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a51799-6bd3-49cd-b7fa-7a91f30090b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e6a3845-63cb-40f1-a758-6be37017828c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6282c913-5712-462d-8c40-eba0a0bd37e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d0d810b-5e0f-42f0-860d-5730aa78b269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3967da27-ffd8-4a31-931f-9e9d39bb7e6b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ef89ae-6524-4499-947c-cdc19df25ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee887724-0181-4e39-b47f-dfc40fc340ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17394e5b-1d30-4b9e-bf04-97c5e31273ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d5ba02d-2469-41e7-a469-a54b4c070f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa769ec-26a2-454d-8d45-c9df230c617d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f21d93-6dc8-4c6f-8fac-2eff542eb1e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e10b2de9-fd53-4c31-892b-b7fdb81d2890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f3476eb-6033-48fb-a2f1-938f6dcd4caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "587ce824-76fb-49da-ac35-f5d4056fef07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ea1bafe-83bd-49c0-b6e9-0d2a1d90eeed",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d4afdbd-7c1b-47ff-8f46-a6504d94586f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e2c60b8-681d-4f7b-bf3f-8273321d45d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d7e93d-bb52-41a8-9708-ed3a9537a1d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04b58430-47b1-449c-a32d-4b3d2b4c76e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cbdbaa6-ac09-40ea-b0cf-8330d52d83dd",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "606d22d2-c250-4640-b21e-2eae28d61b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29ba8b6d-eaf2-4a1c-90d1-2dd8ad1d0801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93154ce7-5c51-42b0-b1d5-93415809a8cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47a126bf-3ad2-4def-9360-60a8303128d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "147b1598-a7e9-45de-981d-6a2f410cf0af",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2aef939-4c2a-4dfa-bc9a-fb5f3249e8d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33afdd5d-cbda-42c7-bf1b-2288d146fbb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99cd57c0-04c7-4be2-b33b-4e55bc3952ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07ca4b31-5427-4973-a45e-88b0d71cb5ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67bcddff-6ebc-403e-a877-2bf2c48aa91a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44eca6b4-8e61-4f9a-88cc-8682755f5acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9708339f-c4e3-47a5-8b05-884912e5ba8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e453450-c816-4b84-9481-bd53a34ddb24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ca125e6-3691-4edf-85a7-045db5aaa212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da2e5ff8-5e0f-4892-8b28-d0fcf27552b1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "331afcca-7d5a-46c2-85b1-d51dde418c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac13c1c3-2f65-47de-8f3a-ebfe6563b0d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5743f358-980a-4b28-852e-7392edf88b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b85093b1-d956-4f72-a0c2-4f34ce509199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a598c6-005a-4aca-a588-a6cc6644675c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f847340-f7d1-41e4-8620-b3c63b7de630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b790ef8f-83dc-441e-927b-809c41e0a93b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae72510c-3bf8-431b-b1e5-887f24469850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84ebb738-d8cf-4bee-a7a8-c20f9e8f8f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "341726cb-36e2-4cce-bfbb-4755df97c1ce",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f65eb017-173a-43ef-aa76-ea9ab9120bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20a75627-72be-4242-9fd4-88102746b7b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953c9bf5-75ac-440b-802f-d915374c8251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "185dbeda-77db-46ed-874e-d770a30f0bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ea5068-9777-498c-85ae-d263135c1d16",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe78068-70c2-48ff-8449-3cb034112ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8899bccd-d5c2-43ef-8b06-8a7790c4e550"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39352825-540e-4129-b9a3-bb9b9446829a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b798ff0d-9810-46d0-ad63-6f244397da37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ad18db-1aff-4da0-8859-ebbfaf3f6c98",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee43e5a-d484-4c4c-b99b-d11fb9b017d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f81963e-391e-42d0-9003-c21877116128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d56af592-f8f5-448d-bf14-318cf0653d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a8b6029-1246-43b2-ad51-4e267b24c98f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ca1219-561d-401b-bb96-8b4426738629",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71271a4c-4190-49f2-b6d3-385f7a8c74ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a131bbb1-c3d2-4a5d-b2a8-bb3adf97d550"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2dd2572-78a3-4845-b684-36cc3c417064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e968f818-2211-4d50-9ae6-4da2c681f47b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a4da0f-a752-436c-b280-6f1d5f3ebe91",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2c76eb-174c-4675-8e3b-63da2da037fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7d9b5fa-7705-49f5-8c81-695d6a0a6db9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2edc8580-8d43-452c-a6f0-414dacf7cc27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0fe374c-07ea-404f-b5f4-73695bc2256d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f4f3e3-9984-474c-8385-ed84845d2136",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f32441-aea6-4b90-9058-6ab90994eb83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "778f0df8-2af3-40db-8a28-1508d665b8ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "891eb3ee-b004-4abb-af68-de4da2610030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "182d73af-ddd9-45c1-8abb-698e3052b3e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c33ba81-dc23-4611-a85a-f214bd4f2ac1",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f519e7f8-5f51-450d-840f-23b348575319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b579a679-a56d-428d-82cf-fb6da36afcea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e77e0917-79e2-47ba-bd19-6023da15c754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9302fab-135a-4f56-bcd4-00c6ee8ef543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa3ac28-cf41-4e0c-a0c6-e09922b3b1c6",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98bb12be-f0c0-40cb-b0e5-6967a5b91727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15bff7a3-9329-434f-81ce-0596adffe461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53da1711-5915-4ee6-a3aa-f1b600865309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd7394aa-24c4-495c-9d7c-4710ee01eea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac76f999-1160-4e8d-95a9-07571a607cad",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "145189b5-c6f9-4e28-855c-333bab881620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d556c45-29b5-40e7-ba0f-543d8bef88b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80fd752f-8e66-4d4d-b116-951014bd9710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f60a3d21-4d4c-4793-8ffc-bba4d9e4273a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4aad2c6-0add-47f9-8622-bbceaee521c8",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b1c0e17-cf48-4f0a-96b2-9f2b8e450933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c36598dd-8865-4060-8bd6-4f47eaae8553"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df910ce8-7207-4c47-95d6-428cef626903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d5ea02b-983c-4a11-8cef-4e8b340cc81e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d2a1ae2-b6a4-4a33-8d45-13a8fb5e9f84",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b3397f-ba03-4946-9d2a-11e6dfab5005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6956980d-47f5-4959-b46a-56ebcd7d5e9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "143bb79c-e40e-409a-b5a2-dd157af6bace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "522305f0-94e7-4845-be8e-81bbbf577fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d36062b-4aa5-449a-a102-4bbebf723891",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34212f29-b5d6-4971-8388-914117faf815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7731d40d-d20f-46b2-bd17-58359366cfe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b9a3c1-d8a8-46b5-adc9-3426adce8e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4094086d-f3cd-4fb9-9f69-4ce6539df05c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "62be9dd3-6e59-4a35-bb45-9160581dad8f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7e43d548-e007-4b73-a669-7fa32e3f5a1a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c2db1a-63f7-4e49-a504-b4a0fefb012e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "88310c74-07fc-4a6c-8c95-ad48e285a841"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a50b9bbc-1a43-4a13-92fb-ada66a7f3a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "79173550-a9ca-488f-923c-b3dafe56a971"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9c5e85e-97fc-4c32-9f94-cc9212086e35",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "59725a59-311c-4c3b-a992-7925a70e0c22"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7facac42-65cf-449a-bbb6-63e4cb666258",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa7e5c0c-24b3-4685-817f-7b63327d694f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "12596ed2-3f07-480c-89da-2477000cbf65",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2f1c6024-6cb2-4fd1-8354-65cc9f48ecee"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "98164097-e8b9-49b0-8b49-f3e02dc07c97",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "11d47b74-88d4-429e-9691-9857ad009f59"
            }
          }
        ]
      },
      {
        "id": "fdf3b155-08ac-4939-a109-839bda33fe97",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "84d2a1e1-755e-4325-9f44-e42e792b5408",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b9561308-0697-4fe5-878a-ad647a440fd3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4af99f59-7764-4790-8baa-a2399f2e2345",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b68a91-76d7-4a6a-b048-4f0527d139b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d58250eb-3b25-4f00-adaf-92b76c556e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "396cc556-2a4d-4770-878b-d6d1b8a9f6e2",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d604a74-98a2-4d56-a28f-4a62eb0568cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2f38f3b-2ac8-411e-a963-27b40bd726df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b082b83-a51b-47a8-9cda-a9a3320a0340",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e2b82b-c01d-4538-9ed8-0158f954ba7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70f10f06-c53c-419f-b4c6-1cd2f6d6161c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84e01c7c-0a55-45c1-8870-147f0eb86963",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd025d5-73e9-4f82-aae6-218343ae54d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99383ab9-61ed-4bea-a172-f8e54e1893ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4825bbe-485c-44df-82e2-634eeb144a2c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b2805b-5d4a-44f6-be29-3353e684454c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc101605-e6b4-4e29-8173-d777b0604897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f1b0c4-2cf2-4481-8191-726cb1601080",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e7bd7a-bfd0-4775-b24f-a961929fd6fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22a9b197-45a9-4620-ba89-8637979929b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d2fd68a-a88a-4696-bb11-012e127da92c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fff6cfa-83f2-48d2-9483-2b6ded341e52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22cc870f-0bb4-4454-af6e-ca8d8da1d706"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b64768-e8d0-40be-8ecb-b5a275410348",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3560a946-18e0-437a-a326-4b22d59af81b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a06347-2fbc-470e-9e48-c7e3c9802333",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "777e7ad8-5956-4767-bdab-e922189a4b69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f293eccd-cbd5-4554-bdfd-33fe813a0246"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b780db45-b0f2-4f7b-84d0-db543fe12933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe327300-b27a-4d3a-9062-d551308b5379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b0dd3c1-2657-4bdd-875f-5b254656e7d8",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "003cc9c1-3cf2-4ff6-83e1-beaf478c6f66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91168247-c673-4b62-ae9a-0a80f8d38837"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91be39b4-c070-4ea7-9247-19da3f372a31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e942a5b5-cb6b-4e6b-90b7-584f850c7c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d893654-9a65-4031-8839-55d175726119",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f7d33f4-83bd-4be6-91f1-d9bfc3312bc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85e9fd19-5f63-439c-8190-c2a519aee3bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ebce3f0-10fe-4e52-a42a-2d87b3dd4446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa611a21-bed8-4635-bde9-fc26c76e2e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dcd78b2-2328-4c02-92f1-e909ee185764",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f7b21f3-4cb3-41a9-9352-9a7726494a43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bdc56d2-82dd-4e33-a93f-093f507c0521"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9424514d-5f4d-4500-8700-cfc1168a1537",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec8774b2-e5c4-4119-9c99-681028c90fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a3fe97-693a-4221-b2c2-7760da7688c6",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc6f6a0-bc8a-4247-a816-c3df970594a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60edeb76-7e80-4793-b905-2dd20f0cf267"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ef056f-6662-4fd5-8e08-e7c948465024",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aebdc77-aef2-4e61-813e-26c0314e9209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2991a9a0-d498-417a-8d22-6ce52445fb68",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a861723-aff5-4b64-b705-2250990c5240",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3339fa1-1873-47b8-a207-81e4fcb8a4f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "757bbbfb-83ed-4c57-806f-4bad412e30e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36535c03-b46e-446f-a07d-35a06ab6506c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8fa6142-6c1c-46e8-80f6-19837935596b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ddeab2-518a-4dcb-af83-27a7ce417170",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b541b02c-103f-4c84-b745-7c979221fdd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b758ea75-4b62-4283-849c-4dea168e1adc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0538ef8-38d3-49ab-aa56-b4200194059f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e184dc8-b256-4eda-9e1c-386feac959b7",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41fd3d7-91a9-4087-a78f-610bfe086594",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ed96270-1224-4f1b-8c26-e7c695182544"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "389b34e6-df05-4aac-8157-998b05f3b76d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b242d04f-d813-45c0-ad9e-a0ff1715e517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0fa86e3-2cc7-43df-9f53-efda0b4d49f0",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c0c321-14a4-4520-a39e-244ac638009d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a795d58-1b97-4d46-b41e-b88b3b130018"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6f13f2-7c19-4479-9360-4392301db028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22906220-ac01-43f1-bba1-ea17b9925100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c96c96-3df8-4657-bf01-b7ce4cfd07ad",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b15d5ec-68ca-4005-a19b-7e23f7486b3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a810aabb-8573-4b97-9c39-6f969410cb18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "596c2032-1ffa-48d9-ba4d-69a9bbf8efc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "508da4ba-864b-47c3-a7f8-6949247aceb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d5ea16d-8fda-4c32-a3dd-fadc20c718a1",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040d86ff-4505-41cd-854c-70805dbd2f4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f6a6b3d-6606-42de-ab15-c2d81fc0be2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53794fe7-80db-4573-97d1-a0b71facb667",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b573f21-a59d-4823-b59a-25bf8d174150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f92beba-13cb-4eb6-b614-818589fb5a8f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c59c0c-5b07-4fe1-97ad-e42041263d7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "298c7fbe-2e1c-4ede-a9c0-ea1a89d0d84d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe5513f3-b4e0-4c1f-b021-677847a7454d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbe44103-004a-4c43-83d0-5b030f102a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa311d85-0b5a-4f43-bfd1-25d42350d1b6",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82affc3d-296e-4380-ae40-5ebb9219975c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "479ef196-8c94-4f2c-b5e1-41137997e357"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49cc0ad8-5768-4a1a-88bc-d6fcae8cf32f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8c2805d-703c-40fe-851a-3ae45030fe7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e733bfe3-4d7d-485c-aae9-905bbe1294ca",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d3718cc-9c46-45e1-8677-d96547f00f18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "068ef21e-bcf3-49f0-9a38-e0bc31c2cd4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7ee565-04ff-4756-8e58-63d2fd6a0963",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b635478f-5246-440a-ade9-c7d2f551b33c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee3a5fb8-f382-4702-b0f5-ddffeb7ed679",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1ca555b-61de-4169-9305-d87f6e987b55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01cc8d53-3b77-4b87-8b2e-b6be614dfe99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b189312a-f7ec-41e0-8cb6-7e583989d4e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86230c24-8f26-47ab-a5cb-7f3a64c59e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6159e72-6ddf-4484-801a-011e5a94a1cd",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29eb622a-0e38-48b4-89f0-b17c9da64931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b2fbd00-d261-4c54-85c3-f21ea45b4846"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f975c96b-0cdc-4cac-8ea5-79deb3400e81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbe8349c-c62d-495a-8963-216642820544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79adc7c8-e1ff-47c3-943d-ce688707c2b0",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d455b36d-f0f8-4d6c-8303-337594fabd21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08e4763f-1aa8-4cf9-a569-7d5387bdc439"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "864dddec-270f-4178-b776-8bd99785221b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caafbdbf-7212-4661-92fd-461de43f8816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2856af78-9f55-4f62-838c-42814b5b9c8f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2267a049-1f52-43a5-900a-b27eefa66eeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1317c9a-b114-4505-9ae1-e79a210e39fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02249113-3855-4230-b686-6eef640b2e0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f0f23e6-b9d6-4dff-b699-c123486cbabf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d20492-a5d6-4ea9-b323-4e03cbe11d9b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30252448-46b7-4f70-bd85-e6f4b71c2643",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94652286-863b-43b1-a32a-cd73eeaba470"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a10a841-5951-4f78-b973-9777ff902eee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2b4b5dd-ea34-4522-b471-9789266ce8c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204ed05c-689b-4f29-a368-cf2da6b45752",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "569a87e6-5ef0-4cc5-9b61-abb3d3eb3718",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f22709ed-ee16-4113-a110-30f86ea36246"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d71277-f01a-4506-bb5d-b25ce6c35bae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0940d045-6144-4b5c-b2cd-e547a8dca881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7128e5a-2698-41eb-a8dc-66664bbb4e74",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebaca8fd-baa3-41a8-a5f1-d1465c891a56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9762fba5-9e15-49c7-b853-b29843185ccc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c410ca-a86f-47f2-ac12-1f4279b9e271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a7a2730-c214-4f1d-b35f-62a30dbfae83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12618f11-bb36-4878-a8e3-9fa4828e0ff2",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e71a9c-4b22-4399-a683-347fe86b85c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f201af94-e051-4b9e-b37e-e6eea0b96343"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa800696-be54-4404-bc95-eee3f2b3a7df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e41edee8-407b-485b-9b61-dbfd76ecc55d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b58f1c-d567-4f0d-949f-045a2697b6f4",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33818d36-194b-4b4d-8553-3a8bab2606f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af441192-7143-46e8-87e5-dc31a6d8d287"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c19f603-a385-4a63-ac9c-e8d57b736c03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bf922e3-3d61-4e98-b108-86ec657748be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b11f4775-9ba8-48ee-b082-2bbeef57ac2a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "676cdded-0bee-425e-8bdd-5b0b89c97f27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ece84a60-64b0-4fd9-8e39-fb5b7aee3ddc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4852ba15-3213-4f85-96df-9cf9204f09bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35a28f15-231a-4a5e-b13f-63445b0b4583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "525accef-e28d-4930-b1c8-28018bf58589",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d41342c-e67f-4544-ba5a-cc348620762f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb3dc05f-5bc5-4666-a74c-9e8ea724e4f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca247192-1a41-44e9-82a1-6d42c818c5ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f499401-0774-40c6-a456-a962e8d61f72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41d44f6b-ee28-4607-a169-916e620874f3",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af4b956-bfe5-46b3-b33b-b153b10d2981",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c3387e0-fbf5-4080-b2f9-805bbffe6db7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68887f0-4a19-4df9-98fe-04a1befb49e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afa02b73-d285-4e5e-9597-234fcd1f19ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37cb4326-bb5c-4b16-adda-0a2174c4cf98",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956c2885-4b85-422e-93d3-67cf332ecdff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bb249bc-2933-44af-a6a5-1a6b1e6c5ee1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c2ed0b9-a66c-4b1a-9c75-041743e6e3f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5430ffd7-e6d0-4ca8-aab7-564cd301f4ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae4f88cf-261e-4546-9df8-0ffb431080b8",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7482e406-cba4-4ba7-abd6-f7cf8138dd2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97ecbe6b-b734-4628-a156-898ed136d507"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5669ecd-8043-4038-9b68-80d92f8a71a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d14982ac-8ae8-467b-a24c-4b766af926ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "079594ea-10f5-4273-a6c8-47f0674d47e1",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc5b0fa1-fc15-4ee8-920f-1da5a4b15cb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fcc11d9-cad1-40a5-b100-99fefff8914d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abcfa455-72d0-4545-af72-9a269ae41c83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c174f641-4d7c-4117-a707-f0dab94dae0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c5c115-8c44-47f2-ad14-801bd88d8637",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21dc758c-0884-4988-b9c2-ebe05f34a422",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07205951-63da-4bbd-ae73-c44543fe1e0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f809b73-cb54-4e62-9b7e-e3206b0861a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fbce1b1-57d5-44ae-b4f5-02c13f47af27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc8c69b-7682-44c4-828f-fabb61498dfb",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f09cb777-44f0-4051-a7ab-d746c440c994",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1328a170-7d7b-433c-9425-7712f0cd5e62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e9e4ba-6994-46bd-970b-1a320888b6e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feb5289a-bbf8-4533-8a13-9f1e007c2795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14250cf1-1c5e-406d-a810-c936d93b794b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3225a64-7f03-47ff-87a5-0c5db9c550c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ade64577-7984-48d1-b81e-7d87a33f2968"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceaf7b4a-4578-4e01-8e0c-f988a6d75bec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98fea380-2e91-4447-9977-4abd2ae88038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c972730c-1a5d-495d-88f9-9c8c1d69ba9e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2bbdb6a-c915-4faa-8af2-fca4043990f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "703b5541-e662-4a99-9f13-0bb81cbf1f53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "266ba3e6-80ba-486d-8894-71d035a87b50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2863e7c2-2441-48be-b6bc-156f4b45a051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c29741d-2e09-4b93-972d-62c28661103a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "494ae84a-56b7-4120-b6ba-b2f6d8ddbd78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bca6678-8c1c-4029-b108-d0b77d0a3094"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca2113c-02a6-4026-86a0-1134b213e08f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64aa8807-37a4-4e35-888b-9472a02d2340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02ce5ae0-97e2-41b9-b022-71fcf405a041",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "639b7dbe-72b3-4882-a6e3-55004635ae6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69801249-1fec-4b8e-acab-24be08a2a9d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9dc025-2b53-46ed-a2a6-52a2198b54e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6d68626-7129-4f6c-bb2a-e6874de88299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71590c30-effb-4b11-ac1f-c88c8b280f0f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc64d00-8e2e-4b89-867c-492134884b92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bad3121-a6ab-4466-a266-294eac84edc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50506df1-ab2c-4b7d-ba52-0da85070abdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14a8ad6b-1884-4541-a773-a0e7be7383fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7ef01b-d41c-4d19-8539-d2e8d02d8777",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64bb0e00-5d3f-475a-9e70-a767bf015dc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b847060e-710f-4bd7-af8e-79d08890e22f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae22200-4acc-4d92-ac2b-f66c0a448213",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d1216f8-31e8-41d4-9597-c0f0e5ebdaab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c775e08-3630-4ea3-aff8-20be716aa147",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a22bced-c2fc-454f-b9e2-5371eb3b71bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1ac4345-c6ab-4c5e-8f90-04889efabd3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ca4815-498d-4739-be15-bbb2ae6fa382",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95ecc184-5394-4410-84c6-ffc93d8bfcb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d635e34b-9e47-4d47-8c5b-497851b3e944",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b1a756-9155-4884-a0f1-7364cfb8a8c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74e71315-4232-476b-92b5-802256be56f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7a14b4-a0bb-41bf-ab71-79f231fd41ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f5d514a-90e7-406e-8328-115bfd041325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b4fcf84-388d-4528-b96a-1e5c29f5570e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da33556-b443-44a2-ab55-da190c1ac52a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5ba8271-d13a-4ac3-8613-961d33d8b389"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "045d8fce-8900-43a1-a66f-ea1229d6c4bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16e08aee-bb15-48c2-b192-32090896843e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc83a189-f458-46f0-b0bd-52912751a64e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be7a3dd-4c10-401d-b02d-cda5b18cbdb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d14b6a40-fa9b-4308-99c5-73f0a00d6cc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79162dea-80d9-404d-9aed-b4aa805a15b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bbb0880-0acf-4fff-88be-bcf264038f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b226124-dcb1-43ca-b638-250d69a11851",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd5aacf-8c6e-4bb8-aeba-6d2ced3e1ac4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df96298f-5ec7-4c17-a16e-1d4faefff913"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b369be63-5e3b-40eb-b7aa-699b99231a84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50754c4d-c8f3-4b0d-bd35-f5f6a86a2e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07f932e-97c8-43cd-b6af-f2dab2239785",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bfd592f-66b2-4753-94b0-f8077a8fe250",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "023d13ce-c934-4921-a50f-1e0acb588d59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aede2ee4-d94c-4aaa-ade1-5e0f05b6b90b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38c756e6-55dd-4636-b9da-48f9a06bf6c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "004b8f43-1c1a-45ca-a7ce-226bbaaf0828",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed99ec5e-356f-43ef-877b-d100fc954ca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0a21248-0deb-4a78-9d2e-f111a3a9177e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48f83fb8-f22f-4005-984d-d27730aecda4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb932ccf-363f-4ed5-bd9b-82ff70c85ea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e022fbf-01ed-4b92-ab53-e98b585f4101",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c47c771-8d3f-4c8f-8811-bdbfcaa0f131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "140c2af7-85fe-4600-9faf-77eb35e9458e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dcb2402-b13f-46ca-8ac5-9ac0cc015f5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38ac974a-4b94-4671-b4f9-6617d58cd7fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38bf9dc1-abe1-438f-be15-2b180ff1c5fc",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27eec08b-cf0b-46ca-ab1c-05d239bd7305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0695288-fc53-4c6e-946c-8728e6119632"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7353702-e209-4e67-86b1-0c53567a06bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "514e3e76-21f5-405e-b0b8-53909a578de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c10116e4-4c3e-4e5c-8b60-908b927b3ddd",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "175db665-e2e1-47b1-930b-789ee85eb83d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4076e8da-5936-4441-b153-fb19cf861b39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae5ebb1-3bea-4cda-aee6-73545e8c166d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28c06aa8-5c94-4a99-b924-a85417697801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af2b0cf-cddc-4113-9c05-206a63681f12",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08423d79-0f2d-4635-b634-644ea4ce6d6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17fe40b2-09d4-4bce-9c14-c5a5f274775d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17bdcd6-1cfc-43fa-a5e6-cea521802363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "244eabaf-22b2-4a98-8cd9-bd9b190f48e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd02570d-c8a0-4fd3-954c-5abae106f103",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ebe3ed-5ba3-4a9b-9da4-b707e93b5400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a30eea6-2a0a-4aaa-976e-9b2a2a9283c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4fc762f-ad27-47e1-abd4-c14f72ee9884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fab1b92c-4e01-455e-8a84-16cb90feacb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dddd414e-6ac9-4713-b752-0da078f9e78f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f8d5cd-fdbb-4e23-bdd7-e291dc26caba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc2daba5-56e6-4098-9976-4dac68d05407"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a61f4e58-16bb-4aaf-843b-85701901ce8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "059ac717-3de0-4c7d-9fe7-4173e4582b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43205d5b-6aa0-4ae0-b457-56d85b0b7cc9",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019d4511-f4a2-4976-906d-1272f26c912a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "965b8928-72ce-45f0-b00b-adac9141f584"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "680f5f28-b17a-49eb-8c68-fceddc2f88ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2a0028f-a907-4014-ba74-772d72c4ccd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6440308d-2204-4896-a9ed-a3f6a0733656",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0edb4e69-e744-4253-9c74-35dc0c4b8225",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f80c202c-782d-4ccc-a37a-b7e3382a0ff9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a18be2ee-efb3-4556-91d6-d2d91bf681fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02285104-3771-400a-9d0a-4b6999376e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "552aaedb-55f3-427f-b384-fcc199d69ca7",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a56bdff1-d1c3-4849-91df-584254223041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45ac86db-c1d6-48e8-8b06-8b5cec6b5278"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "131520a9-12c0-4c12-831e-476a922be56d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06bf6771-57a6-47f5-ab82-73184e0a79ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31692e6d-4c85-47f0-9906-3e3900a03114",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55e37cc-c3dc-45e0-919d-2a6e8fbb18cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bb01a00-a3a9-4ca0-be53-be24a6de2e6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75026676-bd5b-4c90-9da5-03fa0017a242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "890f87c7-22a7-4555-a85c-7086eb816b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a77a56-f326-4092-9378-dba2a445ab21",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a1304e6-713d-42ce-b297-57b64e99b2c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8be1f46-9bf4-4983-9c8c-466dd41c69fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df235286-a3d2-4379-b149-60cdf981e5a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "568ab771-414f-4e07-9fb3-95512ee122c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c05d48-3069-4dcd-87fd-fd447d8f8cb2",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1efea0e3-ea12-4d07-986a-7df85a9a4d59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02ac4bd3-fd0d-4531-855c-739a21e9b53e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4842596-4117-4c37-b341-0f0e7807a9f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bedaaa7-cdf6-476d-bd61-ac53b97f45ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43142896-bec9-4844-8e73-2418552245c7",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d4f6681-b822-42bb-b500-a1b97c67ec55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94e58d98-7ba4-43d5-8258-c99cec33fef6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a67a4a20-d314-4f61-a4e1-906cbfa9a5e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf66fd1a-b9b8-475e-ad38-c81f6a31e083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146588b8-d2c5-4b1b-a879-22f20f25a0eb",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac898cbc-3d78-44a9-b8d8-1676558ef61f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04541995-6d1b-407b-9261-867af9179f13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb94797-3118-4710-8e00-44f12901b010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3376651-fa65-444f-aa32-69f9a44463c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "102a8aae-e7cb-4395-83f8-93519f66bb18",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c80f6edd-7528-4888-92ec-90e6d0f43613",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae3ee26f-ea62-45de-98c8-db5c23e219ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2789fd7-2d23-492e-88d7-b1bfc8144415",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a50f726-089a-4679-ad11-07bada944801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c43ba5-2d1b-4dbb-ad33-6a4f3c90ee45",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba5cbfbe-3614-4434-8afc-0356e9ca64c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfe51edd-c8a6-4af6-89f5-ececd454d1a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63762ea7-c4f6-4c87-8380-4d29a1997804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd8fff6e-dc4e-40ea-bc09-5c7adc0ec529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1686e9fa-6b50-4c22-abb6-9782b738bbf8",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d2d383a-27a5-4961-842e-68081faa78cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d1753cb-997b-4493-988b-ab7d28078804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2b4a4a-639d-4c5e-be5d-ad8fe0a73636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71be30cb-e73d-4497-b94b-83cc14a2d46d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b17293-b960-4894-98f3-1f0a8bec99e3",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0cabd41-acdc-4b73-b831-a60c8144098d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38853170-fc9d-4e04-ac1e-6237bdc05bae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b6eb5e-4484-4836-8433-8c5b8892fb70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dea69d46-a004-4463-a07c-d8080a6b7a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af38141b-f52b-4a79-8200-441f2116036d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "414796ae-b445-4de7-90fe-15bab00e6a0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c16a0577-7fe4-4dbe-a413-d4ee5b291288"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df7cad0-e657-4a2f-853e-f36762bd43ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e264e88f-693d-4987-9c43-70bb1b143e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee7c9cc-31e9-42a5-abed-01a07a8c90a1",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d416c760-7714-43d8-af7a-45da838d0ebb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "546d5e7b-0a10-4e92-b1f6-56962d4753d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c63e71-1393-42d6-a31e-8f203c1f608e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac12a732-97d3-4393-a0f4-718d78091d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3368eb41-5121-45c8-b79a-c1a379b7a056",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c0a9b80-6c8e-40de-9289-51104cf563f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "561b11d8-0fad-4f2c-bde4-0d0bb15f81a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26041565-4b27-468c-9227-c52e4b30eda3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6bae559-76fd-4159-8424-aaf1832de20f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e38fe2-d8f5-49d2-824c-3bd344887a7f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df2174a-3c7d-4961-bada-c22a7ac94bb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5641674d-6dd3-48bc-85fa-429d81ff701e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72867171-d7d3-4a46-b132-12275bd7a87c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c076c304-26e9-417b-9035-96abecbd460c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "977e4531-1872-41a1-9c02-4539437c74b4",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81413e52-b913-4157-ba00-7a5ddd5367f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7aaad3c9-ae32-43f7-b1c2-c2c573df09f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a9d2891-4c93-4965-a6d2-787c2248cb63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d76f7c2-e653-4918-9d5f-59149fd71b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2178260b-a5f5-4401-aff0-dcc3eb01db50",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "febec567-50c7-4d16-8092-5ea9a117feea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e0ce994-af0b-4573-b7de-c6157d7f22f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d03fc2-0bfd-45b3-9f4d-6686238ed78a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c32effd1-b771-446d-bbf6-6a0f51a1b4eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "768d1b0c-8c33-4187-969c-ca3d94812ec3",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef015a6-2334-4144-b5aa-0e6cc7fb37cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05713751-2fba-4f68-af80-ca8ddd029024"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1246a79-bc70-4b25-b57a-05c104208ac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59234741-4e5f-4d7b-ad77-8e9dd5e6ca95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c9c486-8e8a-4817-af85-976886d4fdf0",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c823b2e2-444a-4044-ba3d-701b55a1a615",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e17f32c-8a9e-4371-9b4a-e33c69cfaf95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b45a6f-3e0c-4eda-9e8b-e3d77e63a641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "757ea2b8-e0e7-468a-9a49-323939f3e608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c8395b-5919-472e-be50-6e4818fa2bfa",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e3f20c-426d-457f-9260-2ac629e9386e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "587b9a57-47f7-4894-93aa-51890e0fa40d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6345a4c-052e-4d47-9bb9-96917fad767f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07bc53a6-fac2-4396-86bf-a5225165107c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f4b87ce-c291-4717-a21c-a7064149f56e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d42381-ea14-4377-bf41-e71409077be8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9fa6876-1864-430d-9309-85f7696573ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "909495cb-1f74-47a9-89d4-d570228f937e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0c09d60-489e-4329-bc90-38a613f25fcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "439a830c-172f-4807-b891-8fc7231b2d90",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a35391-3751-4880-b417-8990bb8de595",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d219a618-bbba-447e-b47e-63ffdf069773"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f4368db-b90e-446c-bf60-841fccbb2204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7a0b589-1ee4-4172-bb27-fea6c91d5f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e844348-f6d5-42e9-a7ea-9acf401f5f77",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16272279-d34f-4caf-a3a2-60a9e545f7cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ea44fb1-0866-4cca-b2d3-9ef766581ad8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ec64d8-09dc-4612-9812-d3b48c095c83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dd80d8e-aaa4-41ad-9962-517554225454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c332c48-ac62-41a1-bca3-bc1de21bb8ad",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f8995c7-1462-4a3b-8596-429918503ffd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40a097f9-f516-41b5-9cf2-331cfba304d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ed3116-f6ed-4c81-bd58-4bfe56e90f58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7f03c89-ac37-471a-a284-6349b9d2f5dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d58f6f7-6599-489c-b2f4-46f14127b865",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "414861c5-6597-4947-8fa7-7d2c84347d99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b03827e-04d8-470f-bbb3-2bb4d4eda34c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e694c783-77c8-4b0e-abfe-e8c900bcb42a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8adcda3-4a25-4c7a-b254-1903afd9de6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81434f3-9f45-485a-a1a1-2c461c53ef05",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "129ad817-2159-491a-9f0a-9e548359c493",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2063a152-bda3-4a8c-aea6-4c670af8d9b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c00c9cc4-588e-4198-a445-1f84137a6ba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2530d8a7-ea20-4f18-9d9b-ba4cc797da1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c752de4d-d6d5-4a6b-b0fc-75a24db835ae",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f83519-d532-45db-bc32-bac5df231b64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d40a80c-1e7d-4510-8db6-6edb23bda2a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "661c5015-3160-4910-b10f-3fce9cc94651",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2807d422-f6eb-4b07-9aaa-af24cc88bbcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b973c5bc-116d-4be6-ba68-60c3b3dd7c32",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f048b9a5-62b2-4134-bda7-098ed6483b3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e2f4aae-90d0-4c50-8520-d0a75f37b1db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05666810-fc41-4fde-b16a-506e44915a2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4011ab07-2bbe-4c20-b51d-48a9864868b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27910eb-5fa4-4e93-a3ec-4e9dff282df1",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e9463f9-8d57-47b9-90f8-3526b21c8b1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffe67838-fc96-4ed3-9c03-15315c7e83d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ea714b-20b5-49c8-9e7d-e4b85da90176",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f10e3111-e7d6-4629-9b3a-a8063f53cd27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59043efe-4055-4ae3-9207-b5d88959c64c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44772c12-d3fe-420d-9a26-59c75a65f4aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5dc2b6e-0af6-439d-90e3-a58b3b5cc51a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "523b3a6a-1e00-46c1-b42b-e39882cd4e6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "329be49a-057d-436a-ad86-e238ca14e2b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b4f426-a8eb-41b8-afa0-6b3f4e685b67",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "837784cf-a47b-4038-94dc-c66a1c2dff06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51ed7d5b-8c18-4e4e-b7fe-6e28b6722b39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcac3d12-0e5f-4d48-8f60-6265c912924a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07cfa44e-0ebe-4b9e-8337-c80a432328aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "530e0617-f454-41a1-93f7-88b1737b9449",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa021e9-86f3-44ac-897f-2b786d4155d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1739b4dd-e788-4c9e-9e0c-e242e02872aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f6b9bba-757d-44e5-9e4f-bb0aaf229c65",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc04d265-08c2-473a-8aa7-7b86f44b6704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ad509c-cff4-4a65-9a2f-128380fd67c5",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38671fab-8cdb-4d47-b441-b8696bb4ea9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08b16a17-aac5-4be6-8b3e-6febd15fc8d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd9e6b8-d4d2-48e9-adc5-1e3ae694fd00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24147546-aaa7-4e08-a138-6446555fc09a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee8189e-3544-479a-9fca-f7e08070bbd4",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c5eaae-10c7-4c09-a970-622d6d3bdb0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df21755c-6ab4-41c8-8951-86be90544b4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed0969c-6dfd-4698-9b01-b997f78340e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b33182c1-4ca8-41b4-b506-b6df82a032fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2acb3179-d5d3-4f68-b7f5-a4acf9531585",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b50e2e-4a3a-4d2f-a6fd-fad064348068",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a966e35-9126-4b48-aefa-d24513d6cc84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8088472a-e36a-4318-af29-bdd2861bb1a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7902f45-db79-4065-9228-6d5252952f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d06cb5d-cf62-4a76-ae98-190af62cccec",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b8dc8e5-2c96-4b15-ba97-0a81f5c5925a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd64abf2-72a2-4a2d-88a5-a8117edfb883"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff2c390-d5f7-4779-9df7-e1af98926396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5277c967-8852-4e2d-b14a-787c9b20c4a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f15581-734c-4a86-9e2e-77cf2d737e6c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d54bd29-766f-4088-bc39-15d66b7047db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "546d42fd-264a-4c94-ac67-005946fd5af9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "892ccf69-5661-4068-bde7-88ee3047f14c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5cbc449-f775-4018-8d35-fa10853bd281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef85fa7-488a-4015-84c2-32df738f6dd2",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621fedfd-48d1-4745-8d83-7be7ea4cb874",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e94ebd79-828b-43d7-834a-fb3c9489c6b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "928ee649-6af5-4542-b471-5d2b9a5b8d63",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82b58399-2529-4b3e-a71c-4146bc97a258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b1e939-2a3c-451d-87e9-8bd78df2247c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b824589-f88d-4ed8-8143-5019654b2e2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9232e61-f85c-43c3-8efc-3b236892abbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef5cd14-0f59-47ee-932e-e6b3c7626a3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9ed87e4-b04d-4512-b1fa-2c842ef818aa"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8509591c-6a68-446b-a592-93d2973ce778",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aba9db2b-fa29-46cc-a645-f9b4caebab0b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "054f1e2e-05e6-4061-88db-712701ca5f9b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0d0abada-3c2b-44a0-b265-26a3f1b6f887"
                    }
                  }
                ]
              },
              {
                "id": "0f99d557-3d19-4ca5-8408-ec2dd9a9a87d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9347c912-d8ea-4187-ad53-199747dd4a8a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5a4e5f-1a84-4d99-8e63-1c0649eb6465",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "abe61a0e-0bcc-45f5-8ca4-4b6c6385d037"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f395bb89-e94a-4eee-9ff5-49dbb723c702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "896ff0d8-9534-43a0-8939-441041ea715f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "10f6bea2-a839-4e13-9346-7254b9f2d967",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "794bb628-c611-41f5-b4fe-c53dbc39735b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1eee6c1b-d132-4324-b8cb-c6e833b16664",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b99bcf6b-7a34-4a37-9dde-0dbdfa29b8d9"
                    }
                  }
                ]
              },
              {
                "id": "3f225813-df3f-4268-9db6-40d385dfe13e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "d224de82-2165-4197-9d90-faa0d19f12e6",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b77e6d-de02-43a3-9a86-b63571e96afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a2913857-34d1-4e96-b613-2b569b000a86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e11597-c006-41c1-a978-5a50761c24f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06ef8930-f150-4f5f-b1d1-0e4960ff0bea"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a3532b37-03de-4584-b175-07a4eb499462",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5e760720-53c8-4ec3-81e5-3026599ec42c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f49a857-5b9b-407d-98ee-095b97de17eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b1e36529-e207-4bf3-aff7-364e2adee9e5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27483f11-d359-4b16-9b6f-bc23c8bf7aff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3cc304cc-3947-4874-b152-b66607fe4ee1"
                    }
                  }
                ]
              },
              {
                "id": "a6ef45ec-5694-4852-84e9-45bdaa984214",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8fe4e715-a61d-4063-bd04-45942849cfda",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a60b4df5-a0dc-4897-a616-f62a25f2a24c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1fbdd85-4e5e-49a4-a52c-7101c0fd2dfa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "280188e7-6609-47d3-83b2-04f4572f03a5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4fa05f03-c7c0-4e08-9713-3eb47b05228b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "50029b7d-40c3-4525-b7fb-6aff771216ac"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fdce9bc5-c62b-4d1c-9008-c6283d50123d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d59e4e04-367d-46d0-8114-7a6a5f4d6366"
            }
          }
        ]
      },
      {
        "id": "641709ac-5608-4931-bb9a-3459263701e2",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6cab7103-b5bd-4bea-9b92-4b438d2982b1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5c4a2346-4625-49f3-af8d-65ec4f6978a6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c64dceaa-0d35-4744-90c1-ffd6c6ac41b0",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c2c49ea-1fef-4936-9ae8-96f3a23a6f1f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2cbc97c7-c41a-4124-85a3-9413b58b9570"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe6c9974-eace-4784-851c-59db4f839806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b88c66d6-b8b9-40c2-a7de-abc45b129284"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aad2f499-b0f4-4b8b-bfee-6c2576818681",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a05b354-75ab-4000-a83a-17e1e1b03318"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "06232fed-6f8c-464a-b539-d414b4465bc8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a573201-190c-417a-9f4d-1c008689a116"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "134ba393-9f89-4d42-98f0-1fe46054c30b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e10a47e8-92eb-456a-ac6d-e93231bf636f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a61c8cfd-684a-4781-8cf5-e2f97c20fe2e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6a9c6849-a76e-4b5a-be17-5c158987f9b3"
            }
          }
        ]
      },
      {
        "id": "5c3f08bd-8917-4a03-8626-d81950b009d5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "390fce89-95dd-43a5-81fa-5dae9c2feeda",
            "name": "Negative Testing",
            "item": [
              {
                "id": "74b71b76-419b-46ec-b64c-8cd862b29330",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7936e19a-19be-4f08-9b2c-9077c3fb64e8",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273272a1-ce03-48c8-b043-9de393d98125",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3321411-ae88-4d1a-a7aa-15d9c03edf5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79741148-9512-4c71-a2d4-befdaa014eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "23accf86-d0b5-4f66-9744-e070e5c3c95f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7690e06f-bc13-4c87-8efa-04fd76d1ad4f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e62dd13-cf30-4b6d-9582-ab79d96cb2a4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ced6d0c-c50f-4afc-87cb-6323a9e8319b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb8b018c-7ef0-468b-a2d8-f71b191790e0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b67eeaf5-4bb2-4fff-8bb5-26400bb6f235",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c532880c-0d13-43e4-a0d0-0b6c340a45cd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4ba6a854-cd1e-4da1-b7bb-137bfa587c3a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1afce29e-ba8b-4c22-9b92-8ce5048af843"
            }
          }
        ]
      },
      {
        "id": "ddc8afb6-6540-4424-9d3a-b965723528d7",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "cdc2dea3-6039-4215-b876-2e9d79c8b3ac",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e343782c-8b0a-4e4a-b150-ddde51997821",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "26851e31-27ef-4b35-ad5f-d0beb280474e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b6dc66e-e7b9-41b2-bd49-64ad54132f61",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c739d6c-11eb-46a1-892a-5e71a580df4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "763cb8f1-2132-4f64-97ea-1c91debbb790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "add8260c-70be-49f3-8158-fc640cacc9ab"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c014ae0-d75b-4631-89f4-65a1e929d728",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08bfb8b2-e4cb-4ac1-b029-282b6860de2d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a4bf34a-8580-4117-9a81-3a007954b4ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c19f513-4b51-4f5f-a3a6-c26f953d8907"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6f308375-18a2-47b7-914f-4a083b0cb044",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0263beff-e450-41c2-99b1-cd24a3d539c4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d56a0797-cdee-4e7a-a4e1-78f03cbe94ef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cfb9962a-722d-4582-8f36-875c50092062"
            }
          }
        ]
      },
      {
        "id": "7984bcef-637d-45fb-841c-e28754912715",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b1f2cc77-c8d1-43c5-b261-0763cbb6817f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "58d2e76b-44a2-4a45-b49e-df6968830b7e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "10d23ad8-1b48-4fd1-a6b9-4c4a3d8b4d2b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "13176321-46f7-4c73-867b-22cbb45837a4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "136a44f3-9926-4c3a-b961-398752fa1d12",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 106.8280701754386,
      "responseMin": 9,
      "responseMax": 9090,
      "responseSd": 587.0199272610245,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1707179624012,
      "completed": 1707179663980
    },
    "executions": [
      {
        "id": "a98f6a3f-cdc9-4936-b2b1-90c17092f033",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4ee30c46-9fb7-4e60-8c76-4868bbbd1750",
          "httpRequestId": "f8202266-493c-4ab5-9ff9-8264f7f6405a"
        },
        "item": {
          "id": "a98f6a3f-cdc9-4936-b2b1-90c17092f033",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "581dc576-507e-4caf-a724-e59108a08d8d",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 0
        }
      },
      {
        "id": "f59bce1b-51ea-4ee8-b533-6de0bf6e0950",
        "cursor": {
          "ref": "6cbef315-9911-48dc-b770-dea50d6b9eb3",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "0bda806b-58c3-4908-b54c-9a79dce21270"
        },
        "item": {
          "id": "f59bce1b-51ea-4ee8-b533-6de0bf6e0950",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "cf5a00f0-4d4d-4ad8-945f-149502378f66",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "41d3bdb3-4b0a-457a-9d97-d53e85180453",
        "cursor": {
          "ref": "f15b42d6-37ae-4c2a-947a-6eb5d97c5a29",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2ad2be59-a02a-44e3-89b9-0a738cee4ce8"
        },
        "item": {
          "id": "41d3bdb3-4b0a-457a-9d97-d53e85180453",
          "name": "did_json"
        },
        "response": {
          "id": "a4ced83c-79d6-47b1-ab71-8eeacf334fd8",
          "status": "OK",
          "code": 200,
          "responseTime": 340,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f46ca8-6b6b-4246-afce-567eac467596",
        "cursor": {
          "ref": "3bff0230-e226-43af-8b9f-62b0d0f230a3",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cbfb9ed2-4837-4677-a1e4-2ac049ac004f"
        },
        "item": {
          "id": "d1f46ca8-6b6b-4246-afce-567eac467596",
          "name": "did:invalid"
        },
        "response": {
          "id": "e78661ee-4339-4714-b5c0-c464b1c67650",
          "status": "Not Found",
          "code": 404,
          "responseTime": 678,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f46ca8-6b6b-4246-afce-567eac467596",
        "cursor": {
          "ref": "3bff0230-e226-43af-8b9f-62b0d0f230a3",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cbfb9ed2-4837-4677-a1e4-2ac049ac004f"
        },
        "item": {
          "id": "d1f46ca8-6b6b-4246-afce-567eac467596",
          "name": "did:invalid"
        },
        "response": {
          "id": "e78661ee-4339-4714-b5c0-c464b1c67650",
          "status": "Not Found",
          "code": 404,
          "responseTime": 678,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b06f275c-b167-4ff6-8b0c-dc6bbee1f587",
        "cursor": {
          "ref": "8d7b4fe0-c66a-40fd-b897-8a9d31808772",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "af779304-b3c1-4be9-89e4-1e2d55799ab6"
        },
        "item": {
          "id": "b06f275c-b167-4ff6-8b0c-dc6bbee1f587",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "5226023c-0953-4a7a-b557-698bafadac62",
          "status": "Not Found",
          "code": 404,
          "responseTime": 47,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da39ff1-478e-47db-abba-6e31f5e348fd",
        "cursor": {
          "ref": "3e7fcb6c-424f-487f-a515-bf4f0a44a58b",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b739898a-ce60-4064-8892-24a8d7786d1a"
        },
        "item": {
          "id": "9da39ff1-478e-47db-abba-6e31f5e348fd",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f352c63c-db01-44ec-b169-f940fe001a4e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 40,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b305d90f-6b11-43fe-80b1-6a204d965b3a",
        "cursor": {
          "ref": "5b384ed5-7560-44dc-b5da-3ff1629e1201",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "05783b4e-0b22-49c6-a9e1-a3f99fd7c09b"
        },
        "item": {
          "id": "b305d90f-6b11-43fe-80b1-6a204d965b3a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e8e00bf0-33c4-4013-a0ee-913e71255c8a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee5d2d9-15b3-4251-99cc-990284622ecc",
        "cursor": {
          "ref": "879d6b25-202f-4064-87df-a3279656d7b8",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "41c8104e-76a8-4963-9480-9083d24f68a9"
        },
        "item": {
          "id": "9ee5d2d9-15b3-4251-99cc-990284622ecc",
          "name": "identifiers"
        },
        "response": {
          "id": "1d73c92d-48c5-49d6-9aed-b733b8fcadbb",
          "status": "OK",
          "code": 200,
          "responseTime": 105,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "522e2d1f-6d34-4575-9061-47b854d7c61b",
        "cursor": {
          "ref": "ddc87410-ba61-4bf6-ac2d-99ee74da6a2f",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a86e212f-cf8f-4593-9d90-f5adef929733"
        },
        "item": {
          "id": "522e2d1f-6d34-4575-9061-47b854d7c61b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0067a40d-179b-4e51-9e80-af523d324b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b42efd53-243a-438a-b628-c84013bb4eed",
        "cursor": {
          "ref": "4f80311c-3bb5-46ed-b515-aa469b11b24d",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "13159019-a736-4859-991d-03217706d334"
        },
        "item": {
          "id": "b42efd53-243a-438a-b628-c84013bb4eed",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "4628bcf0-d92d-4291-ae7b-04797cce1816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ca8bfe-8714-4955-a00f-26166ae12e53",
        "cursor": {
          "ref": "bb670f1a-9cd2-4cac-becc-f33a0f9ca595",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "44739d95-3a50-4993-8b0c-6a77da096dfa"
        },
        "item": {
          "id": "a2ca8bfe-8714-4955-a00f-26166ae12e53",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "8bc3887e-a31f-4f08-8f42-3d3fea10b0b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68393544-0239-41e9-9443-3b1fb87f2eeb",
        "cursor": {
          "ref": "04864bbc-3362-4fdd-83ed-45a46e2fb416",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "9b51a58d-cf09-498b-a2dd-79786e4865a6"
        },
        "item": {
          "id": "68393544-0239-41e9-9443-3b1fb87f2eeb",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ac8b3014-f11f-43fe-97da-d1208a2a7394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c04e5e-a16e-46c0-9692-7d1315ce42f8",
        "cursor": {
          "ref": "eb117c0f-163f-4716-8699-a84f8a3cda63",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5a85e665-ed8c-435b-a4f3-01889be795bd"
        },
        "item": {
          "id": "b3c04e5e-a16e-46c0-9692-7d1315ce42f8",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "12f3f9db-fc43-489c-833f-f241da862970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda959f3-870b-4310-be1d-f2c4face483b",
        "cursor": {
          "ref": "afa3ca44-2cf9-4aab-85d9-83a3b406e6b3",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "bd30d670-d363-4099-92cb-dce531ce8afa"
        },
        "item": {
          "id": "bda959f3-870b-4310-be1d-f2c4face483b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f84b5446-ae2e-4455-b1e3-2a757a0072dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f22c5d8b-5833-40da-9643-01a81289ea53",
        "cursor": {
          "ref": "bf120678-e5d0-4082-a34d-a85b7c16b54c",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "84e5d5fd-c6c6-4ff4-a9ee-68e2ad852d6e"
        },
        "item": {
          "id": "f22c5d8b-5833-40da-9643-01a81289ea53",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "9bc12ae9-a998-421d-a89b-d34b08d3a98d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b469611-518e-4b2f-ad0e-46df77bd2d6f",
        "cursor": {
          "ref": "0fc25755-52d9-4950-88b0-386efe5e4ab5",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2aac4d6d-167a-4c44-8ca2-a88a5832d41d"
        },
        "item": {
          "id": "2b469611-518e-4b2f-ad0e-46df77bd2d6f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "14545836-55e4-4ae4-a485-6e3b1001ad8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da282645-0af0-4136-a2a1-2a30e83a88e2",
        "cursor": {
          "ref": "f682a93e-b2e4-4c05-a8aa-d3bde917ac02",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "04456919-5ce3-40f2-a512-07ded7b84793"
        },
        "item": {
          "id": "da282645-0af0-4136-a2a1-2a30e83a88e2",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "02bdc084-a561-41cc-9b92-48a5b28534cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc74d611-782b-4c82-a9b8-e16334014b18",
        "cursor": {
          "ref": "c8e6eec8-448e-41fe-bcaa-c6c392785a02",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4d8558d9-7388-4d77-9f01-b05feaaa4451"
        },
        "item": {
          "id": "cc74d611-782b-4c82-a9b8-e16334014b18",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5d22c017-5419-4a13-ac1a-7978ac9e9f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b227066-85c3-422e-beb6-7503f9a526b3",
        "cursor": {
          "ref": "4dfb4175-560e-40bf-b555-71ac6c6c8990",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "fa6e0de4-7741-4133-b1cf-c1683a52f5b1"
        },
        "item": {
          "id": "2b227066-85c3-422e-beb6-7503f9a526b3",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "29eca5ce-1231-4b5f-b3a4-3f19e665801a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15bc838-fd1f-4f65-b3fb-00b33fb1a85b",
        "cursor": {
          "ref": "77f4b5f3-68e8-4bd1-a785-5dff1480d1aa",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "89d29ce0-328d-48a5-b7a5-49c6f602c1f0"
        },
        "item": {
          "id": "f15bc838-fd1f-4f65-b3fb-00b33fb1a85b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "dafce6eb-f242-4b43-a8ae-e2e732e162d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "998a16a3-5d04-4eae-a8ec-ef184da670d2",
        "cursor": {
          "ref": "c2d79e1e-9bec-4184-97b8-1d01c5917d6d",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "59b52d38-1c2d-44a5-8c10-4f1051c340da"
        },
        "item": {
          "id": "998a16a3-5d04-4eae-a8ec-ef184da670d2",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3d472b62-9203-4a8f-a99e-c57a9deb6432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa225dd7-72bc-4c60-b04c-3b2a5722dae6",
        "cursor": {
          "ref": "9ec5cc2e-859d-4343-8d71-94691ac5364a",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "31c720d0-4a3d-450d-9d55-f5f97f8a8120"
        },
        "item": {
          "id": "fa225dd7-72bc-4c60-b04c-3b2a5722dae6",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "88cdbced-3170-4a07-83c9-ba4a70b7f4a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "227820fd-525a-4b9b-8346-e0a97a3f7608",
        "cursor": {
          "ref": "3b50fcae-ed17-4226-b002-fdec1e998da7",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e5ceba05-3913-4469-bb11-963aadaf616d"
        },
        "item": {
          "id": "227820fd-525a-4b9b-8346-e0a97a3f7608",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "336b7538-e30c-416f-b0af-8e3f840f11e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ccc4525-668a-4e91-8c85-a110a0070235",
        "cursor": {
          "ref": "4f9e741c-e850-40f8-b243-28dde72793e4",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b513537b-b86a-48db-b8c8-70ab5074d47a"
        },
        "item": {
          "id": "6ccc4525-668a-4e91-8c85-a110a0070235",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "a99c709e-e282-45ba-8ed2-8053098af4b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d122163-5d1c-4df9-a0f2-a9347bc70d10",
        "cursor": {
          "ref": "27616d21-fb13-4727-8b21-55f5997717bc",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "48d1d85e-3746-44cc-a70a-3089a4163b33"
        },
        "item": {
          "id": "6d122163-5d1c-4df9-a0f2-a9347bc70d10",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "bc3cce33-533f-4617-b7f9-22c09d7c6c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd81dd6-5a46-48b9-8be9-265adae625d0",
        "cursor": {
          "ref": "c03a3dfa-5e41-4c4b-85a2-5b0bbf733e96",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "810f9364-b608-4757-b7a6-4d7e6d910b04"
        },
        "item": {
          "id": "4cd81dd6-5a46-48b9-8be9-265adae625d0",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "404f7fee-18ca-4488-8fa4-0b44a0981812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23504c8c-29fd-4473-aa9f-cd80dfe737c2",
        "cursor": {
          "ref": "bd7c5a5e-5475-44be-b78e-8d1ceb36f1bd",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "16216e38-faf4-4fd8-9aa6-047f70e43b6a"
        },
        "item": {
          "id": "23504c8c-29fd-4473-aa9f-cd80dfe737c2",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8489e266-3786-48c7-a27b-4d7f9799b2f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb1380e-278f-42f2-b6b6-84e80fffb56c",
        "cursor": {
          "ref": "8cfaf4d3-5d26-458d-b46d-2b3ad39f5286",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "cb8c7f14-167f-47ba-a247-357b577f75ef"
        },
        "item": {
          "id": "8eb1380e-278f-42f2-b6b6-84e80fffb56c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a3b12e0a-d22f-410f-a01e-e0f2159ea802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "599a342f-e392-41f9-b3db-ba80e149a22e",
        "cursor": {
          "ref": "69968fc4-13ad-49bc-8e4b-dad37bf97b65",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "747249f3-5978-4673-862b-7da6786a9d68"
        },
        "item": {
          "id": "599a342f-e392-41f9-b3db-ba80e149a22e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f80323c3-e8b5-49b7-b857-754c97eacc67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "546fd30e-cf43-41d9-ad59-5ea5b88499d7",
        "cursor": {
          "ref": "cd2b553f-0720-4307-934d-26311b530bbc",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "dc0539d9-35f7-4d39-a273-c7bb9d111205"
        },
        "item": {
          "id": "546fd30e-cf43-41d9-ad59-5ea5b88499d7",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "286ec945-04c8-4af6-96ee-668c9433d78a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb76cdf-65a2-4bf7-a57a-1a9902c73c45",
        "cursor": {
          "ref": "3cfa88bc-b93e-48db-a005-721b4fcf9447",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "562cc92f-7e3c-4577-bb7c-7b719db40b9f"
        },
        "item": {
          "id": "cfb76cdf-65a2-4bf7-a57a-1a9902c73c45",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "6166c8db-cd18-49f6-be44-cefa803182ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b48be1a-9767-4986-a56f-0efe9f078040",
        "cursor": {
          "ref": "3e814f71-c25e-40b3-a665-04b7aecbdf22",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "dba6f3ce-a658-43c2-b85c-539580798b48"
        },
        "item": {
          "id": "0b48be1a-9767-4986-a56f-0efe9f078040",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "7a4c1581-edb4-416e-9e63-b757f79ee7de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a32ff20-f326-481e-91f3-0273f8788368",
        "cursor": {
          "ref": "78601a45-01ef-4b43-a5cf-68a9409d9552",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "286286bd-6395-4c6c-ad04-bbb0e2f6b44b"
        },
        "item": {
          "id": "8a32ff20-f326-481e-91f3-0273f8788368",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5279e695-e88c-498e-b65d-16165ece2734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea21f611-34f7-4f6c-8786-83469b0144a5",
        "cursor": {
          "ref": "d36f5276-a57b-467f-9df3-aa7fa8fd757b",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "7a2c1db7-1ae6-4f78-bbbd-eee54c8b53bf"
        },
        "item": {
          "id": "ea21f611-34f7-4f6c-8786-83469b0144a5",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b1ba6a63-2a3b-47f7-bace-1b3fd80c4d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850c00f2-97be-452f-bb41-331dddcbab69",
        "cursor": {
          "ref": "94580ffa-4afc-4350-a519-a5f8041871ad",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5211f6f1-91b7-4f11-abfd-72936503020a"
        },
        "item": {
          "id": "850c00f2-97be-452f-bb41-331dddcbab69",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "340bf89a-2325-49b5-9238-07d2fc085609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f10bf44c-13e8-410d-8d15-1224f07fa34e",
        "cursor": {
          "ref": "04bb60b5-6022-41b3-b647-0c4861636927",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a33f9906-7910-4800-afe1-b2b86693602b"
        },
        "item": {
          "id": "f10bf44c-13e8-410d-8d15-1224f07fa34e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e7e54546-cb56-40d4-b8c9-5765895cdd2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03656845-1d7f-4e27-bff9-2957751f2657",
        "cursor": {
          "ref": "8dbfb1d2-949c-4e56-a788-794ebd3f730c",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "cd750b35-9bc1-40aa-a1da-37c07c40f40f"
        },
        "item": {
          "id": "03656845-1d7f-4e27-bff9-2957751f2657",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "8f7832ca-668e-42d9-a7d1-dea645222cee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453f4aeb-83db-499c-acef-b6371f2df4bb",
        "cursor": {
          "ref": "ed0fe7d7-95c1-4692-828b-ea2ab03b45de",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "fd0cab38-7763-4cf0-863d-2e29da24a26d"
        },
        "item": {
          "id": "453f4aeb-83db-499c-acef-b6371f2df4bb",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "274f0e9a-2a29-4f44-9a0d-f77624581112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085b0655-54d6-4779-807b-ddec8a2f6920",
        "cursor": {
          "ref": "48359795-12d6-4ce5-8ad9-7ef6fe7a4426",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "20a00e8f-6bac-4c21-a287-55d595453752"
        },
        "item": {
          "id": "085b0655-54d6-4779-807b-ddec8a2f6920",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f16f9777-ce70-4c7b-8734-6ed24932e248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da724a8-1099-4792-aa44-5aa181eedcd2",
        "cursor": {
          "ref": "c9d6f7c9-a9a5-476a-8cac-bedc37f70f2b",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ab4bb90b-f6d4-4e91-b645-8f6a8da449d3"
        },
        "item": {
          "id": "5da724a8-1099-4792-aa44-5aa181eedcd2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "82b77e71-9277-46d2-8f1c-937d5546b134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ae85bd-483c-49f6-b2cd-0f3bb3e2f850",
        "cursor": {
          "ref": "c11b33a5-d6ef-4f24-9f0b-70c4ad00869f",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "9ca9f826-75ca-4c27-ae44-9ee93b985945"
        },
        "item": {
          "id": "b9ae85bd-483c-49f6-b2cd-0f3bb3e2f850",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "7e233cc0-5d92-48d5-b94c-79514074bd79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "693bf83f-68c2-4ac5-8ac3-16ee9f7f50f9",
        "cursor": {
          "ref": "77f0ca70-5dd0-449d-a0a2-65c1bc42bb6f",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "0ebea025-cd91-4645-b371-bfccf39eae16"
        },
        "item": {
          "id": "693bf83f-68c2-4ac5-8ac3-16ee9f7f50f9",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "107f0a6b-ad44-4365-acf6-b49fdbf17ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c73490b4-6ec7-4c96-8ef1-d54b6d5d2507",
        "cursor": {
          "ref": "22322e99-1a99-4bf1-ae48-8d1a4cf1dc68",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e835ca52-0742-4b1e-b74d-1512c1a48eb2"
        },
        "item": {
          "id": "c73490b4-6ec7-4c96-8ef1-d54b6d5d2507",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "106f62f6-63c4-4810-bac1-cd8d7543f151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec2fad63-7ec6-45b7-9ff6-eaddd1f66025",
        "cursor": {
          "ref": "7ab81c2b-f37d-4d9a-ba4d-5dc2cb4e3d89",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "003ceb9a-fa16-4b2f-b07b-b614ddcdb08e"
        },
        "item": {
          "id": "ec2fad63-7ec6-45b7-9ff6-eaddd1f66025",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "2d674595-a787-48f5-bf86-618fd6d8f071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d26f2cfd-79ae-4eb3-9f09-db9aa577e174",
        "cursor": {
          "ref": "31b0bcd4-2723-4290-a6cd-163c30cce3b6",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "8366d673-6eaf-4858-9de5-31ccc79a4c96"
        },
        "item": {
          "id": "d26f2cfd-79ae-4eb3-9f09-db9aa577e174",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "062f75c9-ad07-4076-9607-18365abf005d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a346341-74e4-4a5c-acb1-f386d4c5058a",
        "cursor": {
          "ref": "921e7c9a-2513-48c3-8335-a10e0d16cfb1",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "96afd969-0510-4b6d-acb8-9e03a1c3db56"
        },
        "item": {
          "id": "2a346341-74e4-4a5c-acb1-f386d4c5058a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e1108e9a-ad8a-4baa-9550-992026256793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ae77ec-b779-4168-bcb3-a2fea4d7301f",
        "cursor": {
          "ref": "fb63c295-2b9f-4d48-ac16-b2640f17c0ed",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b12dff60-bb29-4e34-843a-2c7fe970cfa9"
        },
        "item": {
          "id": "80ae77ec-b779-4168-bcb3-a2fea4d7301f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "7fb5a2d2-6158-4a59-80d1-b6b980494f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f3187c1-793a-4097-9ec0-881b67d9aef3",
        "cursor": {
          "ref": "470e7419-747e-45fb-be79-16f92929a6be",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "95844b5e-3f95-4667-98f0-1ad81fed3aac"
        },
        "item": {
          "id": "3f3187c1-793a-4097-9ec0-881b67d9aef3",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f4cc6612-853e-413e-8039-daeea5e566a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "442aa7ac-11ce-41c9-a5d7-2c4704957b17",
        "cursor": {
          "ref": "7b6c88d0-a44e-4b4c-bbfa-ba5210a84de3",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e0d8be9c-db3b-4c6f-ab71-0a6a760af505"
        },
        "item": {
          "id": "442aa7ac-11ce-41c9-a5d7-2c4704957b17",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "33859719-de6f-4df2-bb4f-c0c6c3c91793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd002065-0676-4807-ab85-84f8b30a8ef0",
        "cursor": {
          "ref": "6e4a11b0-32e1-43cc-a42b-84de756de2fc",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "09f9357d-ab09-4454-a2e5-ce60d1a1ab9e"
        },
        "item": {
          "id": "dd002065-0676-4807-ab85-84f8b30a8ef0",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "896740f3-a24b-4463-b55b-f1d49c9cb960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb9b2a4-a714-4426-9561-ad4e6b621416",
        "cursor": {
          "ref": "4a3e02be-c9a4-421b-a66b-7b676e2083c0",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8779f11f-f65f-4cc3-bff0-103c2e50caf3"
        },
        "item": {
          "id": "8eb9b2a4-a714-4426-9561-ad4e6b621416",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e41c1979-f46d-4998-b638-d8234d11f305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c668393-8bc3-4239-a8e4-5c258b415ed4",
        "cursor": {
          "ref": "1d9e3c31-e6d8-438f-a57e-2828f0c4f749",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a112e6c3-4b8e-4c39-86a0-6863357d8e03"
        },
        "item": {
          "id": "8c668393-8bc3-4239-a8e4-5c258b415ed4",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "98c69dfa-4a1e-4899-b5d9-7f7481cb2411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a287029-8b55-4ad2-a518-b387b49eceb2",
        "cursor": {
          "ref": "571e7dbc-03cb-45a1-81b3-40015db4a3ce",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "88a74bab-800d-4557-aa11-0b5fb39c7c42"
        },
        "item": {
          "id": "0a287029-8b55-4ad2-a518-b387b49eceb2",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "04cdf70d-a662-429b-b390-4656a3704b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67655c63-e76a-4115-b395-7c3d1b4bddcc",
        "cursor": {
          "ref": "731d874e-e4f4-45c4-82b9-4ba6ede0fb1a",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a0b3e0fa-6615-46bd-a508-d6a8a623649d"
        },
        "item": {
          "id": "67655c63-e76a-4115-b395-7c3d1b4bddcc",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "164374f6-4684-43af-90ca-9cc8099cd019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed5824b-ab52-425b-a036-1e144978768e",
        "cursor": {
          "ref": "209cbc33-b755-4f8d-a950-50a2941940b9",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f1a94369-17fa-48d4-878c-50737d3961cb"
        },
        "item": {
          "id": "6ed5824b-ab52-425b-a036-1e144978768e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "8d52454f-285b-43d8-9752-b3ff95286d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e01c514-926b-408e-94fd-e853f7c345c3",
        "cursor": {
          "ref": "37bf1f63-fded-4d4b-9e6f-99b49b9d87b5",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "dde81e51-29e0-4fd9-ac3c-ba5c40eabd1b"
        },
        "item": {
          "id": "0e01c514-926b-408e-94fd-e853f7c345c3",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "95082e41-45f4-4244-ad85-d9682f9441b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "997258ec-1725-473f-9ea6-6377a3815f45",
        "cursor": {
          "ref": "77ae678f-13b1-4c93-8017-45792cce224c",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "22cd7832-fbd2-408f-b34b-b6e9a359bd53"
        },
        "item": {
          "id": "997258ec-1725-473f-9ea6-6377a3815f45",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ddb1c3db-ac83-4bde-9b42-a6be9afe48db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca32cf3-a566-4c53-ab87-e4e5a3ac8599",
        "cursor": {
          "ref": "5929176a-58c8-491a-87ca-6f1cd4c5fdf7",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "35aaee4f-54fc-4abc-b470-738e2c7430cb"
        },
        "item": {
          "id": "9ca32cf3-a566-4c53-ab87-e4e5a3ac8599",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "fee232f9-558b-46bf-9d51-32733dfb060b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6654b0f-d78e-4bf7-9ceb-4a5a3f977fb7",
        "cursor": {
          "ref": "123101f7-e046-43e2-9df7-b0f9ee482855",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c77b8d79-8e05-4d31-9585-bc8682659c51"
        },
        "item": {
          "id": "c6654b0f-d78e-4bf7-9ceb-4a5a3f977fb7",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "650e4b0d-b817-4f44-90c2-801321a5ed29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff3e2534-4835-4af4-9daa-4953a33f4300",
        "cursor": {
          "ref": "ac16ce2d-2814-4b25-a86a-9e5038dd2d2c",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e5c984d9-cfdf-4360-8afa-05f07dfe2a06"
        },
        "item": {
          "id": "ff3e2534-4835-4af4-9daa-4953a33f4300",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "0d29dddd-7017-47f0-8f2e-0aac3e5fc8a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca47a66-baac-4482-a57f-bd52ff33bb61",
        "cursor": {
          "ref": "379ce3aa-7f7a-47b7-a343-1f7e6ea1f591",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1dd9d55b-f52e-45bb-8faa-6b0d15d05809"
        },
        "item": {
          "id": "dca47a66-baac-4482-a57f-bd52ff33bb61",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "bfc3a57c-6072-4fa9-b56b-51f648a232ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd4778de-6f19-4055-90a1-355db1c87f55",
        "cursor": {
          "ref": "21c53c8a-8bab-455a-bf4c-aeea70818eb2",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "81a84d9a-4b46-4966-96e9-9e4ac362b595"
        },
        "item": {
          "id": "bd4778de-6f19-4055-90a1-355db1c87f55",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "6429c819-371a-41a1-a01a-0b244fff8791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cdd39ca-2108-4697-9441-851e99d0e68b",
        "cursor": {
          "ref": "4f01e707-a3a5-4f5d-80da-a2232bb0e3d8",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e27ae38c-8221-4611-8a88-96e62dc3cb4e"
        },
        "item": {
          "id": "4cdd39ca-2108-4697-9441-851e99d0e68b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "66e3d64e-a26c-45dd-a980-97991542bb8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd20f377-5111-4b07-ba7a-7251cde8052f",
        "cursor": {
          "ref": "2c54bdeb-596c-43a5-ab3a-8de10f2a7053",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ef80ff14-fd5a-405b-88d3-0dd8b88a42ca"
        },
        "item": {
          "id": "bd20f377-5111-4b07-ba7a-7251cde8052f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7f50a7d8-78f8-4425-80ff-4c58c9737d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ced9597-3e02-408f-a49c-fea8b79ccf1a",
        "cursor": {
          "ref": "a2732b89-a343-4429-9610-fd317f492128",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "4e0f7783-5393-41c2-af44-c21eb17ce276"
        },
        "item": {
          "id": "0ced9597-3e02-408f-a49c-fea8b79ccf1a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e63fa0c1-a8c0-482c-b5da-3315b742c38f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a3a9027-e781-42cb-9292-48867545a973",
        "cursor": {
          "ref": "fa838ee0-4911-4103-b8e2-0f11b24bc5ac",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "2ee26387-3199-4838-91d2-a50ab5e500ed"
        },
        "item": {
          "id": "1a3a9027-e781-42cb-9292-48867545a973",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f40ce8cf-1ccc-4329-ae7e-1576869adad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe87dd1-fe40-4f2e-b183-7cba93a2c0fc",
        "cursor": {
          "ref": "402111e5-136f-463c-b1e9-89a91156fd20",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f01769c3-477f-4333-9e8f-f6ba891d4780"
        },
        "item": {
          "id": "cbe87dd1-fe40-4f2e-b183-7cba93a2c0fc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "4be8ecd2-8352-4326-909b-5d4c6d1b755a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "300a9caa-ed62-4b18-b5eb-cea06d7d05f3",
        "cursor": {
          "ref": "989ced9a-1e3f-4475-9971-8139d1a14f20",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "4a0a8e26-b391-40d5-a8a0-a3078c70aaae"
        },
        "item": {
          "id": "300a9caa-ed62-4b18-b5eb-cea06d7d05f3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "17c6741e-618a-42a6-abd2-66d82209de34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c971b9-f7c4-4faf-8947-9d33f0403c46",
        "cursor": {
          "ref": "ef390b2a-3fe0-4346-a03f-3ac44bb7346d",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d93bf3c9-f8b7-427a-a5a3-2db9fe46db15"
        },
        "item": {
          "id": "f6c971b9-f7c4-4faf-8947-9d33f0403c46",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "4b388f97-8634-430b-a8d6-5225b6ab1e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ca48b1-8a72-4c36-b69d-7053acdf3edd",
        "cursor": {
          "ref": "1b29079e-66f5-4227-8de2-139dae967d14",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "11af1339-8d63-4add-ae12-b4013bf35c99"
        },
        "item": {
          "id": "49ca48b1-8a72-4c36-b69d-7053acdf3edd",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ebf95102-be9b-424a-af7f-a13d98e95b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9687dc6-36a9-4e2b-9f33-960162c90ee0",
        "cursor": {
          "ref": "3fd70bbe-2a2c-4a6b-9a92-c42585d4b406",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f4974ee8-6179-474f-835f-3c3b5b360f93"
        },
        "item": {
          "id": "f9687dc6-36a9-4e2b-9f33-960162c90ee0",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "670f7c49-e385-43c3-93c4-8159b28a95fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa7dafa5-b883-4710-b872-08551f3bcb05",
        "cursor": {
          "ref": "f0e53b41-01de-4d46-94d9-016b9363994e",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "5e0fbdcd-fe41-4f3c-a040-57182c56fae6"
        },
        "item": {
          "id": "fa7dafa5-b883-4710-b872-08551f3bcb05",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e616594c-b7b6-4e6a-8d2e-dbd4bd14def7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4628951-fe3b-4045-bd15-2a8785d7168f",
        "cursor": {
          "ref": "7f4bc08a-a996-4418-9e0e-c1517e670204",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d55cb8f8-7f02-4a66-aba3-d42febc1c3d7"
        },
        "item": {
          "id": "f4628951-fe3b-4045-bd15-2a8785d7168f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f6963153-c06c-4440-bae7-1289cc511c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cacc7707-c710-43bf-b95e-f1e364946c5c",
        "cursor": {
          "ref": "9ee5e700-8516-4ee4-8d53-7d775598e700",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f5a06dfd-776e-43f6-ace4-0fc096eef7b0"
        },
        "item": {
          "id": "cacc7707-c710-43bf-b95e-f1e364946c5c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "1e7c5315-cb1f-4eda-b29b-5efcde84b12f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b46f75e-710e-4935-b890-29a8873fc41c",
        "cursor": {
          "ref": "e065fd18-2158-44c0-a962-7f85cdbf5a52",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "6c9083a7-bea5-4b96-acdc-622c558f36b8"
        },
        "item": {
          "id": "5b46f75e-710e-4935-b890-29a8873fc41c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "34d515ff-b427-4aad-8c64-6fd743221e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2003c7-1eb3-4b37-a3b0-7982d2857239",
        "cursor": {
          "ref": "e3a30512-02ff-4736-9878-64c541aa3ae2",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "997901e9-07ef-4787-8885-4d3735b06cf3"
        },
        "item": {
          "id": "2b2003c7-1eb3-4b37-a3b0-7982d2857239",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "fa513b7f-31f2-4806-aaa3-24ad4937e829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2828d68d-4807-411e-831a-4d6ee23799a1",
        "cursor": {
          "ref": "578a838b-d708-47ba-905a-7398decca424",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ef71d458-dc07-4e5c-9f5d-909e449414a9"
        },
        "item": {
          "id": "2828d68d-4807-411e-831a-4d6ee23799a1",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "87e977c7-29f4-4063-99bf-34d951b4bbc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c16dba40-fcec-4726-91f1-1368d7f54d60",
        "cursor": {
          "ref": "35a0e705-623c-4914-ac31-5002de77fe72",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "944d0561-3bc7-4520-9de6-e5da25874dff"
        },
        "item": {
          "id": "c16dba40-fcec-4726-91f1-1368d7f54d60",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "37424274-3cec-4a2e-bc86-536ec1541b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d3b461-7597-45fa-8eb6-c9c795e2482b",
        "cursor": {
          "ref": "0bced893-2bcd-4d51-9bfd-c758df0b2067",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f6b3e053-59b8-446a-9234-bd69a7c68a6e"
        },
        "item": {
          "id": "39d3b461-7597-45fa-8eb6-c9c795e2482b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ae0adf82-2dc2-4e57-ac6e-52e75c2cefe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb2a7aa-3ad5-4696-b098-fbfee29b7f3c",
        "cursor": {
          "ref": "8b8732c6-8c5e-40e9-906f-ce73e5c04e3b",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4cd7b530-4d70-4fff-875a-ad6a67226ec0"
        },
        "item": {
          "id": "8cb2a7aa-3ad5-4696-b098-fbfee29b7f3c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "5dbf38b4-b7eb-45bb-a874-b2c26c5038aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5659f1-04c0-4358-8aac-30bbdd799bc7",
        "cursor": {
          "ref": "4e9ce2df-6fd4-410c-ad0c-6a0ed6285520",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ebaaa187-63b1-4f12-9c2a-61a9bcee1c36"
        },
        "item": {
          "id": "5e5659f1-04c0-4358-8aac-30bbdd799bc7",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "09c47a6e-92be-4c73-9c60-da7a9fdc1fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c05d01-7ffd-4267-98c9-bd72e02e7427",
        "cursor": {
          "ref": "096316d2-f9f5-46bd-9a88-23112bd3f955",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3818c459-15c9-4702-a533-9cd208d4103d"
        },
        "item": {
          "id": "76c05d01-7ffd-4267-98c9-bd72e02e7427",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "94acdb23-450e-4c5d-a5bd-098f12b0980e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5576238-8e50-496a-ad57-7962f8893faf",
        "cursor": {
          "ref": "dbfbfc10-8583-46b1-88ac-21fd170e25ea",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2db4d349-5c98-4273-9fda-cc5c02b59367"
        },
        "item": {
          "id": "d5576238-8e50-496a-ad57-7962f8893faf",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "270fc78d-bad8-48de-844e-5ee63e7ba7f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d01688-5dc6-43bf-aac2-201a75ca7587",
        "cursor": {
          "ref": "9c574bde-0803-463d-b63e-d42e690e998c",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "fd08d465-93d4-46be-b8f3-eeb56f0180c9"
        },
        "item": {
          "id": "b6d01688-5dc6-43bf-aac2-201a75ca7587",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0404f052-95fe-4a86-953a-8c9b53b2ddb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d524ca37-038f-409c-9db5-4ae70ab4d65d",
        "cursor": {
          "ref": "089f8f4e-4081-4a10-a4bd-19bc10b2f2fc",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c00cabb8-fe9b-4a06-bb09-a9424e6b229c"
        },
        "item": {
          "id": "d524ca37-038f-409c-9db5-4ae70ab4d65d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f6e936cb-0714-4dc9-b0e3-58dbcc8748f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d3c5050-4d15-4769-9ace-3d770fe45062",
        "cursor": {
          "ref": "fb4dde9f-39e3-4b60-95a2-7d51a64397b0",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "312ca6f3-c14e-4dab-abb7-0a7601f36a4b"
        },
        "item": {
          "id": "1d3c5050-4d15-4769-9ace-3d770fe45062",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c3911265-1186-4175-9443-55c7e7607cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db9f5f1-7bce-4b58-ab4a-3600344aafeb",
        "cursor": {
          "ref": "0b5ee0c0-f332-4698-9f44-56b84147bded",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8dd5b838-b3cf-44e9-815e-c4f0fd7abd03"
        },
        "item": {
          "id": "2db9f5f1-7bce-4b58-ab4a-3600344aafeb",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "07bf7b06-61ef-4bee-84b6-639002e6de15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022249e9-99fa-4bf6-89c3-2f809aed4627",
        "cursor": {
          "ref": "1e5853ad-438b-4b6e-a688-3c427c5729fb",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "aa3490bc-f346-47fb-9df7-2b95842c98ea"
        },
        "item": {
          "id": "022249e9-99fa-4bf6-89c3-2f809aed4627",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0acb21e5-8e24-4680-8495-b0f335185303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a6c32e1-e859-46a8-bb0a-79cae55c63ec",
        "cursor": {
          "ref": "3ff16a46-650c-44d0-a979-920d13f0433e",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c3397b94-8815-4c54-be83-8adf4df05d5d"
        },
        "item": {
          "id": "8a6c32e1-e859-46a8-bb0a-79cae55c63ec",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "de042627-e108-4ba6-a0a0-ae58c8a5590f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af886b0a-60e8-452b-9509-56a0fc7a078c",
        "cursor": {
          "ref": "ed933147-e864-482c-95c2-41e4f0f42857",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "3126e576-7dbb-4c7e-96e6-675711661d4f"
        },
        "item": {
          "id": "af886b0a-60e8-452b-9509-56a0fc7a078c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "de0726e3-46a9-4e56-9729-6e9801d082bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec96bf4a-44a4-4226-91a0-d12ff8d96494",
        "cursor": {
          "ref": "6422a799-13ce-4b6d-a75e-632eb5a1b6c7",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a949d58d-429a-48b7-84dd-8995878580e3"
        },
        "item": {
          "id": "ec96bf4a-44a4-4226-91a0-d12ff8d96494",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a4ee443b-c135-461d-85db-1ad54fd49376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b99a67fd-9908-4eee-9d29-b147e2b484cc",
        "cursor": {
          "ref": "f1cb2ef4-fdab-4d3c-b58c-d8a0397beaa9",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "16a71fdc-30dc-442f-b20a-ab5656627759"
        },
        "item": {
          "id": "b99a67fd-9908-4eee-9d29-b147e2b484cc",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "605d8b16-14a1-422a-9b42-bee779c735b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b144e3a-7f56-40d4-b984-d9157179a7a1",
        "cursor": {
          "ref": "0a8a41d4-e128-482a-b188-d21a14eecb44",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "884ba0f7-8990-4a29-b476-e64b989ed8c2"
        },
        "item": {
          "id": "0b144e3a-7f56-40d4-b984-d9157179a7a1",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "7abbfe96-b163-4c1f-89f1-2360d8455288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b1a73e-3db0-42c2-a588-d79316e1ec12",
        "cursor": {
          "ref": "19494b8b-c96f-44ee-bcd0-900b6b61e471",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "920a9929-bf75-4d45-8b3a-3708745a6c19"
        },
        "item": {
          "id": "e2b1a73e-3db0-42c2-a588-d79316e1ec12",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "25041d7a-d3ae-4e24-bb60-9a78f1ba79c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7331978a-4f50-45b7-b7f3-0c7b680a76b5",
        "cursor": {
          "ref": "e69db420-e325-4d5e-937e-6e133515f728",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7d580952-12d8-4c6d-8dcd-22945f77c3aa"
        },
        "item": {
          "id": "7331978a-4f50-45b7-b7f3-0c7b680a76b5",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "3316ed0f-64f8-47b2-a5e4-fbc5f4557d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "482d4b46-8c59-40c7-8568-4340006c75cd",
        "cursor": {
          "ref": "ff91cc24-67db-4ea7-9b4b-bdb2791ff024",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "5c8ce62b-1c1d-42ef-95fb-a15220fda9a4"
        },
        "item": {
          "id": "482d4b46-8c59-40c7-8568-4340006c75cd",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ea6a0bff-15e0-4884-8af4-a6f0fb2bb471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f204b407-cda1-47cf-a798-1325becd234f",
        "cursor": {
          "ref": "5947ddbb-863a-4e9a-bc0c-06c6947376c1",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "86a7a18e-d37c-45d8-a267-2f785ff28274"
        },
        "item": {
          "id": "f204b407-cda1-47cf-a798-1325becd234f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "372c0da3-6508-4108-a409-8ff35ab04a06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "879c4524-7b09-41a7-97df-af26e0d8c66b",
        "cursor": {
          "ref": "dc76ce67-04b7-4635-979e-43c33853800f",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "752b9cad-2cda-439c-8ed5-4b183e24cbaf"
        },
        "item": {
          "id": "879c4524-7b09-41a7-97df-af26e0d8c66b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ea9eb9a4-878a-4b5d-90df-d0bbe9478bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1353c9dc-db4b-4457-8936-7c223f2f8df7",
        "cursor": {
          "ref": "f8523d60-0c7a-49f6-918c-a03291191b74",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6c9f9fa5-183a-4bb6-b2cf-7418dd3f70c9"
        },
        "item": {
          "id": "1353c9dc-db4b-4457-8936-7c223f2f8df7",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c7e09581-abac-4816-bde4-bb64c4a1405e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e635038c-de58-4175-b05c-488d7cdd0c55",
        "cursor": {
          "ref": "ab584906-2b54-4bbc-9e92-3f30cabf8f9e",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "30d9985d-40a6-4b5f-8cd2-65ffe1616adf"
        },
        "item": {
          "id": "e635038c-de58-4175-b05c-488d7cdd0c55",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "909bd6bf-cc83-4deb-956f-f715c1f0fa99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a676152-f073-4633-aad9-5a92d4ec0f44",
        "cursor": {
          "ref": "087bcb94-77ad-43f5-af0c-d2d20a6ae50b",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b489507d-fb36-482d-b956-2bc295fb2549"
        },
        "item": {
          "id": "5a676152-f073-4633-aad9-5a92d4ec0f44",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "1bf0c862-d599-4212-9503-133e20661c27",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c366325c-0490-4c39-90a4-f960c2307348",
        "cursor": {
          "ref": "f7ddbf3d-cd43-4482-8221-654cbeb54ef7",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "35829a85-7e76-4a6f-bf9f-88dcd059e9f0"
        },
        "item": {
          "id": "c366325c-0490-4c39-90a4-f960c2307348",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "1486e4e1-8b58-4ac1-a3fa-0bac37239dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "840623aa-9e7e-4214-a25a-73eeab53bfe0",
        "cursor": {
          "ref": "c6bb1bf7-481d-4b20-b892-6e44090c1bee",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "56bb490c-c1c1-4f85-aea0-99a2bb035143"
        },
        "item": {
          "id": "840623aa-9e7e-4214-a25a-73eeab53bfe0",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c5a97a91-9d87-42b2-989d-c880e85d6331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "4e29c993-613b-48fa-9d68-a0eea4dfc196",
        "cursor": {
          "ref": "dca6b656-ead4-453b-9c7c-0d435efe9f6a",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "284acbe5-a7a8-4696-b7dd-b1961b31f6c9"
        },
        "item": {
          "id": "4e29c993-613b-48fa-9d68-a0eea4dfc196",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "85cfa905-727f-47e9-b142-a3d33d69a193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "8fa8a278-b41d-47fe-83f1-49645dda37ba",
        "cursor": {
          "ref": "7193ac17-07da-436b-9601-deacc5d770a6",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "172af641-7d6f-47dc-ac42-0ae0cad97ccd"
        },
        "item": {
          "id": "8fa8a278-b41d-47fe-83f1-49645dda37ba",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "1473e342-9f45-4bc5-9021-3c1d44122425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "57c26245-73da-441c-b6b5-abb5b8fc4d89",
        "cursor": {
          "ref": "f93a34d7-9dcf-4881-a92e-fffb9c4cd6b2",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b5c6f905-729f-47b3-9e8e-0246fe514aa4"
        },
        "item": {
          "id": "57c26245-73da-441c-b6b5-abb5b8fc4d89",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "60c21638-1c1a-405f-9e23-1a20ada33e6e",
          "status": "Created",
          "code": 201,
          "responseTime": 9090,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2377529-68ca-420f-b02e-d5f2355b5521",
        "cursor": {
          "ref": "91ed8b1a-4ef6-4b0e-ae22-cfc3ea262d2a",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "24c1aad7-a124-40a7-835a-323b35993bb0"
        },
        "item": {
          "id": "c2377529-68ca-420f-b02e-d5f2355b5521",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f055e10c-4d6c-4f31-ac5e-3d24db06b185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 151,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "a3846184-2428-47b6-9f73-499405c97c1d",
        "cursor": {
          "ref": "0e883196-7836-4f9e-a2b3-49aa5210d3fa",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "badf1009-e373-4e12-aacf-03390eda2833"
        },
        "item": {
          "id": "a3846184-2428-47b6-9f73-499405c97c1d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ce55cb77-7d9d-4e0d-958f-156594b9dab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "04afa2bf-0831-4ae4-b202-ce9ddbf3afbb",
        "cursor": {
          "ref": "27b9731f-0086-42c2-8e8e-e41e6c207698",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "943db604-f73f-43cc-9d03-b95acd6f0f59"
        },
        "item": {
          "id": "04afa2bf-0831-4ae4-b202-ce9ddbf3afbb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "229561b9-ee7c-4296-99b7-2d3033b6f24c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 166,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a734e6da-3e32-4cf1-8a67-a951d2642292",
        "cursor": {
          "ref": "df47e886-3d08-4b53-bbb4-2f6ee45f8875",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "80e3a075-2a8c-4bca-bb2d-79d86bebd3b8"
        },
        "item": {
          "id": "a734e6da-3e32-4cf1-8a67-a951d2642292",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0f20e404-0379-480e-8729-3d1545b4bf8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf3247a-6d85-4faa-b099-d38bd6c92192",
        "cursor": {
          "ref": "6b25f084-7802-4b1d-a82a-b9fb5ead4ef2",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "adcaaf37-74c2-4268-85e5-470113097bd2"
        },
        "item": {
          "id": "ddf3247a-6d85-4faa-b099-d38bd6c92192",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "275c2671-cfca-4164-b0fb-bbaa4e5c04e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd826ea2-eafb-4e75-9c39-d8a013f8c5b7",
        "cursor": {
          "ref": "e7fadf10-50fb-4d36-99f9-cd8acbfccae7",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c70240fc-e265-407a-9464-84e44ad2d38e"
        },
        "item": {
          "id": "bd826ea2-eafb-4e75-9c39-d8a013f8c5b7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f229915b-0d4e-437e-8f21-029c59abe10f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b41165ab-4686-47f0-8caa-0675a99ce463",
        "cursor": {
          "ref": "f567a454-a69a-4910-a915-e1039e99e0aa",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b6cf91cf-d25e-46f0-a179-647342935ddf"
        },
        "item": {
          "id": "b41165ab-4686-47f0-8caa-0675a99ce463",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ff0ddb32-927c-4abb-93e4-72f142ad32bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c82e704-46cb-49b7-81aa-45a6d0926766",
        "cursor": {
          "ref": "28479c1d-2618-4690-9c0f-a576a6795bcb",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "60c9422b-a9ce-4bce-8248-10475da80278"
        },
        "item": {
          "id": "0c82e704-46cb-49b7-81aa-45a6d0926766",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5f0defe4-6f8b-4087-8572-a883500de675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee22256-0914-438b-81a1-0c93f3b9ed9d",
        "cursor": {
          "ref": "b5376cf3-e168-4d1d-9017-be019a710cbf",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3e859203-4368-419c-bc09-98bc97a6983b"
        },
        "item": {
          "id": "eee22256-0914-438b-81a1-0c93f3b9ed9d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d5b261f9-ebcc-4d57-994f-b155e4c45489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a209ed7-77df-4542-8dcc-e0d988829e05",
        "cursor": {
          "ref": "35a638d1-6886-4ed1-9f5a-0788a043134e",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f0954484-38ec-4538-b936-1cb97896adee"
        },
        "item": {
          "id": "7a209ed7-77df-4542-8dcc-e0d988829e05",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "422c5581-dd96-48fe-922b-d87337dfb69b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576bf05b-cbf4-43ae-9202-3dbc63b5ea50",
        "cursor": {
          "ref": "9cf5a49b-a231-4e12-8d6f-08a3d9dec991",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e7ee51a6-ed2c-4210-9bea-bae92208d3ad"
        },
        "item": {
          "id": "576bf05b-cbf4-43ae-9202-3dbc63b5ea50",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ccf2f456-14e5-4b08-8c29-3d9c4d69361d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef9835c-18cc-4b3b-836d-c1e9f64215ae",
        "cursor": {
          "ref": "3cd68040-c30f-4c6b-9f0e-3b3297e46ae9",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c68cd47f-1e60-4f3d-9af4-d8451809ab9f"
        },
        "item": {
          "id": "1ef9835c-18cc-4b3b-836d-c1e9f64215ae",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2682d69e-d3e5-4fc7-a170-456f6b0b4ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e7c0d69-6223-48ea-bc3f-a868ce8f7a1f",
        "cursor": {
          "ref": "08230647-57b5-4aa1-ab3a-d929f8e0e56a",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "c1274b55-1dda-45d3-bef8-9ab1af21a982"
        },
        "item": {
          "id": "9e7c0d69-6223-48ea-bc3f-a868ce8f7a1f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6ca26e4b-7361-4ece-bae8-54e4c6594851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c06e78-27d2-49e4-898e-5f340137874d",
        "cursor": {
          "ref": "159f8e63-1b03-4e6d-a603-b6d9025f356c",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a8f73535-88c0-436c-9432-683d09e2cd08"
        },
        "item": {
          "id": "09c06e78-27d2-49e4-898e-5f340137874d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "47b51e77-9827-46bf-a193-04ea770d0d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6667c7d4-32aa-4b39-8b16-f86957494931",
        "cursor": {
          "ref": "8a42ac4a-0bfd-4af1-bdf6-aecda9910a71",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "9097bd6c-b225-425e-bc8c-9126449269e0"
        },
        "item": {
          "id": "6667c7d4-32aa-4b39-8b16-f86957494931",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d9202bef-64b8-4002-9784-dbaad76e9c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "484f4ee3-ce52-400c-b13b-29f6a37b6856",
        "cursor": {
          "ref": "f39d87fe-a7bb-4158-ab21-51dbfe59c0ec",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "aca31512-c910-43b7-9279-e1407e0cedb2"
        },
        "item": {
          "id": "484f4ee3-ce52-400c-b13b-29f6a37b6856",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fbc97650-61a1-4b34-ae1c-1490daed0f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6f5777-deb2-4f0c-95e6-83ef5e50492e",
        "cursor": {
          "ref": "795c7926-ccac-4e29-8373-1c2defe22b8a",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "bd4060ff-9f19-4b7a-ae64-1a418f860714"
        },
        "item": {
          "id": "cf6f5777-deb2-4f0c-95e6-83ef5e50492e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "19a38084-233f-418d-9220-9058aaf07a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57277afb-2fa0-48f1-a34b-0b6f205983e6",
        "cursor": {
          "ref": "354f47fb-f256-4f80-844b-35060803cdc4",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d9f0d120-abf0-4331-b860-6fc418deecfc"
        },
        "item": {
          "id": "57277afb-2fa0-48f1-a34b-0b6f205983e6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6c169d97-d9ff-40c4-9434-0277de388c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4545b3ae-83b6-4cb6-96a3-fb791452d69e",
        "cursor": {
          "ref": "3c551d19-556f-41e4-8dc0-d91698593dac",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "df5fedda-9dec-4ecc-969b-a084b9e9f165"
        },
        "item": {
          "id": "4545b3ae-83b6-4cb6-96a3-fb791452d69e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f2056576-0aeb-49e0-bc95-8f4dfdab0c8f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 47,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "8d83008a-6b07-4a03-91e7-17f36b9a48dd",
        "cursor": {
          "ref": "0c0f307f-0ac5-4b30-a566-7b82bbb89d01",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "56a1d68f-6a79-44c2-af70-0de59242ce38"
        },
        "item": {
          "id": "8d83008a-6b07-4a03-91e7-17f36b9a48dd",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0da639ae-6150-428e-803d-291ddfd620e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab5d9de5-0ee1-4114-bcd1-532f53900389",
        "cursor": {
          "ref": "a1109dbf-5484-4f9e-b20b-4e72310f56ad",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "747d90be-b400-42b8-a7b6-86891507790e"
        },
        "item": {
          "id": "ab5d9de5-0ee1-4114-bcd1-532f53900389",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d50dedbf-dce6-4a23-8701-7aacf171de02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20082fc-4d1e-42f7-8bfd-9d69e5b6a761",
        "cursor": {
          "ref": "54b9e737-326f-40d6-af84-6b8509c688c3",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "8e51cb2c-7570-4560-9704-926c52351b37"
        },
        "item": {
          "id": "f20082fc-4d1e-42f7-8bfd-9d69e5b6a761",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e2c50bf6-62fe-4837-85e6-e443b986f0e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3d36ed-bcbd-412a-ac4c-e29a44842106",
        "cursor": {
          "ref": "5838847a-9d00-406a-9ea6-bdf45dd53763",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "689476e7-bb61-417d-87bb-ecec95564712"
        },
        "item": {
          "id": "5a3d36ed-bcbd-412a-ac4c-e29a44842106",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3a9f7fd6-13f8-467c-b089-83c36055f7b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f05959e-a716-4f15-8afd-61bcb5915ed8",
        "cursor": {
          "ref": "140a328f-328a-447e-a2a2-42cc56e24bbe",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "43ef3898-4511-407a-a6d1-439200eaf748"
        },
        "item": {
          "id": "4f05959e-a716-4f15-8afd-61bcb5915ed8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5a606104-99aa-4ef1-bb47-7b0a8e2b621d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a2ae75b-6b2f-4e59-8626-61f46d559712",
        "cursor": {
          "ref": "d0f0cb8e-56ae-471b-8281-13f70b023f6d",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "7bf7f10e-1262-400c-9894-a6832de09892"
        },
        "item": {
          "id": "6a2ae75b-6b2f-4e59-8626-61f46d559712",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "710cddf5-7f65-420d-a2ab-776f97800b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a256d4-29e4-49c3-b515-c735bca12aee",
        "cursor": {
          "ref": "f8b89cd4-b2ab-465b-9600-f960c3fd551e",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e994b077-c569-4512-aef3-548efe93ed5c"
        },
        "item": {
          "id": "25a256d4-29e4-49c3-b515-c735bca12aee",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1d50d73a-9a85-410d-b99f-442172b8d994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "516d5017-4e35-4d05-9494-6f5e8d98e990",
        "cursor": {
          "ref": "12dafd60-4501-4f10-952d-5ea945031898",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d9ec782a-f4ff-4724-bbd5-0a0861e5efcc"
        },
        "item": {
          "id": "516d5017-4e35-4d05-9494-6f5e8d98e990",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f4a25aa8-8f49-4ba4-90c6-5fb1d1d15358",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 57,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "2cd19f37-0f8f-43ae-afb5-c4f3851e1c8a",
        "cursor": {
          "ref": "b34c8cbc-4a43-4be8-9299-4e5d619379a8",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "8cc8a389-cad1-4ffd-a551-519d33a1e8ad"
        },
        "item": {
          "id": "2cd19f37-0f8f-43ae-afb5-c4f3851e1c8a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b7259681-b77d-4855-8912-fadd5b0d3e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcbfb1c8-80a2-425c-ae2e-c93a70d772d9",
        "cursor": {
          "ref": "dcafeb17-2c65-4edf-b0f6-e463a41e3e2a",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b675e6c3-4431-4143-bd92-e37675cd0b48"
        },
        "item": {
          "id": "dcbfb1c8-80a2-425c-ae2e-c93a70d772d9",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "63214059-949f-495d-af0c-8ab57ba837d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b7f11c4-3675-4246-8a27-c21806576430",
        "cursor": {
          "ref": "598d8ac2-0949-4d14-9558-05c959a5c462",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7a3f15ab-30b7-4ffd-bd26-dc54c418be8a"
        },
        "item": {
          "id": "5b7f11c4-3675-4246-8a27-c21806576430",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "be34ce40-e87a-48d5-8996-f98466a295fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1996cc83-8156-482a-9aa3-1e4696958477",
        "cursor": {
          "ref": "15cbff08-9eb0-43e4-972b-d60e7e73f498",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7955e246-cf8c-4b70-825b-b44ce6f31eff"
        },
        "item": {
          "id": "1996cc83-8156-482a-9aa3-1e4696958477",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e87b7949-6419-4227-9c92-cc9b958e7c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf4a483-9f2b-4866-8cc6-0c5d301bc206",
        "cursor": {
          "ref": "bbbea4aa-525e-44f3-b807-ec444142c1ef",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "8770dd77-2a6c-46e7-bb5d-1feb8178c693"
        },
        "item": {
          "id": "faf4a483-9f2b-4866-8cc6-0c5d301bc206",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0d7323c7-18c2-4401-858d-3949f2b7cdfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1758e573-8844-4ed8-8b66-f9e339fcb060",
        "cursor": {
          "ref": "59b7fb6b-aa6c-444e-8a01-284c3a15cdb7",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a77b5c1f-8fab-47df-932f-36b9e41212c3"
        },
        "item": {
          "id": "1758e573-8844-4ed8-8b66-f9e339fcb060",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7f5a2623-cb5b-43c2-99fe-dea11e5c69ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f582ed7-44f8-4f53-8a96-102848583285",
        "cursor": {
          "ref": "37866296-0c63-4f43-8600-5ef187eaa07e",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "8ccc4468-7048-4674-9a30-0b880becfb8d"
        },
        "item": {
          "id": "9f582ed7-44f8-4f53-8a96-102848583285",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "78536fd7-80a8-4e83-a828-1bb1cfcf4591",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 83,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "46d7308b-5869-456a-bd14-b63941e4783d",
        "cursor": {
          "ref": "717e783e-5aca-4e70-bfab-8fc28cae791c",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b5b53a72-6823-4118-9ab1-109be1c22535"
        },
        "item": {
          "id": "46d7308b-5869-456a-bd14-b63941e4783d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6d0fb73d-a565-4811-beb0-c38da56a70ec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb4cca8-def0-4e87-ae75-b68514508280",
        "cursor": {
          "ref": "26ad881b-b215-485c-a44d-c045b1ffbba4",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4a3d9470-6942-4572-b066-1eafba7d6ce8"
        },
        "item": {
          "id": "3bb4cca8-def0-4e87-ae75-b68514508280",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bd9ac88d-71b2-44ed-8eb9-1d826549410f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2784e78b-93e7-4877-bd9d-9819590a2eba",
        "cursor": {
          "ref": "78630e7a-4d62-475f-876b-c4ab049ff2c8",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "24d496d9-b2c0-4e5a-8664-a35d7152dae8"
        },
        "item": {
          "id": "2784e78b-93e7-4877-bd9d-9819590a2eba",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "fd41adaf-aef5-4920-b45c-7f577d6ce542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be175069-ee5f-4cea-8553-154c7c5a3ab9",
        "cursor": {
          "ref": "d830c9d5-6458-4a7a-a921-3af0d1ab7efb",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f3ee4fb3-b9a7-48be-a3ef-61b59cbba94e"
        },
        "item": {
          "id": "be175069-ee5f-4cea-8553-154c7c5a3ab9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "be282a47-9f8a-4d02-b97d-06383e3c4e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a30939-1175-4103-be30-0d985961dc45",
        "cursor": {
          "ref": "558d5df3-4502-4a99-92fc-b1913d2a7ed4",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e56eb378-a505-45e2-97ae-c8ecde0daae9"
        },
        "item": {
          "id": "40a30939-1175-4103-be30-0d985961dc45",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c1f2d419-97f5-4a3d-b88c-59af0ef9bd6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "511c4c61-53aa-4219-a812-da83af0b5968",
        "cursor": {
          "ref": "f9129d8a-0bbb-4939-8bbe-1c04084e8ef2",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f29e3c28-809e-41bf-94f9-c2fe97909692"
        },
        "item": {
          "id": "511c4c61-53aa-4219-a812-da83af0b5968",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9c589902-df65-4ee0-bb69-866b1f669fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e95830-8afc-4e30-b474-0b87615a5fd0",
        "cursor": {
          "ref": "8de95f68-d688-4ca5-99e5-707742052820",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "312a4211-8fb7-428b-8b25-ee9546a9f505"
        },
        "item": {
          "id": "20e95830-8afc-4e30-b474-0b87615a5fd0",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "76d86dc5-4bee-471d-a253-cc63b4ea7b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 145,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee44942-cceb-4e10-b393-912936ed2a34",
        "cursor": {
          "ref": "bf16cad0-d983-4f4c-adc1-4ef5745053c9",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "afcd2ae9-d434-4097-b064-7df2fb9667ab"
        },
        "item": {
          "id": "fee44942-cceb-4e10-b393-912936ed2a34",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "27fed254-43b5-46f9-bb4b-14819e196017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36136a1-7460-41cc-925c-e5c7f3acb493",
        "cursor": {
          "ref": "6f52639b-17a8-473e-8baf-af585b3e20a7",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "15984f06-d578-4a52-8434-29b1d407ee8f"
        },
        "item": {
          "id": "b36136a1-7460-41cc-925c-e5c7f3acb493",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6b4a39ed-842d-4f49-9cc9-8fe1e645d416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baff2db2-25f6-447d-9570-2b248dd0eb2f",
        "cursor": {
          "ref": "13290e06-92c6-4d33-8d7b-680c6ce6b8ae",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "1d2aaaea-c236-4c90-9989-d068f689b8d2"
        },
        "item": {
          "id": "baff2db2-25f6-447d-9570-2b248dd0eb2f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a4742673-53a4-4bbf-a5a0-a515cdd88119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f404766-3021-42a7-8fe2-63d644178704",
        "cursor": {
          "ref": "896483d9-9e59-4675-8863-c478de7e37f8",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "91f948a3-b606-445d-a7b3-1d18e3ee8c72"
        },
        "item": {
          "id": "8f404766-3021-42a7-8fe2-63d644178704",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b48243d0-e193-4888-8137-49c773b061e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "066e53aa-fb34-4a9c-8db8-fa7493537089",
        "cursor": {
          "ref": "7a84c08d-bd48-477a-8322-80b30cb2e358",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c1d3b71e-d876-4f17-b430-d1933fbc9e76"
        },
        "item": {
          "id": "066e53aa-fb34-4a9c-8db8-fa7493537089",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f034ddaa-fcee-4267-a20c-68f6f1b0983c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b907578-2e1a-41e1-8564-1cf7d9f11e07",
        "cursor": {
          "ref": "3b71ea35-adad-42c5-8e55-efb800d1ae2d",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "3691696c-8fd7-4b5d-89b8-cfe40fa4225c"
        },
        "item": {
          "id": "7b907578-2e1a-41e1-8564-1cf7d9f11e07",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6f65035b-0be3-480f-8e8f-92ddb2fc3b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0170dc8-2735-47d9-b218-7d3f827afb98",
        "cursor": {
          "ref": "47fbe2bc-3426-474a-bbea-3e8b7dfa188d",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e7af63a8-061b-4673-a621-28041ae27a2f"
        },
        "item": {
          "id": "a0170dc8-2735-47d9-b218-7d3f827afb98",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e97802d3-e6a3-4ec3-91f7-3305e57ccd42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93245f4d-ba45-4212-8f70-e2e3af11cf3f",
        "cursor": {
          "ref": "1ad04b18-dd48-42bb-be4f-f1156072367c",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "cda04d92-fa70-4c51-bfd4-a22ea499e04b"
        },
        "item": {
          "id": "93245f4d-ba45-4212-8f70-e2e3af11cf3f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fc3ed830-9366-4503-bf0e-1603ab2f7abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a722170-b420-4946-b7af-07ebc0b50963",
        "cursor": {
          "ref": "de5fe95e-5089-48e6-9ae5-c9d8173eea9c",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "74e75e4b-18ec-43db-9ced-188b6f9ea6a0"
        },
        "item": {
          "id": "0a722170-b420-4946-b7af-07ebc0b50963",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "11fbf2d5-e41e-4baf-852f-6ce4b29790e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f583c27-509b-4214-b070-32988536bfac",
        "cursor": {
          "ref": "5d7d00f4-e5e0-4ec3-bb3a-81af964907cc",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "63036064-fed1-4e4a-a281-c0fae81ce41a"
        },
        "item": {
          "id": "0f583c27-509b-4214-b070-32988536bfac",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f1255962-ae67-44dc-9cdd-083571f7d485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5023266-79a8-4a58-83ae-4ba1a83346e6",
        "cursor": {
          "ref": "15b7432a-a6fe-4cc8-9d5d-754c43689f3d",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "0ceac385-8e92-42af-ac68-1a9fb40dcc4d"
        },
        "item": {
          "id": "f5023266-79a8-4a58-83ae-4ba1a83346e6",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "aa6c5f8a-ac93-4ef8-86b7-faa0b90f02e1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "3967da27-ffd8-4a31-931f-9e9d39bb7e6b",
        "cursor": {
          "ref": "8e76b4b4-0e57-4b54-ad82-3a6fd5fc860b",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ff43a33a-ea87-4090-b223-a43e62ecc999"
        },
        "item": {
          "id": "3967da27-ffd8-4a31-931f-9e9d39bb7e6b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0fb82061-82b4-4f6b-ac89-4f2c218ded08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa769ec-26a2-454d-8d45-c9df230c617d",
        "cursor": {
          "ref": "6f20e58d-4142-40a6-9e2c-2faffee275d1",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4dd71fb7-cd26-4972-b774-4d25405018be"
        },
        "item": {
          "id": "9fa769ec-26a2-454d-8d45-c9df230c617d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "33f9b325-3948-4464-9774-550b5a53b1b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea1bafe-83bd-49c0-b6e9-0d2a1d90eeed",
        "cursor": {
          "ref": "604db9ba-b571-47ea-b563-dbe0193c5dfb",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b5f26961-6a0c-4e01-8d05-14e0263f98c5"
        },
        "item": {
          "id": "0ea1bafe-83bd-49c0-b6e9-0d2a1d90eeed",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6ef0cf44-593c-40ff-b0e9-73d30b5390a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cbdbaa6-ac09-40ea-b0cf-8330d52d83dd",
        "cursor": {
          "ref": "f2940415-2cd9-4cc4-aeb2-63525e5f56a7",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b682a209-9563-4ce1-b8f8-00fa6331702a"
        },
        "item": {
          "id": "1cbdbaa6-ac09-40ea-b0cf-8330d52d83dd",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "aaf2d883-3082-4bb5-871f-cb5d566e8b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "147b1598-a7e9-45de-981d-6a2f410cf0af",
        "cursor": {
          "ref": "25061ef1-f3b8-4c07-bf0d-08db8ea4cd00",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "774b1909-42ac-4b27-8d34-cfa8c72d2c77"
        },
        "item": {
          "id": "147b1598-a7e9-45de-981d-6a2f410cf0af",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ebbdeb21-1e9e-4c97-9b8e-1f054d8fe275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67bcddff-6ebc-403e-a877-2bf2c48aa91a",
        "cursor": {
          "ref": "192fe026-f657-47a1-8edd-faec15867505",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "34b1ab39-1d58-46bc-9d7f-9f7eb1456b01"
        },
        "item": {
          "id": "67bcddff-6ebc-403e-a877-2bf2c48aa91a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9d77b266-2e10-4cc4-8642-f4699cc68f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da2e5ff8-5e0f-4892-8b28-d0fcf27552b1",
        "cursor": {
          "ref": "50ebd572-7c32-43fb-a57c-c62234b1f7f5",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "7d5caac0-acde-4218-83e1-101d8b15e693"
        },
        "item": {
          "id": "da2e5ff8-5e0f-4892-8b28-d0fcf27552b1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "769a0384-9420-4d44-9901-949cc442fd27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a598c6-005a-4aca-a588-a6cc6644675c",
        "cursor": {
          "ref": "2f037e4f-12bb-4ed7-8bc8-5081ea8682d0",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "25595dca-2b21-43b1-913d-ad858ebc5aaa"
        },
        "item": {
          "id": "34a598c6-005a-4aca-a588-a6cc6644675c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0c8bc501-339d-45db-b484-a00650580ff5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "341726cb-36e2-4cce-bfbb-4755df97c1ce",
        "cursor": {
          "ref": "15814f19-5210-4e31-8917-aae70a24e783",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "9b40494d-75de-4f8f-85ce-511c3df3fa67"
        },
        "item": {
          "id": "341726cb-36e2-4cce-bfbb-4755df97c1ce",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "50e51a89-0114-4ad3-9aff-c51f85fd78e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ea5068-9777-498c-85ae-d263135c1d16",
        "cursor": {
          "ref": "89ea42c9-a7e4-4bb2-b9db-ca36ac557bcc",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "baba4884-182a-4a6b-bed0-e7c8befead15"
        },
        "item": {
          "id": "a1ea5068-9777-498c-85ae-d263135c1d16",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0da8a989-8280-428a-92bd-fff80299347a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ad18db-1aff-4da0-8859-ebbfaf3f6c98",
        "cursor": {
          "ref": "05fd7381-72ec-4d88-bd37-74dbf34f6cbc",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "bb06833d-8b9b-4efe-960b-97f6e074bed0"
        },
        "item": {
          "id": "53ad18db-1aff-4da0-8859-ebbfaf3f6c98",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "54cf7cae-c543-4086-978a-60838290eb78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ca1219-561d-401b-bb96-8b4426738629",
        "cursor": {
          "ref": "6a91a171-420d-4180-8e8d-2295a775be77",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "6eb06932-4c2d-4f7a-8068-3daa060cabc3"
        },
        "item": {
          "id": "50ca1219-561d-401b-bb96-8b4426738629",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3703f383-8009-4476-97d1-4babc58ce940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a4da0f-a752-436c-b280-6f1d5f3ebe91",
        "cursor": {
          "ref": "6fa73dcb-d3ae-48a7-8479-6c0211329875",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "387fa1f7-57ba-4f20-9a26-d4a5c719db10"
        },
        "item": {
          "id": "b4a4da0f-a752-436c-b280-6f1d5f3ebe91",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0a1d7f46-606e-49d5-843d-d9cfcde364d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f4f3e3-9984-474c-8385-ed84845d2136",
        "cursor": {
          "ref": "898b2d1b-a527-40c6-898a-2f856e9193b8",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "80fb71d9-554b-4ec4-807c-551c3ba5737a"
        },
        "item": {
          "id": "74f4f3e3-9984-474c-8385-ed84845d2136",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "22e033e9-a1d1-42d4-90f0-8bd5524d88a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c33ba81-dc23-4611-a85a-f214bd4f2ac1",
        "cursor": {
          "ref": "6c27b259-b35a-4898-a2fa-dd9fff36060a",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c4995659-e112-404c-9d52-93c7eac9a4c6"
        },
        "item": {
          "id": "2c33ba81-dc23-4611-a85a-f214bd4f2ac1",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "9da895d4-2097-4cbd-a7d9-549f0c7db450",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "9fa3ac28-cf41-4e0c-a0c6-e09922b3b1c6",
        "cursor": {
          "ref": "fc1ac7ea-bfdb-4ab5-b093-cb44aa0d7b24",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "db6c806f-e256-415d-8c67-a8a7932d48f9"
        },
        "item": {
          "id": "9fa3ac28-cf41-4e0c-a0c6-e09922b3b1c6",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "266736a8-74cc-45e6-b912-37aad29688ce",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 51,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "ac76f999-1160-4e8d-95a9-07571a607cad",
        "cursor": {
          "ref": "6b214176-9545-4ab1-8fd7-6b91b897a486",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "1a8f2457-40bd-4044-9199-3f942381f8f7"
        },
        "item": {
          "id": "ac76f999-1160-4e8d-95a9-07571a607cad",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "1a551833-afe4-4553-94bb-f7ed2b6b41d6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 51,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "a4aad2c6-0add-47f9-8622-bbceaee521c8",
        "cursor": {
          "ref": "69e80e78-d452-49a2-9243-8ec4cebe89dc",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "82f64aaf-1f57-4af0-a73b-d0d47308363e"
        },
        "item": {
          "id": "a4aad2c6-0add-47f9-8622-bbceaee521c8",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d2e05d09-8bef-48b4-94d3-a308b2e9702a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 54,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "5d2a1ae2-b6a4-4a33-8d45-13a8fb5e9f84",
        "cursor": {
          "ref": "83f535d3-c153-4474-8e05-43b0da1a4fe6",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b5090ba5-c889-4470-aa9c-f670518130e1"
        },
        "item": {
          "id": "5d2a1ae2-b6a4-4a33-8d45-13a8fb5e9f84",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "5a55b350-ee1a-4355-9e43-16830bb9677a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 41,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "3d36062b-4aa5-449a-a102-4bbebf723891",
        "cursor": {
          "ref": "eb1f98fc-a7f5-4f54-9278-704d5e1ef629",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2c6f1a3c-da8b-4282-9fa9-027a80abedbb"
        },
        "item": {
          "id": "3d36062b-4aa5-449a-a102-4bbebf723891",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "26fdd942-d521-4bcb-b1c8-88ed5f41c8c2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 47,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "7e43d548-e007-4b73-a669-7fa32e3f5a1a",
        "cursor": {
          "ref": "114fdd2f-bf68-4a69-baa9-3c18999942cd",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "6aa53586-18b5-4fe5-802f-aeb08b73aaaa"
        },
        "item": {
          "id": "7e43d548-e007-4b73-a669-7fa32e3f5a1a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9c1801c2-06bf-4930-a0b1-56b9555de487",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af99f59-7764-4790-8baa-a2399f2e2345",
        "cursor": {
          "ref": "3113094b-9146-4904-9ddd-41fbc97b9c51",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c9d80ed8-be58-4273-ba80-564958fbef7a"
        },
        "item": {
          "id": "4af99f59-7764-4790-8baa-a2399f2e2345",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a34382f9-1933-468e-8d8f-a7c150803f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "396cc556-2a4d-4770-878b-d6d1b8a9f6e2",
        "cursor": {
          "ref": "47b14cfe-7d54-4f65-b7e3-66780fa5f1ed",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4f6a4c83-51df-4975-9bf1-2f6c51b974c2"
        },
        "item": {
          "id": "396cc556-2a4d-4770-878b-d6d1b8a9f6e2",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "22c2522b-658b-4313-ab5a-951f199864dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b082b83-a51b-47a8-9cda-a9a3320a0340",
        "cursor": {
          "ref": "60ea333e-149e-40cd-a874-0f95056ae8e8",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "59e389a3-9bc0-459e-893f-7f60a5d82a10"
        },
        "item": {
          "id": "7b082b83-a51b-47a8-9cda-a9a3320a0340",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a99ac4e1-b1a2-4614-8f48-dc1a9ffc2dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e01c7c-0a55-45c1-8870-147f0eb86963",
        "cursor": {
          "ref": "be305f8a-23ae-4e88-8705-bd5287841d53",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "676abb06-734e-45ce-8bca-ba199f5a3884"
        },
        "item": {
          "id": "84e01c7c-0a55-45c1-8870-147f0eb86963",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5ca3fdc2-2c4d-42d6-bc61-92f4ee113294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4825bbe-485c-44df-82e2-634eeb144a2c",
        "cursor": {
          "ref": "15a37de0-9326-4240-924b-a5633947ac4a",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "59c4fccc-7cab-4300-b8f8-6be17568fbc4"
        },
        "item": {
          "id": "e4825bbe-485c-44df-82e2-634eeb144a2c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a4e88a37-7ab0-41be-81f1-cf6890df4b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f1b0c4-2cf2-4481-8191-726cb1601080",
        "cursor": {
          "ref": "dd406b95-b8ae-41dc-b75d-ed458c5bec35",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f983ed74-475b-4466-ba48-52a0cea99a8b"
        },
        "item": {
          "id": "60f1b0c4-2cf2-4481-8191-726cb1601080",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "0f2a777d-df07-4654-8ad1-a4dc04433f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2fd68a-a88a-4696-bb11-012e127da92c",
        "cursor": {
          "ref": "5b4303fe-c3c0-4571-bb2b-880247524c77",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ea56eff3-a016-4ae3-a85e-ca7350faeca2"
        },
        "item": {
          "id": "2d2fd68a-a88a-4696-bb11-012e127da92c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d754dac8-0283-48d5-ad18-c873e58468b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a06347-2fbc-470e-9e48-c7e3c9802333",
        "cursor": {
          "ref": "2848b2f3-a82b-4b83-9a67-ad0366a05a93",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "af33b41f-bc61-49bc-9700-e69504226674"
        },
        "item": {
          "id": "01a06347-2fbc-470e-9e48-c7e3c9802333",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "7a85eb47-96ee-491d-af15-be5c62607685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b0dd3c1-2657-4bdd-875f-5b254656e7d8",
        "cursor": {
          "ref": "82d2e4a7-e7e1-484a-863b-694bdcaeb8ce",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "bd6d4405-28d0-4565-a899-211a34225bf2"
        },
        "item": {
          "id": "2b0dd3c1-2657-4bdd-875f-5b254656e7d8",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "897013f1-ca14-49bd-949a-45e81c0e45a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d893654-9a65-4031-8839-55d175726119",
        "cursor": {
          "ref": "c160afbb-efe4-4206-89e4-65b8762e937f",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9926113b-62f1-43fb-a280-fb6e6a808633"
        },
        "item": {
          "id": "9d893654-9a65-4031-8839-55d175726119",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "9bf8db99-d706-48de-8396-d40743643cdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dcd78b2-2328-4c02-92f1-e909ee185764",
        "cursor": {
          "ref": "2c1c9a90-df2a-4c60-ad5a-f9a2b5729602",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "61b8e509-c5c9-4864-851a-61204cf95123"
        },
        "item": {
          "id": "0dcd78b2-2328-4c02-92f1-e909ee185764",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "19c6b441-c790-4231-9123-7083c4a4b20f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a3fe97-693a-4221-b2c2-7760da7688c6",
        "cursor": {
          "ref": "be4627b8-fa28-42f7-87ef-2a84a76f5197",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b384f978-35f2-40fe-ac3c-fb66890e844d"
        },
        "item": {
          "id": "70a3fe97-693a-4221-b2c2-7760da7688c6",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3271871c-dbc7-4854-a27c-c7cbaa6cfb21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2991a9a0-d498-417a-8d22-6ce52445fb68",
        "cursor": {
          "ref": "5bf5af51-efd9-4d0a-8d81-831b79b732a0",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "32a267ce-7416-4f48-a939-0a5e0cbefdbc"
        },
        "item": {
          "id": "2991a9a0-d498-417a-8d22-6ce52445fb68",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "dbc6b06d-84a6-41a7-a0fb-2d7feee2b43b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8fa6142-6c1c-46e8-80f6-19837935596b",
        "cursor": {
          "ref": "b5f38c5f-2ee2-42ce-8acc-01869cad2c19",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "da072750-0f83-459b-a4be-b1032e9a7059"
        },
        "item": {
          "id": "e8fa6142-6c1c-46e8-80f6-19837935596b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "02ca3f3a-ad72-434d-b07e-41e8504737be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e184dc8-b256-4eda-9e1c-386feac959b7",
        "cursor": {
          "ref": "06c41711-794c-452a-81af-f2d4ba2e7505",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "6e991150-86bf-4983-a4ed-e99fd9fb3f9b"
        },
        "item": {
          "id": "1e184dc8-b256-4eda-9e1c-386feac959b7",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "fc9670b5-393e-4f9a-9b5a-30e43271418e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0fa86e3-2cc7-43df-9f53-efda0b4d49f0",
        "cursor": {
          "ref": "39899ee2-215d-4554-93b1-9ddf6ff1c08f",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6095d981-06b2-4f3a-ad05-42f18a94dafa"
        },
        "item": {
          "id": "a0fa86e3-2cc7-43df-9f53-efda0b4d49f0",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a20a6440-91a8-4c10-ad1d-10689dbeb336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c96c96-3df8-4657-bf01-b7ce4cfd07ad",
        "cursor": {
          "ref": "3d996a35-6e00-40cf-9e79-4c224c72f54e",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ccde014b-0721-4dc8-83f2-ae9d80571ce6"
        },
        "item": {
          "id": "05c96c96-3df8-4657-bf01-b7ce4cfd07ad",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ba2fe203-97c4-4a74-8fe3-258c36fb249f",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "7d5ea16d-8fda-4c32-a3dd-fadc20c718a1",
        "cursor": {
          "ref": "b7e00746-3f18-4853-a6fc-37f910369afa",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "da6c8514-ab3e-4d9e-922e-90b1d0641124"
        },
        "item": {
          "id": "7d5ea16d-8fda-4c32-a3dd-fadc20c718a1",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4267feeb-9dad-4849-90b8-47b7dbc488ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f92beba-13cb-4eb6-b614-818589fb5a8f",
        "cursor": {
          "ref": "6a0ca2dc-c5cd-4b7e-b713-ef5bb9fcbcc6",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "453ad518-af4b-4053-8699-4d4cafaf6db6"
        },
        "item": {
          "id": "3f92beba-13cb-4eb6-b614-818589fb5a8f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "dc8d862b-1db5-4ea4-a6a6-3457e0bd04cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa311d85-0b5a-4f43-bfd1-25d42350d1b6",
        "cursor": {
          "ref": "bbb45e73-1f6b-4a70-ba44-61651835be17",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "56d47166-40ad-4c29-8f3b-4c26b7ad87e8"
        },
        "item": {
          "id": "aa311d85-0b5a-4f43-bfd1-25d42350d1b6",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "5264707f-9fae-47a3-8b61-1fd8d9f5cfac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e733bfe3-4d7d-485c-aae9-905bbe1294ca",
        "cursor": {
          "ref": "db40bacf-5244-473a-9b7a-fa6ffa25fa86",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9ed96158-69ca-486a-a6fe-c4a6914ea75e"
        },
        "item": {
          "id": "e733bfe3-4d7d-485c-aae9-905bbe1294ca",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b874134f-0674-4a70-8466-60491159d990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee3a5fb8-f382-4702-b0f5-ddffeb7ed679",
        "cursor": {
          "ref": "6f290872-d179-45d5-b73b-c729e4e83a5b",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "50354e14-f3db-4a2f-a328-2cf9e3642c5c"
        },
        "item": {
          "id": "ee3a5fb8-f382-4702-b0f5-ddffeb7ed679",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "2b59123e-7b24-49de-8d53-03e6a306fcce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6159e72-6ddf-4484-801a-011e5a94a1cd",
        "cursor": {
          "ref": "581da393-3880-48d5-a953-159ca4b8fb8c",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5c8b2d24-806b-43e7-9505-20a5a9b23b90"
        },
        "item": {
          "id": "c6159e72-6ddf-4484-801a-011e5a94a1cd",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "b259b6c9-c047-4207-8328-67edef9018fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79adc7c8-e1ff-47c3-943d-ce688707c2b0",
        "cursor": {
          "ref": "4f875dce-9bc5-4033-a217-8a7b17899eb4",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a52cb534-e178-47be-a0ed-3eed7faa1554"
        },
        "item": {
          "id": "79adc7c8-e1ff-47c3-943d-ce688707c2b0",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "3ae41031-6a04-4a54-b471-8a6ef5fbd44c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2856af78-9f55-4f62-838c-42814b5b9c8f",
        "cursor": {
          "ref": "26411d24-bd86-4f84-b6fe-eaa064e87d28",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "2507e9ff-e062-428f-8550-2515c9698ff3"
        },
        "item": {
          "id": "2856af78-9f55-4f62-838c-42814b5b9c8f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "869598ad-a27f-4e61-9c3d-c68508023b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d20492-a5d6-4ea9-b323-4e03cbe11d9b",
        "cursor": {
          "ref": "b0f32f35-4375-460e-811e-9e83fc94c5d1",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "862ffc98-2595-4c1c-8ed0-a248b205b561"
        },
        "item": {
          "id": "40d20492-a5d6-4ea9-b323-4e03cbe11d9b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "3d3e75a9-427f-44a0-9193-834645415a9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204ed05c-689b-4f29-a368-cf2da6b45752",
        "cursor": {
          "ref": "558e4ff7-efa2-40d8-acf7-64374f4708b2",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "4f2eac50-e0c6-4b62-be40-56ce51e2de84"
        },
        "item": {
          "id": "204ed05c-689b-4f29-a368-cf2da6b45752",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2b7ed422-7613-42ce-b075-d0633e1a1e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7128e5a-2698-41eb-a8dc-66664bbb4e74",
        "cursor": {
          "ref": "05f0b66a-82ec-4377-93a7-f1e59446c430",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "782cff0c-3479-4ecc-b75e-9d43b28fcdd3"
        },
        "item": {
          "id": "a7128e5a-2698-41eb-a8dc-66664bbb4e74",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e9d6e783-b575-4688-9ceb-766e8c1f35e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12618f11-bb36-4878-a8e3-9fa4828e0ff2",
        "cursor": {
          "ref": "45647054-2c4e-40c3-b874-7ef070f8aec3",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "ba4a0b41-e12f-4b4a-b021-bb7ff2f2a707"
        },
        "item": {
          "id": "12618f11-bb36-4878-a8e3-9fa4828e0ff2",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0d74f354-4bb5-4f61-bc46-3587b18e5964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 153,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b58f1c-d567-4f0d-949f-045a2697b6f4",
        "cursor": {
          "ref": "f0f07802-63da-4fbb-a35d-fe68e2f6cc98",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5f3a3244-f4d7-4a84-9c9e-b5527c736db2"
        },
        "item": {
          "id": "09b58f1c-d567-4f0d-949f-045a2697b6f4",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5524bca1-05f7-4677-b585-3e1b8d59ee38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11f4775-9ba8-48ee-b082-2bbeef57ac2a",
        "cursor": {
          "ref": "49d7ddd0-8d23-4303-9e8c-f83a399ad33d",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f6e0a970-4663-4473-98a0-179f971e9074"
        },
        "item": {
          "id": "b11f4775-9ba8-48ee-b082-2bbeef57ac2a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "0b2c4390-dfb1-441e-aa85-1cfa81b721df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "525accef-e28d-4930-b1c8-28018bf58589",
        "cursor": {
          "ref": "a4b52265-ea3d-4368-ad92-ea8fee61384c",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9afa582d-34b7-4b06-a812-058539234b59"
        },
        "item": {
          "id": "525accef-e28d-4930-b1c8-28018bf58589",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "01e93c16-b4a7-45d2-94ad-a6b374d20578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d44f6b-ee28-4607-a169-916e620874f3",
        "cursor": {
          "ref": "57154d73-f3be-47e4-82f9-f1f8fcee58b2",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "21c9ceb4-123b-4104-bc4b-2f5724631a26"
        },
        "item": {
          "id": "41d44f6b-ee28-4607-a169-916e620874f3",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b04bde7e-299a-4740-b7b9-58682d21ac00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37cb4326-bb5c-4b16-adda-0a2174c4cf98",
        "cursor": {
          "ref": "e1347de1-c84a-4335-aaaf-5c4a80912e0f",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "05d7abdd-f276-49ad-8892-7e24d1be4c9a"
        },
        "item": {
          "id": "37cb4326-bb5c-4b16-adda-0a2174c4cf98",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "41bc06a0-2fb1-4f21-b366-2f0b6eae7b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae4f88cf-261e-4546-9df8-0ffb431080b8",
        "cursor": {
          "ref": "b8dfe50d-7106-4cff-8b95-b1690c0fc830",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "cc1988bc-fe13-461a-b024-8187eb363c91"
        },
        "item": {
          "id": "ae4f88cf-261e-4546-9df8-0ffb431080b8",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "cf241f04-eee9-4a8c-8879-cd0072c37f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "079594ea-10f5-4273-a6c8-47f0674d47e1",
        "cursor": {
          "ref": "9fe2ecc3-bdd3-4141-b15a-f2870498e0bf",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d5447deb-6bf5-4505-be76-8efdd62bdec7"
        },
        "item": {
          "id": "079594ea-10f5-4273-a6c8-47f0674d47e1",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c33abf0b-a2f2-4f57-b369-a5b3068b8f4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c5c115-8c44-47f2-ad14-801bd88d8637",
        "cursor": {
          "ref": "20a35758-a25a-42b3-9871-26c5b846e317",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "4d4b96c2-3e5b-46e2-b649-45dd460d7efa"
        },
        "item": {
          "id": "27c5c115-8c44-47f2-ad14-801bd88d8637",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f91e82e2-5c2d-4e51-8b86-f1bffb5c3578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc8c69b-7682-44c4-828f-fabb61498dfb",
        "cursor": {
          "ref": "45e739b0-c9ea-4c19-bbab-f5493747a0d1",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5b00fd23-3469-409b-a38e-044e2ae9d26b"
        },
        "item": {
          "id": "ebc8c69b-7682-44c4-828f-fabb61498dfb",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4d4627d9-b23d-4ff8-8975-6569b9b8a33e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14250cf1-1c5e-406d-a810-c936d93b794b",
        "cursor": {
          "ref": "a514dd4c-36b7-4fc4-9abc-e979c5f22916",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "5210527b-6406-4893-b15e-06d89973072a"
        },
        "item": {
          "id": "14250cf1-1c5e-406d-a810-c936d93b794b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a7fec596-5308-46af-bf0d-25fee11a567d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c972730c-1a5d-495d-88f9-9c8c1d69ba9e",
        "cursor": {
          "ref": "5cae74ec-fbf8-4372-8c62-b54cf172e951",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "b6cc8a55-4864-47d9-b657-4b2269e9808b"
        },
        "item": {
          "id": "c972730c-1a5d-495d-88f9-9c8c1d69ba9e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e5a4616f-e3ba-4570-9410-a459cb51d938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c29741d-2e09-4b93-972d-62c28661103a",
        "cursor": {
          "ref": "6b4f9c92-33ef-4c14-b13d-9329e494d9e7",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f0a1c179-773b-45ad-a8bc-291f24beff1a"
        },
        "item": {
          "id": "3c29741d-2e09-4b93-972d-62c28661103a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "9a7f7de3-b0e7-4cf9-acc4-4d69d13bdd27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ce5ae0-97e2-41b9-b022-71fcf405a041",
        "cursor": {
          "ref": "21c525b8-0e41-47c3-8ac8-efb34fcd3948",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7600025d-2f29-487b-bab8-53fbf2fb6aa6"
        },
        "item": {
          "id": "02ce5ae0-97e2-41b9-b022-71fcf405a041",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "122eac9e-451d-46b6-a5a1-92107d3593a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71590c30-effb-4b11-ac1f-c88c8b280f0f",
        "cursor": {
          "ref": "99bfd6fa-2059-44d1-a764-781f09259e61",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "de8b05db-b7b1-499f-8a3b-124318e4a490"
        },
        "item": {
          "id": "71590c30-effb-4b11-ac1f-c88c8b280f0f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e72199b9-bd64-4c2f-9eff-e004eeba12cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7ef01b-d41c-4d19-8539-d2e8d02d8777",
        "cursor": {
          "ref": "f7d18151-7566-4abe-861e-5deeea996d89",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "204ce780-e986-4ba9-af62-9e3e0f4ae92e"
        },
        "item": {
          "id": "6a7ef01b-d41c-4d19-8539-d2e8d02d8777",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a0078eec-0985-491d-80c8-591901d392ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c775e08-3630-4ea3-aff8-20be716aa147",
        "cursor": {
          "ref": "e44cc7a1-d984-45b5-b2c5-63de939e5bdd",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "3032e18d-e6a2-4de3-bb3d-89462ffead19"
        },
        "item": {
          "id": "1c775e08-3630-4ea3-aff8-20be716aa147",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "36949717-0b6b-4d41-adc7-0305ceeb965c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d635e34b-9e47-4d47-8c5b-497851b3e944",
        "cursor": {
          "ref": "b01d369a-41b3-473b-ab4f-83f6732f5fb2",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "789347ec-cdbb-4f06-8fb4-ac3b2f492735"
        },
        "item": {
          "id": "d635e34b-9e47-4d47-8c5b-497851b3e944",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "072cafcb-2911-4bb1-8811-e79b26c7af92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b4fcf84-388d-4528-b96a-1e5c29f5570e",
        "cursor": {
          "ref": "62f0fb9e-77ad-4a19-b35b-6fb1f0b20dda",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "892eb81a-b3a3-4ead-b7a8-80bd9e01b6bc"
        },
        "item": {
          "id": "5b4fcf84-388d-4528-b96a-1e5c29f5570e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f6038702-cf57-46fa-88d6-a7570d8ef6a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc83a189-f458-46f0-b0bd-52912751a64e",
        "cursor": {
          "ref": "d51b55e4-6ead-4286-9615-8ebb6d71ad79",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f81e7dbf-4ae0-49b6-aa9d-d798cdcdea3c"
        },
        "item": {
          "id": "cc83a189-f458-46f0-b0bd-52912751a64e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "0415c63c-9fd4-43d3-8d5a-3f938a32a380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b226124-dcb1-43ca-b638-250d69a11851",
        "cursor": {
          "ref": "5e2e8f0b-f2e6-4f75-ad50-ef83b803d4a7",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "c16877c7-a3fc-4f10-9b11-6b56e82c3de1"
        },
        "item": {
          "id": "0b226124-dcb1-43ca-b638-250d69a11851",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "84f56494-9041-4a8b-8074-eeff33e1b0ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07f932e-97c8-43cd-b6af-f2dab2239785",
        "cursor": {
          "ref": "29df0f02-8638-47ab-8055-39adeb6b62fb",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "3d2e395e-bd5d-4b73-96ef-45415da9de00"
        },
        "item": {
          "id": "e07f932e-97c8-43cd-b6af-f2dab2239785",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "604c6a0f-907e-4d9a-8d6b-347e75219959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "004b8f43-1c1a-45ca-a7ce-226bbaaf0828",
        "cursor": {
          "ref": "94e4055c-3ba7-4410-b8fe-b9c75d107c53",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "3f55026f-de2f-446c-99d0-7f3b4da5a940"
        },
        "item": {
          "id": "004b8f43-1c1a-45ca-a7ce-226bbaaf0828",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "48800394-9109-42d0-933c-eaaf9b73c513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e022fbf-01ed-4b92-ab53-e98b585f4101",
        "cursor": {
          "ref": "d56f207a-45da-4ece-8303-3a6c4af6103d",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3b803970-d732-4a97-b018-345ba959eb46"
        },
        "item": {
          "id": "5e022fbf-01ed-4b92-ab53-e98b585f4101",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "08447607-225b-45d3-8d82-aff93d36ce0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38bf9dc1-abe1-438f-be15-2b180ff1c5fc",
        "cursor": {
          "ref": "f5cd4b8f-7a46-419f-9fb1-46b93b246841",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d3d54aec-959b-4079-8b72-65729779ee33"
        },
        "item": {
          "id": "38bf9dc1-abe1-438f-be15-2b180ff1c5fc",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "6fb83ef1-65b4-43a6-b938-6c37401c7d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c10116e4-4c3e-4e5c-8b60-908b927b3ddd",
        "cursor": {
          "ref": "6ca6d701-8b37-4fc7-a742-3f29448c6e86",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7ffead56-803b-4f2f-9575-5e4755c31a20"
        },
        "item": {
          "id": "c10116e4-4c3e-4e5c-8b60-908b927b3ddd",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d0e6acdb-7b92-4426-b64a-a4745cbab394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af2b0cf-cddc-4113-9c05-206a63681f12",
        "cursor": {
          "ref": "1e33b3e0-8577-4045-b376-74da03210ef0",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6fa44592-f4b9-478a-924f-95a88c6e3e81"
        },
        "item": {
          "id": "8af2b0cf-cddc-4113-9c05-206a63681f12",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5fe58fc9-b255-465b-89d8-24a435153e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd02570d-c8a0-4fd3-954c-5abae106f103",
        "cursor": {
          "ref": "aed68025-20f9-4add-bd4c-6399dd01ba3f",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b7817897-69d7-4fa2-ad86-de6e9666906d"
        },
        "item": {
          "id": "cd02570d-c8a0-4fd3-954c-5abae106f103",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "49e73a78-33f2-41fc-b21b-a3d6d8c62a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dddd414e-6ac9-4713-b752-0da078f9e78f",
        "cursor": {
          "ref": "8030929d-e645-47bb-85c1-3c48a02048d8",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "29d238c6-d4cf-4396-9129-1c5772bbd433"
        },
        "item": {
          "id": "dddd414e-6ac9-4713-b752-0da078f9e78f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1d772d37-5e63-4cd5-9fbf-00666d20776d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43205d5b-6aa0-4ae0-b457-56d85b0b7cc9",
        "cursor": {
          "ref": "0dfdf15f-7b83-4ed0-8e21-8f051da4c547",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "aab84316-1964-4a46-85d0-d6869ea4f2d2"
        },
        "item": {
          "id": "43205d5b-6aa0-4ae0-b457-56d85b0b7cc9",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "faeb0396-d6ef-4b35-8888-c3762fcea204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6440308d-2204-4896-a9ed-a3f6a0733656",
        "cursor": {
          "ref": "a3153800-80cc-4480-8ce4-a8c37a636811",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "47dceb75-6d56-4bbc-b53a-a1735a02c907"
        },
        "item": {
          "id": "6440308d-2204-4896-a9ed-a3f6a0733656",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "9a645ccc-3ec6-46fd-8c41-411dfcbaee91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "552aaedb-55f3-427f-b384-fcc199d69ca7",
        "cursor": {
          "ref": "0d506b86-1b1e-4409-a63b-5bf06ae1501e",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ebeebdb8-bdb0-4a8a-bdd8-a267dbfd27f9"
        },
        "item": {
          "id": "552aaedb-55f3-427f-b384-fcc199d69ca7",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "378f3c7c-b6ae-4af6-9bcb-682d7698c8d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31692e6d-4c85-47f0-9906-3e3900a03114",
        "cursor": {
          "ref": "5c9b2ea2-ed7f-4d8a-8d9c-3151b2789e8e",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "cebef507-95e0-4306-ae9a-6f6f1e48bc83"
        },
        "item": {
          "id": "31692e6d-4c85-47f0-9906-3e3900a03114",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b31c2c96-7bad-4e28-a821-e581a0fd2e4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a77a56-f326-4092-9378-dba2a445ab21",
        "cursor": {
          "ref": "fc23766b-3565-4cf9-b404-82b01ad78fbb",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "b1f3eece-a018-4b89-8467-9761b3829409"
        },
        "item": {
          "id": "e7a77a56-f326-4092-9378-dba2a445ab21",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ee97de8e-ab08-46be-8bb0-b8189b8a1be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c05d48-3069-4dcd-87fd-fd447d8f8cb2",
        "cursor": {
          "ref": "99f7c394-81a8-4b1f-a805-5607f97a086d",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "807102d4-3ff1-4dbd-8d0d-ec4abb3c23dc"
        },
        "item": {
          "id": "97c05d48-3069-4dcd-87fd-fd447d8f8cb2",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "47da4311-9c11-4408-9c2d-adbfa62748e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43142896-bec9-4844-8e73-2418552245c7",
        "cursor": {
          "ref": "cf512399-0854-48bc-86a4-7aaa74a5c449",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "2eab9159-dc22-4c33-a631-6982e09aa146"
        },
        "item": {
          "id": "43142896-bec9-4844-8e73-2418552245c7",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "78078014-3c45-4f58-97ad-ecc169dc03db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146588b8-d2c5-4b1b-a879-22f20f25a0eb",
        "cursor": {
          "ref": "a1fd92ad-4a39-47a1-8ca4-3ba0cf87ebc0",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "27696b37-9eac-42c9-8a13-a2d3704f5843"
        },
        "item": {
          "id": "146588b8-d2c5-4b1b-a879-22f20f25a0eb",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "6d89f8e7-bada-4c01-a7cf-ce98b51d1abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "102a8aae-e7cb-4395-83f8-93519f66bb18",
        "cursor": {
          "ref": "0831ed40-e986-481b-b5b2-2f504f2b9427",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "89c99af4-2a93-4ee9-b8aa-15235d6cf5e9"
        },
        "item": {
          "id": "102a8aae-e7cb-4395-83f8-93519f66bb18",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f4acb549-aae2-442c-81be-4516651636cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c43ba5-2d1b-4dbb-ad33-6a4f3c90ee45",
        "cursor": {
          "ref": "e5217062-50c4-49fa-a563-9ac63d3f0b87",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "84efa37f-6e90-4aaa-a6ed-405f5ffcf91d"
        },
        "item": {
          "id": "f3c43ba5-2d1b-4dbb-ad33-6a4f3c90ee45",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c1b5353e-a91f-4eb6-bec2-0517d6d2a134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1686e9fa-6b50-4c22-abb6-9782b738bbf8",
        "cursor": {
          "ref": "a47fe02b-24c1-4177-b949-5b5c93cbc703",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "217cb274-28fe-463c-95d8-a74be4357685"
        },
        "item": {
          "id": "1686e9fa-6b50-4c22-abb6-9782b738bbf8",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0eedb35f-dfc4-4dc7-a579-4d7af495939f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b17293-b960-4894-98f3-1f0a8bec99e3",
        "cursor": {
          "ref": "3c046929-d527-4e60-829f-02dbe78c198e",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "88eeb7f5-e828-47f9-828d-eb893972b600"
        },
        "item": {
          "id": "59b17293-b960-4894-98f3-1f0a8bec99e3",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1b521b69-b942-44c3-887b-67908bb7d984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af38141b-f52b-4a79-8200-441f2116036d",
        "cursor": {
          "ref": "bc0d6e5f-4591-4eda-88af-cfecfe51db6d",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3ef05790-3662-4777-a64e-374f979ebf47"
        },
        "item": {
          "id": "af38141b-f52b-4a79-8200-441f2116036d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "19d82c2f-4831-4307-a171-8f3a3132023f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee7c9cc-31e9-42a5-abed-01a07a8c90a1",
        "cursor": {
          "ref": "6938edee-56f5-438e-9bef-20c9b11306ed",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "bfd8eef1-bfb2-42fb-a444-542a59fc58e1"
        },
        "item": {
          "id": "aee7c9cc-31e9-42a5-abed-01a07a8c90a1",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "bdd89fe8-5543-403a-a1d7-1e35ba28c112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3368eb41-5121-45c8-b79a-c1a379b7a056",
        "cursor": {
          "ref": "fd08cecf-d7c4-4f49-b889-6ca3e4a4cba3",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "2caa3754-7166-4667-8676-dc825ecca9ea"
        },
        "item": {
          "id": "3368eb41-5121-45c8-b79a-c1a379b7a056",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "068c0b64-c313-47b9-9f4e-d89e758b3870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e38fe2-d8f5-49d2-824c-3bd344887a7f",
        "cursor": {
          "ref": "c77ae3ba-2bf1-40f6-8781-cb9b3a3d6b42",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "8daafc17-31bb-44cd-ab01-f5efd1ac8f2d"
        },
        "item": {
          "id": "98e38fe2-d8f5-49d2-824c-3bd344887a7f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "7376d6dd-e10c-48f5-8500-a58fc51c8585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "977e4531-1872-41a1-9c02-4539437c74b4",
        "cursor": {
          "ref": "fb8173b3-98d9-4760-9db8-f06c63446d77",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "dc0d086b-b504-4bd0-80f6-6d9ca9a18599"
        },
        "item": {
          "id": "977e4531-1872-41a1-9c02-4539437c74b4",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f20bb359-882d-4aef-ad3b-7d4921176454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2178260b-a5f5-4401-aff0-dcc3eb01db50",
        "cursor": {
          "ref": "c62efbad-8e59-456d-9b0a-d4a5e9e76419",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "5081a23c-7d53-45fb-bd15-eaf194aae8c8"
        },
        "item": {
          "id": "2178260b-a5f5-4401-aff0-dcc3eb01db50",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3ef2b2bd-e09c-4bf2-963d-f343ffeb5a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "768d1b0c-8c33-4187-969c-ca3d94812ec3",
        "cursor": {
          "ref": "9de4d376-5c56-4855-ad73-5a4607df72cc",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "772bc0ed-b003-463b-b195-d8d3efdc07ae"
        },
        "item": {
          "id": "768d1b0c-8c33-4187-969c-ca3d94812ec3",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "579acad3-c347-4a60-aaa8-87404deec5ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c9c486-8e8a-4817-af85-976886d4fdf0",
        "cursor": {
          "ref": "dc7af9dd-6091-4eed-a56a-66d533f6d0b4",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "fc3d1060-db01-4fec-b548-e05c35b47cde"
        },
        "item": {
          "id": "91c9c486-8e8a-4817-af85-976886d4fdf0",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "42dda331-fd7d-4849-8071-93f61aeb7187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c8395b-5919-472e-be50-6e4818fa2bfa",
        "cursor": {
          "ref": "9f6b296b-b8c9-4017-855c-ed39b01ba823",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "92d7e6cf-8029-4c41-bec3-c7c847184923"
        },
        "item": {
          "id": "34c8395b-5919-472e-be50-6e4818fa2bfa",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a8283854-d357-41b0-b7c9-d4aeeb2ca178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f4b87ce-c291-4717-a21c-a7064149f56e",
        "cursor": {
          "ref": "b02b7fde-fb66-4380-8d0e-5c00921b53ae",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "a40736e0-a566-42cc-abea-7ed69a867838"
        },
        "item": {
          "id": "3f4b87ce-c291-4717-a21c-a7064149f56e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "844b9332-e87e-4841-ae41-b43b712f2bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439a830c-172f-4807-b891-8fc7231b2d90",
        "cursor": {
          "ref": "32d51410-9909-441a-8dba-7191ed3aeebc",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "3ba738f0-a250-4b0b-aced-0fe478a545f0"
        },
        "item": {
          "id": "439a830c-172f-4807-b891-8fc7231b2d90",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "cd89cf66-7a88-4363-8a72-ac4551b44bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e844348-f6d5-42e9-a7ea-9acf401f5f77",
        "cursor": {
          "ref": "385c7f7d-9cbe-4659-8a20-3388bbcc649b",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "f8f36296-0c37-485f-b9d5-98b10df73203"
        },
        "item": {
          "id": "5e844348-f6d5-42e9-a7ea-9acf401f5f77",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "4245fde9-0d65-4d34-828d-6ba16695a7b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c332c48-ac62-41a1-bca3-bc1de21bb8ad",
        "cursor": {
          "ref": "85a8176c-75e5-4667-8748-ba4f87e9a258",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "c696017a-42b1-44b2-b3ff-e9ca7d214c0a"
        },
        "item": {
          "id": "2c332c48-ac62-41a1-bca3-bc1de21bb8ad",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "115111a1-e628-4a7f-ae14-4c0d4fe7f785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d58f6f7-6599-489c-b2f4-46f14127b865",
        "cursor": {
          "ref": "8f27d341-8920-4ced-9749-2b7c76e8ba30",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "a999961e-08ec-446f-8502-c18c2abbd9f0"
        },
        "item": {
          "id": "9d58f6f7-6599-489c-b2f4-46f14127b865",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "7c5159f5-67c9-44ba-b344-444635042643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81434f3-9f45-485a-a1a1-2c461c53ef05",
        "cursor": {
          "ref": "0678cdf6-d04c-4518-9cae-c34f35f09cad",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "1d0fcbb6-f445-48c8-9fae-57c668f7b77b"
        },
        "item": {
          "id": "a81434f3-9f45-485a-a1a1-2c461c53ef05",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c1ea5d62-8a42-417f-8659-f57b6b6b22c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c752de4d-d6d5-4a6b-b0fc-75a24db835ae",
        "cursor": {
          "ref": "187de7aa-205b-49df-a303-e717a9bec41d",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "7f487537-4a9a-40f2-bee0-df2300631371"
        },
        "item": {
          "id": "c752de4d-d6d5-4a6b-b0fc-75a24db835ae",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "66179013-6b6c-4452-99f8-73ae991832ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b973c5bc-116d-4be6-ba68-60c3b3dd7c32",
        "cursor": {
          "ref": "7b1f2b12-9373-4ffe-a6be-6602da06ae50",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "b8e2c87f-1f9f-4f78-a60d-0f37b5fc1c78"
        },
        "item": {
          "id": "b973c5bc-116d-4be6-ba68-60c3b3dd7c32",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "45d5a4e0-d3ff-48c8-9d96-64d7cb4b07e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27910eb-5fa4-4e93-a3ec-4e9dff282df1",
        "cursor": {
          "ref": "9c04c25c-c5f6-4701-9b86-01698051a5d5",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "1a83a8b6-59e1-40b3-b611-70c74667da10"
        },
        "item": {
          "id": "b27910eb-5fa4-4e93-a3ec-4e9dff282df1",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "10084b1d-5762-499e-9304-1c1d1c01c284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59043efe-4055-4ae3-9207-b5d88959c64c",
        "cursor": {
          "ref": "21f46bbc-f08d-4f46-b0ce-8f7a2528aaeb",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "b4c185f4-1cc5-46f2-8527-26815312a716"
        },
        "item": {
          "id": "59043efe-4055-4ae3-9207-b5d88959c64c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "12f94f89-d57b-47c6-aa4f-f9aa9bdc3fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b4f426-a8eb-41b8-afa0-6b3f4e685b67",
        "cursor": {
          "ref": "8b613e37-e2a0-45a7-986e-4ff53448ac3c",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "60776556-5d34-456c-a196-6073ee100699"
        },
        "item": {
          "id": "77b4f426-a8eb-41b8-afa0-6b3f4e685b67",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "12674864-ac41-4bc3-b755-a45b4e968e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530e0617-f454-41a1-93f7-88b1737b9449",
        "cursor": {
          "ref": "5f556a72-7e40-4cc6-b586-45c2304ce00a",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "2ced4b90-54bf-417b-98d1-dde43a448590"
        },
        "item": {
          "id": "530e0617-f454-41a1-93f7-88b1737b9449",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4a34a386-7ffe-43e8-bc32-9d793da4aedb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ad509c-cff4-4a65-9a2f-128380fd67c5",
        "cursor": {
          "ref": "f5efe386-4f2a-454d-8e6f-01b155d4e365",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "3b0b7f88-3151-446b-9da7-318dd5c526cc"
        },
        "item": {
          "id": "24ad509c-cff4-4a65-9a2f-128380fd67c5",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "1367e682-45ff-4c3e-a28b-1fd58e8f715b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee8189e-3544-479a-9fca-f7e08070bbd4",
        "cursor": {
          "ref": "fc9c61c6-13b0-44b3-a762-0815362dd0e5",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "c5d5ece6-e147-471d-8c0d-c1ddd749c142"
        },
        "item": {
          "id": "3ee8189e-3544-479a-9fca-f7e08070bbd4",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "91ba7772-9262-424d-b00c-8ec4a078892d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2acb3179-d5d3-4f68-b7f5-a4acf9531585",
        "cursor": {
          "ref": "efdf6e27-f2ff-417c-afc6-e35acbeb3f36",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "9f2f5edc-52a4-4271-afc8-5d7972e76047"
        },
        "item": {
          "id": "2acb3179-d5d3-4f68-b7f5-a4acf9531585",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9393dd1f-579e-410d-bb53-e19da870ae13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d06cb5d-cf62-4a76-ae98-190af62cccec",
        "cursor": {
          "ref": "4deea351-a3e3-45f6-8065-0000a865e9a3",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "4e20007e-6737-459e-858e-b1968dd16af0"
        },
        "item": {
          "id": "3d06cb5d-cf62-4a76-ae98-190af62cccec",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1286eb3d-a0df-4fc6-add3-016e4b2c8d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f15581-734c-4a86-9e2e-77cf2d737e6c",
        "cursor": {
          "ref": "c67e6dd1-4f24-42c0-b59c-dc0338d014c0",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "b0344b84-d0f8-428a-a97f-94890f65cf14"
        },
        "item": {
          "id": "b3f15581-734c-4a86-9e2e-77cf2d737e6c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "53930cdc-fcac-47b4-9393-3baae0f92f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef85fa7-488a-4015-84c2-32df738f6dd2",
        "cursor": {
          "ref": "18227401-64e7-4442-bba1-54ce9123ea96",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "c2f9044a-6fd1-44ac-921e-49c523f1b78b"
        },
        "item": {
          "id": "aef85fa7-488a-4015-84c2-32df738f6dd2",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "355d80d9-f6c1-42b9-8bc9-53396681c687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b1e939-2a3c-451d-87e9-8bd78df2247c",
        "cursor": {
          "ref": "214f5886-f00a-407a-af2c-654e69677ad2",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "bdc2f8dc-22a1-46ad-98d6-0919d2e46a36"
        },
        "item": {
          "id": "05b1e939-2a3c-451d-87e9-8bd78df2247c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "dec10f0c-8ccc-4c2d-bfd0-2dbaa87c8f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9347c912-d8ea-4187-ad53-199747dd4a8a",
        "cursor": {
          "ref": "940cede0-14fe-4647-80e0-88420eb6821f",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "6c53f0d3-44ef-43f4-8f79-3d19b153b3b6"
        },
        "item": {
          "id": "9347c912-d8ea-4187-ad53-199747dd4a8a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c0492677-d96f-40f9-a842-940077cbd172",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d224de82-2165-4197-9d90-faa0d19f12e6",
        "cursor": {
          "ref": "a8bbedf3-32dd-411c-a252-fbb9dc5cd2dd",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "520cfb1c-22cc-4edf-9bbc-8b1263956600"
        },
        "item": {
          "id": "d224de82-2165-4197-9d90-faa0d19f12e6",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5a0617bb-b333-44e3-914d-d7bc9259d83f",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e760720-53c8-4ec3-81e5-3026599ec42c",
        "cursor": {
          "ref": "a27d3d2d-6305-4270-87e1-923abbef1d9e",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "95d2bec5-25e6-4036-9292-b57e5337448d"
        },
        "item": {
          "id": "5e760720-53c8-4ec3-81e5-3026599ec42c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "21928b92-f415-4142-9ad9-223058e1f244",
          "status": "OK",
          "code": 200,
          "responseTime": 2518,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ef45ec-5694-4852-84e9-45bdaa984214",
        "cursor": {
          "ref": "6feac07b-d71d-4913-bd06-c7ba4d5d6c58",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "0da4dfc4-1007-4b1d-a352-179d9a6ed57a"
        },
        "item": {
          "id": "a6ef45ec-5694-4852-84e9-45bdaa984214",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "3bd3b96f-0374-41e1-ad5f-4230ff2f95c6",
          "status": "OK",
          "code": 200,
          "responseTime": 2964,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c64dceaa-0d35-4744-90c1-ffd6c6ac41b0",
        "cursor": {
          "ref": "f44aecae-be62-4e36-98a5-40981178d59e",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "d82bd2c5-0a42-4f0e-b2dc-66ed09d3cd85"
        },
        "item": {
          "id": "c64dceaa-0d35-4744-90c1-ffd6c6ac41b0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2003fde4-75df-4ac0-8916-d26754451149",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c64dceaa-0d35-4744-90c1-ffd6c6ac41b0",
        "cursor": {
          "ref": "f44aecae-be62-4e36-98a5-40981178d59e",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "d82bd2c5-0a42-4f0e-b2dc-66ed09d3cd85"
        },
        "item": {
          "id": "c64dceaa-0d35-4744-90c1-ffd6c6ac41b0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2003fde4-75df-4ac0-8916-d26754451149",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7936e19a-19be-4f08-9b2c-9077c3fb64e8",
        "cursor": {
          "ref": "023caadd-bf3c-4840-b592-097478530bb7",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "9df6028f-c9a5-4e08-ab9c-ea0bc7c3334f"
        },
        "item": {
          "id": "7936e19a-19be-4f08-9b2c-9077c3fb64e8",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "22d2f7b7-0063-442b-8748-7c6529751e5f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26851e31-27ef-4b35-ad5f-d0beb280474e",
        "cursor": {
          "ref": "772eff00-ddd3-4f30-bb2a-eecaf0971a09",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "6c86dc1a-d69a-4dd2-8771-170a4d138ba8"
        },
        "item": {
          "id": "26851e31-27ef-4b35-ad5f-d0beb280474e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "fc9b07ad-91f6-4d17-a261-6f7f0e2a641e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}