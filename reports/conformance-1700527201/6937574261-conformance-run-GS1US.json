{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "442c664b-66de-4622-9f4d-2472b6ee2ce4",
        "name": "Clear Cache",
        "item": [
          {
            "id": "00fc7a98-c2f9-4751-8a81-59479be228a0",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bde7285e-a108-47ba-afb4-b1fcb4742204",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0bfede41-a628-4c00-9e20-a203b8ebc1a9"
                }
              }
            ]
          },
          {
            "id": "1354210f-2729-407d-bc7d-45f4e82cc0fe",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ee5fb3de-0fd4-4a44-9502-64381e7160d0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "96a0c6c6-829d-4f1b-b3d7-75c42659b019"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "28ac0ad7-e518-4b01-9962-d31cd6197af7",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "69c77dc9-b857-4ac5-88db-3a506da88a0c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fec327c7-775b-43c1-a53a-3115b6db60bc",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c516c1ad-eb50-438e-96ab-664a8823b515",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d638dad3-1a94-4a56-8cb8-261c312aa7b0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "430be189-f7bc-4a35-84ea-33a4ab120e74",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3d1f2aa1-ecb9-4188-840d-7a4a499362bb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d88b4197-bb07-4e8c-a65a-92103ec596f5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bb86ef0f-1130-4e21-864e-e80617d21d34"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ca4e2eea-111e-4498-abed-5ca342c6fb85",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c5f8b563-f014-4cfe-b9ba-138459ad12ae"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "272cf67e-ba93-4d0b-88e5-4ad84e9c2f1d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "85d8dc14-13cb-4bc5-8850-98d318db8d05"
            }
          }
        ]
      },
      {
        "id": "cd3a866c-6052-4420-9acf-62c452b1e765",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3353386b-40a5-4fd2-a59c-fda6a1378a28",
            "name": "Negative Testing",
            "item": [
              {
                "id": "36fbb444-b49b-4cc4-bfd0-d12ec7f174c4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7a485f97-654a-4ebf-baad-eea918be7d8e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5824cdfa-f597-4e5e-a47f-010636c62352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3458e0a9-7adf-44bf-b032-c3821589b7d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf193a3-5197-4961-bde1-6ec25c70e0bd",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fda07b20-3de9-48f4-95b2-f1bbe9236ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "76fe80f3-0177-47f0-ad56-6b52ef33e2d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ecdaf7-399e-4ea6-86cd-74b69a85f6a4",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b678291d-e453-40f3-897a-dc2476ec7078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "14db7227-1105-4e89-819a-d00fe9ff91eb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "15711908-83a1-4dda-b82a-4bb02ecb4007",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2bfe1b65-ca40-4f46-9552-231fcfff1abc",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "228c9565-3cda-49c4-82f5-34e6caf52f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f579a7b-4f8e-48f0-a325-76c53c486b3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd902c9-d993-44d5-bfbd-d27589e42873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce80e876-60e3-469c-81af-e3a819885cdf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fbd216c4-e43e-4bd2-af6d-8a2e0e72482d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2b38b8f1-bf43-4744-ad0a-8ddb7731bafb",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a5440bc-ab81-402f-9316-dee51b5a6164",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "4d2caf88-b568-4609-af4f-65896c4c4e0c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "99828ff2-b2f9-439f-99da-2d2887e46af4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "16145edb-3c3d-4baa-9772-f363cdf55418"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cd16f68e-0a04-4797-9a6c-ba5092b54c95",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2a830680-75cd-4238-8dff-2f1e6e5cc5fa"
            }
          }
        ]
      },
      {
        "id": "a0db8aed-a9ef-465d-ad96-06a8b3b2fc60",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b1190e43-3ab0-436e-8401-7c12c8276ae1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "335bf477-c396-4c17-b3fd-be5aaadd6b77",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "920c21b6-df20-4037-bb0e-22680cb51c0e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6feddd25-42c5-4325-936b-6f9b3eed42f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d1d2a8b-5b8d-4a0f-bfdc-7ba28f83c7cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c0b950-4cb2-479c-b730-5a6f2bf1d6c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b304414f-047a-4853-b082-cb75d2488f14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ec2cc9-edb7-494f-b1ff-c4c3896c2647",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37e38507-871a-47e5-85a7-0fb46f60aa82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b344a09-8894-4e88-b566-611401480b87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d712887-bda9-4d1f-a9b0-24ab2b45879f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5b4fbec-4a45-46b4-b4b5-359eb2ee8565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a343db-caa1-4f28-93b4-47512762442f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de4cda7-4c3d-4d6c-b5f5-63fb4e0b4872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd2fbaa9-cef9-400d-b243-436bd8eea44d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b22586-ed03-48d1-adf9-6e584ed94876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd0bf8c6-47cc-429c-9ee3-3b12b0513900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "612097af-02bb-4252-ae03-e9e0fbcb3940",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a9dc964-8b8a-42db-a6e7-a26406fa444a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcf0d8c5-64a4-4bd2-8c0a-901749d48e92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f41a5d1-8b16-44ca-88d7-fa52cb47a1a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee387091-7339-4f67-a05d-41ec548a327b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de3af3fc-4e43-493e-803c-a188e61159e8",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3821316e-bb9f-48c6-8152-fe07af96fa94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0964e68-d5c0-4297-99b6-b861ec648ca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2100007a-54a1-472e-b847-5cc72a405e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7ff511c-68ea-4b30-ad11-ac08ff011b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d5f31e-e02c-490e-98e8-93c367f866ad",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd128aa1-7e2c-4884-825c-41d3673b1555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c577000-32b7-494f-acf4-361e6c5e8099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "224244d0-ce20-4275-a1ef-c86135980613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d2535d9-2416-4aed-be39-5c5c4b4d0c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3368b88e-a58e-4b1e-8f09-45f1c8843252",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d05f5396-02a8-417a-be30-14c4998c1a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a908b02-7242-441b-bc8e-fd4014dffd65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063b74f4-5c92-4cdc-aa29-6cb63d5804fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0c19c3f-4350-4548-b11f-56144ff50835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2d1ff8-4e44-4838-9174-6d68c37f5c2e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f07c8643-0cb8-426e-a934-cf5cf7c824fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9e0ce2c-0689-42b6-b703-b867e266af89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b74a3a-2179-48b3-af6f-e94b8e6a1a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca60bab8-eb75-49a2-9aee-cfe542ee15c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3872f6a-801a-4a48-92cb-711d2f319281",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39eaffd9-2aa2-45e2-b838-794b96f92ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a601154-626b-4b54-bf0f-7ec7986a2674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279ab15f-c099-4b9b-b01f-d8f8dd1a5395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "137d2941-047a-4968-8d9b-dfd899a0da75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fabdfc4-7ea0-4448-b664-398247309911",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3840bc98-48c3-476a-b19b-be459801026a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ac906c2-236c-4ca5-82c2-d1ef893b626d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3eba330-e70c-49d7-86e0-821c915cd97c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab0f3be1-3856-4f7a-946f-75fafda8035c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e8398f8-9cd1-4721-a1e0-76cb992c5949",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9624df3c-ed04-4ac6-9c0c-3b1c57f70837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69b79165-b83a-44d3-8e62-afbdacfcf82a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e6500ef-4ab4-4cba-9665-88b7d4137b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d4a0a72-3b52-4b8f-a89e-74499ccfcd07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde7c31f-ffc2-47ee-836f-7ccf4aa627da",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a917cb33-1e68-4122-a863-b2369cc116d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10843076-df5b-4d1f-bf6b-f2dbc08d737c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5301d81c-d497-486d-a857-7463e7095a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df613922-8dd2-4724-b990-def6d5237ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b2a6aa-58a5-4924-a4b8-e2d29b411f88",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b00b30df-3f42-41e8-b5c4-ac377d19f0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96ed335c-c5f3-4495-ac6f-492d791d4750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec00713-c0b6-42ef-af59-10e5578c30e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6de33ea-63cb-4298-8db9-73700ae91e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a7ff29c-3353-4eb4-8d8d-00909eeda9f6",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b456ae-d649-4cdb-95df-7b07f1a72b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e944c3ac-8d3e-484b-8cfe-566fe531fde0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2836eb43-e7fa-4c63-8be1-622536c15390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b882fa0-4ea0-4536-8e2c-3652e6759a5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d36ace9a-be74-429c-9f73-8d42acd35505",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e29c8e-9a05-461a-8e02-7206bb7a0ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b68d6290-65a7-4f06-9831-d973d55e0aff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d59706-53fa-4fc5-882d-94a35e9fda94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4888e65f-d12a-48a1-8968-7800ab7dd9ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed425a3-e08c-4b0a-a687-cb8b4f309d84",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94916f9d-0d34-42d6-8b53-8f8a67408363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ad8349b-60b5-4dca-b5fe-ee190cc24058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e00d107-7c44-43c2-8070-a0b91ecdb8fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "054425f7-ba17-424a-890c-0997a9d16b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d77d15-6cde-4cb1-b299-c739879f01ce",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d63e33-8fb1-4755-a108-89fa5c35cbc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10ebe40c-9964-4266-97ac-79d9c4dec79f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26896860-e8ce-4139-b9fb-61b3fd007c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7cdcead9-1b8a-4c1f-b365-306a20a612db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f325673f-5664-45fd-8e2a-1f5ea708568b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b3e049-2370-4945-b139-3a4d0f2f50e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2266be6-4d27-43be-bfdf-4cda2eeaf064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4bbe15-19ed-4acc-a5a9-8177ce91c338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "edc23542-3fb6-4af8-a273-ceb34462e0c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a4c67d-bbc7-4620-ba94-1339aa7074be",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "246d7666-af5a-4757-9748-c1a981603496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f1a3f27-842a-49f1-93ae-e285c1597ce4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b9c8be-a1c7-4a02-8b24-b90122172b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f07e32f3-f928-44ea-a8da-eb3ba9c12b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ded105-01f7-473e-a122-dbad5211934b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b474bd-ccfa-41e2-a7ff-c8493a019d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0ccad5f-392a-45b6-8d5b-6a69d97492fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b664bb7-bbfc-4169-ad1a-b662687c5205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3bfa204-88f0-4a3c-9425-54d417e53124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed8d0e6d-a371-4349-b8e5-ebff59eb8d1a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55df3026-c662-4a6e-b2dc-e595dca82eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34e71024-9555-4457-916b-be5e5e91c7cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d050166-d7d8-4fae-96c3-82942465faf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "637734ab-0ec1-4d11-8b62-106af720fda4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca60431d-065b-4156-ac51-9bc134b2b550",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa9dccc-e990-4a55-b589-0db2bcc1ed3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "446d2714-d67d-4f06-93dc-97b1791e54d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b04328-c1f7-4e9e-9f59-956ad2f09707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9283d8f-d48e-46c6-bdd6-5f76b50d21ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db8838c-ddbf-4fe7-9968-2e607f29055e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e8b1dd-e068-443f-b9ac-21c1ca8add3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc3608c0-ce4f-4c84-883a-e96c16ea9ca4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "727e7130-e1ad-495f-92b1-1f57b4c544b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a87e2e94-aba2-4a45-a687-b92be95151bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "942df034-3cec-4a57-ac55-00a3a5c653e2",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5b84c0-bee4-4df3-b421-062bb621aa90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a208bd5-9001-4a0e-ba5c-6ae975f7cb0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d31969eb-997d-428a-ade9-088f5c18dd49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b70bfa0f-3ed3-43ef-b871-9cd4432954c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba4d77b-4058-4136-bbfc-ed55228aaa1a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "796edf0a-d511-4708-9f25-06fe4d0407ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54e610c0-0684-46c1-86ea-a98052a4e3e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a707af47-ea9d-4188-91ab-9074ef9fffa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0adfba0-d3b5-4d27-818e-07bdfc3f84b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929a1fd7-b6a1-4882-98bd-efb40e96d48a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e8f9376-56e4-46f0-8c6c-dd219e57ba78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "481c5474-a673-4763-9bb6-902d0c04734d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "965c33ff-b1f9-4d28-ac64-95adcd1f1442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2fc0c91-01c7-4b36-a092-66fc4da4ab31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30b011a-1363-42fd-8605-394107b7038b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d8dd8f-b6c6-41ec-a6f9-24d42f8ff56f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2168993e-1302-4af9-8860-eb1bb6fd542d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e37d4808-9580-4cd2-8678-11064acbae3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d1f849d-dbe6-499a-8635-074f0fee9d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5199ded5-79a2-49ff-affb-8e1bec5b9408",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c14f9b-6205-4e28-a354-aec7c77b87b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a32237d9-e943-4839-9774-71f76b9f1766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4453d94-7ead-4d23-8aeb-df0ec1f7e394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "08d67e1a-4a29-425c-9011-6bb713c36cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f781b78c-8945-490f-ad62-79c031e3f98b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df658507-b318-4af7-9e04-63b72ed0b45f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22132439-cbcb-4b0d-a493-5bed8fc5072a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a490f383-4604-4b19-8c03-26736020c841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "31e5fe04-c489-4c8d-8b56-c5f5465779b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "308824ec-e761-40bf-97ac-a90b2f542494",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fe37c5d-a563-4371-9b33-e005c742a8cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e45bf159-6d52-4cb1-b7be-05b6ab402af7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7316ffe-f5f8-4890-8786-73aafb080d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "99c49c3e-167e-4b9d-958c-32ad185a9dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db8bc74-79c3-4eb7-b5fb-78c38b3c6aec",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4226c164-e236-451a-9335-99515960f710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb3eabb0-f38d-4b00-89dd-3f38df534b56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c55fbd-d443-4e52-a5d2-74b1715510dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7794556-0ae4-4345-9ccf-33f34d946080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5082faf3-56f7-40d6-b41c-9a6493218ebc",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ecb8f6e-344c-4117-aa9c-559cc73bc26c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1ede8a0-7e5e-4b7f-964d-cf6a660277b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb6fae1-caa8-455d-9dcb-74b094c50c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1386531a-e5e1-4323-845d-a8db759f12f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01662453-6f96-48de-b056-74923d508c47",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca89ab0b-3805-4979-858a-b8d5d6242f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2fe4623-750b-45f2-8f15-488c492d9d7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbac9b3e-38dc-4fd5-a0de-af12ee8145be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2aa85c74-5df5-4167-bce8-829b68f42ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd8c21f-35ab-45c7-b0b1-0c2c8b197269",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2452bc54-eede-453d-b623-660db66d88dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1489aa5-0d55-4fb0-9177-23f3123b2695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d42c32e8-1516-480c-b193-bcaa9791983f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "00471b9b-4fae-494c-a6ba-d6e449d15187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a8de6c-2a8e-411f-9daf-4c79710b3bac",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b33c19-b753-4e49-976a-e38657b7f488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37c5a4f2-1b40-4fe8-84bd-75c893bdb51b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9474dbec-c8d7-412a-8dea-61a8f8c31548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "77c0d2e7-b00c-4625-a6cc-83c919d2fd1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b2dde48-0686-4a19-8d5e-dcb7d4416715",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eabaa5dd-6d88-42a1-bd47-ae02364d239f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d06630a7-a367-493e-88ee-9e4462979e68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "512070d7-aee8-48f2-99e1-1a5f7d05901d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "798d118b-a7f6-4492-968e-75adf162ed6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8eb24ac-2dca-40ee-a6f3-7c57476763e5",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d87a42a6-6393-4d7a-9750-5a6937a3312e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5baff025-9312-4bf6-bc9f-fea5aeb21584"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6cbdf3c-0bc3-470d-ab38-e644751829bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9e3e337-c63a-4607-afbf-44deede385d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afeeb9d9-058c-47d5-9bbf-1947980002e3",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a3e5e1-ff9a-4f24-a2e2-4e872a7bc04b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51b7fa49-fb6a-4d5d-8c9d-96a09957f120"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c1926a-02ed-467b-a3fa-bf7991bc98a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "06a0952c-d374-4d95-b1a0-65a10c1f87d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "644fea62-19ba-4f22-bef3-d2f37cdf72b9",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba951b8-4c23-4eee-a4cb-72eba174b983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "476778cc-2109-4f08-a91f-62ba60b5cb0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "864ee02b-7578-42ef-ab8f-9c314d4e8aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "18c30c32-b528-463e-9262-96e6c22da9d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a675d733-e5de-41ac-a42e-35cbc863fcd8",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b547997f-b9ed-416f-9818-f73b1294d06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0e68b2a-6fa8-4551-a5e6-be016c3f99ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6517a4be-5e43-4ef9-b7b0-c36f0b203c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9ede650-4f74-4c65-84bf-cee2695ec17b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "962ab06d-72dc-407f-8a0c-9089e868f79a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bcf8225-5909-462e-b1dc-6988ac79b0df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4192345a-c001-49d8-8c58-f410fc44e4b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c8e1d8-3fa0-4c67-9565-df6c60f42883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "636fe118-aae5-4161-ab46-65cc4eb61a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f3f157-0880-40df-b750-215a6af6aab6",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42213bba-e0d2-40a6-8c20-11909544c37a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6563b96b-4ca0-4609-837f-58fa49e7ada9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "941c3c5e-e658-4f7e-a86f-91f9feb29310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "63d7174a-90a5-40c2-8e04-6976339e6e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd3f376-c398-48a7-90e0-a22cb93073c5",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad40b73-05c8-41b6-98d2-6c1ac867d347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de3ddaea-488d-484c-ab42-39406eb7aadc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9980f149-83eb-434c-a37c-5fa2aebc776d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e288c27-555b-4c40-9c36-27bff5ce9f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f32ddf1-350c-4cb2-84a6-539870bc64c4",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90581c1e-87ae-4126-bcae-b761b599ae41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0236256f-3534-46e7-a196-43c072483c6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75608eb0-2718-447c-a14a-ec9d9ddce47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ace2418d-c069-4bb8-a156-04b5f6cb45e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee5dd5e-ab67-4683-881a-b3c27463eacc",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82725d6a-77b1-4151-8074-b681d7e352cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a3176e7-93fc-4a43-8f34-4085c19020aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a012910-d6a9-4cba-841a-12392f1531bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f0c49da-ee53-4a28-a684-c491b01e794c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ea3771e-ab1e-4813-a629-250a348dafce",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb41da4c-a59a-4009-b982-cab1ff0841a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f715611-4290-4478-b1ae-3e141e0363ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b68eed1-b8ec-48f3-9a4c-796db81146b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60bac073-0d4a-4524-8517-f1e8da63d757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c87dcad-50fc-4c9b-91af-323b51b5e070",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db45057-71e2-464e-9415-8e26e2e5aac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c86c18f0-654e-412b-8fb2-157109800ec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02987ac7-8e9e-4c21-a578-d27c960c7f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4bf0cb0-020c-4274-a195-8c64103f49a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f899dd-620d-4a59-9dc6-ccd8a3beacb3",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2776f9-27e1-47ba-b228-a9b343ba0d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "189622c8-3341-4a82-a048-05661208aa91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c62cfb6-e28c-45b3-8db3-7bd384346700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2aacfe68-a682-4164-a2fd-bfaf62b16a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61eb1f4a-24ba-4261-a934-cd7855e295ee",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c55fc439-9f7e-438d-b2b8-7347d96eaccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83de417e-1e3f-475a-8c44-4f21f4892830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f513be-441a-40c9-9bd8-7a42d62983f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "df745e50-725e-4fdb-a225-c280f4ca5b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65ba49eb-06b8-4d85-8000-5237f11478e0",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae761df7-284f-45b4-a922-ce56ad5f5c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2348c70-c889-4954-b90e-b85f77277d9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd71691e-f916-454c-b8fd-988afd4cd312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "61ba43b1-ac83-47f4-9ee9-86a9fbb6d4a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef2199b3-4774-4273-8b77-c4beaf0bc8a9",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf5c6c5-a99c-45bc-b553-eb4075b21e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9e4744d-bfdc-49b3-9be8-111184b8f13e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0289a51-3eac-45be-b8c2-01d53bd2a5b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "760e3890-092f-4eda-b838-d683ead06756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c6bf94-781d-4c16-964f-c97617aac3cb",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97811a54-5467-463f-bcfe-eccaa8d83036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be72f9a5-8d03-4cd3-93c0-143ec27743d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab95307-1e59-4d9f-87ef-6057709cb18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf805434-cbb7-43c2-ad86-3fd2b3e11084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab426b0-c024-4383-9281-9e7932504245",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d45b8c1-5158-4827-8f15-fe30b2d1fc07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e829e72e-2ae0-41c9-a3ba-922ee7869dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "354fb12c-2dd8-4a33-8c3e-2b62a6e27798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cddafff-192d-4d4d-a390-54ce584b2c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b2d3c4-ed67-401c-ac87-bdc8e8c0bc41",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d475387-afdd-4999-ad40-ed137a2c934a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c778561-c89b-49dc-83dd-2420c385c679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e38cc29-323d-4bb8-9286-ad6741f2a84a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "748edfdc-f3b8-4bb3-93e5-56b507ee1caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a8066d6-3249-4026-9ceb-4d458b8fb934",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41e7132-65e7-42a4-8ba0-5f7f50b06969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ffe67d3-9874-4d73-95c3-6aa8d795ae7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a22710dc-1993-460d-8603-078145a1e4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "11e1cb44-536e-4b37-b8fc-34f9b517459f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3efb675e-8175-4a57-84ed-52d3c95488dd",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0044e6fe-cf26-4c39-8ba7-c6f0983f602d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3789822-b867-441c-9c65-52563a8fdb00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "311d8bd8-d809-4c67-b267-109aa36d08ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "43c9b53e-cee2-4cac-8adc-4d288b89eed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad8108f6-b85b-4c0d-a78f-0dbaf23fde00",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f51634-e3eb-4195-ac1d-d82d235f0cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19476cf0-5fd8-4430-b0a6-260a3f78fd9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c9d8371-1aca-4d44-9aa7-b1318d80acee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6893317c-9861-4652-a40e-efcf2e6642ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec6f78b-2503-4ca3-81de-340a50e17126",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d716f103-0568-4958-a264-20f08aece073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2a28b13-3c1b-4d02-a83a-66661136c4e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b10928-dda7-4b5d-80f5-c48cb35fe952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "25f4a2b3-8308-4b4e-a6eb-8ae1fdee0424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dae03d7-ecdf-44bd-96a9-9c633b147408",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "628fd6d2-5d1b-4770-844b-750bec3deb5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30cf80a8-a375-40e7-8ce1-707e28d39459"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a3bb547-3016-4419-ae97-8ece16d80f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "87f5912c-0f0c-4864-9708-c218304784fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecbb2ae9-ec38-4065-8244-e01043be626c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "650e9f28-45ac-4d4f-890f-0d18cf81ffba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fa53a35-8b13-4a76-9f29-12d8a3a5ba86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "052b590d-2fdc-4957-b429-4e750c3e277f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "af9ed7b0-ed83-42ad-a069-fcd79e1eb938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b47d351-1e7b-46b0-8b25-572955ea5d63",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fbd1d1c-d161-4aa2-b45e-e16a50e7b601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de446c99-7a43-479a-a980-fe2afab13021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f98730-e374-409b-83da-20d7c0091d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9487bf1-b65f-4c2c-82cf-b13c382449df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7467469b-f449-47cc-9d21-c6c6a033c80c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29cfc0a6-c18f-44f8-83b8-c78081cc4363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2cf8f4f-bbe6-4433-a3e2-f58eae67b483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cfdae72-eeef-498d-b191-273e126bc5db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ed8d4d2-2375-428f-9fd0-1b24ef81dbc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38a20a9-e40c-4abf-962d-254d4073a6ae",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "908e829e-fe34-454c-b169-f0b146089271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6510a280-a186-47ca-a3ed-68bd0617e8e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfba7237-e3d8-43cf-9fff-8245cf14765b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "965bb498-3e1b-4a6a-a1e7-ff37c1272b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03571460-d79a-45e6-9c88-d910a7e0c0b9",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "282a2f6c-974f-47b0-bfc7-de236b71de28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d998cb5-0f57-497e-b767-955b2124758f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff82012e-4d62-4cb6-8660-79888dbaab5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "03e88a65-42ff-4d05-a49e-00d99f2a5492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6664bfae-90ef-48f6-9702-b84ea86cdecf",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b1bd51-783e-49ae-9758-e47c6067bb01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80b84be3-4f5e-4715-a77a-04676e9226be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8685700-faa0-4fa7-94df-6d6c67ce4038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8db297dc-7941-4bd8-8cae-5fbc00389a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72424bab-78b7-4c50-a134-14b8e8e17024",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a7dcd7-148d-47b4-9313-db9b783f205c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddf8be1b-858e-4b58-a80d-cb29ba4ceb15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa59bf8-fa3c-407b-b141-519ff2e818f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ce3b11c-bac1-4c3d-9f2d-81efa9775b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d13c0297-c2bd-4910-9902-743c182e0484",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b17920d1-3705-418c-8b62-bfbac6463d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c61a0df1-c28a-4582-9af9-3fbfcab1e5e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "654c3176-e858-409f-b19e-260025bb67ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dcdcc5c9-fa32-4cef-8319-96ea7ed3191c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa9c943-04fd-4441-b5f1-bb351cd74668",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfdf79da-c69f-457f-91a7-2b306f25eec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a6c8dad-0ded-46b5-8237-97c6350b3aba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83c9c947-c407-4629-a617-7c05be099aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "78e6e025-794c-4cf9-9ba5-8befbd075c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "574f8796-670f-4a59-81b5-c66c1189dced",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da582f8b-d260-423e-981d-bd8e71700afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf6654d9-aa69-428f-a359-9fa32966ca49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f029b278-aa42-4950-b1ad-8b007f987ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2cf7873-2638-4816-b45e-b0471c95604a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bfa3a29-37e5-4813-adcb-9bc04d12984e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc232710-ef44-4437-b387-c8800889406e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c1438b-d422-499c-a7ef-9bc9f20dd8ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2edd897a-45e6-4b69-979f-abb8bc9c1c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b6c9c07-7043-40d4-83ec-3702cb13440c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce0c652a-2a35-46d5-88c0-f02ad3d16a7c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad12a7bb-bd38-45ca-b4f0-380dc77772c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b7765ad-484a-4fae-a645-509c9e99987c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a588e284-287e-4750-8456-4012451a031b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9776dd2d-939d-4ec9-958f-b8021846290e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b4a190-783d-452c-8d43-fb2fc59fe025",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de6c5a2-0e4b-44a4-ba72-d9398ea9f9d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f89eeb7b-9664-417d-b180-c8b9ce1e065b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bab6b8b-5826-42bd-b3c1-f34f93cc4d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1429c98d-2f81-449e-bcd1-7124eed9a7b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a9f9411-1c43-4ac4-a458-e1239824f5eb",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8efee6dc-0444-496d-a910-21a99610d1c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7dee313-48a1-46a9-8215-6ad6bd085a8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca05e9e4-79e9-41d4-83b4-141c703869d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "43e84755-dd97-4090-aad4-7f8716b92714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf384e5c-a4b7-46ed-968a-79cdea4858a7",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19e3fd0-0d48-4589-9d24-82d3151e03a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2a79df8-434f-4bb8-89d1-3a22a639080a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b3d350-8012-4363-9b6f-2e303e049026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5679ebc5-950f-40a5-961b-78d2286d3607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b073c4-54ce-4287-bfb3-b8595710e340",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb853d2-b81b-4f01-a1dc-d172c24e3d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59cace17-af43-41fb-9b97-47e06a5b42a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb001353-ac02-43b2-969f-e90fd807e96f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "26cd66bd-c2bd-443c-9b3b-06d186c1147e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62da1e02-66ad-4045-a961-3a797a1f2cd8",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "042bbcb3-5cc4-4eba-8d08-da312526a35e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c01d1bb7-5066-413d-959b-d0b6c6491b5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28bae722-9dac-470d-ab53-969520d09a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "29383937-44e0-470c-893b-6dedebdf6fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bab2815-323a-4550-a81c-579eba64edfd",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a13a4d4a-4f81-4465-a152-86d7f9470535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6f00427-0bd9-4736-be89-d6dcf195d874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ecb6ae7-deb4-4e4c-bdd9-e29a962eac2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bc3f017-7655-4d1b-ad04-62ba73eb67d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd7622f-07c4-4234-81c2-af813386d779",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be6b9570-0cda-45e7-9e60-91a6bd7ce49d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85a668b1-c2bb-4200-9a06-c6f86b50c238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c9ea3b-bfa8-4083-be9f-257a025716e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "25979dba-9fa0-497f-a87d-7b5cf9345edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "507b4076-2f30-481f-a40c-e22f428b043f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba1c167-85c1-48ff-b072-0f57142471e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5b82152-cdc7-4f68-bcf4-0f16ee133e58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cbc658b-5c43-45fa-8062-d1faa243030d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0cc132e7-9348-42f4-a4ad-692cf699eedd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a3bcaf9-f588-4977-ab55-0560e60c506d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "156c8659-9f19-43b9-801f-1cb82f7a6b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "882a4787-6d59-4b23-85c7-5d3ff0a48647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f482bd6-c2e4-45c2-95bf-dc3b8ade5209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "69fa7056-981e-4f97-be13-84ec1123c5f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba39e496-56f7-4c6e-9636-1953cbc477f6",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7562d411-1fe5-4c74-b1a1-412a1035fef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1933ee7b-c6a0-407e-b5ca-954c5e45fe44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb872e4-78df-45b8-adfc-66fa3693c634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "30a83f54-3a3a-484e-afe0-1fdee6c7272f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8848646-7631-4928-81c7-ad5e1ec260cb",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c2f11c-9092-487d-9b9b-abf3e2374d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7e1c4df-35f6-4ed8-86e5-90bd1ca48077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14617e4c-b5a0-41a9-b3b6-5ea661c0bb9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1faea356-5115-41be-82c1-0e19bbc12464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be381e56-7d1e-4bd7-8194-d5fac254111c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f402310f-e63f-4d51-9ed0-dc7a3dec948d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "224766fe-c140-41c5-bebf-f9ac6fd045c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "936a5692-ded6-45d1-b8b1-57b7a7d5fbdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ce1ec6a-03fa-4658-a93e-3259b8af3815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca1d79f9-2fa9-4a7d-8429-329dabbe9ee0",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3efe406-49e2-43a7-ab8f-7c543afb1c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55ab90ba-6350-4837-9552-062a0e2145e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3785c199-9c33-42fb-9d1e-59d116e7f523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7f83f8b-d9e7-4740-a386-90330fc346cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddb216ff-c419-413d-9320-1a9b06334253",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58eaeb94-2e96-4276-935f-584949eec8af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea98dcae-6396-46bf-ad9d-07629238c928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aac4297-3b3a-4bd5-9855-4341540755c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d64093da-1b6f-4246-8588-9660c4b769a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa7afdf1-543f-4dc2-8bb6-625cee343244",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9486ff34-edec-4f8a-9bec-16d32c450f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35af63f0-898a-4030-b5a4-4d79927deb06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60729e01-c49a-444f-b8a3-8c8edbfa197e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d204436-b3b1-4780-b3c2-b61277fb4254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1fc8991-2532-4c6b-8218-7aed84fd45a0",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6601fc0-944e-4ec9-8072-c6aa678639fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecd36037-39ef-425d-98ab-f801d77df507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86abd17c-9f02-4f16-ba3b-612549ac7c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "663cdac1-c855-43cc-bf53-57d20f13aea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f225a2-fb77-45c0-992b-2cba0d4a0a86",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3054428a-fad3-4b08-8783-de30a4ffc324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fdd9ac2-ed1c-4037-90bd-0082d28ff3a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f081c332-e962-4a17-a517-244d13c2ffbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8daf7b00-4e1f-4f53-8463-ca2ab87fcca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf4c1bf1-5dd1-4d39-a3a5-6238c90d928e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c0b14e-fbef-4a52-b053-a607e30b1372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea1f108b-cc15-4248-a2f8-b67a6db3d227"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b855aea-2539-4b68-bb9f-147c00d6c810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "626a6c96-e550-4b25-8d8e-578dc588f670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b8fa25-a6b3-4078-9d38-223b81bb60f0",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b768b691-b64b-47c7-89dd-80f555b9ffe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2de59fc1-f40a-4e9f-96b2-458ab0410f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c39f165-620d-4cdc-a3f2-e4acb1f208c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "29e2d82f-ba59-4c2f-9245-a505b864a445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f97ff7-a36f-4b39-a9a7-2e00d333a7ba",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b652e6-9548-4266-801a-bcef46e68e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f40f133-b7d9-42ac-8428-5a062ada410d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c3b7ad6-2cad-43a1-aea5-eb421c3ec111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "744250e0-371f-4fe3-a8d9-b62f3ad5757d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d082736-a5b0-4260-8313-f0b2a46d39b2",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c2d555-d1be-4c26-ad5a-805bf8d9ccef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "07317c8b-45e8-4423-a36d-b45e6d6c7fac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5f8b836-da0c-4ffe-a1f0-19e7602f8f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d6285a8-f67b-4fb8-b086-5025c53e09dd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "64e7b44a-737f-4f81-8ad0-c053077d2db4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8ff46d85-7793-4987-bcc3-b966e2fecfa5",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0ff972-fb39-4d25-a8da-93f1c2830cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df76fcb2-71a9-475a-9918-7dd199454aba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af7825a7-64c7-404f-b24f-23d5c18330fe",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b73afc81-277f-4e56-ac86-b617f8a59bda"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b11f22e0-6745-44cb-81e3-455652d8bbf8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79782cac-48f7-45b9-85bf-cf611a19af4c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9397041b-9265-4eef-adc3-5c3ab4e9dd66",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "90e2b570-b5d5-448e-b068-1a19bc7a26b3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "400134c8-0b40-4d76-832e-78b4a8977509",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cf76056c-dda0-4aa8-ba6e-f433b6a26889"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d41dd0c2-c0e2-424d-9ef7-f601a86e27c1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3699f386-dfa8-46e7-80da-5a3c6bb14c6a"
                }
              }
            ]
          },
          {
            "id": "54f0befc-9d28-4f45-a28b-5ba697f5a058",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bfab5965-d61e-42f4-9afe-b94b441e6d67",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "9bfe3391-4e5c-4f57-92fc-1f5007e56298",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f2b022f-399e-4133-9de0-b55d1c8f0d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "bbaadf97-c356-488e-8e04-e402938635db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "289edd7d-8b9e-4326-963a-8bcf60b3d307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fe79e08-9fbe-4662-a8e0-50ada88ef229"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a645c783-57ee-4a92-bb4e-3c624dc7e0ce",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bfb1e84c-7116-4c76-bafe-cc944184a867",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "216dafc6-7d52-4a3a-89e2-4d845684bf6f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "060fbb89-bda8-44e4-ab75-21b037686b57",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4b8731c0-3db2-46d2-8519-2e9c538bbde5"
                    }
                  }
                ]
              },
              {
                "id": "999b0f60-32de-4ecc-b842-a35fd9555f6d",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "70d62cee-43da-4ae2-af59-998b3b5e193b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e0c7e97e-80be-42e4-ba2d-56303b2ab09f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d72f2e9-e57d-4b3b-b97c-af25e4a38401",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7578e447-536e-41cd-898e-e6ef0bf5629b"
                    }
                  }
                ]
              },
              {
                "id": "a525c98a-c589-4bfa-996d-f01460553796",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9247bd7c-674d-49f4-9d76-cd8a6cd35eda",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "81dc72b3-484a-429f-a645-0f41d0fce928"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eadbd98c-03bf-4826-9f14-ae4d828d75b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5e87fb24-3c95-43af-9853-a00d7aad2810"
                    }
                  }
                ]
              },
              {
                "id": "850580e5-1f0f-4d5f-bed4-182677f10170",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "05c320cd-91b9-4347-8c0c-e31ebcaa594f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5b327b6a-83cd-40ba-b480-2b466683a5fa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6316c571-4987-47c5-a25e-406a579c7d2e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e4d6e7ec-8020-421f-80a8-8a5949edfe73"
                    }
                  }
                ]
              },
              {
                "id": "85e6dc07-8b68-4d0e-9574-ad9013f0f7c6",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0369f46-1f0d-4881-812b-f470b5e14f17",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b1636d77-df75-4164-943a-ae5a8d301804"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2990b624-f7c3-449a-b253-0a6e52f87e77",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d8b1e5cb-b841-4b0e-8e6d-33de2a47de23"
                    }
                  }
                ]
              },
              {
                "id": "6a51d69f-19c2-4dcb-8de0-97478cbf4f6c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2fa52bb1-16c9-4167-b6b6-8f3773f10537",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "26a6b434-7913-46c9-968b-0ed2fb557e88"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e5656539-5395-47ac-a6fc-af142be8e71d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f1bef9e6-09c4-439c-9da6-95ea0bf6928c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "78ee9ed9-93ea-4a6b-8e77-0dbfa2b73c2f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e9bfc2fd-6af1-4475-a601-2f8b1f93e064"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "735408c9-c282-4905-8844-aa07d004f1e3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a3508bea-5c9e-42e5-8450-cc1be4971500"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "786f9274-18cc-4865-a839-7f99c67e85e5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c9e718ff-cb8d-4618-8a17-30ef6cda8c6f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0e48065b-e45c-457b-a88e-f08f61ecbc67",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eb458a15-a93e-4178-93e2-6653bfa3a865"
            }
          }
        ]
      },
      {
        "id": "0fb84b99-d1ea-42b2-b51f-291c8d11926e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "011fc37e-92b5-40f3-9b64-dc98cd65ffcb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "32e3de69-e736-46bd-8fca-12b230eba5a9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "15a9e49f-5781-4abd-91a9-53980e1b43f9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e32baf6-8f59-40a5-a7b0-2ef057338e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eff9707-86b0-4270-857f-d21c34781471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a89266-1bd5-479a-8498-ef29f09d7849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcc8d454-7382-4cf7-bb78-fce28de51737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47913452-cfe2-463d-903f-c2bbc1d1812f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a41697-1e07-423b-90ab-b259810e9162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e7f4526-f6e9-4c07-a492-39564e53842f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed02084-621f-4e3b-bcf4-5cecef1cda81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4a8eca3-b306-4f1f-a77a-f64a55c20ab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d5caaca-b2c7-4b8d-a1b1-231663a6d6cc",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e8acd54-9d63-4b52-8713-f13fdbf74531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "199b9bd2-0d58-48cc-ba08-ce2058a00e5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfcec86b-552b-4414-b6fc-cb2a8f28a624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "26307dac-b3b1-428c-bc8d-6df03823e564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89778aa-1bd1-4d76-b0f2-d17e2243db23",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e35d26-48b0-4fee-8740-c0be82a1156d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1718b7ca-3938-461b-a8e9-24f470a160b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e0ca49a-d7fc-4c51-bf88-f33a5ebb58af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2dc7fb61-887a-45c4-8767-83a944680cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6dfeb30-f077-4f4f-b677-f58d9ca313c7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4707fa15-ee05-4dc4-8780-fa12b470989f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87f782c3-6e02-40f6-8947-9a0bdda8165f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1435247a-eb68-4699-9a93-76d5fb3dc26d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "11bc336e-2a4c-443e-a121-c611e8bec044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c01d2d0-bf84-4b19-aa31-20ab6c97b738",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9399bff6-b129-4706-b3e7-990b48fddc6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f34d70c6-fc0e-47d0-9d47-d0cd1af408ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98494e4f-8e03-4353-957b-698c4faf85cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5dfeb020-02e6-4353-a651-2b718037727b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75373932-92be-48db-b210-4112bc192cd5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10cd3324-42d6-4e53-88a2-880d23fa4bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42497d12-2199-4adf-aa9d-99497b3904fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e5f3a7-3151-497c-95eb-914262a47998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d5909c9-ac54-4600-85fc-b1488379fe5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a44a429c-209a-4685-a660-46cbcab4a2f3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b7dd109-ae17-40fe-8d42-8af78252b457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2f9ac6d-d741-4574-aed0-35e5b3f1bd9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca479d6-1b2f-4113-afdd-c2f18b5fbcea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "064722f1-cc37-425a-bac4-14edbdd58433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c88e5b1-99f8-4f77-b9fe-08ea4be72287",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "643a7da1-78fa-4b2a-b33b-cf333a6f63e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a4991e1-2c10-4017-bb4b-0dd38499bfe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ef6f3d-6e0c-4e02-9847-2c79816b1913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae4b0e2a-1a53-4fe1-b496-79767978efcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c5e6cdf-cc11-4dcc-a56e-a53cc7499ba0",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "443366ce-15e6-4a9b-9755-ca9222fda591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc57f93b-b393-44d2-873d-ba4efda75c66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59517f4-48e2-49f8-adda-507389d5f7c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "68ff8607-fb4b-4b00-bbc1-f955731ed415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c671185-69e8-445a-a6b1-031bfd86b8dc",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec0486e9-79fb-41da-998e-721fac6befaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6dc6947-d3ff-4b37-9608-5adb1e589d27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb452cde-036a-4dc9-b86a-f833607b606a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2a9d49c8-25d1-4683-a716-13a7641db1f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "590b5a52-d5cc-4c8f-b887-263b05233137",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a196e43-5ccc-459d-ad97-cffb9f94b0a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "549e5c86-254e-4250-b875-34676f11643d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf31d316-c3a4-49b4-9306-04694500ecf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b0e477dd-3818-4b4b-890b-052b85c6b25b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c90de2-7972-4b10-97c4-b031ca0f9788",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13224f6e-f3f0-49c6-8ac6-d552343c9024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aab69152-7c89-4db0-aa90-4589a4748063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8300c38b-7bdf-4d56-a680-ae6b2e3238ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ec011e1-7a0a-409b-a426-1357362b60d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05342ec-7c9f-4607-ab13-32da9e0e2eb9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "295609c5-ba8f-47f0-a050-3f4087d11b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a607e7c6-3ebc-4928-8038-77b446c33ad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55949f79-9b6a-4743-a20a-6200a5978ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "afbec556-ff84-49d2-a810-d4086b9d9e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e4f67b-87e6-4b02-9606-416c71b5e55b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a0bc27-342e-4755-8cb9-8efcbc44731c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee02b64d-5de6-4856-87cb-9e66e08ef8f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be7a0978-2de8-4500-81fc-7dd7d521f567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "242b0c2a-958e-4d28-ba62-f5bd9d48092e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0652d560-3871-4195-9a51-c896b7cee7dd",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b670e6fb-846e-471b-a161-a720094230d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d34c4991-3e75-42a1-b17d-fa50f41e94b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bcd31ae-b4f2-4d4b-aca4-56743ae776e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a51a5887-6ed0-41c2-88d6-d865d39d25ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d35fc4-5d58-4844-9b9a-13edc76b2a9c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da68e0bd-08b8-40b5-a082-97dbc9c1ef4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aa56984-8912-4658-a084-adcaffb0aa45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790a913d-2280-4429-8aba-9d9dc4fb082d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e0ccab1-5662-4232-ae79-26ecbeafb3dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f058fdb-1838-4c23-95be-c20c45109e9e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c21127a-13bc-4c95-8f00-a771049a2bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f5e0d31-4d99-4479-81b3-c8b07058b197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fbecc71-bcaf-47dc-81f6-c174e55a2247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a711986-539d-48fd-bcdd-32afb95cbdf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a52add80-04ee-4a52-a055-bfb0acbea4a2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd43aba-55dc-4101-8e88-366cd822bad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da6fd81a-c18e-4df3-80ef-1a08be80bf30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d568113-e8e1-48e8-b4ab-4f76af261f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31d966de-6f5f-4d48-86df-71a492b64f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d8a139-977c-4958-be66-24cdd3b5ec4b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b558a9f-185b-45da-bd56-a5617aa51cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b00a55c-c7e8-4913-b9de-97a2446856d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f8a0db-dbd9-4ffc-984c-6c935af91f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e816304f-a0f4-43a6-8e30-4aae201469ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc40f70-14f8-47c1-b593-d7db09baf2ee",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deadf989-4b9f-4730-be81-da360c6031f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbb5c618-e376-4039-a520-95e23e5f178b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b31ae7-ec69-40db-a803-7a2d19b1c19b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9925ff96-260e-42a7-8769-fb1073881828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c5812e-cee3-4d90-b52c-a215bf75e6e3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc88dd56-5663-421e-9cce-291e38179c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b18a83ab-7263-4339-a081-75903f2c330c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "214c94e3-e696-483f-ba61-93d410d2f731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea8faebb-4c5f-4697-b843-0d91c4c3c74c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc76bd6-b945-4a97-85d6-4ee9160ef35d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74bdc079-138f-4229-909e-98b1b5fa4810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01f0b466-9b30-4a37-a876-527d7472453a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a07f4d-0655-4a05-bee5-a99caa96ab6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f6ddc44-7902-4cbb-93b1-018201802f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc7ddac9-7072-4af8-8f34-69898f2cb3e5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "367644df-d921-4aa2-82cb-149ff2ec1b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14fec875-4bf3-400e-89aa-fab62523742e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81283bd4-b092-4bf5-b841-3d91d95d98a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7216c615-a10d-48cf-9c3a-86f06a264e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e3a92b-f967-43bb-b06f-460546f33559",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45de22d1-3348-496f-8338-38c9824f0b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ae156a6-f4e3-432f-9e88-960ce543be40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a47424-19b9-4bdf-9de6-f71ed0ac342a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf73df53-803a-424b-9903-a574aa362bad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c78572d1-e48c-4276-afab-cafa07e5c6aa",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "390e5dc3-2ea7-4a9d-ac0b-012b9a546067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "375d7bd0-bf82-4254-9155-06c9f682ead4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c53b513-1e04-4af3-b69c-6642b3513591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4941be79-0a8d-46e9-a570-3f8a76af0692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89dabb38-dcc8-4e61-8927-bb45056ac806",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baad5118-582d-499e-86c3-0e718234967f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dd7d324-1462-4ce1-b211-d791df6042bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f94718-30d6-41d0-a21a-19ee196698a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "efefe71e-a3e1-4d7f-9846-4486dfbf0277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c14113b-e886-4cc7-997d-166c4fb85758",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d9532f-8e2d-4e16-9726-0f53e28b1889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "301509d7-2106-4355-bf3a-b83fbc8392b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3554a33c-541c-4db4-9cbf-3cae92fbb769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a78f13c6-8518-413a-925b-dc526b78b00e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d2c7c52-bf22-4224-93a9-4d43f24b8677",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d9cbe4-cc2b-4ded-bd0a-7e4c7f1cd78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cdede84-87ac-4598-a27d-387df82866c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b237ecb-f92a-4aac-b6a2-2f44bce6bce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de371909-a61b-46b8-b52d-db14916d3384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b12bb8d7-9274-4a13-88a3-97caca9249e6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce6ef7f2-000c-4e14-aa70-145ffc05f514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35ee188a-6a03-49c2-82ae-390b76102cf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ccdd90a-8f22-4682-a490-160039ebfb77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6212ffe-8298-4599-b3ed-995720fb23b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bab1116-0ea2-428e-9275-54244a0dc38a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aafe5802-69f2-40bf-9b22-2bf6a9d7e8ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d015218c-030c-49cd-8447-68eaa242bcb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b2b3aef-9e68-4ab7-a41d-58aea237d01f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f5f6c24-d6db-408e-8bcb-6f5d4b7427f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca0210c-6565-44da-83d5-fc112a40e741",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e476e7-88cf-4d35-97c0-abc4adcbc21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f810c46d-b519-4b8a-a6a5-8c51054809ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60394e5b-25c8-417b-bace-1df4ac7923ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d618570-f590-44cc-9b3e-d7927b637d29"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6b39664c-4178-414f-b380-76b0814c0f9b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b155082d-b2da-4f25-87e5-6285aaa2272c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a86875-c0c6-434d-b93f-23ffb01a6ca3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5b606142-115f-44eb-8dc6-0dd19dc743ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "570f84b8-c8d3-49cb-ab3c-a35fa96bb26d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32fd256a-d2c3-4918-8b71-f408462da487"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "860cae56-6c16-48ca-9c73-f46d25ac4b92",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "024c4a20-95a9-46e4-a426-cb48ec4fe0e3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b358f823-33f4-4b0b-831f-c0d3bac7e870",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d676de01-0806-4935-b365-9199f4038f11"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "26eccd5d-8b84-47d6-94ba-604ee204bd76",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "648d9cb4-03b6-4de1-8f97-2400748e3f0f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "044f7001-86d2-45cc-a558-e4b160adfa8a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bdef032b-fda2-4cc5-954b-8b6b927c194b"
            }
          }
        ]
      },
      {
        "id": "84226bf6-d0d1-4e8c-80c1-f604b4d41395",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "9a9d9d58-d78e-4ffb-b872-9c3c815ad718",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5ce89fac-e560-40b0-b132-a8bd5b01581b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d582786d-12b1-48f7-82cc-809dc529e04c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "450fce46-0d4a-4b34-9cc9-aad80f8d55e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "056bb809-8d70-4526-b275-041f1b63ae61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1637afb6-259c-4502-80c6-a8d06b18bffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bed46c3-3b67-4871-9d88-a5b691edbd2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b189e655-287d-4714-a28c-e3bdacd6b236",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ddd373-7601-4373-8cd9-50b1e245200d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d8a9804-6ad7-4ad9-ac09-8420fe5ecfc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab394492-8a07-4ba8-93d8-4d98f3f132fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "16c8c37b-8f3e-4745-94e7-408f177bc0b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf661ef9-4690-4c40-9db5-a2a4e6e95732",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3dc2163-e4e9-4847-90e7-49c687dfe754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d4f61be-2e7e-4a32-ab60-e07a070bc6b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d214f6fc-00d9-4f5d-820f-4719d9017370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bd44dbc-53d9-499e-b998-d46dd3b433fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e737a72d-2168-40a3-acce-c0b6bbb057ee",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "146ba716-39ee-4559-9dde-265fc27ef433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2974eb66-e79a-40c7-8c0d-8afc4d7557c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b656010-e4f2-4cb5-ba0a-bde96ce98bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "959164bb-768d-4a4a-90f5-ff9fb1a13f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a19b4cae-ab5e-4d71-94fc-6da1b56a91ce",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c97b2e-c109-4de6-9b05-ea9a8afd63ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a436b934-7647-4616-ab88-aac420dadde2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b5b743b-6132-48f0-96bb-422522734bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3662e121-effe-4b2a-8c5b-c54f21d61f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f8615f6-19e7-4f53-b1c2-d5ad971bc1c6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e3925b-07bb-49ae-9410-3ed8c2df2c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad11834f-d207-4809-852c-cd7927e540c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e8ba0c-b694-4ef5-b6cb-a7f290b36e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ad927c8-3f37-4241-aa63-423f883cd64e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8562de1-7da2-4862-a9f2-fbe8d0d93c26",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c6f760-d795-4756-b333-17ce51e4de4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d680e63-364e-47b8-9122-586651c641fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab2aaba8-6387-426b-88a1-f481f76379fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a979924-96f7-4125-a448-7b4446e7f0cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a0489bd-c1f6-4aee-8a09-98af171ecfa2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5912c861-8ebe-40ac-82b5-5cd87a498e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ded15c9f-4588-411f-a0b1-479f7a91f7aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f130fc82-7893-4200-81f9-09e6ccd4ec49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b485d8c0-3277-4db2-af85-f1b6af02099b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2993d1c0-25b4-4295-bd6b-23e5b37fa33d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca01827-9430-4543-b1d0-8ba0497fae74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07e225ec-e2ed-42fc-87ad-998d00473a4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e85359-b83e-423b-97b1-3b79d411bf25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d6ec253-d1e5-4cf2-a6bd-d17858f226b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a2bf276-2453-4eeb-80e6-453f63c4f337",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "891c734f-7364-4da0-8da7-c330229c2128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f83019d3-84b3-490f-813a-38a13680673b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e52c2925-016d-401e-a909-ce55f9c7ad3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aaeaa28b-18c0-429a-b510-37b1f914b3b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2267917a-aa1c-441a-8fb3-ce57ffa84711",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08fdba8d-12ca-4b6d-8ea2-1b6d8132f85c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebba149c-f1c2-46dc-a512-511d0f37af2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f726d5-a189-43bf-8ede-4e5b9fff2ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d453553d-fd74-43f2-9142-85f103abb51f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d1c64e7-a280-4d13-8716-b802ea47ecfb",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67cb7d39-3dcc-4b65-be7b-ac0674b15132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3df49164-ad54-4ae7-9451-83d94fae9f4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "092f9323-8c16-45e8-8fd3-f22459d92d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c51c5928-5b5f-4c2d-9d6a-043471f836fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70fb68fb-9acd-49d2-bb0a-3023c24638f2",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd0b935a-7df1-4f06-bf70-6034fb9a75dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f718cf2-8005-4db1-8b4b-c610ec06a652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a645571b-1bd8-4c87-9128-bae7c36d3421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c91a2652-194e-4b67-ae9c-230860f7e652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "156d525d-861e-48fb-9cff-e2d48331a50a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e026b75-4e24-4fb7-94fc-0d57f6b64e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2015ef8-911c-458e-8c80-6efde350e97c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d13edb2-1905-49bf-99fe-7db95967c767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ecd2290-0373-4633-82ec-1dbd293a329b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85198250-6db4-437e-b11d-439465a26804",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22611e53-6caf-433d-b22d-a190e8755604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e02597ee-c475-42b5-a167-59e5bb5afb95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37e2ba2e-a850-4fea-93ab-32cd58511240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab7e68ca-f3cc-4932-8bfa-f627dedb7316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf4c3a9-8671-4933-8664-d93c630d43b8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f20c6745-faf4-4463-b6fb-ee1e64d3ef39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ef45c9f-1fab-40f8-859e-507739cada83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01eef361-eb8d-4b00-bca7-b71dc692c7e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c63d2cfd-a38c-4bd5-9139-021e1a306cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61757c82-3666-468d-bc83-a52af413973e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eddbe510-d436-47af-b95c-1c09c4c8f646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9695d971-7970-44d3-88e9-f56a1a1be522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7200983-7336-4ebf-bedc-f413905b27ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f011ee11-97f4-4f61-8497-92cef6504a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f31f7eb-6e38-49e4-8b33-9546b9d3eb6d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b23bed-7555-437e-875b-12d0d87b6605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53dcd8dd-332d-4cb7-8948-128e0808b08e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb45b3b5-ca91-416f-9219-da18ccc46792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2532b26-ab4a-4823-a07a-b0668048d1b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f6cbdb1-bd86-4cd6-9586-276c2758ca1e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3824e130-9b51-4b74-8f0a-d9f6add6959c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7456ce2c-915a-4ce6-a845-5b1f80dafc3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f0fb93-d334-4f04-8df3-7c4ee193fd41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df1a5062-edda-4a02-a159-d7e6bd2a9fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ff18d3-71fa-477c-94f1-007c8ca6096a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e09df736-4d55-41dc-a574-181b2687007f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5c65afd-9731-4d95-af94-3e69cc5c2f86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d8104d0-30b6-4b66-961f-de84450312ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00a4acab-5c5f-4b4c-bbe3-e49f65b20fd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c89863df-4bac-47c6-8c86-6860f8c9eea1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a8c2666-777b-4b27-89e6-53edb0132728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae51732d-b9df-4ae7-93d1-19c8dbf4c4ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f55a638-b51a-445d-a5aa-006c3308a861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7465a15e-821a-4972-82d3-38166176e522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "529d4b25-fa5a-4ae2-b310-a0fd211fca29",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "328fb13b-913d-4b44-bb43-8844ddb38336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfe352c0-d80d-4cd9-84d8-6493456ab669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "856c575d-d28a-49e4-9bbb-10f7c8f8ae71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2889b476-21ac-4986-bcc7-7d2c9782b52c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc3d137-df8f-4f3d-9ca6-1bda3303aedf",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46336ff1-0200-4394-8cd9-526e8d71b963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b797ac15-32db-41cf-b95d-3a5435d26f8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c9dabcd-d471-45b3-b254-071b5d73e689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fec227dc-aa9e-4f0b-833b-703d01d8a601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f208a0dc-cd59-4156-8621-1fe30674b6b2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14e51dd8-bb85-46bd-ac6b-97c37966d683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7650152d-f151-4890-8ec8-c5767229784e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6923b1d-532f-4e1a-9875-d18b4b97baa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5ef5535-bac5-4df3-a55f-839c4ebf1c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789cfd39-c0b8-44ce-9715-e4f58136f39f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c355e0-6b6d-4a41-833e-4a9573436950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "996be5af-1f42-45f5-b2ac-38206d65c8de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe0122f7-3f49-4b5b-a4ce-57dbcdeefc00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48ab3b96-9ca0-4c83-ac16-185e047ad98b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f896c92-f5b9-4741-8fd3-63cf8cc3737e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d794934d-0afa-4d74-aaf6-9b8cfa0c592d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db34bae9-c6bc-4d5e-aad9-cec2d640737b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "303d7059-d052-4736-a3c8-b0709b210269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c92b2a0-da57-4e11-be5c-03954f99e369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e7621a-bffe-4d58-8127-5f6053960bf1",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b890abe2-f846-4eb6-b169-50c3c40466ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6679ad03-a4e9-428b-99c2-03ec8d783684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb5896c4-e59b-449e-913d-2712d228c3ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "827ceb5c-0f2a-4f21-8ecc-b9e274ccf195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61760833-5ab1-47b4-97f6-3ca5ac28b0b2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45404911-f981-4275-ae60-5c10b039f915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3723396d-f4f9-442d-a77d-3bab494eba43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efff53e7-b07e-44d7-9389-ba652fe5a985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c06ea7d8-13d7-4e78-b90e-5a7cb728cb59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46678de8-b155-431a-9309-9f60571a36dc",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89668108-9e56-41b3-bfbb-075bb1b941ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0126ed0d-64f1-49c4-a961-da4ecff1016a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa55f723-6eca-4b9c-87ec-0a3a727f8862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d578b0b-ebc0-4c9c-ac62-d3aba78f00d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f440f227-88cf-41be-9377-c1aee6f4b5cb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b26db2-8573-4442-8d2e-87101dd5200f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef0934df-bed4-450c-aeb0-f38c3d1edba1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd498d5a-7efd-47f4-8d4a-bb5d462c548e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6222378c-c2ca-4231-ad7d-bd5c8daa2563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46545a12-aefb-48c7-ba05-703b15f00056",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e32efa-a8b3-4141-850d-559d6b55e28d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ec4a426-b94c-465d-8ca8-7cf95bb08f4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "049be42f-0bec-4062-867d-0e71e6f9f6c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff302719-ed91-4e67-a076-589600acadd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a45bec-2d05-4fa8-a151-5deb63eac9df",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed48a2c-78ab-409e-9483-3dac10e27e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "effaadf2-eeb4-45f6-a8b0-18dee57ea5f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c841958-c152-4e8c-a914-a601e424cb72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f4d9b7e-2022-472d-a8f4-5967deb18cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b84474c1-0827-488a-9f9e-7732ab31ce2a",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d1606d-53f4-4d91-acbf-576fe95d6ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b36b81bc-8992-428e-a629-f66eaff34a25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "117f2d18-1ee5-4b6e-96a3-9156018c924c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f9e163b-afd1-45b5-bcae-d6c8f679b2fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ace65e-bc53-4526-b2c0-b84f74ba0731",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd938a5-0fec-406c-882e-1f64c1a6274d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a9ee831-0987-4337-9de2-8934c7e32cfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af8d061-6f06-4789-9d23-5b31f3b8cdc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b83b968a-8d5f-41e6-8b73-23be72d21cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece2f8e2-a6b0-42fe-a673-96beb06c712f",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30948862-acea-4eb8-9fe7-02402bded8bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb643f61-7e6e-487d-8ab9-7a4f80ab2ef8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46c1539-779e-4a2c-bf43-394c8f2be63e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a78fdf37-7807-46bb-8ce2-d4c40aa62f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a244905f-6700-490e-b3a8-29d4fae64c96",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff7c016-081b-4b6d-8046-b53e90fddfa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bc99c8d-c233-4393-aa69-20952aae286d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15a60657-9b8e-4255-ab1d-1e3484abce5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcc9fe04-876a-4633-9149-eb8f75291e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b518810b-12b1-4f90-86bf-49c34ff47f19",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac4d50f-01c0-4881-bed9-ee220626029c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6477c4a-9cd8-4efa-99b4-01e737bfcb4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cda18eb-1afe-4476-9a4b-b1014d0c8907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f1f41b6-8b86-4952-88b1-96235f2b277d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bc27ef3d-bb44-43cd-a7cc-27056ba8f223",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "145b47d9-57da-46b7-9151-c39393b35043",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18174afb-c347-4f36-8108-c483fec5720c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "abd66fe9-0df7-431f-be4b-320b00bff4a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b96dd98-e055-4af8-81c2-2bd94efbc259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c9ef9a27-302e-4693-92f3-eec6a9af284c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad195aac-b3c4-45b2-b632-5973ed511b1e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "41642802-b672-4bcb-b0d1-9759c85b1303"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca8ac203-e971-40e3-9278-185b0a11410a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f8bfe16-6767-4937-83c9-d45736b63c37"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bd0348f0-b8a2-4c72-8fdf-611019756808",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "13108f5d-a8f5-4316-ba24-238d294378b3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d715c9e2-1ff8-4696-8dcc-2a3c749ca1dc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4d631b7c-1959-4d66-a13a-47ccc5e891c8"
            }
          }
        ]
      },
      {
        "id": "7e0e2b35-f8c9-4fe7-96d3-c680b836a50b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "60cfaa15-3adb-498b-a022-a538766fe5d4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6683ced1-c0ef-4bbe-82df-c2983106e299",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "552e2bcd-ed75-4115-83b5-1508bd7d8de1",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e8e764-f208-483f-972d-405746798b25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c2da16e-3b67-4e18-8383-461575553d3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef2becb-c3bb-4020-902e-7b9d2256e7a8",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1676777c-b67c-453a-826b-b2deed7a0a20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd719516-5d57-4fae-8560-464485154ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3300ead-033c-4eff-8349-2a823d803f5d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4365af63-d6ca-4005-a71e-d76ff39d7fac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81187eba-9f15-4368-ae6f-18654dba45c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce73143a-6d6e-468d-90d1-0d396b4cfa76",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f18aa53-d41b-4607-88dd-1c4e7b7b2eac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffee4f4a-b841-463b-a525-72ef32b612b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "172e0ff0-5ec6-488b-8056-537617cfab2e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "016cb97b-d402-447a-81f6-2693c27c1eaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c57962bb-8dc0-4751-b770-7d7629c2e924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd40540-7ec7-430c-bfb3-10752856cf90",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59bac389-b0da-4b17-8ecc-65c19f047d51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bd72194-f9dd-4aef-b6f8-35caecfdd5ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ba5d30e-0dc6-49b2-b90f-79cae7cfeb82",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7fda26c-ec86-4798-a058-89cf3ef75396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db78572a-4843-4c93-ad07-5173d5848e9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ccc6f1-5722-4777-8dfe-29bbc83a63f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30960af3-4583-440f-b3bd-b94f740a47c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8439ce9d-f975-40c6-b5b8-2b60a4199fbc",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73fc6a2-d6e2-43b7-9ae7-fd5b430f13c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4268baea-d36f-4394-95d5-fab238a1ca3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d86e51-ad07-480b-900a-f5f56ab6d07a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8b873b7-c82e-481e-aef9-b992f97f0eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75dcf60b-df75-4c0d-9d03-07f9ed86189f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11cdd2f5-32ad-4118-8214-a648323bbd5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7014008f-2089-435f-abe6-068df2a1acb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f5568a-283b-45f9-ab1d-057a3ca3418a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2704100-350b-463d-a1cd-ddeb05926b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0538185-bab6-4985-90a2-f535328fd304",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17527969-99b8-48d9-9901-3066b7e56e36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0090607-8a18-418f-835a-68b283560dac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1414a7e-9f8d-4bcd-ba54-cb6041982a05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12efa3b6-0ced-4605-abd7-ff94f8318297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8919ae36-d9ed-41a0-b0f6-adb27ff5a27d",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065652a3-fb3e-4dfa-8742-c49eac302f91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caa1b63f-f1b1-4d25-8298-6f17be2c1315"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b4a2a77-514e-46a0-bfbc-6b9240521cd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbb0a4b5-8722-4025-9c64-b2905aa80099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e877b57-f350-4646-8d9b-b11062a0ce13",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2451274d-f5ea-4103-852b-2b2ceaabcfd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4df23787-ad18-47ee-8e0f-1c4e94046571"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e441f1d3-8548-4970-9eeb-98ff68a3d9bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eef8da1c-cfc4-4396-932b-70dd94c26239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0591c423-6ed6-419c-b69d-f41035e545b6",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba449cc-fcfa-4e4c-9cfd-a4f6824d472d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72616516-f90b-4d26-b935-92795fb9e27b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78a2237-f21a-41cb-9109-5e012a1d483e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b426fc8-b037-4808-b454-e912a5a25e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7eec893-ff29-448f-861e-40c51037c320",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b538042-a341-4ab0-b163-215361360f4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38f3d3a5-5be1-4603-b9c8-ba24cb2ebe11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b3275a-95fa-4408-84f2-4724b9ab1550",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4494eb32-11e2-46d4-adf5-27f99a87f957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "295a2636-5ffe-4836-974e-c1eaeb4f46c1",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4da0ff-97ff-4ef7-98e4-aa63f9cf0861",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c611668-3449-44f5-a8ba-454b13c534eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a754326-8b6c-495e-ae77-6caa825d5a32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73c6f5dc-169b-45f0-848a-09b26a6902f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c716af-af76-4115-bd1a-434058d5a1ff",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf36e4f-f5fb-4602-a24c-c62bc094f2c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65b1631a-0fe6-493b-bcf0-3e578b8ef7b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45590f4a-9baa-437c-bad1-d030c0e478a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e0b7548-4387-4aa2-992f-9eb0c39fea66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b5f931e-397a-4e51-a4c5-41530df9b847",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e9105f-99ae-4d0f-af92-2a9ce4033b0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43d29d94-29e2-40bc-959c-8c54baaa999f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20fc30db-9106-4ee0-9d56-47e7415aa545",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d26a477-c347-4286-9826-cf3a8868fe20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "395e53b9-8bb3-4ef4-9517-2b9f5432aab6",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c57591-eb2f-46b1-bf85-3ebd1532eb71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "126ac020-d67e-4d03-ba91-22326c33d40b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a624a2-1014-4ff0-81db-472659d49f2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6fa1d29-e4e9-41e4-996a-e94b3ddad4ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "081118e3-6ecb-4527-8898-58c93d55ef2a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d58144-661f-4415-ac44-75248dc5cfbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffb1411b-dc6a-4529-8ddc-68b7f8c93390"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "146950ee-8fc8-414d-8a28-0ad777b7f108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a141f543-fd4b-415f-8fc6-87b1b5662214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b584e4b-31de-4b7c-9a1c-0065c0fc97dd",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61142d3c-4072-46ca-9aaf-7cbea4788eeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76735c5a-92c8-4cc7-9edc-95ed6574d95a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "629378f6-e8ad-4bc0-b43c-eca03ed0aaba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a82a11a-6cf3-46c3-8f8f-63dec4dc0ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc0ee148-b89c-4a2b-8831-5411ba9540a5",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c3c0b42-984b-47b6-86a8-8d2a30b79d6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3254661f-a4c5-4554-ac7e-4453181ec6ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2dccb9-38f7-4546-9f93-252192452e32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f95ebe4-38e0-4e88-8016-9f85b7638792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab2919fc-43a6-42cb-b4ff-d019871e03ae",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d1ad8b8-411c-46d8-8fed-1d5ac5cc1ac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7cc17e6-5dc1-4e95-bd68-2253d2cbc0e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ade6edb-103c-4c8a-9e23-8edb4c325d01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6cf7f23-fc6e-40a5-b43f-63b97a19849b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd1a3c2-aafd-4af2-a33d-815dc43dcf8d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e97dc9-1944-444e-92d4-75d9bf296349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0f139c6-9f0b-435d-89a5-92742e1a926e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f8be86f-9fb9-49f5-8d90-74b84d98fb93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cadbddd3-b73b-4f5a-9d76-0380de5a5a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa19d160-f19a-45ff-8c76-55e6efec0ff4",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991acb86-df63-40e5-a09b-898a5a1488f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c4c0bf2-620e-444c-97f2-c0140bd14e86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8540068c-3aaf-4895-aa6a-b02f2c4a271e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "806c3ce7-e801-41be-9a30-f23c8c1f5f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "783bc0e3-e7cf-434f-b148-02ee8ace9772",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bea25ca-8108-4d40-8436-4b1dd2bee86c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cca704f2-7154-49a8-ac28-3033663b5a5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe64181-f0fb-4484-bc15-d0e1aff561a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "009688fa-8c81-4d0b-b7df-ecf97c813f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f5837f5-f6c5-4bd3-a660-c1d04ee3624d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b6c040-8027-42b4-81df-dd702034ef1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0cf3d98-c531-4c60-8465-223f2633d86d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26daa9ae-067b-4d13-8ff3-7a4a63e9d0df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7860ba2e-974d-4d4e-9d5e-7578227f9c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da4d6f64-403b-491f-9de5-99b8790a3294",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee44db24-a661-461f-933a-fb6c00deae7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7e11fc9-0e96-4377-a535-b75fcd671bff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a167617-fb2e-4efc-a64d-42447c744234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "977583f5-b1b5-49f0-8909-8604f571ee47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8074dc2-caab-463d-b451-beece563b643",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c2b4f3-682f-4514-ba76-b8942e257d4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47ca63fe-ed5a-4135-9ff8-28a1c1dc67fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b98756e3-9143-4304-a373-53c3f6c0d401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d546633-1882-456e-b9fc-9befc1935aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a154ef90-2788-4865-86e4-aaae2a7a6919",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d90ef77a-dd82-4735-9385-2ddd55856616",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f714381c-c2e4-4f52-95c7-b39ab7969587"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92bd1b6-3573-46c5-8b7d-5b33396cca2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b825b0a5-a944-4f4f-961b-5ee7431a30fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f076d174-f9e2-40e2-9cda-98288da94e13",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c7e5eab-0d3e-4bac-92fc-9a84bc4089a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccc9bd8b-8b57-4aa2-bb9a-5e02555f2740"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5a4532-1371-48f0-a86a-21b81d18a9e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "423f41ca-4844-4db2-b5a7-91a1bb585040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb94730-c8c1-4891-b3f8-88ab6009335a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ad3633-82dc-43ed-bc8b-f009a98e4d4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b1f0225-109c-456c-80c7-3b02f6e4ba46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4f0a57-2eef-43bd-b65f-15639ecf5889",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "070ed4b8-06b0-475f-bd72-608afdd5b9de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84bc39a4-3457-4392-b893-d1dca93e1f4f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db45886f-072f-4278-af15-06248a6e0905",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce6e93cd-ef95-474f-bfb7-c2dfdc91fcc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f382ae64-ea41-4b5a-a2ad-b597e7821dc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6873e806-384d-4f4f-a8f6-c72c27e48b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f91b08c-3427-454f-9811-bddced5ed561",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d23eda-9936-42d3-8bea-bcb7d3d337d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e6a1513-c93e-4477-b90d-db0cb5be711e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a06af5-8ceb-4ea2-b196-4c75cd868be9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b828198f-7164-488b-a0e7-250c6b63f834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac1e79b-5965-46a1-86df-e61a342de159",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8305822d-53de-44ab-8b48-2bd2f091f8e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9db62277-4b7e-463f-8667-cfa68a096baa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e1f7ac-4116-4f17-a8e1-b037efa3e4ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "719a276b-4fd7-480a-a3cc-8bb798722322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091133b2-85ff-43a8-921a-775117f32291",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef3ed88-4fcd-4118-ab08-3651c40562fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a06d08a1-11da-4329-8580-64b56d78160d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23360463-f262-446a-a30d-2a1de20a62e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24aab0f7-1090-4f7d-856e-b1039913dca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f8b9d81-b5f0-4ca6-9e80-d5b1568896bd",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2345c474-057a-4109-97e6-39e0a8c9dce7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "217346d2-46f7-462d-9945-74f1c76626c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c2353f-df47-4e7c-ba85-05c0b0890165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c63ceee0-a9c8-4364-9770-3840b7b55256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936950ec-b7cd-4421-bdc8-dfd1f430e136",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27e1b231-4b18-4e6f-822b-19e6942f83e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa9e84d5-869b-49f8-8745-f3f6b8de533c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "815610ce-a009-4710-a48e-ba7b32aa9cef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca494e1f-806f-429a-bddf-36465450e974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee45436-f601-4e30-b399-4dd27b0e9f60",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3cc0753-de6e-40d0-990a-5ecdda8713e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aa186f6-6f4a-4463-bd21-971ec9348da8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab8835c-0f4c-4a16-8221-6405e7799f61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cde90f4-f8a2-412a-8cda-96494a714254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82421196-073b-45a7-ad0c-d2387fc3b2b0",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "456e7179-2587-4a18-82bf-34357cb3083f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "063e6142-3639-4fae-9928-3600818914dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3046ef28-5912-4f63-9992-93c06f62c9e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2231054d-5810-40c6-a11c-f28653dee114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d803b10-8581-4ddb-a503-d537440f4a18",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70960f6-cbf5-4861-a0e2-72344aeebe23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b57a191-e04d-4b0b-92c9-aabf027dfbc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "814cf73c-d8fa-4883-94a2-d051c502307f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "800b3c15-b2f5-4579-b100-1456c825243e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19eab584-5f8f-46e0-9b22-af64a39a3b7c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e83922aa-cf8a-4a90-882f-6c35db81f2a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecdf6f29-b3e3-40b4-9245-d2b74ef7fd0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed39218-575f-471e-9ac2-93fd80fe6adc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84555742-277e-4e5f-b647-64dde61fe923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e722b9fd-f9f2-4c2f-9d28-97d36d966986",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "423a69b1-db7c-4460-93e6-04eb40c3fc83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee4b1a3d-4fd7-4eb8-90e1-b7912cd05bb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0fede74-0f0d-4a6c-b9b6-abd313f8165b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8da693c8-6f08-44c4-9aa8-16b7afe6a87d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9849c37c-0e25-4b95-a848-58bb015c68f9",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de514861-2d6f-4c02-8ae9-4eb72f6b104d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4abc5421-bd27-4208-a615-aa254eb5281c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5325898-8b58-4bc2-8786-1278f03153c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "651efa76-6c8b-4a2a-b87f-ddec455ce665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0cadf1b-2601-48d6-85fc-d227fc65ada2",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3941bcb4-7d7e-496f-bb06-dcc48f51783f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e78f2855-32c5-4bf1-b0ff-2599d70ff41e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2430b5c-9693-4756-a728-0a4800723e0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dff15a7-22c0-43e6-bbbb-b3c71e5e53be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f4fd877-26ff-405c-ae00-bac24884be98",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d5a4f6-a0ae-4ba8-b4e9-25158d7c550a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04c0f091-e2a6-4b8f-beb4-e080730bbe54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "772bddba-ef08-4c99-bfd5-4028750ed7cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d7fdd99-b451-4e06-be16-925c080fc22c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5009ca09-d7e4-43a9-bd15-02745112bccb",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cdcf755-826e-465b-b133-af1277ef5a20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "750fcfe8-6379-4d99-b1b1-9d38d6fc6f1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0055623-a45c-4368-ad9d-a749ca84de48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "215cd438-6362-4b7c-854b-7fa35de0dedd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bade69b3-4e61-46b9-8de5-33b6a4d83188",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f159c5-9f80-43c8-bdf3-0708819c2334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40595b44-ceee-4535-8d14-5d08ceff4736"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfcbcf8c-b5e4-45f0-a5ce-2486bbac51dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d5f16a4-5ffe-4616-98ff-db711c9caaf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14692d9a-f381-4b8c-8be6-5bd7617a005d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "612ada97-9aca-4a4e-b6c6-e9249a8b14f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c35f964-9e7a-45e4-9b39-0624a6b3d916"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "746063be-bb18-41d0-a03f-8faceceb5c17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf1a8419-355a-42d9-ade7-8f276ea7ef66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eae00cb-a34b-4e3d-b23c-6783a5382cdd",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e78de9-4ae9-4182-b568-cac21f780c3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2581726-5985-4249-962f-72ef6d408d8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df64c3f8-c659-4755-a673-92cfb3a53d3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccf555af-92c4-4d9f-a28c-50b49850fe40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bcfc6e4-ff55-401e-b3a5-14583a85f319",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "032c40ba-8d9c-40cd-b91c-914db9409af9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "357c70e6-875f-4af6-98ee-c82589c2dea5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6dda99-e0ae-4dc6-ba8c-fd7ccc20f607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0c115a8-7401-4c24-a0b6-dfd5b2dff9a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b52b61-1d6c-4629-89a4-0d97ebda38bf",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1d7d68b-66e5-40f9-a2c1-9949a35b3831",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af4b2661-cd8a-4f2e-9de8-1439fbfe3abc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "301e35c7-d730-41ce-b390-6a0d545cd991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "253f06c7-671d-4a10-9766-13b854358c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d5d2a2-55ef-414c-8be5-303a677df734",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ddd96c3-c1cf-473c-8502-87fc6f0ba69a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d02d1abc-041e-4e26-b9bd-37156aeca62d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd9f6222-164c-49b1-a5f2-f4cab5dec478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cc442fe-3300-4755-b99e-b4e23e8a79e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d3be6c-eea9-4946-822f-f2bdfb87ea51",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d4ac62-8280-4277-94ae-1064aa353714",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa2b1ac8-d417-4f45-9601-241373274e64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7949914c-2cec-4d80-a840-4673d86c11d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38606c08-a0a1-404b-a514-bbe0e933698d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f29d49-af10-4dfb-85f1-ba59efdf7167",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c12106-0c62-4625-9b51-c82b932d9e01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dd5927f-8f90-49e2-83fd-2a51ebc707e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "798f4631-3b01-4ac5-a4f6-cd955544095e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c922d2cf-79f7-4623-a0eb-e7bc52a3b22b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e5ce77-7e03-4581-81ea-7fd408175284",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a381a95d-2adf-4f8c-bcc6-7455aabaa779",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b513947-2906-4a5a-a742-09ab7d9ce4fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ad7d1f-5590-4315-b8d1-cb30696d3065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b34307b7-321f-448d-af3c-2395a049076b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b201f4-5882-4eec-b924-5ca979bd5fcd",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ef8abe-6b51-4457-85a7-4e2fd97dfe3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c39d2b0e-48ec-4cfb-84ab-dc70e3a72177"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4abd2e-860c-4c2b-ac69-77ffdb65d52c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aae7170-aaac-4257-a11c-f5097ed09831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a0a1515-53c1-4d6b-b53e-ddb7f55727cc",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa1e255-dd70-4cce-8bf5-4762d58ccae4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2afb7832-d185-445f-9c6b-0847c02df62c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b279ca8e-6246-4fe6-9f1f-e7dfccbfc9c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3585a0a0-37ac-4970-9b2b-e90ac5c05026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c333088d-3bc8-49b8-a47b-485c4d1036b3",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca8d5ff-3617-473c-b7f8-135ab0824c11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f498e5f-affe-44b9-af6c-cb47b60f574b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "896aaf39-bcfb-4d3d-866b-4701eaa4e5e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "412c6eb8-3d21-45e1-8ded-8d26a560670a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c42b094-3ca0-4dd0-a998-766ba485c207",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b2d26e-3c36-4c96-8db8-2ba843567846",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2495907d-0f3d-4afe-bb81-e6fe9b90ac5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbee7f8d-a0cf-4bb1-83ba-a94b60c0bae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84ad119d-d6e9-4cba-96ae-7c97c3b8ad6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f12ccb-eba3-4ea9-989d-0836a714c64e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebeffa37-ca66-4429-bff7-9cc62b4338c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8339fab-0535-4054-aa97-f1735a9837ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd7f0f4-f963-4df4-a1b9-5ca019584ff8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "316fc796-0434-4511-b167-e0caa9b358a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be86d5b-578d-49b4-a3af-d7e8ac84bd76",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f01912bd-9199-4368-8bf2-8e8914579f6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a9ddf40-fe51-46ca-9dc5-ce1674392022"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f4c1eb-2d95-4be2-888b-1d879018c4c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be0473eb-19f6-47a8-b02f-25251a620ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0b57a23-460b-4409-b37d-9516f63cf3d5",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a133e718-81d1-4dc1-8f7c-36b5b4c5e44f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e51781f-b548-4b05-b0ba-28f2ec46d3e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fcdb892-41f1-4f2e-a340-4a63ce3532eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "147f5e62-0aab-48dd-a061-252dddea1330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e142f343-ecf4-437f-9cf3-bb2e08642da0",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c5b1ce7-8428-4465-9645-ef6954bda033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73637a46-6d8b-4271-a8b6-165bde70929d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be65502c-7998-47ef-8fb2-fe42d7453817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58774207-ce8e-4f7d-b5c0-217a3090b484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15878977-7f06-46ba-9381-c90ab6cf16d3",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a736ca1d-3547-40b5-a39d-4238f178da81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f35f01c8-efc9-4837-811e-93124c737344"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ef6d08-3c9c-482b-967d-32ad825f663a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4987bba6-5cbd-46eb-b2d0-519b89cfc434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc2ad628-f761-4496-8c18-950226b56f04",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a4c8fc-e48c-46d2-9ffb-c70bdb6613fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ead94bf-7303-4b25-bd52-f5fd4e562a90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fbec2d0-82a6-4647-b22b-bdcdf9a31d89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5b15097-4915-4144-bc05-f64c5a8d3d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a27bc16-2fb9-4d6e-8197-4f1c21ac5975",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2128c46-6d06-40a0-aaaa-60cea61c7873",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b30362cf-6c26-4f08-9239-f682e2a3189d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e004028-746c-44f0-b245-24b895c86db4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfec632c-2121-408c-9db9-996c2cb30f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea96673a-54c1-4657-a5fa-85d7412b8cbf",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a39629a8-3713-4869-8bfa-b0273106f494",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0df87308-5823-4f09-a289-d488a77c78e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c9c245b-f6b4-4b80-96ae-9e0726b172a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b8f49ff-1617-412f-9ef9-a242290cf227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f50f0c5c-7809-4e83-bdca-b83abcbcb9c5",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24136d6-33a3-4f90-8e07-99ff2ad1400e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33d730f3-5114-4333-8bab-416d7b96c233"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f82e710-6ab7-42ee-8aba-d0e36b6be956",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1c79847-e24d-4c5f-9448-ef8cd49f9cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29cd6a70-f9e5-4eff-ac49-7cb990b30aef",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2242026f-55e6-423b-b2e4-69a2d26bcee9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ada34f6-94cd-4ff6-8c0d-bae95e6d6a3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54de774c-586a-451f-a4b9-ece9dc20331e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "171977fc-78e7-4979-80ee-28d624adb722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f16b8de2-0847-4f39-868e-d48a8ffda610",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86e9b254-0001-45bb-9cf9-ede2a16b78b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cc6f485-2fe8-460e-8935-f360c7f9c67a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "755843d6-2e06-4124-b947-3690ccdb0cf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "971e03b1-6199-419e-9d66-00ee68d5ae32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b56f5c-d207-413d-854c-65179abeff6e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "375b8b46-486a-40dc-9861-c28e258c3367",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4577f3c8-f7d9-4421-9e84-64b19aa4f1d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "004434bf-2b0f-4dff-b684-2a7017857993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "177cbdbb-473d-4758-8f37-0ad8d7347a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba8d3a5-5db3-480d-8bac-8020227ee97c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b45a234-2f30-42c9-ba49-1a045cb68a59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b472f174-d43b-416e-9b41-f7fc3e3c3b7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f812628-d890-4e3d-9ce6-bc4add7ab1ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "279190d2-896f-4bfb-9cf7-dc910876115b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2725f250-ce2e-4b18-a297-87cbd636b275",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef16056-a725-431a-8991-717e2ce70b46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1011cdb-a1e8-4149-917a-212092c6858c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ab71b7-bffd-4e0b-9dba-e173fa68cc43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47efbab7-6dc7-42c3-bfaf-0629f357d8c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34306cdc-359c-4d54-81f4-236a270abc9c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b209dfe-2676-443a-887b-bf630e15f51c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5ee1b7c-907e-426c-b550-4862b59c5cb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db2a5a1-d0c2-45dd-b1a0-499ba4e3d6a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21abb680-3165-41b6-8f4c-ec82b58ec09d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158bae0b-ccfd-4a16-8225-188b5d75a27a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae98f9a-3e4f-4a5d-87f8-abee01138f99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7be33cb-8b92-4510-8f88-3ed1b0c08994"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55dc0c22-ffe2-48fd-a24b-7788dba4b3be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31ff0d5f-1ef8-475c-a441-2fc29617904c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc8b4f83-9a1d-4ea0-927e-d54fe7aec848",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbca98c0-c93e-4463-952d-479cc8c98bb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a08a4e1-49da-4bd7-9c83-89cb289ffdbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65817074-7952-40c9-8f37-59feb55e0c43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2183bbba-9d26-4787-857a-07387be572ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ae6387-8568-45a1-b720-d026db1bdf5a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5223324a-5545-4da3-9862-7bc58ef26cc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d424104-9662-41be-b036-b2eb6d77a0db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc7ffd8c-8514-4774-9422-4b138ef85180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae91ed10-dbf6-4c96-90df-1aeea1030685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d12ce0-271a-4e73-ba07-8b74612cca22",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76597753-7d67-4dcd-b11d-c0ca1a2b1434",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eaad8001-abca-4f68-b911-02c439f8bda7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06bc7689-4a48-4894-a53c-7662073d9542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00d7c941-5577-4de6-b271-06a6f53d05c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2652be9-52d8-41c4-941e-11919100ee2b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e59964-6560-4900-bca2-4a43bd4b44f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edeadaed-2734-4716-bbf7-559613480cb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a5b1976-8a03-4295-8ddf-c7dfe973286e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bffb24b3-47d4-4bf8-afa3-74b257932b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ed4816-c831-42c0-9263-6c20959b5607",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb4f171-105a-47a4-9b18-7e30569266d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e851439-6a48-4c72-be56-4403e95f1f11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece99a2f-9f56-46d0-9b2d-9af1421cac09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2014d243-c8ea-4aa9-b7f2-2f96072ef5cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d48d8103-3d59-4577-a11f-5daaa22cd4aa",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e71b46b-74a7-4d7f-8a0c-b34b62d829df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "234f15ed-d0ab-4a44-bb5f-952ab1afa6e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54147405-78df-46ae-8dc1-1f5e82ea2d03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a153baa-a362-409b-96a2-4de805ebe316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b971c10-3be0-4573-9e43-57bae3a115f7",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8867fb63-7488-454e-a668-2edbe14d3abf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dad07286-e99d-49a2-9e65-b2d605eedefe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0cd864f-7a7a-48c1-afe6-84545a448616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00eb6bdf-4427-42bf-94c3-f09631fe5073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d72ff1-2c76-4db3-9a1e-7ae5f3354220",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdda89e3-cd95-4848-86c8-28ad118e2f32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "163ca280-f8ca-438a-a812-044051d8ea9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b9aeb78-d96d-4fe2-9203-5af4e60977f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de5ec91e-b1f7-4a10-9673-b8cf7491e6ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b50a478-8532-43f7-9e2c-6c78957fb656",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91398141-a4f9-4335-be2e-38d3fd420dba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1307a8ab-0ee7-4061-a435-0cb0221f0b4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66398d42-99ec-4401-b140-244a0f09f7ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "342ea6ea-9d82-4ffc-a526-d4f7ae712c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6d00d3-c2ce-4061-ae5a-8bb076ef5f31",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c1a0fab-c2ad-42af-a3fa-0280ee36120c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50355821-e3de-471f-b0e7-e1abbe2e7977"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e17a1895-b7c2-4c3c-b41e-3383b9315d24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58735c23-5063-49f5-aae4-7ea51f69d88d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a1e9ab5-df00-4ce2-ac62-2a59f21a6417",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0476dfed-dca7-4305-9b67-183dea37a3da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb1e25dd-4af7-4edb-b83f-b9fa9a89f655"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65fc998b-4328-4ff8-89e3-4547ec7603ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a52c00e3-10a1-47a8-b440-bb22ea5d9ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cda0f69e-41ff-489b-a492-52e1e72d6ece",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f713b41-8d60-49c8-b1ac-08e6aad6e309",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca4952ea-6ad5-49fa-924c-2135b410b00b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08b1dcd-f64b-4817-ad0e-facb561e83b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e924b62-4448-4b54-bf46-e5c4edee28cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51d6338-faec-4a47-a4f8-03f63d4e1b45",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74aa3a74-941d-4c24-8b12-61fb508ade5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7165f6e-a51d-4256-b1dd-3ab0136506c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fccf4b1-3b22-45d9-980c-2846bc849915",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d19b25f-2221-4ed5-b163-ef1bf8d4581d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b24931-713c-469f-b4a6-062bd0e05a7b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db02e3f0-23c5-4297-8f88-b1cb769ec189",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d88e2bab-5029-4151-b5e0-b33485b92c92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11bb7030-f495-4950-8d45-14b6ff9014cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b763e8d-a7ed-4ac3-8088-43271b8b7f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ab042c-31fb-4dae-ba23-eb0d1d066e52",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e5dd976-863e-4596-a15a-56e829334b0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ee9ad4c-2738-409e-8059-5852b7a8259a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af81f57-e9e2-41df-a7c6-f05a49fd7796",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37c2a487-fa14-4e93-85f6-1a42cbc76367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649d1ba1-5a29-4ee6-aabe-690b0269fe98",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0bf4347-07da-4209-a04b-889ff22aead5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23b6de59-7709-4292-99fe-addd344819f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf9a9f5-1460-485d-ac65-2f110746c3c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "250e773c-ba59-456c-a39d-9e59a9e4f349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654c91e6-a9b8-463a-a444-817aa5e5b1c6",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94cf1c38-86b8-4f62-b30e-9ddd1641baff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19556ccb-4730-4089-b826-779579b18075"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0cc39b4-ee10-47cf-a16d-941551a736b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "715ec384-9215-41d5-a843-884176facffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d88f3164-1396-46bf-989e-d740d0090548",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880f96e1-bd81-4ee8-aa8d-9dad0f6298c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60620713-f5fc-4758-ae94-e9fe77dcb765"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b1f82b2-a167-496b-869e-ce9ab4dc9566",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0259ef83-6fec-48fb-92ad-4868afa19840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c93522b3-85a2-48ea-8bbb-9844ca3e463c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd0c9a8-020b-4ba9-ba76-032f258b41dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "baae891d-6afc-4142-8c7b-07d85722628d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd724b3b-9119-4916-a34a-10aea8fbcf77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29684339-6148-4910-9a0e-8a85bda577a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "498b4e01-018d-4dd2-a8a9-b6d363e015ef",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac8ae1b-f7a0-45d4-afc8-5d05daffa557",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa9f0be0-622d-40e1-b6c5-5abaeec1869c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c40e5dd5-bde0-46cb-a5e6-885355f5ad74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "580e225b-c8d1-42fc-9398-edb04f7cf1c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef6288d-f2a9-484c-871a-1dff2a1e2087",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf078753-e88f-4f72-94f0-f882316ba748",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f508361-eba6-45ba-bd7b-3fbd1359c5e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "459c51ce-47a4-4b43-a38b-a67d4a088f18",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3db1317a-19d8-494a-81b4-057cb04341d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3163a684-cfd4-482c-b9eb-19ceca65b1eb",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd3fd782-5638-478b-822a-1f2604a463c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45d98bb2-1a83-403b-a2c4-588ce1f90d10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "010ad066-827a-4211-8ee9-35de1d0c1c4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6389d6bb-4df2-433b-8abd-db2d3fd63051"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a7c77cad-3f6a-4686-b6df-ec1c7f15ae0c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "abdd2be9-b705-4588-afdd-7c0aeac896e9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "88c1eba7-7ac6-4ba0-8ea2-51892d9fb9b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e99b5e41-22bd-4c7c-ae48-7587983da237"
                    }
                  }
                ]
              },
              {
                "id": "91026851-a1b6-41dc-b319-74c74fc41481",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a8c46ea9-bee6-4a88-a294-6dff0be019ad",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3bd8856-ffd2-4b98-83af-d33184004ac4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e46a1a39-4d3d-4157-b3f9-6a143638189d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33aeb00-249c-4dfb-998b-0e199abc11d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3240067d-dcca-4148-9485-bad9fda54b55"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "98a7ea19-b3fd-4831-974a-2989c4d61f2c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19869d58-4c3f-4ee7-a2e4-bc0ecc0e0b15"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "259b70c7-eff1-486a-bf37-b64fa83dbe21",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24e222bc-7b14-410d-8010-ec084eb1196b"
                    }
                  }
                ]
              },
              {
                "id": "24943fed-a563-48bc-b7f5-83a7450daa92",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "1f5f1156-6dad-47af-b912-a987b31abcf0",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b3978d-8b18-42e2-b412-b7850d2eb990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "aa0b998b-acd1-48f2-b366-3886f731e9f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e0459f-dd0c-42e9-b5eb-cc014e65f450",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2682ab81-cbe5-4346-95f4-148e6ab53dec"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e9653d92-6fe4-4c4a-a3c4-a0f0d66de2bf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "79cdfe12-bf6d-4c58-ad5d-0d95ddbb7b5a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "77563204-fd9f-4398-b52f-1c0ebcd761e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c9317192-6763-4655-9b05-24c0ea9a9463"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92ddb121-8200-417b-82d5-81664a8649ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de106dcd-461c-40c9-8fa2-f9fd496fdb04"
                    }
                  }
                ]
              },
              {
                "id": "b508c25c-652e-489e-bc9c-dec71180101b",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5e65a07-e52f-43ed-8e6b-190fcc1bbc30",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c7d3d003-e8ff-449b-9061-ab024bcc137d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db6489c6-18b4-4987-a0f6-4898d4534147",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e91857a4-6591-4964-bebd-04bc13a268db"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "518289a5-f4f2-48df-9f14-57a175f66834",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "5509d123-fc67-4b30-8064-1e4bf9904fb9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "04e9d2f0-b7c5-48b8-b945-aa63213f5c4b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a8c13e9b-f040-4100-a37f-264ec7ca5b9e"
            }
          }
        ]
      },
      {
        "id": "2bec418f-ad50-4981-a489-2b2f4b8dceca",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "2e8831d8-3bb1-4ad0-9a41-2e4f2d89a920",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c2d0956b-e584-4dbd-aa67-3ea8f1a0d149",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2ba233f7-f55a-46a0-b5ce-78b2d441c1e9",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4de40db6-3969-42b7-8170-0071c1589a76",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "718a8e30-ecff-4c5c-a997-ae4c02ed3c01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "493175b2-64ec-4b77-96bb-b7fb77eba697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb0b814c-1024-430c-98de-b976d6909bbb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f81a72d-3d75-435c-b5aa-66a5a472e591",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5c2dc6b-d3f7-4b7b-8bee-7d9391dafd88"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "01440c58-0441-41c5-a353-2f974096ce1a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b264f7c8-1184-4ccd-a42c-0084b19e5e04"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "98b95dbe-c8cb-40c5-9725-58209ec4e441",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "071c3bfb-228b-4457-911b-1cb37de6e090"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e254f4f2-9157-4c74-9751-3802f94f3b3c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ee52aed8-4f6a-41b5-9efa-ec591c460b3c"
            }
          }
        ]
      },
      {
        "id": "5ebcd654-3a5b-4c86-bc4f-4a13140b2e05",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "8d9aa0a0-6aa3-45ac-908a-65640de5912e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dc29c449-ac55-45e5-b5e4-dafc9125923b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e38a3088-88c1-48b2-ae03-314b1d300f6e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "989a206c-bf2d-4eb8-9e0b-238e449e3bdd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00b126bc-c3e4-4df7-a999-32b10ba61f04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90213829-4662-4742-bf73-899ddd5c1dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de8c5e79-9d79-4986-be0d-1a28c3b3c677"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23dd900a-f2b4-4f7b-9ca2-f9931c600ccf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a581f16-6c26-4d2b-ba9e-0cd744388c5a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "08565e50-05c1-4f35-8e55-91fc90b7ea49",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "00f49586-d9cd-42e6-8b9a-34c1ed913276"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "79c89796-b6c4-4a32-bcdf-93add27a658b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0155bc45-1a07-410e-8bfb-7e66ff3bf8fe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c5eb8654-c650-456b-b653-b264bbaa01ef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fa940218-18b9-4d21-8cb4-54b141c51902"
            }
          }
        ]
      },
      {
        "id": "af227158-55f5-4c8f-b568-a52255616d88",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0eea9f2a-60b3-47aa-bb10-54e01fa41fa8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1041f7a1-5fe1-413f-9e87-ec6117e6b1f4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "43a09a0f-5a6e-4e20-8ee2-6bdcf64ad802",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e94c08d-0997-4c04-ad01-c4e6fda16a68",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69dbeb9e-3c62-4e3d-af68-87be0b3cc285"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9619f11-3938-440c-ab11-e65efa6a579a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0a0089cd-3396-4bfb-a77f-00f6cd0d7469"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4fccd3bf-849e-4dbb-b727-da1801d8603f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f50d7f8-0c99-4427-9ad2-2ba2296e9416"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "01746150-12a2-4976-b66e-3eb4f102f9fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2aa6c72f-3804-453b-b4b9-572728db975c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "95adc14e-4a5c-4a07-bdbf-fc8f96a336e9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7815bd9b-18c9-4e19-8a50-ae7600ae8115"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b83fa8cb-e8a3-4868-968a-ef2b84529b5c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3093f43f-974c-49d4-b3eb-c9d945f9b581"
            }
          }
        ]
      },
      {
        "id": "b6d91809-ba07-4ffa-9367-70948d1e77f4",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4e3561d2-d625-4e4a-9259-10ffeecfb7f8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ad53ebd4-713e-4b18-bbd3-93deee15afcc",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "53941ca6-98cb-4454-8fb7-bc41155b0eb4",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "394b732c-b1dd-445f-9fae-b74da5c307f6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8d912e17-4cc7-4f03-ad55-a7776137caf5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 96.90877192982454,
      "responseMin": 7,
      "responseMax": 8671,
      "responseSd": 554.5957137523934,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1700526974531,
      "completed": 1700527011689
    },
    "executions": [
      {
        "id": "00fc7a98-c2f9-4751-8a81-59479be228a0",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a109e34c-db82-49c1-ae32-3bf252b5403b",
          "httpRequestId": "c13b3b1a-69c7-4763-a449-73f465890297"
        },
        "item": {
          "id": "00fc7a98-c2f9-4751-8a81-59479be228a0",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "41484480-a11a-41c4-896d-c637083552d9",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 0
        }
      },
      {
        "id": "1354210f-2729-407d-bc7d-45f4e82cc0fe",
        "cursor": {
          "ref": "8ffe15b7-e58d-45ec-a455-966e0ebe8d40",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "80d8fadf-c59e-4a9d-989b-bfc71139df16"
        },
        "item": {
          "id": "1354210f-2729-407d-bc7d-45f4e82cc0fe",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "785357c7-77d7-429f-9a30-df46f66c1dce",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "fec327c7-775b-43c1-a53a-3115b6db60bc",
        "cursor": {
          "ref": "69fdeb4d-ffa8-480a-a765-63f1dd92ebf1",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "27627165-ab6b-4290-bfac-b0ff6049c8ce"
        },
        "item": {
          "id": "fec327c7-775b-43c1-a53a-3115b6db60bc",
          "name": "did_json"
        },
        "response": {
          "id": "e45665cf-dd6c-4908-8714-02a994899978",
          "status": "OK",
          "code": 200,
          "responseTime": 270,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a485f97-654a-4ebf-baad-eea918be7d8e",
        "cursor": {
          "ref": "5aef7616-1047-428e-8e88-c2c37d82e273",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0bf84c80-97a5-4836-929b-02866694198b"
        },
        "item": {
          "id": "7a485f97-654a-4ebf-baad-eea918be7d8e",
          "name": "did:invalid"
        },
        "response": {
          "id": "5bc41ae3-d1f4-4747-9ca1-55dc09bfc5c8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 643,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a485f97-654a-4ebf-baad-eea918be7d8e",
        "cursor": {
          "ref": "5aef7616-1047-428e-8e88-c2c37d82e273",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0bf84c80-97a5-4836-929b-02866694198b"
        },
        "item": {
          "id": "7a485f97-654a-4ebf-baad-eea918be7d8e",
          "name": "did:invalid"
        },
        "response": {
          "id": "5bc41ae3-d1f4-4747-9ca1-55dc09bfc5c8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 643,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf193a3-5197-4961-bde1-6ec25c70e0bd",
        "cursor": {
          "ref": "c1f38695-6a5b-4c93-9bbe-c490695f41e7",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "0b3d4d28-c823-4af7-9112-40e8b040f7d5"
        },
        "item": {
          "id": "0bf193a3-5197-4961-bde1-6ec25c70e0bd",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c4257cc2-69a1-4738-a84c-a10194f226c2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 34,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ecdaf7-399e-4ea6-86cd-74b69a85f6a4",
        "cursor": {
          "ref": "426fdbc4-7432-4c64-a7e1-9f294f9b8681",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "8b9faba7-507e-4dce-b1d3-195026b2cc64"
        },
        "item": {
          "id": "47ecdaf7-399e-4ea6-86cd-74b69a85f6a4",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "49978ebf-3d73-4339-a41b-15206b181954",
          "status": "Not Found",
          "code": 404,
          "responseTime": 44,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bfe1b65-ca40-4f46-9552-231fcfff1abc",
        "cursor": {
          "ref": "4dfa91ca-705d-4b2f-a616-91875e2fd5d8",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "5f9491cc-bd3f-477f-bee4-1ddcd21b9931"
        },
        "item": {
          "id": "2bfe1b65-ca40-4f46-9552-231fcfff1abc",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c734d65d-08fb-4f27-9efe-33c88a0e86a7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b38b8f1-bf43-4744-ad0a-8ddb7731bafb",
        "cursor": {
          "ref": "da1e8b7b-9148-4974-b42e-948f8344fcc1",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "757bec9e-3358-4147-aaef-ae81c8d12853"
        },
        "item": {
          "id": "2b38b8f1-bf43-4744-ad0a-8ddb7731bafb",
          "name": "identifiers"
        },
        "response": {
          "id": "00918585-0211-469f-9b4f-f12c1ed7dfb2",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "920c21b6-df20-4037-bb0e-22680cb51c0e",
        "cursor": {
          "ref": "93918ef6-f0fe-4ca9-88ee-5ae6c9d98dc4",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3f0d0631-c844-4dca-a218-6ae24c0977e3"
        },
        "item": {
          "id": "920c21b6-df20-4037-bb0e-22680cb51c0e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "dc98f13d-8cf0-4a38-8d8e-e70a3ad97e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ec2cc9-edb7-494f-b1ff-c4c3896c2647",
        "cursor": {
          "ref": "dc14a0e1-e95f-4c86-8d7a-b098f9be5610",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9fd7a11c-1556-446a-a0bc-afe8223325a5"
        },
        "item": {
          "id": "07ec2cc9-edb7-494f-b1ff-c4c3896c2647",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "5a9936b1-b830-4124-af89-54a631f78260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a343db-caa1-4f28-93b4-47512762442f",
        "cursor": {
          "ref": "716929ab-6647-4859-a7cd-e4e433c4fd3f",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9c140261-1c80-4c27-8cc5-d6f96de84bf2"
        },
        "item": {
          "id": "79a343db-caa1-4f28-93b4-47512762442f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "33d2fcb7-fc41-40df-bc2d-9fd4d17ca769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "612097af-02bb-4252-ae03-e9e0fbcb3940",
        "cursor": {
          "ref": "15098c87-8529-4250-a1c4-d9849d09e28f",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "15126df3-2e46-4d85-9855-055d015cd753"
        },
        "item": {
          "id": "612097af-02bb-4252-ae03-e9e0fbcb3940",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "300d83ce-499b-48f9-b797-76e89ebb48ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de3af3fc-4e43-493e-803c-a188e61159e8",
        "cursor": {
          "ref": "76927e2c-38dc-49fc-8764-a7b8d5a3b679",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "200ab2cb-617e-4a87-b217-3003494714c0"
        },
        "item": {
          "id": "de3af3fc-4e43-493e-803c-a188e61159e8",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "cdf93345-ecce-4172-91f0-8a7d26b081a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d5f31e-e02c-490e-98e8-93c367f866ad",
        "cursor": {
          "ref": "3ddb8089-b39b-41e8-9cee-25ab8d0425b5",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "14153c1d-55ba-44db-b2cd-deece502f9d2"
        },
        "item": {
          "id": "f1d5f31e-e02c-490e-98e8-93c367f866ad",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "64c799c5-9098-47d4-871d-e9c123ee74c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3368b88e-a58e-4b1e-8f09-45f1c8843252",
        "cursor": {
          "ref": "22c3b0de-14b2-4857-9e07-6590ec53c1e5",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9f786702-cde3-46fa-86db-797597bc6871"
        },
        "item": {
          "id": "3368b88e-a58e-4b1e-8f09-45f1c8843252",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e4402264-5b03-4be2-a3b5-e279233f95ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2d1ff8-4e44-4838-9174-6d68c37f5c2e",
        "cursor": {
          "ref": "2f176046-dbc8-4909-bf4b-e8cd2a690023",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "7f3b9f65-ba4d-4276-b891-cf02acd0e5e9"
        },
        "item": {
          "id": "8d2d1ff8-4e44-4838-9174-6d68c37f5c2e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "2357c00c-ba0d-4372-9c83-f0d4dccb7984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3872f6a-801a-4a48-92cb-711d2f319281",
        "cursor": {
          "ref": "4e8e79c1-d828-4a51-8943-8c84fbdf29b2",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e5659a95-6f38-4ae1-b88f-5b5aca9bdbd3"
        },
        "item": {
          "id": "f3872f6a-801a-4a48-92cb-711d2f319281",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "80cf459e-51b0-41c0-ae3b-d2f4c6d4dfc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fabdfc4-7ea0-4448-b664-398247309911",
        "cursor": {
          "ref": "20332a51-eb6a-46b5-830a-7383e0faa343",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "a880e0ea-f2d1-4665-8e71-802abd6192d9"
        },
        "item": {
          "id": "3fabdfc4-7ea0-4448-b664-398247309911",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "05fde896-06dc-4e2c-a87c-5238e07123ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e8398f8-9cd1-4721-a1e0-76cb992c5949",
        "cursor": {
          "ref": "aed41da2-ace6-4eaf-880c-b45770ce1303",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "cbaf446d-abd3-4d81-a1c4-256bfe77f824"
        },
        "item": {
          "id": "3e8398f8-9cd1-4721-a1e0-76cb992c5949",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "9f1ea2f0-25d6-4eb6-9f27-92ca148b86b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde7c31f-ffc2-47ee-836f-7ccf4aa627da",
        "cursor": {
          "ref": "49611cac-f123-48df-a73c-05d9dbc1d4d8",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8a70f0c4-f54b-4b20-a12b-a8f088a6c5d9"
        },
        "item": {
          "id": "dde7c31f-ffc2-47ee-836f-7ccf4aa627da",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b3bb3703-9d72-4f98-b218-0a6cb2907f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b2a6aa-58a5-4924-a4b8-e2d29b411f88",
        "cursor": {
          "ref": "22e33a38-9ef9-4e49-be3d-c7fd1db52371",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "7a41cca7-36b6-4af5-863e-ce265639ade5"
        },
        "item": {
          "id": "c5b2a6aa-58a5-4924-a4b8-e2d29b411f88",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "0f0bdec5-4985-4fd3-93a5-526dda583483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7ff29c-3353-4eb4-8d8d-00909eeda9f6",
        "cursor": {
          "ref": "381467a5-a7ed-4b05-b569-c01beb13ccb5",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "daa903a5-8b4b-429e-b4a6-80a8f3f9f019"
        },
        "item": {
          "id": "7a7ff29c-3353-4eb4-8d8d-00909eeda9f6",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "2aa0de93-6c37-4947-9d7c-fddf428e1cee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d36ace9a-be74-429c-9f73-8d42acd35505",
        "cursor": {
          "ref": "54c09a64-e380-49cb-90ff-b203b2a20275",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "23b325d7-1e98-4901-841a-22454b377aa5"
        },
        "item": {
          "id": "d36ace9a-be74-429c-9f73-8d42acd35505",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c9d583a5-96be-4356-8805-7bf170839488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed425a3-e08c-4b0a-a687-cb8b4f309d84",
        "cursor": {
          "ref": "436db4fd-cdf2-45ab-9338-aff4544fe64f",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a9e176d0-cf0f-450c-b6a0-41229f5a039e"
        },
        "item": {
          "id": "8ed425a3-e08c-4b0a-a687-cb8b4f309d84",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ab5d6de5-7756-4ef4-b2c9-0cf0531ed313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d77d15-6cde-4cb1-b299-c739879f01ce",
        "cursor": {
          "ref": "e278b435-cdcc-49b6-8138-04709dd092ba",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "571a965f-3c1f-43bd-b5b9-ca7b8438a03e"
        },
        "item": {
          "id": "17d77d15-6cde-4cb1-b299-c739879f01ce",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f72234de-ba2d-4a83-89c3-891de51115e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f325673f-5664-45fd-8e2a-1f5ea708568b",
        "cursor": {
          "ref": "c26f454b-e4d7-47c4-b88d-cdd139542d2b",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e6ab475e-1367-4c4f-a173-24fc749e159d"
        },
        "item": {
          "id": "f325673f-5664-45fd-8e2a-1f5ea708568b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "aa7e18e3-0238-4c7c-9392-863b86e7aea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a4c67d-bbc7-4620-ba94-1339aa7074be",
        "cursor": {
          "ref": "a14c7437-6819-4014-b230-b732dd8444b5",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "4805ca04-0468-42d2-8c3e-a4a55728cf0d"
        },
        "item": {
          "id": "e7a4c67d-bbc7-4620-ba94-1339aa7074be",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "2f01069f-7f5c-48f0-a92f-aec1e269f896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ded105-01f7-473e-a122-dbad5211934b",
        "cursor": {
          "ref": "00bfb08d-713b-4d25-92c7-62bb5476edf4",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "29429d18-e6c2-48c0-a0e1-cf9e4c242c65"
        },
        "item": {
          "id": "f2ded105-01f7-473e-a122-dbad5211934b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6bc2e344-27b2-4d27-a194-9e05ee9a0f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed8d0e6d-a371-4349-b8e5-ebff59eb8d1a",
        "cursor": {
          "ref": "813f9988-84a0-4323-b673-a9bc469bcaf3",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "921d73dd-6768-409d-b452-afdc0f7d78ea"
        },
        "item": {
          "id": "ed8d0e6d-a371-4349-b8e5-ebff59eb8d1a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "32bd1ceb-9996-4c82-9b7e-9085b3851f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca60431d-065b-4156-ac51-9bc134b2b550",
        "cursor": {
          "ref": "6a865583-12c0-4094-bb8e-0bb09cb70804",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5a9c834a-fdb6-4dde-bebc-1a8caddbe649"
        },
        "item": {
          "id": "ca60431d-065b-4156-ac51-9bc134b2b550",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "10aa39f2-7d90-452c-be3f-c2b5326ae2ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db8838c-ddbf-4fe7-9968-2e607f29055e",
        "cursor": {
          "ref": "30831c2e-1196-4681-8144-f9b63083cfae",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "018f15f5-edac-4c28-8968-841407e16aa2"
        },
        "item": {
          "id": "5db8838c-ddbf-4fe7-9968-2e607f29055e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ba66b670-7774-4b30-a105-4fdfd264126b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "942df034-3cec-4a57-ac55-00a3a5c653e2",
        "cursor": {
          "ref": "3e3608c5-ed2d-4ca6-9a10-5f35daa5e3b8",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a111bca8-b7ec-44a1-86e6-406421620d79"
        },
        "item": {
          "id": "942df034-3cec-4a57-ac55-00a3a5c653e2",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4760219d-f8b6-432d-82a5-7c3e5ef6f142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba4d77b-4058-4136-bbfc-ed55228aaa1a",
        "cursor": {
          "ref": "f3e1abd2-34db-4ccb-96fa-6dd859ab78ea",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "257fce0e-6527-44a8-beb7-d4f2d56f435a"
        },
        "item": {
          "id": "2ba4d77b-4058-4136-bbfc-ed55228aaa1a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "48bdd7b8-3075-4829-8107-d3f454d6ab03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929a1fd7-b6a1-4882-98bd-efb40e96d48a",
        "cursor": {
          "ref": "fbf755be-9e1f-4156-8bb4-a78f63d28280",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "af1ed134-958e-445b-a53d-1bbacbf15d66"
        },
        "item": {
          "id": "929a1fd7-b6a1-4882-98bd-efb40e96d48a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "44b3958b-bc72-409a-bc71-1cc6b4912c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30b011a-1363-42fd-8605-394107b7038b",
        "cursor": {
          "ref": "9721ecc7-fb7e-48f9-bde8-5b13cee262b3",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b29b6caa-2aac-494a-8d1e-b1583ab208d5"
        },
        "item": {
          "id": "b30b011a-1363-42fd-8605-394107b7038b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "fe2a613d-4d8b-46d8-b0f9-1e2c176b25fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5199ded5-79a2-49ff-affb-8e1bec5b9408",
        "cursor": {
          "ref": "fd0d6dbf-9b82-4f50-9628-775e5bf0c221",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e7592b34-6fe2-45f3-8d53-e03e2b63681b"
        },
        "item": {
          "id": "5199ded5-79a2-49ff-affb-8e1bec5b9408",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ae430752-e1b9-4e69-8f6c-f328cb343a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f781b78c-8945-490f-ad62-79c031e3f98b",
        "cursor": {
          "ref": "1192e9a3-a87b-47eb-9836-2835fe1632ed",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "8af88a65-36a7-42b2-a204-1d52457abef2"
        },
        "item": {
          "id": "f781b78c-8945-490f-ad62-79c031e3f98b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "5edcc93d-0622-4a56-ae2b-878264eafdb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308824ec-e761-40bf-97ac-a90b2f542494",
        "cursor": {
          "ref": "b509ca3a-b655-4384-8351-fb66434d8f81",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d6269b97-fb5a-4560-8b63-b5670e7af5e4"
        },
        "item": {
          "id": "308824ec-e761-40bf-97ac-a90b2f542494",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "10d3bbab-3be5-4f16-ba58-e5fc03d61636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db8bc74-79c3-4eb7-b5fb-78c38b3c6aec",
        "cursor": {
          "ref": "3fdd689f-27b3-46f4-b188-a20336416cd1",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8c110b8a-56af-4ae5-bf4c-e200323cdc44"
        },
        "item": {
          "id": "0db8bc74-79c3-4eb7-b5fb-78c38b3c6aec",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "2226373f-5f4a-4736-bba0-219741716fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5082faf3-56f7-40d6-b41c-9a6493218ebc",
        "cursor": {
          "ref": "c132c45a-9edb-49d8-a31d-27e66d74a939",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "5cc5547f-cc72-4e40-8852-ad81a6f15598"
        },
        "item": {
          "id": "5082faf3-56f7-40d6-b41c-9a6493218ebc",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "65f25ad2-c528-4c57-9f53-25c7546f6013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01662453-6f96-48de-b056-74923d508c47",
        "cursor": {
          "ref": "35b15cb2-cc45-423c-8b26-e53ae4e86a5d",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "486af01b-29c4-4648-af29-adc628a16ae1"
        },
        "item": {
          "id": "01662453-6f96-48de-b056-74923d508c47",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "9c3007bb-6fc9-4123-bd12-d51767b39857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd8c21f-35ab-45c7-b0b1-0c2c8b197269",
        "cursor": {
          "ref": "97c85701-a47b-45f7-b40c-b190a8e27c6e",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d908fcff-e904-48fc-9cd3-f8409d4469a1"
        },
        "item": {
          "id": "6bd8c21f-35ab-45c7-b0b1-0c2c8b197269",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2f18182b-132b-45c5-a943-67a1490774e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a8de6c-2a8e-411f-9daf-4c79710b3bac",
        "cursor": {
          "ref": "463a3161-0ed8-4574-8649-a347dd28777c",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "63738ff9-bc2b-4c73-8206-0627b2848684"
        },
        "item": {
          "id": "50a8de6c-2a8e-411f-9daf-4c79710b3bac",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e80dd2cd-6e44-44e6-bae6-8eba8ec43d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b2dde48-0686-4a19-8d5e-dcb7d4416715",
        "cursor": {
          "ref": "23eacead-a48e-4854-b108-5db939e229d3",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "63dd9942-0eeb-4c72-ad8d-4e9d90b82e48"
        },
        "item": {
          "id": "0b2dde48-0686-4a19-8d5e-dcb7d4416715",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ab914b86-4026-4215-8bbd-658e4591b26c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8eb24ac-2dca-40ee-a6f3-7c57476763e5",
        "cursor": {
          "ref": "3b3dcbf3-f077-48ac-8f0c-b45b15fbcd82",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "1ffc18c1-af53-4879-96cd-323b42dca4a0"
        },
        "item": {
          "id": "a8eb24ac-2dca-40ee-a6f3-7c57476763e5",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e6794918-8265-47f9-a224-68b702cc68b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afeeb9d9-058c-47d5-9bbf-1947980002e3",
        "cursor": {
          "ref": "4ac0eb7c-faad-4276-a77d-6ea138119971",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "33ff183d-eaa0-423b-a6ff-f6ee2b66ba31"
        },
        "item": {
          "id": "afeeb9d9-058c-47d5-9bbf-1947980002e3",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a2a5b1b5-3b58-4357-aff9-75eddedf146b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "644fea62-19ba-4f22-bef3-d2f37cdf72b9",
        "cursor": {
          "ref": "91f005a4-3ed6-4980-9955-81909a3b22bc",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "3321b09b-3f27-44e2-84fe-a87d56bde6c2"
        },
        "item": {
          "id": "644fea62-19ba-4f22-bef3-d2f37cdf72b9",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e7b2cb16-371b-4787-b9f6-b85bcb10bd63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a675d733-e5de-41ac-a42e-35cbc863fcd8",
        "cursor": {
          "ref": "20350295-e591-4778-8e15-5c71592c5e50",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0bb4fda8-d0d8-4c2d-9c6e-dad9d600a1d1"
        },
        "item": {
          "id": "a675d733-e5de-41ac-a42e-35cbc863fcd8",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9b9dd67c-0e88-4f2e-b8a3-c9b7b8752b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962ab06d-72dc-407f-8a0c-9089e868f79a",
        "cursor": {
          "ref": "db7366e0-8d20-46fe-a7df-9395650b860c",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "b5fe1e9f-fd6a-416d-86a2-a2b69c8a2300"
        },
        "item": {
          "id": "962ab06d-72dc-407f-8a0c-9089e868f79a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "51716887-7bfb-4645-a982-e483b62227d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f3f157-0880-40df-b750-215a6af6aab6",
        "cursor": {
          "ref": "0a85c1ce-e4aa-4f09-8c22-55b28155ed46",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6c35e057-77fd-4ccc-af88-11cb27a15366"
        },
        "item": {
          "id": "02f3f157-0880-40df-b750-215a6af6aab6",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "876a8a55-1e08-44c7-9e9e-3da21fed620c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd3f376-c398-48a7-90e0-a22cb93073c5",
        "cursor": {
          "ref": "838ad139-9b3e-41ad-b7ac-b91f718a03a2",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ffb01c85-2cc6-4e48-b79c-2ac3e25e4528"
        },
        "item": {
          "id": "8cd3f376-c398-48a7-90e0-a22cb93073c5",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3ae45ac0-9c79-41f8-85af-458aefc391cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f32ddf1-350c-4cb2-84a6-539870bc64c4",
        "cursor": {
          "ref": "98dd0d4d-1f71-4901-9591-51103a5044d1",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3751f6a7-662a-48ab-be9a-e92de43139a2"
        },
        "item": {
          "id": "3f32ddf1-350c-4cb2-84a6-539870bc64c4",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "524087c2-345b-4f2d-a144-e41a2dc6922a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee5dd5e-ab67-4683-881a-b3c27463eacc",
        "cursor": {
          "ref": "8dfb869b-781f-4e3a-9976-f03bd047de93",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "22863367-6643-408d-aa48-6b7574c67f5c"
        },
        "item": {
          "id": "eee5dd5e-ab67-4683-881a-b3c27463eacc",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "415c0385-07b8-490d-a69b-4b9a379eb7a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea3771e-ab1e-4813-a629-250a348dafce",
        "cursor": {
          "ref": "cadf68fe-e133-46dd-8a0d-79771a11ebba",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "516bd9ff-167a-4747-b1a1-012cff39e742"
        },
        "item": {
          "id": "0ea3771e-ab1e-4813-a629-250a348dafce",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "00606a01-09bf-4ee0-95df-e064f18b4fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c87dcad-50fc-4c9b-91af-323b51b5e070",
        "cursor": {
          "ref": "6b780efc-b27b-47d5-bdee-012f72460d6d",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "65f8c998-39b5-41e7-8a41-da516674dfe6"
        },
        "item": {
          "id": "0c87dcad-50fc-4c9b-91af-323b51b5e070",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d4a98382-da98-4abf-890c-0a8c8d78bf38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f899dd-620d-4a59-9dc6-ccd8a3beacb3",
        "cursor": {
          "ref": "8ed7651b-0789-46dc-9718-257dbc562c51",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4d0ecaea-a02f-4c78-8d40-2dfcf12c3759"
        },
        "item": {
          "id": "05f899dd-620d-4a59-9dc6-ccd8a3beacb3",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "3acc8b74-d0cf-434d-a035-66b401065f60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61eb1f4a-24ba-4261-a934-cd7855e295ee",
        "cursor": {
          "ref": "5274503c-8acf-42f9-b276-af855738b4a1",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "78190080-0d0f-4650-8aa4-da1640e023c9"
        },
        "item": {
          "id": "61eb1f4a-24ba-4261-a934-cd7855e295ee",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "6dd2f857-5bde-4a6d-8016-2a16ee2942e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ba49eb-06b8-4d85-8000-5237f11478e0",
        "cursor": {
          "ref": "a8779b00-d2c6-4496-aa7b-f331a2869d78",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "38e84e67-f210-4f4b-968f-898f678c269d"
        },
        "item": {
          "id": "65ba49eb-06b8-4d85-8000-5237f11478e0",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "731387b9-596a-48df-8d3c-12bb29ab66de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef2199b3-4774-4273-8b77-c4beaf0bc8a9",
        "cursor": {
          "ref": "b3518a1b-ef59-4096-802e-e2c015f5d9d7",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "45ae4bdb-e24f-411c-8f51-4712fda9a756"
        },
        "item": {
          "id": "ef2199b3-4774-4273-8b77-c4beaf0bc8a9",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8b4f6c15-3b9c-48eb-ae41-ebacebda31e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c6bf94-781d-4c16-964f-c97617aac3cb",
        "cursor": {
          "ref": "5b323831-5aa1-42e4-b1cc-6e9ba255d890",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "327165b2-0a04-470d-94e4-4bcd4ed66940"
        },
        "item": {
          "id": "97c6bf94-781d-4c16-964f-c97617aac3cb",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "7b108f20-6d5f-46eb-b94f-48771af81322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab426b0-c024-4383-9281-9e7932504245",
        "cursor": {
          "ref": "b5209cb4-b951-4b7f-b784-9d4d879f44a9",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "62e1583a-1222-44c0-9800-f5a164482903"
        },
        "item": {
          "id": "6ab426b0-c024-4383-9281-9e7932504245",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "cd0e7be9-214a-478d-9426-b4c52a8f13a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b2d3c4-ed67-401c-ac87-bdc8e8c0bc41",
        "cursor": {
          "ref": "41d285fb-f37b-487c-8947-48dfa5881a87",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c1d45881-bf9a-4802-b4d1-4f6416baa48c"
        },
        "item": {
          "id": "60b2d3c4-ed67-401c-ac87-bdc8e8c0bc41",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "987f4da4-dc59-410e-b6a7-940fa3ef29e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8066d6-3249-4026-9ceb-4d458b8fb934",
        "cursor": {
          "ref": "535dfcc5-6dec-41fc-9268-2dcdb747e970",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ce56fc81-ed67-44a0-87bf-bec67c356304"
        },
        "item": {
          "id": "5a8066d6-3249-4026-9ceb-4d458b8fb934",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9b28bc66-e326-400d-9643-a537c85752a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3efb675e-8175-4a57-84ed-52d3c95488dd",
        "cursor": {
          "ref": "37583dd1-aaa6-4f22-af72-e3587f9aeaf2",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8940b788-7b13-4878-9435-60187043add5"
        },
        "item": {
          "id": "3efb675e-8175-4a57-84ed-52d3c95488dd",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "4820101c-30ab-4a20-9999-9e1540f1c170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad8108f6-b85b-4c0d-a78f-0dbaf23fde00",
        "cursor": {
          "ref": "c5441e83-09f2-4d1c-9460-22b271867a84",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a6ca6057-aa79-4f16-b20a-0e9301baf209"
        },
        "item": {
          "id": "ad8108f6-b85b-4c0d-a78f-0dbaf23fde00",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d3564794-d559-4e23-9b32-992187b144e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec6f78b-2503-4ca3-81de-340a50e17126",
        "cursor": {
          "ref": "22ab1218-96a6-4c6c-942a-3eb494aad149",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e1c62a4b-effc-46f0-98dc-070a38a0b8f7"
        },
        "item": {
          "id": "2ec6f78b-2503-4ca3-81de-340a50e17126",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "9bfeda8a-c110-4fef-b039-76f65385c4ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dae03d7-ecdf-44bd-96a9-9c633b147408",
        "cursor": {
          "ref": "4005bef5-ae9f-4835-ac16-0fcd74435425",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b5cbee43-de47-4e80-9624-2745e4de02b2"
        },
        "item": {
          "id": "4dae03d7-ecdf-44bd-96a9-9c633b147408",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "0ad6bc41-8254-4c96-aff7-cfb15b78fa39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecbb2ae9-ec38-4065-8244-e01043be626c",
        "cursor": {
          "ref": "e5519a7f-ad56-4eeb-9af1-c889d5d5bdfd",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "4d64295b-14be-4e16-8e76-0fbd2c872c18"
        },
        "item": {
          "id": "ecbb2ae9-ec38-4065-8244-e01043be626c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "9e0a1182-3994-4e1e-8a01-65ed78f1795f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b47d351-1e7b-46b0-8b25-572955ea5d63",
        "cursor": {
          "ref": "9682c5e7-59db-433f-9d94-67532abc1882",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "522e2ec6-314b-4220-9f5e-dfd83c87cd86"
        },
        "item": {
          "id": "5b47d351-1e7b-46b0-8b25-572955ea5d63",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b76d4e9b-9aa1-42ef-a04a-032fc23c94bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7467469b-f449-47cc-9d21-c6c6a033c80c",
        "cursor": {
          "ref": "9bec2a04-2502-4ba5-8ec6-54afeed5db8a",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "54022b53-5736-43b7-8bed-46663e5a6a43"
        },
        "item": {
          "id": "7467469b-f449-47cc-9d21-c6c6a033c80c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a3114e69-760f-4ab7-b884-b033da7c10e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38a20a9-e40c-4abf-962d-254d4073a6ae",
        "cursor": {
          "ref": "daaa96aa-8c89-4600-9992-122287a303e7",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "011837cd-0943-485b-967e-37fb83e1cea3"
        },
        "item": {
          "id": "a38a20a9-e40c-4abf-962d-254d4073a6ae",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "630ecbc4-96a5-491e-9f02-6f4700d229b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03571460-d79a-45e6-9c88-d910a7e0c0b9",
        "cursor": {
          "ref": "8553449f-412b-4514-b233-cdb90fbc1328",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "4bd28ddc-a65f-46ed-95c3-7ba4c3b9bad2"
        },
        "item": {
          "id": "03571460-d79a-45e6-9c88-d910a7e0c0b9",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "7c511861-76c7-467f-ad4e-cd6defa43ad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6664bfae-90ef-48f6-9702-b84ea86cdecf",
        "cursor": {
          "ref": "7363070b-c9c5-493d-9946-c902c5d4e92a",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6b427467-e7ed-419e-823b-0c3e5c8e2bc3"
        },
        "item": {
          "id": "6664bfae-90ef-48f6-9702-b84ea86cdecf",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6a026637-d484-472e-b495-4ef30624e3c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72424bab-78b7-4c50-a134-14b8e8e17024",
        "cursor": {
          "ref": "3ee4a3fd-05a2-4f36-83e9-f6b9ebab6067",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "581757d5-2994-4350-b29b-05dc8b53a323"
        },
        "item": {
          "id": "72424bab-78b7-4c50-a134-14b8e8e17024",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "1544d8b2-79af-463b-a4a9-d6f5f095daa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d13c0297-c2bd-4910-9902-743c182e0484",
        "cursor": {
          "ref": "0c8b95ab-9fae-4e7c-b9b1-48f550a45f1d",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e8e328d1-127f-4226-ae49-3d9edf2c9bfc"
        },
        "item": {
          "id": "d13c0297-c2bd-4910-9902-743c182e0484",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f517bc4f-5a06-456e-a89e-38eed9e25ecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa9c943-04fd-4441-b5f1-bb351cd74668",
        "cursor": {
          "ref": "87235fcf-41bf-4fa0-a05e-606b21320c1d",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "4dd454bb-0cfc-4479-a5de-054e2d5cc93a"
        },
        "item": {
          "id": "0fa9c943-04fd-4441-b5f1-bb351cd74668",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "293eb6dd-e8cd-445a-a332-c31ca81db761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "574f8796-670f-4a59-81b5-c66c1189dced",
        "cursor": {
          "ref": "0dc4529f-3397-448f-931d-2db50fc51825",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "92dc7041-655c-443d-a685-f901a629502f"
        },
        "item": {
          "id": "574f8796-670f-4a59-81b5-c66c1189dced",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "812ab069-15b4-4bfb-be3b-9ba01209e036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bfa3a29-37e5-4813-adcb-9bc04d12984e",
        "cursor": {
          "ref": "8a703cff-1358-44ca-9e71-4124261fcedb",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "cfdd036a-f659-458e-9459-5ca7846a3926"
        },
        "item": {
          "id": "4bfa3a29-37e5-4813-adcb-9bc04d12984e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "5646a89d-00c1-41ec-b810-530634976ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce0c652a-2a35-46d5-88c0-f02ad3d16a7c",
        "cursor": {
          "ref": "58438fc1-5a47-4614-8aeb-0bfc0ee671f8",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5d84a0e0-2c88-4790-a3e8-f805fc48d0f7"
        },
        "item": {
          "id": "ce0c652a-2a35-46d5-88c0-f02ad3d16a7c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "dd95cb3b-aea6-475f-8ac5-f6d0bf9e8395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b4a190-783d-452c-8d43-fb2fc59fe025",
        "cursor": {
          "ref": "399c94d9-fe3b-4673-8e6c-82508e615495",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "6d60d4c5-f4f8-4f58-9a99-959532039f32"
        },
        "item": {
          "id": "f5b4a190-783d-452c-8d43-fb2fc59fe025",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "15822f9e-0070-47ed-a8e0-2d9473b4d317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a9f9411-1c43-4ac4-a458-e1239824f5eb",
        "cursor": {
          "ref": "8cee75b1-b9ab-4127-bed2-67f1b5ce59b3",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "22bf67a0-0df8-4441-aa8d-9db5a1c55266"
        },
        "item": {
          "id": "7a9f9411-1c43-4ac4-a458-e1239824f5eb",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "004c2d60-33af-4825-af8f-e9e28de8d5f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf384e5c-a4b7-46ed-968a-79cdea4858a7",
        "cursor": {
          "ref": "4258191b-e61b-4c89-b470-700f424e2924",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d21c7ccf-095c-4615-86b8-a634e8a8ef52"
        },
        "item": {
          "id": "bf384e5c-a4b7-46ed-968a-79cdea4858a7",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "350134e1-0e6e-4077-b10f-326195ef746f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b073c4-54ce-4287-bfb3-b8595710e340",
        "cursor": {
          "ref": "3f4d31f4-9abd-4deb-bef3-8094cb5992ec",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "61bcd66c-8b9d-4787-ac1a-41f4cb7bcf63"
        },
        "item": {
          "id": "09b073c4-54ce-4287-bfb3-b8595710e340",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2f8a3249-93a7-4305-a860-d535ee32cd8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62da1e02-66ad-4045-a961-3a797a1f2cd8",
        "cursor": {
          "ref": "2201d943-e09f-4776-8d7b-e9f8b4e50a67",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0ff8de44-78e4-47fd-8b95-6495ba92724f"
        },
        "item": {
          "id": "62da1e02-66ad-4045-a961-3a797a1f2cd8",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a442d00b-cec5-4c41-9a8a-2bc903288481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bab2815-323a-4550-a81c-579eba64edfd",
        "cursor": {
          "ref": "86d69203-d52b-412b-8466-ad287a213f03",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b27c90a8-f424-4a11-9ceb-56e654997e32"
        },
        "item": {
          "id": "2bab2815-323a-4550-a81c-579eba64edfd",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1ae5d650-a5fd-47fb-b90a-d83d9510150e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd7622f-07c4-4234-81c2-af813386d779",
        "cursor": {
          "ref": "c0365299-33e7-4ad6-b8c2-1ab5065cd5f9",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ef912c48-b976-4a54-9c7b-c3ad8030e000"
        },
        "item": {
          "id": "2bd7622f-07c4-4234-81c2-af813386d779",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "037ebb64-2ded-4c30-bec2-a3fa282e0422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "507b4076-2f30-481f-a40c-e22f428b043f",
        "cursor": {
          "ref": "3845124e-eaf4-490b-a029-c9142845a403",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "14a33e7e-110d-4569-8a20-f51f32a6c6f3"
        },
        "item": {
          "id": "507b4076-2f30-481f-a40c-e22f428b043f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c1136c42-60fc-43e2-b834-4c6a89a24a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a3bcaf9-f588-4977-ab55-0560e60c506d",
        "cursor": {
          "ref": "1db74340-a887-47b9-ae5a-0f86f440507e",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "205abf68-0d16-450b-8735-7ecffb4ee10c"
        },
        "item": {
          "id": "1a3bcaf9-f588-4977-ab55-0560e60c506d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "27646fc7-104b-4b10-9049-86431c7ffbfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba39e496-56f7-4c6e-9636-1953cbc477f6",
        "cursor": {
          "ref": "d5c4e4b9-8ec8-4416-9bb6-9a4da84cb981",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "94344850-9cac-4cf2-bcc3-e5e14d806b3e"
        },
        "item": {
          "id": "ba39e496-56f7-4c6e-9636-1953cbc477f6",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "0897a42a-9df4-44b9-b1a0-edc89ea658cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8848646-7631-4928-81c7-ad5e1ec260cb",
        "cursor": {
          "ref": "7df91531-63bc-4375-995b-7dac6499816b",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "46f96d03-1927-4a6a-b307-f67cc82cd13f"
        },
        "item": {
          "id": "d8848646-7631-4928-81c7-ad5e1ec260cb",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "4c65f479-5daf-4bde-a3d9-9a58376e02ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be381e56-7d1e-4bd7-8194-d5fac254111c",
        "cursor": {
          "ref": "c444391d-b581-4b87-aa71-354d90601c38",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "45b59f6f-428f-4541-8b36-11213dd2aea1"
        },
        "item": {
          "id": "be381e56-7d1e-4bd7-8194-d5fac254111c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f72380a0-a0bc-46a6-917d-f62d20bed74b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca1d79f9-2fa9-4a7d-8429-329dabbe9ee0",
        "cursor": {
          "ref": "3edc721c-4fc4-4816-9e3f-cf43d346a13b",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "777ca3a0-92bd-4850-a3e5-228374c118ed"
        },
        "item": {
          "id": "ca1d79f9-2fa9-4a7d-8429-329dabbe9ee0",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "cbec4f71-5e4d-44b8-85fc-918467fa0470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddb216ff-c419-413d-9320-1a9b06334253",
        "cursor": {
          "ref": "54eacc4f-7a35-422e-a210-0bb0f9a4b5b6",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1093aa7d-dab6-4988-981a-11d19fca571a"
        },
        "item": {
          "id": "ddb216ff-c419-413d-9320-1a9b06334253",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2da89b57-e34c-4863-9b33-f84baefe34b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa7afdf1-543f-4dc2-8bb6-625cee343244",
        "cursor": {
          "ref": "5696b0a4-09f7-4ae5-847d-8066c188c8bd",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c83885f7-c11f-47de-a310-b15cfce7b2d5"
        },
        "item": {
          "id": "fa7afdf1-543f-4dc2-8bb6-625cee343244",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b8f6586a-982c-449a-a507-661ca6bed5ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1fc8991-2532-4c6b-8218-7aed84fd45a0",
        "cursor": {
          "ref": "4b4969cd-e666-43fd-93c5-10356355351a",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a939817d-8158-44d3-8fdd-91e851536534"
        },
        "item": {
          "id": "c1fc8991-2532-4c6b-8218-7aed84fd45a0",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "657ed555-4b94-4538-b4af-fae7a957c7b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f225a2-fb77-45c0-992b-2cba0d4a0a86",
        "cursor": {
          "ref": "efb0c827-f7c6-46c1-9812-3b3e50f107cb",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "cafd8bfc-a004-4b7e-a4ae-3c13c1118802"
        },
        "item": {
          "id": "22f225a2-fb77-45c0-992b-2cba0d4a0a86",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "462b6fde-e7b9-496e-92d4-c7e1c4ff081c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf4c1bf1-5dd1-4d39-a3a5-6238c90d928e",
        "cursor": {
          "ref": "823b3e01-4ef4-453c-8fac-b9910274870f",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ab250fab-6fcf-4944-a803-4748589052f4"
        },
        "item": {
          "id": "cf4c1bf1-5dd1-4d39-a3a5-6238c90d928e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "deb75974-8ac4-48b7-984e-7cc4590b3634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b8fa25-a6b3-4078-9d38-223b81bb60f0",
        "cursor": {
          "ref": "ee36d52a-9f56-4b3f-9521-668db6615c2f",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ea5d6421-ff43-4f18-8a1e-03dab4c60771"
        },
        "item": {
          "id": "75b8fa25-a6b3-4078-9d38-223b81bb60f0",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "586ac164-73f9-4ab6-9b5b-2911dec6086e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f97ff7-a36f-4b39-a9a7-2e00d333a7ba",
        "cursor": {
          "ref": "9ded3102-341c-4323-88b9-956e97efe3b0",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "802859b7-842f-4127-b468-3d7dab1ff873"
        },
        "item": {
          "id": "83f97ff7-a36f-4b39-a9a7-2e00d333a7ba",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c4bab7f9-ca25-4fc4-8062-1faaa4406d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d082736-a5b0-4260-8313-f0b2a46d39b2",
        "cursor": {
          "ref": "0f00e87c-9a4e-4eeb-bef0-fefc2e7f7b66",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "9b74b4bb-81c1-4526-8ef7-2dbf96fe263f"
        },
        "item": {
          "id": "6d082736-a5b0-4260-8313-f0b2a46d39b2",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "95945ba5-5b27-46de-a795-f26ae0c929fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 800,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff46d85-7793-4987-bcc3-b966e2fecfa5",
        "cursor": {
          "ref": "361f559c-cd6e-45ca-b7c4-52e93d0ac5a8",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "524c1c58-b62a-4432-9807-a74be5c2ab0f"
        },
        "item": {
          "id": "8ff46d85-7793-4987-bcc3-b966e2fecfa5",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2c2f41c6-8cff-452b-bf7e-71d5b0647b21",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bfe3391-4e5c-4f57-92fc-1f5007e56298",
        "cursor": {
          "ref": "f8df3b9e-014d-48ca-bd2e-78e6ec2421bb",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f6443520-edf3-4bb9-9536-ec3b5b90b372"
        },
        "item": {
          "id": "9bfe3391-4e5c-4f57-92fc-1f5007e56298",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "85b84733-4256-48b5-98ed-4946e94109fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "a645c783-57ee-4a92-bb4e-3c624dc7e0ce",
        "cursor": {
          "ref": "bac58094-1056-4195-ac47-5df7e131c23d",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "125c2b06-646f-4b8b-a1d4-d6dcd3235721"
        },
        "item": {
          "id": "a645c783-57ee-4a92-bb4e-3c624dc7e0ce",
          "name": "credentials_issue"
        },
        "response": {
          "id": "7aeeb3cf-1935-4c08-bc67-c95825c7c574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "999b0f60-32de-4ecc-b842-a35fd9555f6d",
        "cursor": {
          "ref": "a84b44d9-bd32-4522-af1c-2cd04b008552",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8bab0ca5-86ab-4957-9d51-f14d9949a688"
        },
        "item": {
          "id": "999b0f60-32de-4ecc-b842-a35fd9555f6d",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e59ef499-0e92-4b93-b0c9-6859c2bc872f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "a525c98a-c589-4bfa-996d-f01460553796",
        "cursor": {
          "ref": "42a042dd-8137-4a59-ac11-114d037d433b",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b489ab09-ece4-4e3a-9643-ef6b693cc963"
        },
        "item": {
          "id": "a525c98a-c589-4bfa-996d-f01460553796",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "61db6e76-7558-4112-b624-6d7dc89f98d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "850580e5-1f0f-4d5f-bed4-182677f10170",
        "cursor": {
          "ref": "527bdc3d-2742-4530-9d58-227ed7d7e897",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "09b93c74-7a8a-4ace-9bec-0b7c146f5a67"
        },
        "item": {
          "id": "850580e5-1f0f-4d5f-bed4-182677f10170",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "07064f87-4e47-408b-802e-468145d43ec0",
          "status": "Created",
          "code": 201,
          "responseTime": 8671,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e6dc07-8b68-4d0e-9574-ad9013f0f7c6",
        "cursor": {
          "ref": "6ebc059e-3215-4b04-834e-5016f424ff4b",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ace0c45e-451d-40e1-a79c-940629be0a2f"
        },
        "item": {
          "id": "85e6dc07-8b68-4d0e-9574-ad9013f0f7c6",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ce14d218-56b9-4aab-9943-2e92b743e05c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "6a51d69f-19c2-4dcb-8de0-97478cbf4f6c",
        "cursor": {
          "ref": "d4a57f46-945d-43aa-ac02-f465e1b2b38e",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f306b909-ec11-4b2e-ab14-b13ee5b7c721"
        },
        "item": {
          "id": "6a51d69f-19c2-4dcb-8de0-97478cbf4f6c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d20a38b2-802f-473b-8ef4-25ae6bd0d387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "15a9e49f-5781-4abd-91a9-53980e1b43f9",
        "cursor": {
          "ref": "844b68cf-db9f-48d9-be02-b5605f01ed4d",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ecc62481-fc6d-4ba7-bf60-1a889b6a5d88"
        },
        "item": {
          "id": "15a9e49f-5781-4abd-91a9-53980e1b43f9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "64761ef5-74ef-4958-82e8-d419bbae3138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47913452-cfe2-463d-903f-c2bbc1d1812f",
        "cursor": {
          "ref": "ffae3ff4-f162-45a2-b778-d6a9e1f50467",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3f363c73-f015-459a-b71d-64f531833a60"
        },
        "item": {
          "id": "47913452-cfe2-463d-903f-c2bbc1d1812f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8e0dd22c-555e-4814-87be-4b7de205620c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d5caaca-b2c7-4b8d-a1b1-231663a6d6cc",
        "cursor": {
          "ref": "c1bb6831-5b7a-4adc-a48f-5f0e2fcf244b",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "18981fa7-a73c-4578-8ca0-0878a3735a2c"
        },
        "item": {
          "id": "8d5caaca-b2c7-4b8d-a1b1-231663a6d6cc",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "dec564d7-c919-4c76-8e52-effac212518c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89778aa-1bd1-4d76-b0f2-d17e2243db23",
        "cursor": {
          "ref": "054782e5-d672-4708-bf97-c21552979034",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "d71a181c-c3f8-4498-8fa8-5d82b1229e81"
        },
        "item": {
          "id": "d89778aa-1bd1-4d76-b0f2-d17e2243db23",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "19f8bcae-4666-4c45-a2f5-ef714b855d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6dfeb30-f077-4f4f-b677-f58d9ca313c7",
        "cursor": {
          "ref": "4f717b3e-e3d2-4535-9087-f840fcb21674",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "ffd9b3fb-d191-424b-a837-1aa867c29d90"
        },
        "item": {
          "id": "c6dfeb30-f077-4f4f-b677-f58d9ca313c7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "142ab942-8111-44cf-a513-5be08b4b60aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c01d2d0-bf84-4b19-aa31-20ab6c97b738",
        "cursor": {
          "ref": "957f2fd6-fbb6-43c9-918d-1f7ec93900aa",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "178d4e82-6b96-45ec-8dd7-b9c5524a5029"
        },
        "item": {
          "id": "7c01d2d0-bf84-4b19-aa31-20ab6c97b738",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "28fc1498-0645-4dfd-a1d2-d918f775e0d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75373932-92be-48db-b210-4112bc192cd5",
        "cursor": {
          "ref": "2f053e29-dc71-4291-b81f-f41ef6711d46",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "de84680c-55dd-4313-a863-657bb766a423"
        },
        "item": {
          "id": "75373932-92be-48db-b210-4112bc192cd5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c4b15a4d-dcbc-4498-b159-c87d3cc9b9c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a44a429c-209a-4685-a660-46cbcab4a2f3",
        "cursor": {
          "ref": "5992c15b-eea5-46bc-b7a6-dddb35ac7175",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ac313451-66f2-437d-b438-a2392080a96e"
        },
        "item": {
          "id": "a44a429c-209a-4685-a660-46cbcab4a2f3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "011775c0-8835-483e-9b0f-0fa444a508f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c88e5b1-99f8-4f77-b9fe-08ea4be72287",
        "cursor": {
          "ref": "d0e0e000-b599-4f90-b832-10e85e595935",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "86227fe7-caf4-44b6-9bc0-41e255e3d6ea"
        },
        "item": {
          "id": "7c88e5b1-99f8-4f77-b9fe-08ea4be72287",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "69b4d9d2-6c90-427e-9319-8e444a1bcc44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5e6cdf-cc11-4dcc-a56e-a53cc7499ba0",
        "cursor": {
          "ref": "ad511205-1e3b-4eb5-91fe-9677ff2c4250",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3f9e2940-da78-42a9-a953-3761c37251a3"
        },
        "item": {
          "id": "8c5e6cdf-cc11-4dcc-a56e-a53cc7499ba0",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bd4aad3f-b85d-4084-8404-25f9fac1373a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c671185-69e8-445a-a6b1-031bfd86b8dc",
        "cursor": {
          "ref": "e6c4b5c9-c412-4e9f-83d6-973b873a8626",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "777de51a-be10-4404-ba78-95a92d9d35a3"
        },
        "item": {
          "id": "0c671185-69e8-445a-a6b1-031bfd86b8dc",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "40faca38-ed86-46d8-b102-04100e17e879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "590b5a52-d5cc-4c8f-b887-263b05233137",
        "cursor": {
          "ref": "f45871f6-3643-4517-8fac-874ceccc1926",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "6dadbf3c-d50a-48f7-acd6-1b09b4a6067f"
        },
        "item": {
          "id": "590b5a52-d5cc-4c8f-b887-263b05233137",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "293fa127-fc56-4d67-b577-2fa1965aa780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c90de2-7972-4b10-97c4-b031ca0f9788",
        "cursor": {
          "ref": "845a3e3e-fdd7-4089-b2a9-7f9eb159abc1",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d0b86af1-bd77-41e4-a2df-1aec164ac61e"
        },
        "item": {
          "id": "28c90de2-7972-4b10-97c4-b031ca0f9788",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "094cc704-fcf6-4cfa-a52d-896786743ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05342ec-7c9f-4607-ab13-32da9e0e2eb9",
        "cursor": {
          "ref": "6c9229a7-68fa-4296-a1f1-3719261a79ca",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "6c4ff73f-5516-43a7-8ca4-eba1f8615c0c"
        },
        "item": {
          "id": "e05342ec-7c9f-4607-ab13-32da9e0e2eb9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "868b113c-3c14-4940-8595-9ed8669b7dc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e4f67b-87e6-4b02-9606-416c71b5e55b",
        "cursor": {
          "ref": "547a9b11-6b20-45b2-b269-2f96ec3e4eb9",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "18fa1570-90b5-4c43-9874-56837c41bd2f"
        },
        "item": {
          "id": "48e4f67b-87e6-4b02-9606-416c71b5e55b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "67ef08fb-1bd4-4eb4-9dad-b8f25458e445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0652d560-3871-4195-9a51-c896b7cee7dd",
        "cursor": {
          "ref": "aa4238e3-7b57-457b-929b-e225371b9b49",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b8346321-d8ca-4251-8ebd-26676294d27f"
        },
        "item": {
          "id": "0652d560-3871-4195-9a51-c896b7cee7dd",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "374be336-64fc-4c9b-92b6-c7122093332b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d35fc4-5d58-4844-9b9a-13edc76b2a9c",
        "cursor": {
          "ref": "6ad6189c-7be5-4962-ac6e-f937258d53f0",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "2b0915b9-4927-4db7-858a-8d348891fe31"
        },
        "item": {
          "id": "73d35fc4-5d58-4844-9b9a-13edc76b2a9c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5d267090-e7bd-4e16-97a6-ae2f4d801d83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f058fdb-1838-4c23-95be-c20c45109e9e",
        "cursor": {
          "ref": "33a334bb-80df-4f09-b377-ced4bc897778",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "8b353af4-94a6-4921-b19b-4666b9f5f9f9"
        },
        "item": {
          "id": "2f058fdb-1838-4c23-95be-c20c45109e9e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d214d25a-25b0-4bdc-bcbc-d3cbe2b22a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a52add80-04ee-4a52-a055-bfb0acbea4a2",
        "cursor": {
          "ref": "9a862f85-babd-493a-b182-74f0f55c52a7",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ee02307c-2862-4fdd-b625-367ad677dbca"
        },
        "item": {
          "id": "a52add80-04ee-4a52-a055-bfb0acbea4a2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e0ee0761-a069-4027-96ee-3cb84753b95b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d8a139-977c-4958-be66-24cdd3b5ec4b",
        "cursor": {
          "ref": "dfdf0bc2-7734-4157-9331-69bb965cb3f1",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f9c997c8-2d07-4d2f-b991-11792218cd51"
        },
        "item": {
          "id": "04d8a139-977c-4958-be66-24cdd3b5ec4b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "fcc63453-c84e-4cf2-a596-ef5604c06e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc40f70-14f8-47c1-b593-d7db09baf2ee",
        "cursor": {
          "ref": "7c77f284-7620-4c6c-8b6b-99978bf44efc",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2c278f3b-5cbe-45fb-86d3-b32cdc557b8b"
        },
        "item": {
          "id": "bcc40f70-14f8-47c1-b593-d7db09baf2ee",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "43056cea-2c22-4119-ac06-edb595493186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c5812e-cee3-4d90-b52c-a215bf75e6e3",
        "cursor": {
          "ref": "7a8c7803-e0bd-46d3-9a2c-24006ae33598",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "83179fb7-495d-4634-b3f8-f5bf2a8e9586"
        },
        "item": {
          "id": "d2c5812e-cee3-4d90-b52c-a215bf75e6e3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b01cf208-1b95-4167-977d-f02e9ea8619f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc76bd6-b945-4a97-85d6-4ee9160ef35d",
        "cursor": {
          "ref": "cfde8b17-ffd3-402f-9fa7-4fd9813e6bc5",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "b7b41a71-f773-4205-bf25-ea86150cd1c0"
        },
        "item": {
          "id": "5fc76bd6-b945-4a97-85d6-4ee9160ef35d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "db1effa1-f138-4f59-bc64-e1750ed98f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc7ddac9-7072-4af8-8f34-69898f2cb3e5",
        "cursor": {
          "ref": "040a8247-eaf1-4cbd-8513-f950989eef60",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "22e35d78-c704-48a7-8d1b-2c431d1134cd"
        },
        "item": {
          "id": "dc7ddac9-7072-4af8-8f34-69898f2cb3e5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "518261ae-91c9-4f76-8fa8-2369c6d47743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e3a92b-f967-43bb-b06f-460546f33559",
        "cursor": {
          "ref": "db69651f-d118-4913-a7a0-316284a30be8",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "edcef0ea-046a-4e3e-8a83-2fe31e71a637"
        },
        "item": {
          "id": "e5e3a92b-f967-43bb-b06f-460546f33559",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "81ee0538-036c-4ad2-8d13-bc3afbadb196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c78572d1-e48c-4276-afab-cafa07e5c6aa",
        "cursor": {
          "ref": "a7760c98-b38b-4dc9-8ac9-f16bf739ec75",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "bb234152-790e-4876-baa3-28fa6c2db1b1"
        },
        "item": {
          "id": "c78572d1-e48c-4276-afab-cafa07e5c6aa",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d1785eb9-823d-4287-8204-3f1b879565cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89dabb38-dcc8-4e61-8927-bb45056ac806",
        "cursor": {
          "ref": "d6404935-b08b-4f7f-9b7d-c08e87dfedb5",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "237951f1-16cf-4902-89f7-454c75c97ae4"
        },
        "item": {
          "id": "89dabb38-dcc8-4e61-8927-bb45056ac806",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2fd7e2f4-8840-48c6-a357-5f8267c71b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c14113b-e886-4cc7-997d-166c4fb85758",
        "cursor": {
          "ref": "5b625a16-4bc5-4c05-9767-f8473ddf2ce6",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c08f92d0-2715-4f88-8ff2-78858798a644"
        },
        "item": {
          "id": "8c14113b-e886-4cc7-997d-166c4fb85758",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7baa7e80-e7a6-4dec-ba82-62b7ecba5df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d2c7c52-bf22-4224-93a9-4d43f24b8677",
        "cursor": {
          "ref": "40934123-6f10-4aa3-b1e0-11144df01882",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "014aa275-db04-4bd5-b079-99ca59d71b57"
        },
        "item": {
          "id": "7d2c7c52-bf22-4224-93a9-4d43f24b8677",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a07955fe-50db-49b4-b516-0cb3777bbb08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b12bb8d7-9274-4a13-88a3-97caca9249e6",
        "cursor": {
          "ref": "e0016d58-1195-4d8a-8d89-114d112d67b5",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f67989a4-b60a-4bb7-9ee6-7abd242d6af1"
        },
        "item": {
          "id": "b12bb8d7-9274-4a13-88a3-97caca9249e6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0a6b5767-3c92-449c-a052-e37d196d9407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bab1116-0ea2-428e-9275-54244a0dc38a",
        "cursor": {
          "ref": "e8629074-e8b5-46e5-b9fe-a88febd878a2",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c8b877d0-9a75-416f-9109-0060f648def7"
        },
        "item": {
          "id": "6bab1116-0ea2-428e-9275-54244a0dc38a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "16ee4846-ded2-4c40-a8aa-d808ffdf70df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca0210c-6565-44da-83d5-fc112a40e741",
        "cursor": {
          "ref": "10c2842a-f447-4439-8a23-fc32bb1aba6c",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "66107b66-c817-4092-ad3f-7b254fec9a97"
        },
        "item": {
          "id": "7ca0210c-6565-44da-83d5-fc112a40e741",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "87607284-c09d-4671-a5ad-502c4d04cc40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b155082d-b2da-4f25-87e5-6285aaa2272c",
        "cursor": {
          "ref": "57547465-0f00-4c63-885b-5b283c4c3c8f",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "fb5a43ec-1214-4201-8773-38397338acd9"
        },
        "item": {
          "id": "b155082d-b2da-4f25-87e5-6285aaa2272c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e78502e2-a852-42fe-803d-6b8d18638d58",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d582786d-12b1-48f7-82cc-809dc529e04c",
        "cursor": {
          "ref": "55a97b82-ba06-49de-8916-2660ca24e2da",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "fe8df609-1ef3-4bc7-87b1-b7d4530ba43d"
        },
        "item": {
          "id": "d582786d-12b1-48f7-82cc-809dc529e04c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d5e819ab-daac-4344-8f0c-a973d38e4355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b189e655-287d-4714-a28c-e3bdacd6b236",
        "cursor": {
          "ref": "009bbc2d-4f95-4650-a94d-11be2780f3e4",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "253a71ee-ee84-4cf8-a4ee-f99097a50b06"
        },
        "item": {
          "id": "b189e655-287d-4714-a28c-e3bdacd6b236",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "05ff1d06-35fb-433a-a476-61a04e7a02a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf661ef9-4690-4c40-9db5-a2a4e6e95732",
        "cursor": {
          "ref": "529ce184-4425-472f-9b57-51e3d023c71a",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "189f09a4-fe59-4e48-8d47-791c45fdd580"
        },
        "item": {
          "id": "bf661ef9-4690-4c40-9db5-a2a4e6e95732",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2374ff1c-5551-4e61-b658-71d02209abfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e737a72d-2168-40a3-acce-c0b6bbb057ee",
        "cursor": {
          "ref": "6acebc5c-a425-4ec0-97fd-f60cff66e6b3",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "02e7f64d-39eb-4c44-bb74-e112f061a8d3"
        },
        "item": {
          "id": "e737a72d-2168-40a3-acce-c0b6bbb057ee",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d7a22076-ee8e-44c6-a9a5-a7a450fd92ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a19b4cae-ab5e-4d71-94fc-6da1b56a91ce",
        "cursor": {
          "ref": "7df7d9c5-8ace-4b18-9426-0bf25b9ede1b",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ed76a803-ef76-4dc0-88ab-c4cb211f1598"
        },
        "item": {
          "id": "a19b4cae-ab5e-4d71-94fc-6da1b56a91ce",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ad97abfe-eac3-426c-a051-d338dba22122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f8615f6-19e7-4f53-b1c2-d5ad971bc1c6",
        "cursor": {
          "ref": "53d9f81c-7618-4cce-84ed-cef597cd39f8",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4ef02aed-e2f9-4156-b56b-407c23604062"
        },
        "item": {
          "id": "2f8615f6-19e7-4f53-b1c2-d5ad971bc1c6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d27d474b-4cff-4544-9559-9db3d026885b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8562de1-7da2-4862-a9f2-fbe8d0d93c26",
        "cursor": {
          "ref": "f031eef6-def3-4ea9-87fb-0a212420e099",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "3bebfa8f-13b7-4aaf-922a-f83ae886660a"
        },
        "item": {
          "id": "b8562de1-7da2-4862-a9f2-fbe8d0d93c26",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "526f6bc8-39f9-4dd8-baef-ecb3f07970c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a0489bd-c1f6-4aee-8a09-98af171ecfa2",
        "cursor": {
          "ref": "83711b09-14ee-442b-ac12-d2332d521abc",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d840531a-0fa5-47d0-a5c2-6eba08ff77d9"
        },
        "item": {
          "id": "7a0489bd-c1f6-4aee-8a09-98af171ecfa2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c576f492-e41b-4eee-8db9-07c3472bc4d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2993d1c0-25b4-4295-bd6b-23e5b37fa33d",
        "cursor": {
          "ref": "004f3890-1def-4f34-8127-3bdcc0fab9ad",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4d621dbc-057b-4b8d-ba35-4b9b06cfc3d7"
        },
        "item": {
          "id": "2993d1c0-25b4-4295-bd6b-23e5b37fa33d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7fce709a-f892-4079-bb2c-09ea56797354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a2bf276-2453-4eeb-80e6-453f63c4f337",
        "cursor": {
          "ref": "222e14d8-ef2b-41eb-8ad7-6ddd79e20686",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "347d4287-6d5a-4dff-826b-7eb550d7b15a"
        },
        "item": {
          "id": "2a2bf276-2453-4eeb-80e6-453f63c4f337",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d7afb6bc-73e2-461d-af8c-0832f971b000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2267917a-aa1c-441a-8fb3-ce57ffa84711",
        "cursor": {
          "ref": "e4a91e64-355d-400d-904d-1aabf3ed1903",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c672d501-c572-44ae-95fb-0e240c93f380"
        },
        "item": {
          "id": "2267917a-aa1c-441a-8fb3-ce57ffa84711",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d5061713-7171-4e83-84cf-3c9aeb07785f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d1c64e7-a280-4d13-8716-b802ea47ecfb",
        "cursor": {
          "ref": "0411e72b-42fe-44fd-af11-c0d3fd14ae0e",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "5957b376-e467-4cdc-b073-051b2da8688c"
        },
        "item": {
          "id": "6d1c64e7-a280-4d13-8716-b802ea47ecfb",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3d468dd6-8af1-4ca2-9edc-c5f6c0e1c64a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70fb68fb-9acd-49d2-bb0a-3023c24638f2",
        "cursor": {
          "ref": "03b63a8e-02b1-4b76-be50-af0efc8973df",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "31a24d3a-142d-4f82-a893-a82191b6b9af"
        },
        "item": {
          "id": "70fb68fb-9acd-49d2-bb0a-3023c24638f2",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8b025f2b-b795-4f14-a6b7-80886a6d5f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "156d525d-861e-48fb-9cff-e2d48331a50a",
        "cursor": {
          "ref": "4b094ae4-77be-4089-9f91-7bea5c7c2017",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1eef9f24-5059-4e53-ba29-2b67bb2a3e82"
        },
        "item": {
          "id": "156d525d-861e-48fb-9cff-e2d48331a50a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "281d075c-d43d-4155-a11d-a2801ced608a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85198250-6db4-437e-b11d-439465a26804",
        "cursor": {
          "ref": "2d6fe7ad-41f8-49a7-83a2-38e4fee065df",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c58867fd-2627-4b8c-bdcd-4fcc864eca9c"
        },
        "item": {
          "id": "85198250-6db4-437e-b11d-439465a26804",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "98edc170-fd10-44bd-9ba9-bb2aa5fc8ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf4c3a9-8671-4933-8664-d93c630d43b8",
        "cursor": {
          "ref": "e269b7cd-4680-4575-91d0-f6f9c43ee10f",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "274f223b-0ccf-416e-979b-59a77286f2d4"
        },
        "item": {
          "id": "9bf4c3a9-8671-4933-8664-d93c630d43b8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "86da27ec-ef07-440a-a3a0-b99db9531d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61757c82-3666-468d-bc83-a52af413973e",
        "cursor": {
          "ref": "e45f63e8-e5fc-42ec-a916-3af6d7442f25",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "42fc9d2b-1efc-4691-814c-5367a5999033"
        },
        "item": {
          "id": "61757c82-3666-468d-bc83-a52af413973e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f7f757ce-36ea-4a8c-82a1-e0d5eab811cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f31f7eb-6e38-49e4-8b33-9546b9d3eb6d",
        "cursor": {
          "ref": "48ccd50c-8112-4a8c-afc2-e6a2c6d0612f",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e334c41b-ceb4-45ac-aa89-9bbb8894604f"
        },
        "item": {
          "id": "3f31f7eb-6e38-49e4-8b33-9546b9d3eb6d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5b3c6533-3db5-4103-9618-55f7eae3bc23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f6cbdb1-bd86-4cd6-9586-276c2758ca1e",
        "cursor": {
          "ref": "b4ac1816-11e3-4f89-973b-249276684920",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "22829c17-e709-4df9-bf18-65322e7ef585"
        },
        "item": {
          "id": "0f6cbdb1-bd86-4cd6-9586-276c2758ca1e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "508eb8d6-d229-4747-8230-0dd588d96ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ff18d3-71fa-477c-94f1-007c8ca6096a",
        "cursor": {
          "ref": "62887128-c8ce-4973-8509-09b967f85325",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f0e9899d-c93d-4185-b0d6-5168d5c0b465"
        },
        "item": {
          "id": "a4ff18d3-71fa-477c-94f1-007c8ca6096a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "62a8e82f-0733-44a6-908f-24576e6ca348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89863df-4bac-47c6-8c86-6860f8c9eea1",
        "cursor": {
          "ref": "ab247c8e-3acf-4373-8f36-44b6c90c6baa",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "20ff95b0-12af-4088-9ac1-d022bc4ec2bd"
        },
        "item": {
          "id": "c89863df-4bac-47c6-8c86-6860f8c9eea1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e8e9e2a7-a4b1-4679-816e-fdbdb6398def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "529d4b25-fa5a-4ae2-b310-a0fd211fca29",
        "cursor": {
          "ref": "226fd638-3365-4600-b90c-aad59eafb683",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "18fd28c4-f8ed-4be3-b176-427a870e2413"
        },
        "item": {
          "id": "529d4b25-fa5a-4ae2-b310-a0fd211fca29",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5680f3f9-3ab7-4940-9c98-bf0c64f7cedb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc3d137-df8f-4f3d-9ca6-1bda3303aedf",
        "cursor": {
          "ref": "ee7c7b92-30d8-4891-b249-b7834bff345e",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e46e868c-8874-44e8-9a5f-2c666f6948d8"
        },
        "item": {
          "id": "1bc3d137-df8f-4f3d-9ca6-1bda3303aedf",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "72a57290-0279-48b1-bc8c-6dedd20645a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f208a0dc-cd59-4156-8621-1fe30674b6b2",
        "cursor": {
          "ref": "22c400ac-2025-45c4-90ad-4a44493fb274",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e127d021-1214-4b0b-bf96-672130c9c4d5"
        },
        "item": {
          "id": "f208a0dc-cd59-4156-8621-1fe30674b6b2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "459ea99b-f4c6-4b1b-90a3-77f8cb7d0b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789cfd39-c0b8-44ce-9715-e4f58136f39f",
        "cursor": {
          "ref": "98bc4997-1f60-4a68-aa07-533f1a764819",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "64d16cf8-f4ce-4c1b-842f-d80072f7bb95"
        },
        "item": {
          "id": "789cfd39-c0b8-44ce-9715-e4f58136f39f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0477c974-273c-43ca-85e4-6ae96cbdfca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f896c92-f5b9-4741-8fd3-63cf8cc3737e",
        "cursor": {
          "ref": "2f07ec88-776d-403d-8717-d4c4eae140af",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "5785ebc5-1056-4b6f-bc41-97ecb8335c81"
        },
        "item": {
          "id": "3f896c92-f5b9-4741-8fd3-63cf8cc3737e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c87ddebd-bbae-4e1b-91a4-f33a0179ddd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e7621a-bffe-4d58-8127-5f6053960bf1",
        "cursor": {
          "ref": "20d61ad6-2221-4818-bd49-338ff1bfff27",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "604cc9cf-6bee-4569-9c41-20766743dd0e"
        },
        "item": {
          "id": "51e7621a-bffe-4d58-8127-5f6053960bf1",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "fdaaf61c-5e21-4ef4-a9ac-1cf0b39f4f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61760833-5ab1-47b4-97f6-3ca5ac28b0b2",
        "cursor": {
          "ref": "0b0babb6-dd3a-4aff-829d-a896b40b9fb6",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "92f38d53-3c84-4399-83e7-22fe916ff9dd"
        },
        "item": {
          "id": "61760833-5ab1-47b4-97f6-3ca5ac28b0b2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "301aef20-7580-40c9-b882-e12eace179d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46678de8-b155-431a-9309-9f60571a36dc",
        "cursor": {
          "ref": "a7096eb1-d5d1-423a-ba6f-1a42401064cf",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d6aea41d-c5b6-4596-bed0-c82d57bf7528"
        },
        "item": {
          "id": "46678de8-b155-431a-9309-9f60571a36dc",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f6508dc2-7aa4-47a4-9afe-a2eefbb386d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f440f227-88cf-41be-9377-c1aee6f4b5cb",
        "cursor": {
          "ref": "cb07b977-0ac0-4e0b-afb2-79887b01b4c5",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "61d77f53-fa65-4f4a-a66e-b29e5d568890"
        },
        "item": {
          "id": "f440f227-88cf-41be-9377-c1aee6f4b5cb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "68ac4181-319b-43f2-9f6a-3cbc9a60e4c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46545a12-aefb-48c7-ba05-703b15f00056",
        "cursor": {
          "ref": "6b4a522e-6198-4829-8445-62882c2cfd33",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "480e91c6-a7da-456c-aeec-c335762262c2"
        },
        "item": {
          "id": "46545a12-aefb-48c7-ba05-703b15f00056",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c6a33813-e9e1-4b1f-8e59-e3ff6e503b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a45bec-2d05-4fa8-a151-5deb63eac9df",
        "cursor": {
          "ref": "47f492af-c260-40b6-9f14-4abc9972fc8b",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b639ff80-f8f4-48c4-96f1-c18d68778445"
        },
        "item": {
          "id": "c0a45bec-2d05-4fa8-a151-5deb63eac9df",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "92ec57e0-2ee9-4785-b85b-6757002758a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b84474c1-0827-488a-9f9e-7732ab31ce2a",
        "cursor": {
          "ref": "9567fbe4-58f3-4167-9ce9-4b0dad61f954",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "372eb9d5-f409-457e-b12a-558c23f60eb1"
        },
        "item": {
          "id": "b84474c1-0827-488a-9f9e-7732ab31ce2a",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "9ad3bd55-1669-42ef-b595-703e2662f6bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ace65e-bc53-4526-b2c0-b84f74ba0731",
        "cursor": {
          "ref": "500c28cb-8b5c-4d4e-a144-ee1fc3ac3391",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6d1ac282-80d5-40aa-b8d1-2a0c8a9e3dd9"
        },
        "item": {
          "id": "43ace65e-bc53-4526-b2c0-b84f74ba0731",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "40baca37-1876-44bc-8b55-6de749f6529c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece2f8e2-a6b0-42fe-a673-96beb06c712f",
        "cursor": {
          "ref": "47361f14-246d-44ac-85bf-797f4baab118",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5b097e92-f38f-41ea-938f-a70e5fcb8a25"
        },
        "item": {
          "id": "ece2f8e2-a6b0-42fe-a673-96beb06c712f",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "f0d10369-ab53-437c-985a-bd82e23d0419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a244905f-6700-490e-b3a8-29d4fae64c96",
        "cursor": {
          "ref": "c16145e8-588e-415f-a929-4d5dec4ea231",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "950efc1b-a784-4234-b79d-9a45a33694a0"
        },
        "item": {
          "id": "a244905f-6700-490e-b3a8-29d4fae64c96",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "c5aec0ab-cbc5-4f9b-8a7d-4ea1f605f4dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b518810b-12b1-4f90-86bf-49c34ff47f19",
        "cursor": {
          "ref": "ff64a486-7380-482d-b6ef-a7628c82612c",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "88c50b82-bb14-47c7-a5f3-9e296d33f47a"
        },
        "item": {
          "id": "b518810b-12b1-4f90-86bf-49c34ff47f19",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "0ff6bca8-d35f-49a0-ad9d-e3a3eef4fc2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145b47d9-57da-46b7-9151-c39393b35043",
        "cursor": {
          "ref": "a7f7de5e-59e7-4cbf-8a58-846627a82506",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "9fe89ac4-c697-4311-a365-cee6f122f9fa"
        },
        "item": {
          "id": "145b47d9-57da-46b7-9151-c39393b35043",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8aa7c8dd-c431-4e77-a79c-9f2201a73b24",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "552e2bcd-ed75-4115-83b5-1508bd7d8de1",
        "cursor": {
          "ref": "0fde45cb-6fb1-4c11-844c-e3fa4b90942b",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "8afabe95-1a5b-40f3-87b8-56e02d2ab7d2"
        },
        "item": {
          "id": "552e2bcd-ed75-4115-83b5-1508bd7d8de1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "bdc2ee6f-7886-4148-9608-98fe5adc00b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef2becb-c3bb-4020-902e-7b9d2256e7a8",
        "cursor": {
          "ref": "d3d70a69-6b50-42a6-944c-eaa344127514",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4939559d-71d9-4b2a-984e-34ad05b5572a"
        },
        "item": {
          "id": "9ef2becb-c3bb-4020-902e-7b9d2256e7a8",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "18e4d969-e030-45c2-ab07-2584fb6d9d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3300ead-033c-4eff-8349-2a823d803f5d",
        "cursor": {
          "ref": "22d149e8-a8cd-4e76-bd9d-697984f6cb58",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "fe0430d7-160c-4d08-b71c-60f5bfc99c01"
        },
        "item": {
          "id": "d3300ead-033c-4eff-8349-2a823d803f5d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c42b1f3f-bf66-44f0-a70c-b5fbbb85a61f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce73143a-6d6e-468d-90d1-0d396b4cfa76",
        "cursor": {
          "ref": "1ef20fc3-80c2-40f9-89ad-000a284ad406",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "6074dad4-6ec9-4531-a0fb-5901b86ae7a3"
        },
        "item": {
          "id": "ce73143a-6d6e-468d-90d1-0d396b4cfa76",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d333be13-3600-4532-b036-e5990dcfe7e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "172e0ff0-5ec6-488b-8056-537617cfab2e",
        "cursor": {
          "ref": "2f6b9560-5660-4942-8535-77de5f6a07fa",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "80b0bfc9-ac2e-4c31-a9df-bbf2e354da49"
        },
        "item": {
          "id": "172e0ff0-5ec6-488b-8056-537617cfab2e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6cdb3f0f-3d38-4257-98d6-c96e4dc5368d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd40540-7ec7-430c-bfb3-10752856cf90",
        "cursor": {
          "ref": "e980c2e6-fbc4-465e-9a24-934f69da0d03",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e88b0da8-6e6b-4656-a7ef-90c303e26331"
        },
        "item": {
          "id": "fdd40540-7ec7-430c-bfb3-10752856cf90",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "6638dbf2-2f16-4018-b118-ea8d918ec98a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba5d30e-0dc6-49b2-b90f-79cae7cfeb82",
        "cursor": {
          "ref": "d4a3e52a-efbe-4a37-a8f9-8c76bfaa60aa",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "3f38f200-db62-4250-b80e-7b35dc46b133"
        },
        "item": {
          "id": "0ba5d30e-0dc6-49b2-b90f-79cae7cfeb82",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ab23a01c-2eba-43f5-8a05-9c9e220ebee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8439ce9d-f975-40c6-b5b8-2b60a4199fbc",
        "cursor": {
          "ref": "969178cb-bc97-47ef-8411-16d3e0515b24",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a0bbf231-3590-4aa9-985d-18166ce1dac6"
        },
        "item": {
          "id": "8439ce9d-f975-40c6-b5b8-2b60a4199fbc",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0c863ae3-bcca-4b62-bf75-6db7903e8879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75dcf60b-df75-4c0d-9d03-07f9ed86189f",
        "cursor": {
          "ref": "d06c45ad-bc29-4790-b1e4-22e15833e987",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d3e8e232-759d-4ccc-bdb4-3f8ee74f155b"
        },
        "item": {
          "id": "75dcf60b-df75-4c0d-9d03-07f9ed86189f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0807525e-2759-49d5-b686-7474c0d0891e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0538185-bab6-4985-90a2-f535328fd304",
        "cursor": {
          "ref": "9e25bf03-3883-4a46-8c50-0d070c2fa101",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "2afee7a2-b74c-432c-ad84-18d2b7a03dd8"
        },
        "item": {
          "id": "e0538185-bab6-4985-90a2-f535328fd304",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "4e6f2950-91fd-466f-9622-ec8ac9697d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8919ae36-d9ed-41a0-b0f6-adb27ff5a27d",
        "cursor": {
          "ref": "bf090a82-c86d-45d0-bfd4-42aa9037c6d5",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "4b296942-cef3-43ac-894a-26df8473a164"
        },
        "item": {
          "id": "8919ae36-d9ed-41a0-b0f6-adb27ff5a27d",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "14662083-fb0a-4972-8f49-7c7f8f2e874f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e877b57-f350-4646-8d9b-b11062a0ce13",
        "cursor": {
          "ref": "a4912127-8a39-4342-9ab8-2a11ba9646cd",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "415c0a4c-d68a-4cf4-add4-1477a0bf5d32"
        },
        "item": {
          "id": "0e877b57-f350-4646-8d9b-b11062a0ce13",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d9d0d67a-2ce2-4a40-8a78-3c1303361009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0591c423-6ed6-419c-b69d-f41035e545b6",
        "cursor": {
          "ref": "31dd91e9-c322-44a0-aaf7-d623ece1928b",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "75abab72-5347-4d7e-8577-f156452e34df"
        },
        "item": {
          "id": "0591c423-6ed6-419c-b69d-f41035e545b6",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "bf95e105-e284-4a4b-8d8a-709cdcf5c379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7eec893-ff29-448f-861e-40c51037c320",
        "cursor": {
          "ref": "81024d93-ebef-4702-886a-bf372db05340",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "62d6d0e9-032e-48cf-b684-21b3847b6b5c"
        },
        "item": {
          "id": "d7eec893-ff29-448f-861e-40c51037c320",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ff799041-0ce0-4fdc-98d5-648964b36ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "295a2636-5ffe-4836-974e-c1eaeb4f46c1",
        "cursor": {
          "ref": "9bcab82b-5639-4838-ae5a-5377a50bcc1b",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "19a99d98-babb-4ef8-964e-698751529559"
        },
        "item": {
          "id": "295a2636-5ffe-4836-974e-c1eaeb4f46c1",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "195df791-b695-4a48-9c1d-96c511d482db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c716af-af76-4115-bd1a-434058d5a1ff",
        "cursor": {
          "ref": "1c4a5b59-0380-4b03-9979-657a85b1904a",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "5f6c79ed-db2d-415d-a97a-f468dbeda267"
        },
        "item": {
          "id": "06c716af-af76-4115-bd1a-434058d5a1ff",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5384fe42-6cbb-4b4f-ad8f-7212f857f88d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b5f931e-397a-4e51-a4c5-41530df9b847",
        "cursor": {
          "ref": "ab94f400-13aa-4cad-830a-8d88a81a1a61",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "45d6bb08-e1c5-41dd-9f3d-2384ec9de46a"
        },
        "item": {
          "id": "9b5f931e-397a-4e51-a4c5-41530df9b847",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "25e360f4-b3de-48aa-972d-f7cf307a51ff",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "395e53b9-8bb3-4ef4-9517-2b9f5432aab6",
        "cursor": {
          "ref": "02e2ca61-7ea9-4836-a9f2-89a516e2e3e6",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "cd0abfaa-e950-4d92-bb4a-b8d439cd9813"
        },
        "item": {
          "id": "395e53b9-8bb3-4ef4-9517-2b9f5432aab6",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ad40c381-1dea-4458-b397-ee1f14fb5b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081118e3-6ecb-4527-8898-58c93d55ef2a",
        "cursor": {
          "ref": "3ba66770-b232-4e67-ba40-9a6deda9a8f6",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "2f9339c8-f4f2-4191-a352-e4b74f35ee62"
        },
        "item": {
          "id": "081118e3-6ecb-4527-8898-58c93d55ef2a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0332c804-1b09-4e08-a40c-31b17e8475c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b584e4b-31de-4b7c-9a1c-0065c0fc97dd",
        "cursor": {
          "ref": "a6da7432-7a90-434a-b2bd-d6478677912a",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "6a73987b-e667-4c37-ba98-246768a7d841"
        },
        "item": {
          "id": "9b584e4b-31de-4b7c-9a1c-0065c0fc97dd",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "dddb156b-1384-47a2-9199-02534c8e93c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc0ee148-b89c-4a2b-8831-5411ba9540a5",
        "cursor": {
          "ref": "b64a36a0-261a-4eca-a6bb-8fd6c07b89a9",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b75ef7df-a848-4e81-9b28-6aa2ec2789c8"
        },
        "item": {
          "id": "fc0ee148-b89c-4a2b-8831-5411ba9540a5",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5be399d5-23bb-4375-9769-39b21d3cdfe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2919fc-43a6-42cb-b4ff-d019871e03ae",
        "cursor": {
          "ref": "d1bbc462-d34f-4863-901d-c9a1e651ba05",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "969b80a9-f50c-454a-b92f-e5ed099140a3"
        },
        "item": {
          "id": "ab2919fc-43a6-42cb-b4ff-d019871e03ae",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4816d210-7de6-4dbb-b7b3-f38dd877b6dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd1a3c2-aafd-4af2-a33d-815dc43dcf8d",
        "cursor": {
          "ref": "10a2f126-564f-4c53-9582-ee8d0638ef17",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5da884f8-0bc4-4353-a380-fff74ac30512"
        },
        "item": {
          "id": "8bd1a3c2-aafd-4af2-a33d-815dc43dcf8d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7d590dcc-b7fb-47ba-9d45-338135109c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa19d160-f19a-45ff-8c76-55e6efec0ff4",
        "cursor": {
          "ref": "1e794be2-fff9-49ed-8dc6-7785e1583f5b",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ee7c3054-776f-42c3-9c8a-ac06df2d8bc8"
        },
        "item": {
          "id": "aa19d160-f19a-45ff-8c76-55e6efec0ff4",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "aac51690-7370-40f4-9ebf-c7272c6b3432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "783bc0e3-e7cf-434f-b148-02ee8ace9772",
        "cursor": {
          "ref": "02f2ac5f-d016-460b-8c2c-094ac3fa0d7d",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ad864157-63d2-490f-9649-083bc851bb97"
        },
        "item": {
          "id": "783bc0e3-e7cf-434f-b148-02ee8ace9772",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "36fde8e1-0d72-4266-83d7-deb2064a989e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f5837f5-f6c5-4bd3-a660-c1d04ee3624d",
        "cursor": {
          "ref": "90b39d15-4477-4490-908d-f7df024f9131",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "62de348f-b7b5-4a0c-94ba-730430f978fc"
        },
        "item": {
          "id": "8f5837f5-f6c5-4bd3-a660-c1d04ee3624d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "28d6405e-19ae-4bb7-8384-9cc8903eb954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da4d6f64-403b-491f-9de5-99b8790a3294",
        "cursor": {
          "ref": "07b4ee5e-bdcc-4c94-ab5f-732eb34acb5b",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "38749a11-027f-425c-bd87-3e47fa148498"
        },
        "item": {
          "id": "da4d6f64-403b-491f-9de5-99b8790a3294",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c16ad085-75ac-4589-b292-a4cf9154cd8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8074dc2-caab-463d-b451-beece563b643",
        "cursor": {
          "ref": "ab6e0e4d-0a29-4b6a-b477-710928531b45",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e20a9ceb-f8f1-47d2-8ed0-1df91f21dcd8"
        },
        "item": {
          "id": "c8074dc2-caab-463d-b451-beece563b643",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0d097821-d379-4e67-8475-0da7f5c42c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a154ef90-2788-4865-86e4-aaae2a7a6919",
        "cursor": {
          "ref": "4aaae678-fd7f-4e52-938e-ed94e4e9b671",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2ce0a102-9b66-4438-abc2-517e21552f6b"
        },
        "item": {
          "id": "a154ef90-2788-4865-86e4-aaae2a7a6919",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "5ab9c392-4a88-40f2-afef-0ac04050f8fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f076d174-f9e2-40e2-9cda-98288da94e13",
        "cursor": {
          "ref": "744b10e0-8d45-4181-8396-677cfe9e8cb6",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7956832a-111e-4c66-a4fb-b4f5c8921f76"
        },
        "item": {
          "id": "f076d174-f9e2-40e2-9cda-98288da94e13",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "37b08004-7b79-45a9-b99c-3e14b21ea5c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb94730-c8c1-4891-b3f8-88ab6009335a",
        "cursor": {
          "ref": "ee98aef8-7287-4ee8-90cc-c22185816e3e",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "fe3aa28f-1983-49b8-b540-0149aeb65ebc"
        },
        "item": {
          "id": "8cb94730-c8c1-4891-b3f8-88ab6009335a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "7825ea21-07f7-4e63-9f50-453045790ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84bc39a4-3457-4392-b893-d1dca93e1f4f",
        "cursor": {
          "ref": "812bf07a-300c-49b5-a5d8-7cfe50976b88",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a7aced2e-679a-4c3d-8617-6587459928cd"
        },
        "item": {
          "id": "84bc39a4-3457-4392-b893-d1dca93e1f4f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0b2a0a89-3338-48c1-9756-b171307e87d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f91b08c-3427-454f-9811-bddced5ed561",
        "cursor": {
          "ref": "5f1c4347-b58c-4317-bdf0-eb4ef428d2ea",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "1a8b042f-d040-4f51-9b4d-083dc2ada88b"
        },
        "item": {
          "id": "2f91b08c-3427-454f-9811-bddced5ed561",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "1930d761-6700-4986-b506-e88ca5746dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac1e79b-5965-46a1-86df-e61a342de159",
        "cursor": {
          "ref": "c52ad6de-2a51-47ed-9095-3e357094983d",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d4d3f869-5709-4ec0-a5ae-6a915cec6dd1"
        },
        "item": {
          "id": "2ac1e79b-5965-46a1-86df-e61a342de159",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0b79be21-cbde-4c20-ad2e-019286937750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091133b2-85ff-43a8-921a-775117f32291",
        "cursor": {
          "ref": "118fe4ca-4990-47be-934a-2c3e7ac3ec06",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "24585e15-5464-489d-aa05-796e08f04a18"
        },
        "item": {
          "id": "091133b2-85ff-43a8-921a-775117f32291",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b4c30c88-6dd6-4af8-90fc-deb47076d6db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f8b9d81-b5f0-4ca6-9e80-d5b1568896bd",
        "cursor": {
          "ref": "3a818d67-cfa2-42c3-8b96-0254e0f28903",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "fe1e5591-9d24-465b-a321-98c467cddcf4"
        },
        "item": {
          "id": "7f8b9d81-b5f0-4ca6-9e80-d5b1568896bd",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "28b93243-b2b4-418b-a803-6956f83d9f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936950ec-b7cd-4421-bdc8-dfd1f430e136",
        "cursor": {
          "ref": "897ca912-26b9-41d5-9b4d-9f8d1ce91c4d",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a4633707-6313-4451-a185-db8f53948813"
        },
        "item": {
          "id": "936950ec-b7cd-4421-bdc8-dfd1f430e136",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "35587329-5edc-4430-a6a6-b58fe7259d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee45436-f601-4e30-b399-4dd27b0e9f60",
        "cursor": {
          "ref": "09e8132d-8aab-43e9-b63e-9c1d8c73b9a1",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "17b6e0d7-f4a5-4e70-8370-98b7572817ce"
        },
        "item": {
          "id": "4ee45436-f601-4e30-b399-4dd27b0e9f60",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ec856410-7986-4a87-bc7c-ce18c53f716f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82421196-073b-45a7-ad0c-d2387fc3b2b0",
        "cursor": {
          "ref": "059f2f21-c0bb-4be5-a05d-9a04d12f6de0",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a924a27d-20f9-4880-969e-f2090b47218c"
        },
        "item": {
          "id": "82421196-073b-45a7-ad0c-d2387fc3b2b0",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8cba9df1-4c97-403a-a3cf-4edd5e8b948d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d803b10-8581-4ddb-a503-d537440f4a18",
        "cursor": {
          "ref": "9df3399d-80ea-4f87-a3a2-152d97b18918",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "b3c319c2-e74a-44e9-bfb8-527d7fec2aaf"
        },
        "item": {
          "id": "6d803b10-8581-4ddb-a503-d537440f4a18",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "d1f91998-ffba-42e2-86ff-056b28a1e332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19eab584-5f8f-46e0-9b22-af64a39a3b7c",
        "cursor": {
          "ref": "76ee774a-a465-4309-bbf1-325f0a547b1a",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "17693a2f-8bac-4415-acb3-bceb5d98f7c3"
        },
        "item": {
          "id": "19eab584-5f8f-46e0-9b22-af64a39a3b7c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "33379444-f8fb-4f80-9744-fb730b475ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e722b9fd-f9f2-4c2f-9d28-97d36d966986",
        "cursor": {
          "ref": "e3a71f9a-de4d-4f9b-98ee-1eeae375e09d",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "89cc59cd-0e5f-4539-bc2b-bde1c7d79ad5"
        },
        "item": {
          "id": "e722b9fd-f9f2-4c2f-9d28-97d36d966986",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "12358ebb-9f71-471b-b454-2970cf60a9ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9849c37c-0e25-4b95-a848-58bb015c68f9",
        "cursor": {
          "ref": "5072746c-dec3-4679-b816-50faacf72679",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "bc675c9f-50fe-49e2-942a-c0068205dba9"
        },
        "item": {
          "id": "9849c37c-0e25-4b95-a848-58bb015c68f9",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "6c102e13-68b0-4d07-93c8-cc4743af52b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0cadf1b-2601-48d6-85fc-d227fc65ada2",
        "cursor": {
          "ref": "7c3fc336-1ddc-4ad7-ac5f-57473923f2f0",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "1e87fbb5-1b01-4d30-afa8-61dd415486d3"
        },
        "item": {
          "id": "b0cadf1b-2601-48d6-85fc-d227fc65ada2",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "7e5f2003-50f8-4da8-b765-b9180cd9ad50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f4fd877-26ff-405c-ae00-bac24884be98",
        "cursor": {
          "ref": "a1967173-eaa3-49d7-b352-d60da88cbd6f",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c761ee1e-8cec-4843-8923-6c890c883bfb"
        },
        "item": {
          "id": "1f4fd877-26ff-405c-ae00-bac24884be98",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8a2a5d8d-f606-49f1-8e42-a317da46fc47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5009ca09-d7e4-43a9-bd15-02745112bccb",
        "cursor": {
          "ref": "e9eb898a-a282-4b93-b96f-4c983a5e1778",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c5947848-a9f6-4a40-b2ad-37600fe12a50"
        },
        "item": {
          "id": "5009ca09-d7e4-43a9-bd15-02745112bccb",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "05167c0a-9265-45d7-84c4-6df123d11f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bade69b3-4e61-46b9-8de5-33b6a4d83188",
        "cursor": {
          "ref": "b0abc662-4b55-400a-ab10-09ac43422950",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "2fda2859-96cf-4cb2-be03-0f9d16011275"
        },
        "item": {
          "id": "bade69b3-4e61-46b9-8de5-33b6a4d83188",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b17c383c-9cc4-422e-9b87-87951af8c14a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14692d9a-f381-4b8c-8be6-5bd7617a005d",
        "cursor": {
          "ref": "726c9f7f-9d1e-47d3-9542-ad96883df555",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "0e2ad244-d1fa-47ae-ba2f-a897c31a0af8"
        },
        "item": {
          "id": "14692d9a-f381-4b8c-8be6-5bd7617a005d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "3d2cdb15-e1f9-4662-b498-9549d41d78e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eae00cb-a34b-4e3d-b23c-6783a5382cdd",
        "cursor": {
          "ref": "e5c3af18-cf23-4fad-b9c1-0cddf607fd2b",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "07d4d397-0549-4bc6-be40-13a73bc8534b"
        },
        "item": {
          "id": "6eae00cb-a34b-4e3d-b23c-6783a5382cdd",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d133614d-b2af-4977-bd68-694e5a9f4cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bcfc6e4-ff55-401e-b3a5-14583a85f319",
        "cursor": {
          "ref": "648b6933-6f4a-4020-beb3-ffab8b9feecc",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ddd4f0ac-e925-4ce5-afcf-b5634a531981"
        },
        "item": {
          "id": "6bcfc6e4-ff55-401e-b3a5-14583a85f319",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "30148078-3347-4e99-b088-c193912580ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b52b61-1d6c-4629-89a4-0d97ebda38bf",
        "cursor": {
          "ref": "5148fc57-e08f-47ee-97b8-92fb4bb74ff8",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "471b4c97-abdd-460a-ac37-9668402b4fb6"
        },
        "item": {
          "id": "b8b52b61-1d6c-4629-89a4-0d97ebda38bf",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e8ba90ff-c8e2-4358-b79d-4e5fe9f914a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d5d2a2-55ef-414c-8be5-303a677df734",
        "cursor": {
          "ref": "a712bd4c-1b4f-4d0d-b088-0ba13ecaa588",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "8e384606-81f4-4fd7-a7d4-be7eefcff5d0"
        },
        "item": {
          "id": "46d5d2a2-55ef-414c-8be5-303a677df734",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c7c307e7-5975-4f0e-b19c-958a21f5dc5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d3be6c-eea9-4946-822f-f2bdfb87ea51",
        "cursor": {
          "ref": "db08306c-7940-48f0-af33-0f54d8425b51",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a6df1f51-9b73-4869-a9c6-c5e08725389c"
        },
        "item": {
          "id": "55d3be6c-eea9-4946-822f-f2bdfb87ea51",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f3ec999f-568e-4ecd-bced-532c248d1e42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f29d49-af10-4dfb-85f1-ba59efdf7167",
        "cursor": {
          "ref": "5a641fe4-c6f8-4141-b524-5c0387f9d36d",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f09a405b-74be-4d21-8c37-32060359dbcf"
        },
        "item": {
          "id": "55f29d49-af10-4dfb-85f1-ba59efdf7167",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "489a37a9-4f12-49dc-848a-5b02e5e736ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e5ce77-7e03-4581-81ea-7fd408175284",
        "cursor": {
          "ref": "ec715910-7bab-4ae0-a48d-2349e1ed4a83",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "af5d891a-78e2-484f-8eec-0fa5d11bbb62"
        },
        "item": {
          "id": "b3e5ce77-7e03-4581-81ea-7fd408175284",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2b0a45d5-776b-419f-abe3-70800c59d58a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b201f4-5882-4eec-b924-5ca979bd5fcd",
        "cursor": {
          "ref": "b1bd1a71-1ba5-4ab2-8bc8-a6637eb5d7d1",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f034f7d4-0532-4197-94f8-80f82a285959"
        },
        "item": {
          "id": "26b201f4-5882-4eec-b924-5ca979bd5fcd",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e09f679e-54de-48cb-9be8-2362051e4c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0a1515-53c1-4d6b-b53e-ddb7f55727cc",
        "cursor": {
          "ref": "6dd79458-093c-4cee-927c-cac5f75d61fb",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "a6830443-201e-40fa-9de8-b9c43a99ab11"
        },
        "item": {
          "id": "2a0a1515-53c1-4d6b-b53e-ddb7f55727cc",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "721aba08-fa81-4ae1-928f-3fce8a7a2edb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c333088d-3bc8-49b8-a47b-485c4d1036b3",
        "cursor": {
          "ref": "9b88499b-6928-4093-8437-3484cbbc0c4d",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e9c5c4a7-1ecf-4fee-81c8-8f27a5681119"
        },
        "item": {
          "id": "c333088d-3bc8-49b8-a47b-485c4d1036b3",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "559458c3-729c-467e-a18b-dea6dddcb25b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c42b094-3ca0-4dd0-a998-766ba485c207",
        "cursor": {
          "ref": "584cc1e9-1372-44b8-b271-a16e4f478b60",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "1a94ea7d-bd8f-48a8-a30c-141fabed961b"
        },
        "item": {
          "id": "7c42b094-3ca0-4dd0-a998-766ba485c207",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f60650f0-363d-4b0e-963b-861fdfb99839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f12ccb-eba3-4ea9-989d-0836a714c64e",
        "cursor": {
          "ref": "4d5e7ef3-85f6-4a1c-a40f-dc47bc5e2b36",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8401272f-4e8b-4481-801e-409a630c570d"
        },
        "item": {
          "id": "20f12ccb-eba3-4ea9-989d-0836a714c64e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "732b0fb0-de23-45a7-a727-303260c3ef40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be86d5b-578d-49b4-a3af-d7e8ac84bd76",
        "cursor": {
          "ref": "8e0ab11e-0f03-46c4-b6b6-a4c6c9bf8f81",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "49105b40-c936-49c3-aed9-d0091633e4e1"
        },
        "item": {
          "id": "7be86d5b-578d-49b4-a3af-d7e8ac84bd76",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "5694f99d-2da5-4eff-8f39-8126d916c7db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b57a23-460b-4409-b37d-9516f63cf3d5",
        "cursor": {
          "ref": "4bfa0651-1c7f-4ebb-bb2c-f5b3dbfecc2e",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "7481d990-94e3-4059-8f08-377b51704985"
        },
        "item": {
          "id": "d0b57a23-460b-4409-b37d-9516f63cf3d5",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "be521e0d-30e1-422a-8ba2-153761a97eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e142f343-ecf4-437f-9cf3-bb2e08642da0",
        "cursor": {
          "ref": "ddf82a99-20eb-4162-b856-920ceadcaa79",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3ce28076-a5e3-42dc-84ba-de63bce00789"
        },
        "item": {
          "id": "e142f343-ecf4-437f-9cf3-bb2e08642da0",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c048141d-5fc1-49fe-817a-29eb1a772570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15878977-7f06-46ba-9381-c90ab6cf16d3",
        "cursor": {
          "ref": "10e490ef-9bd3-423e-9dac-3988a79c5488",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d638b653-983e-4a18-867e-f6ccccf51173"
        },
        "item": {
          "id": "15878977-7f06-46ba-9381-c90ab6cf16d3",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "13f6ff98-86d9-4932-bbec-8a2b5a713b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc2ad628-f761-4496-8c18-950226b56f04",
        "cursor": {
          "ref": "25df7725-5763-4f92-9300-09c1cf2a17a0",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a8531678-223e-4367-bb6d-41b757e01096"
        },
        "item": {
          "id": "fc2ad628-f761-4496-8c18-950226b56f04",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "35843719-f43e-471f-bcd1-f8e359bcf017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a27bc16-2fb9-4d6e-8197-4f1c21ac5975",
        "cursor": {
          "ref": "d083ef4a-25a9-4e53-9dcc-5705770558e1",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "54efb833-adce-4014-b89d-a018543a47aa"
        },
        "item": {
          "id": "5a27bc16-2fb9-4d6e-8197-4f1c21ac5975",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "0ad17f8e-4e89-4afa-956c-9305d0311db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea96673a-54c1-4657-a5fa-85d7412b8cbf",
        "cursor": {
          "ref": "50badbd9-1796-4b2b-8bab-2dec6eff0b4e",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9f5a0fe4-7002-4188-a175-9b833a745827"
        },
        "item": {
          "id": "ea96673a-54c1-4657-a5fa-85d7412b8cbf",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c87c0690-41ad-4706-bf31-49d960fb4d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50f0c5c-7809-4e83-bdca-b83abcbcb9c5",
        "cursor": {
          "ref": "fa3ebad7-79a2-4cf2-8cff-f5e022de898a",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f55c7f93-4a99-4404-bbe7-db2ffa08bd0b"
        },
        "item": {
          "id": "f50f0c5c-7809-4e83-bdca-b83abcbcb9c5",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0c0b2db0-a6c8-471b-9a0d-e2fe46d9814c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29cd6a70-f9e5-4eff-ac49-7cb990b30aef",
        "cursor": {
          "ref": "14a809f2-dae2-4e77-82bb-8dfa32bef5e5",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "dc04648b-7faa-4a34-b604-52f22406ab7d"
        },
        "item": {
          "id": "29cd6a70-f9e5-4eff-ac49-7cb990b30aef",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "bdd799b8-ff9a-40df-9fee-4bc2272407fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16b8de2-0847-4f39-868e-d48a8ffda610",
        "cursor": {
          "ref": "92417c96-1231-4f89-9edd-61006625a6ef",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "8f768610-b437-4b3e-aa94-c0202b3f7479"
        },
        "item": {
          "id": "f16b8de2-0847-4f39-868e-d48a8ffda610",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "7088cdce-a896-4519-8394-aac38afc7a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b56f5c-d207-413d-854c-65179abeff6e",
        "cursor": {
          "ref": "b3e6706d-cce8-43f5-ad47-96384b414af4",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ca965a4d-78d3-43bf-81d1-e6ff9bdb6c24"
        },
        "item": {
          "id": "33b56f5c-d207-413d-854c-65179abeff6e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "0e721d5b-b486-40f6-b44f-3e703ed4efd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba8d3a5-5db3-480d-8bac-8020227ee97c",
        "cursor": {
          "ref": "51cec76a-1bad-45a0-86b0-ebcb5e14c5a9",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "523e3d8f-2a58-4aaf-9f60-c0650d8907ea"
        },
        "item": {
          "id": "3ba8d3a5-5db3-480d-8bac-8020227ee97c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "bc26a648-3574-4ef7-a226-b25e14ad423b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2725f250-ce2e-4b18-a297-87cbd636b275",
        "cursor": {
          "ref": "461f2a28-f3dd-437a-932f-d90a3ee474c5",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "9eb3d838-4621-45a2-948c-3936f07b8e80"
        },
        "item": {
          "id": "2725f250-ce2e-4b18-a297-87cbd636b275",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "8967542b-76ce-43bc-82a2-7c59998b1b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34306cdc-359c-4d54-81f4-236a270abc9c",
        "cursor": {
          "ref": "c8822796-6b5e-46aa-b277-96629dfb4a31",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "98fd181c-7901-4d93-8bba-d082219c6486"
        },
        "item": {
          "id": "34306cdc-359c-4d54-81f4-236a270abc9c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2bd5702c-12cd-49f5-a9f2-a49bf68cca89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158bae0b-ccfd-4a16-8225-188b5d75a27a",
        "cursor": {
          "ref": "09638089-9aa9-41c1-b3ee-ad4cc4265347",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "b879ce25-af7e-4778-90fc-6c40a10750cc"
        },
        "item": {
          "id": "158bae0b-ccfd-4a16-8225-188b5d75a27a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "100be110-729f-4555-80a9-4ba10821b1ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8b4f83-9a1d-4ea0-927e-d54fe7aec848",
        "cursor": {
          "ref": "3b16b394-d192-478f-b247-1dff8b17999e",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "f764c277-9b50-44a8-9734-89f5cecd6984"
        },
        "item": {
          "id": "cc8b4f83-9a1d-4ea0-927e-d54fe7aec848",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "54e30fc0-2f0b-44f6-b63d-6fd707639b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ae6387-8568-45a1-b720-d026db1bdf5a",
        "cursor": {
          "ref": "550e86c2-1cff-45c6-9dc6-b4007556c025",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "14b7f2ad-f753-419c-ab3f-3b2870687882"
        },
        "item": {
          "id": "25ae6387-8568-45a1-b720-d026db1bdf5a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "34ea68ec-be34-4239-b58f-58bb4277441c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d12ce0-271a-4e73-ba07-8b74612cca22",
        "cursor": {
          "ref": "92652fa9-523e-4073-8ccc-873cf9094139",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "dd5a19fa-b30e-460d-a35b-72a8622df9f7"
        },
        "item": {
          "id": "34d12ce0-271a-4e73-ba07-8b74612cca22",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "52849fed-70f4-41ed-896d-be3ebfe6ded8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2652be9-52d8-41c4-941e-11919100ee2b",
        "cursor": {
          "ref": "c1492da6-bc8e-4595-b024-21c81cbd5f51",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "f59d06eb-bc6c-4699-a1c6-4369ee53d99a"
        },
        "item": {
          "id": "d2652be9-52d8-41c4-941e-11919100ee2b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6947b9ca-a8df-4ae7-b362-8fea91832e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ed4816-c831-42c0-9263-6c20959b5607",
        "cursor": {
          "ref": "00a84736-80ae-4849-88df-6f5bdba65f7d",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "3b6366fe-6298-4f56-b881-55c3026942ea"
        },
        "item": {
          "id": "90ed4816-c831-42c0-9263-6c20959b5607",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "69b31793-3712-455a-86be-81f8c12f6bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d48d8103-3d59-4577-a11f-5daaa22cd4aa",
        "cursor": {
          "ref": "403366fb-c4fb-4b31-b065-a57586b31463",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "b0bcba14-ea6a-4d85-a1cd-82d8c1cdc0ef"
        },
        "item": {
          "id": "d48d8103-3d59-4577-a11f-5daaa22cd4aa",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c13ac52a-721c-46ef-94a8-5f02c53817d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b971c10-3be0-4573-9e43-57bae3a115f7",
        "cursor": {
          "ref": "fce8fc3b-2f88-44f8-8f03-80ddf93b7659",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "0a513c32-4d93-483c-99a7-68bb2658ac7e"
        },
        "item": {
          "id": "2b971c10-3be0-4573-9e43-57bae3a115f7",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "51b6fd3d-958d-42e5-8ada-5b58f9c4dd54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d72ff1-2c76-4db3-9a1e-7ae5f3354220",
        "cursor": {
          "ref": "801e3a95-3bd5-4d44-beca-12868c830618",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "450272e1-c770-4680-aeeb-e711f9b95c57"
        },
        "item": {
          "id": "e6d72ff1-2c76-4db3-9a1e-7ae5f3354220",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c8d14362-9f9a-435d-91aa-b4ad4323adfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b50a478-8532-43f7-9e2c-6c78957fb656",
        "cursor": {
          "ref": "4eebae01-6263-4cfe-9725-4c2f1aa39be8",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "945d33d8-234a-45a1-ad5e-cae967ce5346"
        },
        "item": {
          "id": "8b50a478-8532-43f7-9e2c-6c78957fb656",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f67c7bbb-cb36-40db-a340-fae67a1d5e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6d00d3-c2ce-4061-ae5a-8bb076ef5f31",
        "cursor": {
          "ref": "4043e0fa-b801-4a56-8351-68362aa6d45d",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "52960659-3f20-4e7b-80d6-407542b48270"
        },
        "item": {
          "id": "fa6d00d3-c2ce-4061-ae5a-8bb076ef5f31",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "bdd1927d-ac32-49da-81a0-3327ef45cd23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a1e9ab5-df00-4ce2-ac62-2a59f21a6417",
        "cursor": {
          "ref": "cbdf5f53-a949-44e9-a0db-869d8da6ed8d",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "cad24f6c-852c-4e9b-892c-5923be53ac56"
        },
        "item": {
          "id": "4a1e9ab5-df00-4ce2-ac62-2a59f21a6417",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b07ba43f-1069-46e2-a1f3-e5f1d6e1b2d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda0f69e-41ff-489b-a492-52e1e72d6ece",
        "cursor": {
          "ref": "0118f0a8-bf3c-4041-8b3a-fd19e3620cd0",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "e36d7971-78f8-4be5-a2ec-45febff1175b"
        },
        "item": {
          "id": "cda0f69e-41ff-489b-a492-52e1e72d6ece",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "3d62733f-ff27-4012-b9db-e861366c3b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51d6338-faec-4a47-a4f8-03f63d4e1b45",
        "cursor": {
          "ref": "08222f1b-fed3-4052-a723-9c51f49b9f20",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "3aafc4bc-f67b-4c97-9188-423427c2f73c"
        },
        "item": {
          "id": "d51d6338-faec-4a47-a4f8-03f63d4e1b45",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "7201759f-b21e-496b-9592-6b4d3c7764ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b24931-713c-469f-b4a6-062bd0e05a7b",
        "cursor": {
          "ref": "c9250d5b-a528-43b5-a1fe-8f69fc6bbfbe",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "8d5f1cc9-55b9-402b-8a15-cc4a810505d4"
        },
        "item": {
          "id": "d3b24931-713c-469f-b4a6-062bd0e05a7b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b928f559-5974-4977-aa47-d0301a46262a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ab042c-31fb-4dae-ba23-eb0d1d066e52",
        "cursor": {
          "ref": "817125e5-ea07-4662-b453-97d5919e44a7",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "b7c86a84-e69b-4868-92be-977c6a004f8c"
        },
        "item": {
          "id": "28ab042c-31fb-4dae-ba23-eb0d1d066e52",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b9ea3233-ab56-4c55-8e29-67c67ff30ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649d1ba1-5a29-4ee6-aabe-690b0269fe98",
        "cursor": {
          "ref": "8af71aa1-7808-4cb5-9576-4bcc547c0551",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "8ad0eb94-fd02-4578-b5b7-9a1422c1ead2"
        },
        "item": {
          "id": "649d1ba1-5a29-4ee6-aabe-690b0269fe98",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6a37c480-ed33-4afb-bc9d-3a0d15bd62b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654c91e6-a9b8-463a-a444-817aa5e5b1c6",
        "cursor": {
          "ref": "cc486859-2f71-4a39-9b35-25c9c1c24557",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "47087e74-1c87-4443-9e7e-1fc8946da458"
        },
        "item": {
          "id": "654c91e6-a9b8-463a-a444-817aa5e5b1c6",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "83a88825-33da-4aed-ac67-ada1fb8882f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d88f3164-1396-46bf-989e-d740d0090548",
        "cursor": {
          "ref": "36e3679b-db86-4eea-a679-a4597ec77b6e",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "cf874ea4-a15f-40fb-ad28-980b3115d86f"
        },
        "item": {
          "id": "d88f3164-1396-46bf-989e-d740d0090548",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "41a0fce5-0986-4bd7-9e36-6ec9ad870e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c93522b3-85a2-48ea-8bbb-9844ca3e463c",
        "cursor": {
          "ref": "ba91f40b-3ebc-41bd-822b-0ef37bf8ddec",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "1e062f46-45fd-4b53-91f1-f90629078a35"
        },
        "item": {
          "id": "c93522b3-85a2-48ea-8bbb-9844ca3e463c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "14fc6a89-542f-437f-b0ab-b3c53f7eb8f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "498b4e01-018d-4dd2-a8a9-b6d363e015ef",
        "cursor": {
          "ref": "1032c23e-e923-40b5-8747-c344215d21a8",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "20d80b75-e07a-4c10-aa8d-eb91296146dc"
        },
        "item": {
          "id": "498b4e01-018d-4dd2-a8a9-b6d363e015ef",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "2a3b270f-afed-4072-bc10-6fd7ff724185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef6288d-f2a9-484c-871a-1dff2a1e2087",
        "cursor": {
          "ref": "67870811-be96-4405-b61e-13695afa53c4",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "9edce969-d038-4b48-b28d-b27a8e1df1d1"
        },
        "item": {
          "id": "bef6288d-f2a9-484c-871a-1dff2a1e2087",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b871574c-3d45-4d99-856a-72003be83cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3163a684-cfd4-482c-b9eb-19ceca65b1eb",
        "cursor": {
          "ref": "a407bd06-31c5-46b4-abf4-0c8302e04543",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "070e17bf-cfdf-4d3c-bc9a-bb12bfda4cca"
        },
        "item": {
          "id": "3163a684-cfd4-482c-b9eb-19ceca65b1eb",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d5e7e055-3604-4419-9039-c6fa2d56ea9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c46ea9-bee6-4a88-a294-6dff0be019ad",
        "cursor": {
          "ref": "45939849-5b81-4f18-844c-687bc18ca87e",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "8f0de491-12ba-44dd-ab09-9de5fd5a1287"
        },
        "item": {
          "id": "a8c46ea9-bee6-4a88-a294-6dff0be019ad",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "12c129ba-e14b-4673-acb0-c0b01649b0a2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f5f1156-6dad-47af-b912-a987b31abcf0",
        "cursor": {
          "ref": "b8df40a5-61ff-42e4-8edc-921c433d712c",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "56b40aed-96d3-41dc-84e8-d8c2212701ab"
        },
        "item": {
          "id": "1f5f1156-6dad-47af-b912-a987b31abcf0",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "6a3acb1d-ec8e-471c-a006-573ca9de7e52",
          "status": "OK",
          "code": 200,
          "responseTime": 43,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "79cdfe12-bf6d-4c58-ad5d-0d95ddbb7b5a",
        "cursor": {
          "ref": "add42acc-8d0f-4c5e-ac33-5f6b42105b5f",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "01f06113-9e17-42bf-8b7a-fbd27d2150ca"
        },
        "item": {
          "id": "79cdfe12-bf6d-4c58-ad5d-0d95ddbb7b5a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "704642be-474a-4bc8-b4fc-4c735e48fcc7",
          "status": "OK",
          "code": 200,
          "responseTime": 2780,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b508c25c-652e-489e-bc9c-dec71180101b",
        "cursor": {
          "ref": "f6b15701-45d3-4386-9870-5a3d04eabee4",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "062cf292-0f85-4c74-acf1-c3edcbf100a0"
        },
        "item": {
          "id": "b508c25c-652e-489e-bc9c-dec71180101b",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "bc42f87e-e0af-4481-8981-b9e28fc1589a",
          "status": "OK",
          "code": 200,
          "responseTime": 2116,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba233f7-f55a-46a0-b5ce-78b2d441c1e9",
        "cursor": {
          "ref": "b25f6320-936f-4e5d-a908-c7bffb34889a",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "984537a1-1636-4332-b50f-9bfa2544e1a1"
        },
        "item": {
          "id": "2ba233f7-f55a-46a0-b5ce-78b2d441c1e9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9db01ec0-1fca-4728-8b25-c35ea47c89ae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba233f7-f55a-46a0-b5ce-78b2d441c1e9",
        "cursor": {
          "ref": "b25f6320-936f-4e5d-a908-c7bffb34889a",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "984537a1-1636-4332-b50f-9bfa2544e1a1"
        },
        "item": {
          "id": "2ba233f7-f55a-46a0-b5ce-78b2d441c1e9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9db01ec0-1fca-4728-8b25-c35ea47c89ae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e38a3088-88c1-48b2-ae03-314b1d300f6e",
        "cursor": {
          "ref": "09f52dd4-7c1f-450c-ab27-51282e275529",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "ff425376-4e44-4f0f-8cdb-082ecadabfb2"
        },
        "item": {
          "id": "e38a3088-88c1-48b2-ae03-314b1d300f6e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d7ce593f-1f7c-4bf7-bc8f-89ba8b04563b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a09a0f-5a6e-4e20-8ee2-6bdcf64ad802",
        "cursor": {
          "ref": "f53d88bd-b04f-43fd-ab45-a29e1032334c",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "2ae04627-219a-4fd5-a5db-cb0387f34156"
        },
        "item": {
          "id": "43a09a0f-5a6e-4e20-8ee2-6bdcf64ad802",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "85326365-aa96-4dc4-83fb-a14335b33b08",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}