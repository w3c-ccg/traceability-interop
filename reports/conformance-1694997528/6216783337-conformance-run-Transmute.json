{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "a39d8871-4fd7-4462-a158-bddcc23c157a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b274b739-8f3b-45ce-bdec-5837702d9053",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6cc75475-3231-4c17-bb9e-0791775291b5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "702d80b7-dc55-4c71-88a2-4811a8a63bd4"
                }
              }
            ]
          },
          {
            "id": "d6cea0e5-6583-4ba6-80fe-3f8b90a8c811",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4d9e7889-6198-4763-84e3-7327fe634dcf",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7f7c5d5b-ff00-422d-b2dd-8b420d309134"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b705a2d6-f7bb-492b-8d61-3ff476a95bbe",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "6aec791d-ff93-461a-8364-adbec3bbf0c2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fdbff3b2-3bfa-47a8-978c-1e9978810f1a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b1ddfc1-3503-471b-9b9a-d233da149d85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "244655d8-8342-4be0-9e5c-0ce685e52a7a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0b91ec08-60c1-49aa-a660-6b7c042de80d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ff3165df-13d6-4329-87cd-c56fdeb8b2d4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fe17508f-68dc-4ce0-a3dd-af2612459c1a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "661cfb96-12b9-4cf6-aa3f-1770405f3c19"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "546c5667-b56d-4cce-8f6d-a8bf9ddbcc71",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "51e606cb-ec38-4623-bcc5-bb951327d609"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d7b07bb1-d2b2-4f43-bea4-800fe64aac3e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "55b788a3-18ee-491f-af99-8217afec3353"
            }
          }
        ]
      },
      {
        "id": "0dbb68d5-0845-4dc0-bd22-5fed2c7dd962",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d1fe6acc-be34-42c3-97f2-3d9912cefd7f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "61687d03-440b-4cf8-ab8a-a3774656eaed",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "76031e94-d75b-4978-b209-496d5195c485",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b145fc84-fe56-4d98-9e6a-7a49fa012cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33e82426-44b1-4214-b856-87e24a750be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3227ad4e-3b40-4d30-863f-3408bde32e4d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de015a06-bc3e-4cab-a6be-747754723bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "35536ee5-b604-4269-8824-cbf2a7a1d5fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c4b2d3-fec6-4197-9061-6425d3dfbc42",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c4844f5-d2c2-4260-b039-213c7d0d4eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "24940ed9-e0e4-4946-b88d-d832dfe7dc0b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2eec0ddc-e684-4f86-b771-4cde27de30d6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dc351e76-4d2c-4a31-b3ad-0ea9e3c567a6",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8f5f83-04e5-4255-8518-4117c096b47d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "add95a3d-b8e6-4033-8d13-3018fd1972ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f715051-2564-4d4e-bc12-e0b5b2c6d5fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20d5a79e-de6d-4ac0-aa39-4459b5a62bbc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9153c4f0-ca17-4c60-80a8-b2bad04c1ae1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5503f931-68f2-466d-9a7f-6f7e12c6e5a7",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9a82106-1e09-41cb-b1c6-ba17f96feb27",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "92075f32-1782-4848-b707-0f5c52793284"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "335ec74b-7564-430e-a50c-05571e2d2234",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c0ce6787-1801-49c8-92e9-68bab27006e9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a479dd40-d039-4a33-a09b-92b8371b2b3b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "48fb1525-c627-408d-b28d-d70ddb58c49f"
            }
          }
        ]
      },
      {
        "id": "09076fb3-07b6-4cd3-a024-16e4371ff15d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1c178edb-8fd1-48cd-ab3b-d34a9c07f392",
            "name": "Negative Testing",
            "item": [
              {
                "id": "31603a33-e1f4-471a-9d58-4b4a91d102d3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a2beefcb-2735-4e4d-9f02-57798127307b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b30db29-65a9-4930-9c49-8ecaaa0c3a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "362dea23-47d1-47fb-9b2c-99321375c5b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8cc68a-d093-44a4-ba94-d1242ae7bf86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0fd46e85-675b-4402-8e55-3a5f95962889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3990c4d1-d6a8-4758-ab17-0fc9e351620a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12842185-450e-4196-b9a1-7d878df99b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83905146-4205-4cae-85b6-97f532789029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e481e167-75ff-4fae-b3c5-cba470c2be52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "517179ec-b30c-4a58-8b03-87401d1a6941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b7f5937-5081-486b-ae6e-bfebee16c925",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "969c4b93-b12b-41f5-ad3a-a6b671de77ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08c47bbd-679d-4b0f-a65b-823f99de8208"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d56d5c30-ad18-4197-b1b9-8325e84bec7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e00ad3e4-8999-4d90-a352-23cc4849c0f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb1390f-ca86-4e00-8769-074fbcd34847",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89cd6d8f-2d2c-4ec1-a56e-276345afe7aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f47f4eb-3d78-4116-9cab-0553150389ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6448852a-cc1c-4206-8e08-e40e52da1a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95f679c9-5a83-4e6b-bed0-d64e48d9eb93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ef3e00-195c-4cf9-99e1-7e17f6283eee",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3580608f-013c-42f7-ace9-8065ab6c559e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d6058b1-de87-4864-a00a-4baaf877a47b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ce024d-c933-4074-93d7-6111d8645dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5f95652-3ebe-47d2-8821-d24686d083f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f64f4088-a7ca-420b-b65e-15ae8600b1b0",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ec20cbd-d5a7-4c55-88cd-23043e5b89c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5b29ba5-99b5-4ef9-b0f4-293b1d69f792"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721bbfac-01a0-4d08-9371-8d0b20a5a11f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b71c7ab-2dc4-4574-b312-25c29042ede6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a8cf23-a1f1-4c6d-98da-01b22bf18bb0",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11761793-a00f-43b7-a656-0ba605e7fa01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6253c86-96f6-4498-b313-2753b69041f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7df5b8-e497-4de0-abca-1fc10b6bf750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc17138d-6593-4219-90ac-989c70e7d8c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df23acb-153c-4db8-805a-387a14af71f6",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "080592a6-7ee7-40a5-8d8a-561d7d7537b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8bda8b3-511c-433b-a2ef-c67bbd6cbd35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5bc943-108b-415a-8080-24f0ca7982bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ecd2fb6-3d8e-4ab8-8886-8a9340ae071e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e8bb8a4-772d-47c9-bead-f72c1f5cba06",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62be8eaf-c842-45d2-89c9-395bd34f438d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39f1a8be-bb32-4ce2-bf62-090359634fa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95b7722-733e-4400-a157-ce690c8b6286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f72d247f-9d56-4d95-ab42-dc197d24b545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b016c33-d1b6-46c8-aaf7-f9b7cd1f3847",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ec81ab1-4512-449f-9a76-cddf20ed7040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afeda3d3-13da-4f9b-94ef-68052aa30f03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16dbb0f-513d-44a7-9d01-68324b3bba68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "23cd2880-24ed-42c6-ad00-b0cd553aceac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c61143f9-657c-481a-b9ff-9989e2f74e67",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b67157-6f3c-440b-9480-91eb01b15c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e439f880-a096-408f-9c3d-c5ce60d36d46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac49ec88-a3a5-4ef8-b6e3-fa6391cc5aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8bb38750-9a74-49d0-b2af-8595e78b6b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b3a12e-4c83-4f73-85f0-19423b634351",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dc6bdb0-53e6-4f85-bbd0-6ae5f71a225e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "385f5fc0-1039-48b5-be00-abe24f5913af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a40212-e96a-4721-aecf-e33f0d0d45ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bae67f5a-7c9a-4a5a-af2d-998cb9e8c7b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f939975-54e4-4674-82a7-7943ce868fc1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9235d4eb-f7fa-4e3d-a9a7-73c761ac3160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f06ea83-8fa9-458e-87eb-f58bacb6ebf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53330539-eed5-432c-af44-6eea76ef4b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "835b6d91-b890-4cc7-a4bb-5aeea6684a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63bb97ad-7803-4857-a67c-050e23a65297",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6316517e-62b7-4ef3-bc36-d565f2d60fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9b079c6-acea-4378-8623-f2351d16a4f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbb54cba-4367-4dec-94c4-34b3d2fec784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d409b9b8-fbf2-47c9-a37e-3ca70d5286a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c0bf3a-30e8-41b5-b5e7-802a3a701f65",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97cf8210-0db2-46c9-bd39-32f4b30544fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75dd76af-bbb4-4025-a367-048b1ca4f7b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b9cb53-73b9-4cca-a23a-1dbcd14a3946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34f84bc9-ce0f-4cb7-ab09-a1b63547815c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee67330d-c6c7-4800-b211-f87bb057cc4c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbc8f861-55db-45b0-9151-cc820a5dbf01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a739f4a2-7f0f-4b1e-8009-9c7f9a2956dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf06c8bb-6396-4282-8ac8-ad94789d638a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e31f61fb-b901-41cc-81ac-48fc120b7c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e484f77d-508c-4ba4-bb62-e27a464daff7",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8efc65a0-d886-4c2e-9206-43f2ac080d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98ef282a-d31e-46ea-8fa5-d80b895d62d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5115611a-3113-430b-bccb-7dfd73d9c809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3225981-dab6-4369-a981-b695e333dab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d47b330-e034-4b07-af46-3cead5827ee3",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95303085-fdec-4969-ac6b-34dff81efb7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b0bd8a5-cfa3-4333-adfb-f2395b26c47c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a44619a-4e4e-4a4c-9054-cfffe95f8425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "cecb4d89-3cf6-42c5-8a17-915fde4ae4a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c16aaf6-3e48-4b67-aebb-7e36696d5625",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fbe225e-0e4a-4e52-8688-fb8c6c903966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "258a3b28-1372-4614-9d25-349dc1446473"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4da67822-05da-4df3-9a08-ff0a400f1f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a632eae6-6065-4cb7-addf-9428af28e545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e435c49-64b7-4127-932a-41f1fcda73f5",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "148d89d6-2fd9-4d93-abf8-490b895d17b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24534d78-2adf-4cfa-a591-b35e5a2adf15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a13be463-1ea7-470a-99a8-1eb99f0e318d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6205b2d-6325-40d1-a8b4-fc7eb0479d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e88859d-e8ac-444d-8077-66fbc712e49f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab89639-b3a6-4b77-9419-f2a44ea5c86c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ea74ace-f111-4193-8dde-1e5234459d16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0eef6ba-49f3-4abb-bc93-26e0a6fde9c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ea56c3a-6d33-4ba4-9fac-ad0e0bd3c73d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f33de1f1-48a9-41e2-a2f3-6205094e4e1e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8adf27c-b8d0-4c70-96d2-7f78d78eddb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00d16824-0e51-4e93-b00a-3bd838cbb4fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c5835c3-b7c8-45c2-b4b2-694e53357538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d01e74d-3237-44eb-b7ce-5da6d89ded92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "400206db-19c7-43a1-82e6-932bb03219c7",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2abdb9e0-898f-429e-8996-5fd326752333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a613552-a38a-4688-9d79-f255c16922d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "472e02ff-b33b-4732-a5ed-25c9fcbd9995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "573a29da-9020-47be-b84f-14d9640579fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee40dcc-6624-4ca6-9cc3-6028621e1a5c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d4beb5-7813-4145-92cc-5fe3dcf93ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b54020ea-0634-42d3-87a4-06ab06f6a408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5683170b-e28b-4f95-9c05-28c6c5e016c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c23ef296-3743-4f74-9c6f-236037d8eab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c6d781-f1f0-4f7c-8953-e66bb9f2304d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb68c13c-0a1c-4298-bb0f-216eb7ac7af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b605a3d0-6907-448e-89c2-5956deb9539d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34593902-c129-4d22-9379-118a919046b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "caeb0460-8949-4d19-88a3-dc7e859dd36d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb12900d-4dd4-4638-8565-3fe9ee34da59",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b55dd24b-5475-43cd-9c7d-74f6a31c983b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06d41f5c-997b-4907-9496-b8e7d05f2d21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf59dcc-151b-4ada-9838-0778c48b6e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f2b0ccd-68f9-4826-9cda-efe06f638760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc5830d-38a1-4a3f-a827-360398b21b35",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c38d54a-af89-4b80-b490-17ca4db6a0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4a6d4df-63fe-46e6-8e06-60cfe62927f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "709c07f6-adb8-4e47-b3a5-69b04ec04538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "797f310d-8eaf-4063-882e-deee713b4450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f38f849-c481-455a-a6e1-670639fd6863",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d8ee07-47d6-44fb-8807-a4025a2e624b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6e20690-3614-442e-a288-fd0a9d00f988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc5916e0-3b7f-4aa2-bf1c-b31026c4ca3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e93a500-d53d-4329-bdc1-42f7670ebf55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e01bc9a-7571-44ca-a219-7660acc27ce5",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "541c9b72-d173-4047-aad8-95005722d15d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a91ca3f-c2cf-4c63-bcdf-0a89a200dacd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30fd805c-8272-4098-961a-1a64d17192a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "13e019e0-3af0-40c0-a265-57b1dd520848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b08345d-988b-409e-91ff-1db86d6fd1db",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd362a9f-f079-4067-92f5-1204c303f4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1270fe97-2817-483d-a529-3b384842910b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e659fea2-7e76-4608-a0bf-3e4ed348a5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ed63069-c270-4aec-82ff-59cc1a866740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a65a07f4-6ad7-4645-82e2-fe5c0d41fcf1",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ded151-f7be-4713-8ec1-c33387ff3fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf6fd0cd-3e2d-493d-92a0-43802004920c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "337253e1-72a4-47a2-a973-15fc1e81d4ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8792e12d-d34c-4def-b284-59b3f53cd46c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6636fe65-3ad5-437b-8117-21a9c4087d37",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89753c6d-6838-4336-93c1-000b1871ea63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8c190d6-b06f-47f9-bbd9-5306307dd3b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6595bc8b-fa57-4a2e-ba20-c1edfc4de4bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cd50902-466c-4e93-844d-db992f1ff042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda32dc4-bb17-43a7-a6c7-5d7bdd44d152",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "643fb2f7-661b-4d67-9c4a-2f1c03afe58c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e478d03-9ed7-4f58-a60b-272d1a28d2d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6551c22c-b1bb-494a-b2fd-55a48ed462ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbf2ae9a-be8d-4186-8011-c0d71ab6facd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc73fe82-7703-42f6-824c-235d7fb112fc",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2ed6a4-8931-4d90-a373-586ae8f0a560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9f73414-04fe-45b2-bcd5-82fd2a64b5a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296ae521-b41b-4051-a95c-0ae88f8d9c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dddf7ac7-9512-416f-969f-c564511d2e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be15c4c6-9f06-4380-954f-006923448b35",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0cf660f-bb79-4869-b6d9-88f73e6aa1f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afc986ea-edfc-4fe0-b359-9e2376115560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d70b237b-39e0-47e1-afa3-ce70a77f6d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "5bd10885-77dc-4bf3-8614-d2e480d6244b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e69547-cada-4acb-9de8-9be6937e2639",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5316e3-f784-4fa5-86f2-86e542b91755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ac5df259-81b3-4bd2-ae62-392db6932ba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c249c4-8c26-4df6-8b61-a224ff8a92cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "37404d87-d362-44ce-a9dc-f4558936edcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d456041-0047-4a63-92c5-c61946f1b4ce",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb9749b-22bb-4369-af72-9a3725a00022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73fbda7c-fc18-4c6f-96a3-bc2ba97293ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28489bf4-a747-458b-82b1-6a2316394375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8074a2a1-4fa5-4df2-abba-8522690aaaac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "326486d2-4078-44bc-a8ca-5fb075fc3380",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "262b672c-3053-4109-9c4d-f2760edadb86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65712d04-0620-49b3-965d-a71710971c1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6764cb57-44e9-4579-a475-6dffd8031340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "01ab3fe0-97b8-4832-b591-d03e568b8568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9682fd48-d26c-45d2-9a40-8ea26ca7a761",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13510c99-6007-4d94-9e09-d2873972c15e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e9beee3-bd6c-4e0e-a4ff-3ae5bb099141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a828a1-f33a-47dc-b354-39c0c02418f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8291cc70-139b-474f-90f7-7d0126237f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97548c59-646c-4d59-a8b9-020f4b6321df",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c696540-d45b-4f7e-be1e-4d812841c694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "709c4f2f-027c-4ca5-a64e-0ce2688cc0ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c55e70-65b8-4949-ac9c-0f435ccac700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9574b819-90dd-449c-9ab0-f72f5b62a168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc58782-d220-4672-aff3-38a649b6a1a5",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e8f54a-32e0-4d0d-a614-13b513a650f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70d33c98-c945-4c45-a100-58fa9efd08b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31fc50de-6eba-4fec-9441-39284df7a649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "05b52619-283d-45f2-bdf0-439bed06ffd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "198838cf-83e7-4251-95ac-e649d3b7d1f3",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b16003-265f-4369-a682-f9f113ce7205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83e3ec45-45c3-4d25-8ca8-1e7465633276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7acaadd3-b7a4-4942-9c67-cc8d5fa83423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a8c5762b-372b-41b9-b813-e5daaed28472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "207b42a5-4968-441f-bfcf-fbca34f57a16",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "612e4780-4a02-479d-bef3-aacd778f7ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e67b28fb-168a-47d1-89c9-6eb5af925d75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d7bfbc0-1996-4b68-bd29-ad288482d9bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7d8ab8c-ffc5-4c18-9350-631fb6e1393e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b539166-a6b9-4d05-b97f-cab13206e588",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e548ed55-379a-4a06-9c82-dd600b10a175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b3fd638-380b-408f-b22b-396c2c61c0e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d261de6f-cea7-4d1e-8107-2cb00b8bd6fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "1aada65c-24af-4614-b246-7f62a2efaca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d018ba-5364-4225-81ec-250b71808783",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "143c53a4-f17a-4b57-b4e3-12ff76634cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c65ac25-873c-4904-8d84-cdd1b66ab395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb160a2-5578-4810-8cdc-aecaae27241e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dca60607-fed1-47a1-ab8b-7a9ece04d862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aedd2264-2175-441e-9ff2-75a19e22b5c1",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d3500fe-2b6d-4204-aadf-d620b830287d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68001b83-56b3-4b3b-a521-6a2e7411b59c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3edab17-5922-4054-ac57-d8c31495af6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "11318e20-54aa-478c-9d8a-a9b88c991633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff3becfa-dee6-48a9-a71d-ec8964050eb6",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc66ff1d-c7ae-4ebb-ae77-1986c5bcf06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "635b4ed9-bf54-48db-87a8-73a1fe0904bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ec8be5-8ea8-41b1-b42b-5274ea8b7521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3eea8f2f-3bbe-4300-94e1-baf0498e4c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d05eae89-7efb-4dd6-8534-78e3fd996d30",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe903c8-1e6c-4499-9890-96f9e3679e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d433c2f4-3ea0-4944-b856-9d07dbc3c3d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "482fd181-1227-4c3b-b226-eae407890e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf9ec713-c3b6-4b19-8f57-a6117eb70f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "427b54c1-5d60-489d-93a3-75cd3022fa5d",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba052014-d804-45cf-9a03-c3a90cfaa5b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c75e48c8-84c1-4f93-b051-9974ccd4bc8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af0d3bdd-a005-4745-916d-a0a8ab6b89a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "339a8fcb-0d70-40d0-9c67-ae67e1e0e561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "076eb09d-925e-4999-aa22-66619f83f14e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5cd75d0-8cec-47f4-956f-8dd35c14f044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d8cdf2c-81c8-499d-b8a0-5e459e3b5805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c695c0da-0ba8-4f43-b4a3-5be4baf81cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4fcea1c6-5feb-4acf-8946-9c9534e366b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e92d57c-9975-489c-aacd-cf1e4738087a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f6e95c-16b8-4a95-8e9a-7c145520248d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9156d7df-32f1-4e77-8725-5c4cf951fe5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cdca302-9632-427f-abc9-0341f0195ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bd3544c-7630-408d-9fd0-af3b67760c38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64613e04-8189-462b-b9ba-a5a3f6e3a07e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82066e62-0cc3-4e38-b9a8-262e3e6532d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c39790ae-2ed9-447f-a3c7-b41de5c84093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff268d0-9731-4d25-a02b-b2dbcc0dbd15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fbf2786-9682-4f9f-8697-ddd2af9ed98b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c2469c-2014-48d3-89c0-616cf385fb4b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49344e30-2ced-4840-99c2-6222253d0faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a76cdc5-6484-466b-b752-eb5130ddffdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98086ee4-ce02-434d-a209-d8d6cd1b3d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "126d7d3c-811b-4e96-a504-af90cce10da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "680700b5-5904-447a-8fa2-df067a4d5ad5",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f7dd21-fcde-48fb-90e9-0fa7939a9e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27223e49-12c0-474a-9f61-86d9870afabb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a59229a6-75e8-46ef-9fcb-60338b2d642a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ab40ff9-8034-475d-82e7-d5644e929d6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f418cd7-c973-44be-8aba-e37fcfc7abfd",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3619391-7118-4ed0-a8c9-8f854b1467dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0370e02f-eb30-49b6-9ce6-d1b43a8bf78b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a972b07-ea77-44c6-9ada-6b6e98950496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3540b257-f439-43b5-8d5a-26dc09d46048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b231443-4d40-422c-bf16-d54eb0e6798c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "335c5172-d901-4b49-8ffa-2100369de9dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02b5e5c0-080f-4513-83ae-f387a9f6c0b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a07b9f-7959-4424-aa7c-84a2e027e76f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a1be3086-b3e7-46bc-a2fe-5e52f19044ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c670390b-24aa-41cf-9b73-a101068b626d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5945756-9b2e-4f99-bd16-fc108639a71f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47112e4e-764e-4a76-9f12-cc7870efc295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c021361-8b99-4716-a332-c940926082db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad95fb74-a81b-4877-b199-a2017b6818bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b085e0d-70b4-468b-827d-8a73573a0d34",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b00f8b84-0b5c-45b5-bc5f-2523a9895b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b97c82fe-aa04-45f2-8700-7c4fb273afac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e096b8-3dbb-4320-947b-5a8c8768ccc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f829082-9602-4524-bcae-b0575343ee39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eaaab90-4113-4fa4-a6c6-c6820dc91279",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5a786b1-de76-4cfa-956b-27a6f75ba85a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d92b617-17d3-4ed1-94dd-16e05aefda3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddfb4a01-bc92-4c83-a49b-7e7d18e0526c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae24c5e5-2082-49b2-a1b4-7e202c7b235f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f8b1b67-d95c-464a-9bf0-cebab48c0f71",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf161ab-e1ee-48cc-8581-ca44c2aaca00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fcf2c19-1d9d-49dc-bac0-7167756ee264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f08728ee-e049-4acb-b728-4fa6f316ee39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0fb6c9f9-7537-42e8-a89e-797204dcb86b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c788913-6e19-42a2-aad8-77e6b9e5657a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d346687b-f6a5-4dfe-b3b1-77613ad3ac4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45242cc6-3e84-47b7-b77a-57312182c644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6247b30f-05df-4b4d-8eb6-453357d03ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba08ddde-9bb8-4a2c-92df-4c351e4e5137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c103e9d6-87d4-4c9a-897d-2553bdd2b1ce",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c92ea9d-6bda-4382-971e-9c0bfa24f0d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57900a60-0510-426d-8fd0-cc38aab04fb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d10f5b-6d1d-4e05-8517-18418e494d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "32723af9-14c9-46e3-8b18-5e06e134c251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ec9444-6a6e-403f-8f9a-d5ff6be99add",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ecb056f-d04a-40c3-8000-ffbdf3a2c682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87797ca6-20e1-445a-81da-c5a3fd958ebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce786f43-ec63-4867-b2af-abbd45ab75e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "96abd4c9-0683-4089-bc10-c3a92511f7fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4116ae06-1b39-449d-aaa0-98ae797f77a7",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "847972fe-9b45-4e98-aa0d-8dd196f6d300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bacd7a9d-8474-4e2f-9ab0-3b344c6bb7c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e883846b-ec52-4d60-844e-33194ac2cce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c634604-986d-4097-93d4-03fc0688b7c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d20377-73a4-4ca5-8b06-5d8f85fc473b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b9a3fc-f504-454d-91c4-cf0a7cd2e4cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72319738-56cf-4d01-9133-73e7a2aba736"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54cd51b7-e1e3-42ab-9d07-229959633fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ddd201f-49cc-444a-b733-39ed8737726d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35bbf938-fb6d-4ea8-a3f4-c8182e803d4a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1f2b62-5dbf-47e9-9c8b-c51c8d1a0ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63bb1e60-b639-4253-b653-2b1aa7f9fec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae930ff-21d9-4656-a565-0d698c0dcc86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f485332e-1e4f-4072-8bcb-feef7b572d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a543ac8-e03f-479e-a96a-d54ffe946ea9",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb730662-db9c-4f38-8a0a-aef103ada95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31c0542b-dc50-4762-9244-8c4e4a47f17d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cef2ac7-93f0-4270-8195-13c8afe769f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0c242d97-1504-4239-88e9-59ca0d736bf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc0bfdb-9d51-40a5-babe-7fe70cd85e97",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "632c026a-18b6-4e9a-9f9c-8e6a51eacf6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc09b95c-087b-4231-86c3-8d66961f423f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c18a285-d031-4be9-b429-666001e84419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5110487-4881-46f4-9e4f-8430a9f84002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "586b2dfe-d098-4341-8533-b123220b006e",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f9a74b5-eb49-4c38-bb4e-de05bfcde56c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22f09a4e-828c-440b-ab46-daefc0f9cd77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f64c88d8-c4f2-4170-baa4-70ff831a6007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e514077-c320-4241-bfa5-96d71ac8dbea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5133f55-e05e-4fb9-ad69-da1fdc343873",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf04669f-195a-4088-80be-8959a13848ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6802d4e1-297b-42fc-8a6b-d70df8a9670e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf448c0f-2714-4c16-b971-bcc93dbcd762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37d549ca-2cc1-46e9-9de1-f0b88e1c414d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f7da6d-d380-4a21-a62e-27f46a7baa24",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de29bddc-1f1d-4b02-8d66-71e061cf6c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45367579-0617-4f62-9b89-67212a0ed4bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5de8265-1023-4d0b-b54d-8c7f3cb369cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dd28fa2-8f6b-4ec2-b11d-cf2cf66073f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6babaa2-4bf8-42f1-831d-302f222810f1",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db4910b-0af0-41d8-bb8b-9337ce1833dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abfdba0a-7fcb-4a31-bba2-70b04fbae6e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a26c1062-f37e-4e4c-968c-f87264372447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "512a516e-fbc7-4625-9598-9fabf3378ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4e96e12-74c4-4064-99cc-f448dddaee51",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d37484-fbed-42cd-858c-8ddf3e4a0ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "513c7e0a-1a5a-4d3b-928b-37439508015a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9134734a-3597-40cc-9c49-f64649c3b687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "da05234e-77cc-4954-8d7a-e183f853663a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9a1eec-cc17-46ab-afd3-adf8406b9b13",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30ad539a-69d1-4519-96de-09dd14f3c799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a3c471b-60b9-4575-b3d6-51e67d06a1dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b82a51f-c861-4c4d-a255-7f99f13e5d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fd0eae3b-8d40-4e01-a738-66639fdd6a1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "387f8dc1-e1d8-418b-8d4a-1fbdc682653a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4967ac85-3e15-4f3d-9893-e6e6e7590d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "372877bf-d116-410e-b117-5411ac26ef80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7873f981-37b3-48e3-a5cb-d84f02d61094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "69bfa365-da5f-452c-9594-cb956f71d8b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc5eb48c-9484-4940-9acf-6526cb271f0e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a9e69d-cd0b-4a08-8396-365261db8b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a05518e1-3c47-4ce9-831c-6b34f94cc210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf44640-288e-4c9d-8d20-8d60adc4f1af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a5f3f14-bbc7-4a43-9482-e9aefdf22f0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e86790-a43d-4703-9ed7-93b1cf0adff4",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be31db3-13ef-451a-8844-618229c01e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7ee8926-376d-4da5-a098-f90cfbcc8ff6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "820ade5c-a9e9-440f-bc41-3b148202b609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aec1bb22-527f-407d-a01e-f22033730dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a75c0c09-f634-48cb-b028-4222301460d3",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2249c98e-b6f1-4a52-b83e-9cfb2d24c4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68a56ade-b00d-4527-88e9-df81eac692d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef52cca3-2f12-4438-8b28-a26c65e73491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a71f6bc5-7b41-4b7f-9393-ad3638bbb661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff25ecb-7213-4665-a128-c87a8ae2c680",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1713f85c-a414-4d90-8b5e-c68d3da7f8d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39f4b771-3e16-4d28-ac49-6e44db1b2350"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d658c308-829f-4ceb-a09c-e3b8c26410a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "40ec385c-2ca5-4d8a-b0a6-5d64fa095a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c3bb79-935d-4b34-a620-49f9691dcf71",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "890b4567-d41e-401c-90f3-cfc4eb408598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f82a7f9-3065-4798-912c-981e1ee9fd7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5decff01-d8eb-491c-88bb-bc942d1b82e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d4238bf4-783f-4020-8161-1338542964a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06cf6683-5abf-4fdc-8fa1-3fd2323b6e69",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48882e04-72c8-4cb9-80f4-151c694b56c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "591105bc-7adb-419c-9a37-427200168d80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d7fc60b-e17a-42ea-8343-97fcdf13615f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c1c3bde-e6f5-4001-a079-90c60c827e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c65457a-e4fb-48c9-b36c-a3c994736c71",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce7783b9-533d-4dd4-bae8-644fe74567b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1cd1c6d-be9c-4f30-9c36-6fcf6c82a543"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac57a55e-ba82-40ba-a846-2100fd948e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d302fabd-71e5-4a2f-b0b4-f19c3b68bf3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0343ab9-2f73-45f8-afaf-34095e1f8f51",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c299ce72-68d6-4bb1-b590-b8e9a486b25b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e368e291-2354-4ac4-b257-5fbd60d4b49c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7296592c-1e97-4017-ab3d-9ac68206e016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2da291cd-5358-46a9-82a7-f369f07574f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b4d218-7947-446a-bed6-f41de89c9ead",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03108aa5-f7e5-49af-a6bb-9eb709ba94cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1747479f-a171-4f47-801b-375e0ca3fa01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce1a26d1-ba81-4593-ac88-f0a974a8e6ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "834879a0-fdfb-42bd-8f12-8d11c6795e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf76445-49c9-4e29-aba0-890822112423",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5366e469-628c-4e3f-b05f-abe8d1059dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "498ca3cc-4cc2-404a-b9d9-643617f45d73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63243c15-a263-4bc7-9c2a-4714f4c1718d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "66356058-a4fb-41c2-9021-d42b7189b9ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "753a3e47-2f0a-415d-a168-beca96fbce97",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de3dfe86-4917-415e-aa78-02fa404a3bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c512a8ed-3f0a-4adb-a826-7f0633a0786d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b9c8667-cbca-4640-8eac-f5139111de6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d764ac7-12f9-4151-98e0-b06748cd9b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afbd689c-a9ed-4f48-ac06-57ae73eb40f4",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2a01b5-6f31-4a12-a31d-89359f2e72bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18ce6830-ca7f-4740-93ca-f897178cb53b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a8b34b-7fff-4c21-9847-db0b3dfe9508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a3578db-e254-40dd-a78f-06f10d15344b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c72d81-4f8c-43a6-89d9-261fd92fbaa0",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "632e936a-2fb7-4e46-89d6-9b5ba6983f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12450231-51ce-4aac-bdb5-911ab5387d19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef61024-07eb-49b1-9269-48842db4de41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4909b79-c930-4621-ba05-049dac30a996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f1feeac-dcb2-4c20-8f90-5193ae052e6b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db75b568-3e86-4c80-953c-2bdab4e0d182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6de042bc-42f5-4f3f-afea-9023dd9b9bc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d98e4e-4330-4a97-9d5a-3e6af807fc6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f05b064-05d3-4fed-96cb-4892ef4a923b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db65b9af-4e82-480b-9cab-2151dffe9669",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d346ead1-e162-4218-9337-70ff4b8cd3c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc7e9f31-62f9-490a-9728-922f3c96d214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18348bc8-8a94-454c-ba02-577a0335a055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "853e29bb-37b8-466c-ac03-e37a1379ea1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b72f3104-37d9-4d93-9080-4bf7b233fb52",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d566fbee-7eca-4831-b817-549c0bf4f7dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c92c95e6-7e2a-4dbf-988a-5daa4732ebed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3365a99-7510-4940-9316-73a3a631403c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ddb6e6c-b17b-47aa-a813-aab58e406d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8cab69d-e45a-41dc-9111-9a39efdf9935",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6dc5ca7-b372-4ff9-82d0-9233f885daa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8575add1-8876-468a-83f5-8b30fbaf3541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b181854-10a9-417b-9c62-80f6716d3044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "986c76a2-146b-479d-80b4-63ee6be7fd8e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dc6daf2d-6d80-4769-89dc-1d0bbdbb9f5c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ec6e971f-2420-4a5b-a0eb-23a2ff71999d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4aa9f84-1ef3-4b65-9db5-c4424f1bc602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e481e106-b9d6-4b56-a3f3-c110ef842d5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70cb5ad6-8b09-4400-a72c-7e30193c4210",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55476527-8099-47fa-88ea-ce87c9eae0bd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b6c00e6-cd52-4c06-937f-518c2705e36d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d959bb7a-2ac5-4272-b5c2-2b82d300ad6d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8940cda-7ea2-4b44-9e62-9c7db34ce836",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "165e73d6-0dbb-4c2b-bd86-ac9da4683a07"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e847150d-b0e8-4ff6-9fc5-28020f3ff312",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eca3fd87-fe29-4013-8c7b-0c5c2b4b7887"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "528c2536-a9ab-416d-a76a-061233ad0c0d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9818a51f-ed89-4542-9c7a-9af51d9ce793"
                }
              }
            ]
          },
          {
            "id": "8c592b4b-6e26-4dd2-bec5-c9ae74703add",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ad2fc1f8-66b2-46cb-b099-bbf9ab768010",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "370c4b64-1de3-45ab-99e8-94d4c4a7ba0d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4fbd7f42-34cf-4883-bc98-62dfdfa1d2f5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c61066cf-090b-40e6-9dcb-1e0fc2e6aa22",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b4dd7917-a17c-4f48-bcbb-7d4b1e61f9c3"
                    }
                  }
                ]
              },
              {
                "id": "50f683d0-d4ff-4dad-a1ba-2a60e96f1790",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c3de3c2-032b-4f3a-ab49-1303f359ace7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7320f417-67d1-4af7-bb54-9f6886df4fc3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "11d07ae1-d847-46a1-a6c7-65f85dcc34de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "33e44551-bf77-4644-a550-d1d478412d11"
                    }
                  }
                ]
              },
              {
                "id": "9b104c66-46ed-4718-97bb-b56525cfab93",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "204ec703-43f0-4b4e-84a2-9957fdd5f86c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fee30f4c-1745-4029-a5d5-4565c4f07cd6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d981374-2742-4d47-956c-5fe2714dbdae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5acb65cc-4dc7-45ed-9af6-473db5eb5204"
                    }
                  }
                ]
              },
              {
                "id": "cfe851ce-73b8-4d16-94c3-e986d238288e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b32edb7a-2a93-4883-a480-9b9de909baf5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ea19276e-6da6-4b12-81b3-2c94d72450c3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "044a57c8-05b7-4d65-bcc1-0b95199d4532",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f949a57c-e3df-472b-82c1-8129a40ad015"
                    }
                  }
                ]
              },
              {
                "id": "9c2db535-c352-4486-a5f4-171331f7e20e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0734be5d-2a00-473f-bce7-60790f7455b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f7f57713-4097-44eb-8755-91b6f39e52a0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "566d9739-bbd0-4e2c-8111-f3dcd3d9f360",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a7cb7466-6c4b-46d7-ac2d-7fe3ad92f783"
                    }
                  }
                ]
              },
              {
                "id": "d315eb91-a051-430b-94bc-08670786a8bb",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f81918b0-8b15-4477-9c5b-391c1c48556d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "97cf825f-d7ec-47e4-8297-4eccb129f9f2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a34307a-06e6-43c0-9d5e-5378d905bc7b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "060d2921-1ddd-42ca-9f67-10a09638211f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6a346477-db0f-480d-9347-69c0831356da",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1ef256cf-89b2-4df2-b256-07fbd00e5e46"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "33104e57-fe88-4756-8f4c-e741712b48c0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "23e61d2f-1e6a-4b6d-8e6c-8480a43b5a8b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "def78331-f936-488e-b7cb-a6c1eb0e263e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b1a8d836-3211-4881-b425-e19bb703e8fd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ffec0d30-2279-494c-a16b-2f98dac52f3b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7446499f-54a5-4680-aa54-71bf01f9aecf"
            }
          }
        ]
      },
      {
        "id": "fb4d8ce1-ae47-49ef-91ac-ddc044a99af4",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e9be9c09-3160-4bb7-a45c-8b72e93f2dbc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3ce02426-7f3c-4b14-b8e6-3029c96f9def",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3b4ef233-9758-40ce-8e4c-e545d50ff5a6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb1f1d0-ff66-4603-b564-84cc3f994107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24adf38f-6a28-44bd-90fa-f8ff294f716d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa17aae4-f33d-41e2-8ed6-c093eb44fd7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a3f65c8-c125-45ad-91a0-4f90acd424a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f39b59a-8024-4450-b785-fc45e7674ba9",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e8fb1d3-5b72-430e-a15f-fd981ec37238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69358c37-eb29-4eb2-81b6-16badd79ddd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "172ce230-40af-4642-8c73-fb7fd6f3b388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "92aef8dd-26d1-4ab3-9657-229a4bf2c240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f85f9ab-1ce7-4aca-a110-83caa2fdcf4e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba8912a-cd3d-4bdb-a257-9acf93df9bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90358210-98da-4916-bff4-14a188845e8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc9db62-aaa1-4d6e-915d-549fdd73c2b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "659dc815-f681-41cd-8ac2-e349624b16f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31d59b8d-dbe0-4ca6-8528-894dfa069cb7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "654e6bb8-49b4-47aa-8c47-a3a03ac28c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "613074a6-f008-40b5-a1c9-a07e36978802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b272730-e955-4ce1-a860-eaa81e45f11f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "77e14960-81b9-4eba-9dbc-6537231d41f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f6f643c-2f45-4d62-b0a7-462d676ea71d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9372110-3d5d-4239-9795-02baa3f28925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4bac4c9-8aaa-4d45-aebd-320de1a7e40e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc331f4-e21d-4e58-9fdd-2fc997f629d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "72c0e973-40b1-4bf2-9144-eace78432c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b6ddb4e-d861-419d-86eb-dfb31c976ee1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d521d2-9b5f-4c32-b830-70998e435b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ac94893-f59f-459b-bec4-f6a06c70ad4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e504a8b0-8c44-4946-8b77-41cce6bf8dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a20559b-da42-40ab-bef9-0d3c6b302a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "164734a6-8388-4e6f-84a7-24a6bd0802ac",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "446f99df-319e-41d4-961e-36adb45de77b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a6392ef-3c5f-486b-b0aa-5769db494a9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "476c9b40-6e14-48b4-8b08-efa3a923805e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "24991165-ae1c-41a1-85b4-8ffee01d27ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b282af25-0c15-4739-97c5-e6e275e8f479",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb4e4a3-806f-40c7-84f9-8694b0e5dbd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3c5db24-71d8-4595-b2ff-766c385ba2ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5fe51ed-f806-4de9-9958-8deed3fd2ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9e0b3eb-39ce-420f-a97b-86484bbaaa26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "457599cf-c325-4e2c-bb8a-0e3cb98dc650",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30714873-df79-45a6-9c07-ad8faee88285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b1a2d6a-4d77-4d8c-a4eb-da9896ae2655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d9937a-6aad-4258-9d1d-70b7cfb4df1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d784b19e-ae9f-4b0b-b0e5-1b2cdddaa36f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a8bf4e-0bbe-4753-a202-4e6bf1b4de08",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72b898d8-bc04-420e-aa1e-24cc8cd2ea17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12c9a42d-0d75-41d6-925e-2de51d26ec3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4cd52cd-a5cc-4b7d-afe3-248e3680b735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9684c81-1740-42ea-85e8-2af76d2e901a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb492369-fc76-4f00-ac6b-d7f28955229f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38af9614-d82e-4621-8381-a27d719fac3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7668dfc6-5fbe-400c-8f57-7677ddee9c10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2be334-f64f-4563-8a4e-80c0979a1566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8982a746-226a-443a-bd56-6f841cf13048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "464e4a15-9a87-425a-ab7c-471d49f9f0b1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88fbe06a-0932-4875-a71a-8123db9ff018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6edeaed-5656-4597-9c8c-cb55d7306a5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6effb18-b522-4e64-a402-e382e9a612d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e7ba77af-d318-4174-9c21-2f040765b39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b11a21c-9a40-4f0f-bb39-e0a5e562129a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5eb78fe-f88a-465e-acd6-e79e9ac41acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e6229e7-6781-4215-ac82-982842d150f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41393b8a-c701-459e-a32c-5d9381c427d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcdc1b07-c6ab-443f-a242-e55dd51a3ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d793d57a-926a-4b9e-b9d0-9b58b2615aad",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c64942-d72d-40f3-9a7e-d0d02a96c491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e51e11b-38c7-4b4d-970a-2b08b66dca66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f56e701e-c12f-453d-a409-7bd6fdfdbe66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "27c48150-3d87-4d9f-830d-097de2c0d9ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db7be542-7283-411b-9d51-a1fb7cc3afa4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf75fda-1e65-4c88-8abf-cdc22d7d8dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b34927ea-7fb3-40d3-9676-7b55812086a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0507a97a-064f-454c-825d-b50f525d90ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "27db9f58-ff03-47fe-9943-6a469978a9e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04b440b-98e8-43ca-81a4-71e84ec5ec9e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e675d0a3-3838-4086-8d93-0bf29dbb91e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "584bc616-704e-4560-bce0-9a2fa7d32722"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8121b56-7e6f-4a63-a74c-51a8411c37b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cf5e6a0-77e5-40c8-9f47-908cb61b297e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa15004-40cb-4b10-be42-6de2a65b904a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d05b0094-fef1-4dbb-91f1-0362e6779d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "719334c7-17c0-4b49-b715-4336b3c247f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54319f12-51b8-41d3-91ae-5e23442415fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd626839-108f-4069-aceb-2e814f79a0cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6511d1a-9363-4db1-9b5e-deacc2cce196",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b12d4cf-2269-469d-94fe-aac11d778709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "490f6855-fe2f-4386-98de-9990bbd4abb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad019e24-de45-41ac-a15a-2f6552460289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b08349a9-24af-441e-a881-85187bcaa9d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d1bdea-0efb-4a64-a311-dbe655fd7fac",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b379cc9-6f49-4e0b-b3db-3ee151cea1fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72afeda3-3eeb-4149-a336-457f989ce6b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd51e48-527a-4fb0-aed6-f225e2bc4645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb8c17d0-84ef-442f-85ae-128010cdd1ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1395910-6cb9-4483-bae4-5e79b86f5a50",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ddb73e-5cee-42a0-85cd-dea2bad6024b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e2caacc-d343-48db-ba13-f3269f342719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d69ff1-adfd-4806-b450-d39b67b299d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a17f1ad0-d57f-48b5-a4a5-589770a16029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca1378e-d644-47da-a705-d0669e6bb7aa",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e3fd25-3527-4ed4-a7b4-71c6a77c7b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78c90ea5-3535-432c-8b0c-af2bdb2e3fbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c23a7ba7-1dbc-4eaf-a06f-7ba02e713630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2fb4d37-3f88-47d0-aedb-72e70d6688b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46366b2b-2616-430e-a1f2-843bac5977bf",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e218d3-c1ae-4ada-8c55-f952cdf9a669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6617562-ff1d-4d56-bd3c-b97cf4dce3e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e651918e-1176-4d53-913f-264fe4039edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77189b30-e1d0-4c25-978b-5eed51d15f70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b34beb1-9a08-4c9d-95b5-2d7a4215378b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0799dfbb-6e72-4012-bc1f-f780153f975e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4c8c997-9c98-4de3-a4ed-7af25e7968bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e144ba7-dcda-44d2-9136-537c166cc29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "060e11f2-bd63-4eb4-9c6b-f623c3a7e137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e7c1c8-31bb-4fde-ba0e-10a7fac130c4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf6d601-05b6-459f-81a3-8386e835722c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23e21fe5-97eb-447c-9349-d96a44bed66a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aadf3fc9-bbe2-4437-8a55-2246c5a5b533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bf514e8-7aa2-46d7-bbce-e5eeb980e926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0066d353-0cb1-4e6c-a1f6-531a39ac128b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55de7cd5-c8cd-4077-a4f3-aaed24f44eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bae9ef6-7116-423e-9db9-f4c37db92e95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b30680-56b8-47b5-8e9c-6632b0457fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24cb7828-3acd-4083-aba7-6258e7315836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b000d6d1-9b01-4c51-92ef-4b639141852b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a22fbe4-2a36-4463-9f73-f81c8eb88e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38d5cc6f-24e3-481c-9fb2-ddc5dc5f2458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be75044-c674-438c-b032-48c5e30cf6cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3878714-cb01-442b-b41c-09756c7ee440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad10233d-88a8-4b0e-ab07-75fcb31dfc8c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe83252-cf94-4304-bee9-ae3b26063f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a41f435e-68f8-4257-a4a8-a630d9541ac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "941a1f4a-5334-4ce7-8fe1-d18d883ab70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78db9562-f3e9-492e-86e8-6099426b58df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daced73b-f364-4415-a6d6-c1a50d540d32",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "096cdb7d-f996-4969-a464-6d6e1ef86eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc37a0f2-815d-45c9-9d3c-bb72a8824f1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e16453b6-3c1a-4c02-8ec6-938b87d3526b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1be2dcb1-8c38-414b-923d-63a8bff23a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc30092-d409-4c69-8c13-095ac036bf17",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "689c606f-f5b7-4441-8cc7-c59dad64b03c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f7f0bb1-8704-402f-a7d3-5c8ffc8c2f6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2404d5d4-6e3e-44d0-bdf5-485a128e72b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b09cd75-cf3c-4edd-b392-80f30f3d3465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d355b78-2e00-4a2b-85fa-bc750cdddb65",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90147cfa-7113-423e-bdad-c1cf43f9023b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93cb96dd-b6b8-440a-bcea-2e89c8b0d117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc7afb6-2ff4-417e-922d-6174ba0e23cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48b7bb50-b6c9-4968-928e-8549e0c66bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee0cd14-0b76-4d78-9db4-243f6883eb17",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bec8a70-4df9-4f45-85d1-8c9a8a703645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9d20f92-eb5a-424c-a256-c9c820156122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7398c9a-cbc9-4679-9c3d-d33e27bc27c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dab0f082-5832-4096-b6ad-f1530344545a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff4e471-10d2-45e7-a6ac-6a11ce40b669",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec5e76a-5035-4420-a680-0c0356ea62fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d469e85-8fd7-4c0b-bae5-7298ecdda076"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca0fba7-ae5e-4549-915f-9ef8c7f1a6ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a62892c-6c6c-4221-a11a-64e197a603d4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c237bbc3-c69f-4af7-9b36-5ce4fb3cf2a9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "785f9615-c183-46ed-8763-8943e03c29e2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e9d60a-fcc1-4410-acdd-723fbe6f5d29",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "be81dacc-fe54-42de-ba61-0cd69249ac8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a8aa2f-a9be-433b-8933-ef46f25c2c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "45f59847-a3bd-43fa-b890-56fff75b9d86"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eeacaebc-c76f-4160-988e-240b0c68e81e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d7ba1e5-c0e3-47d0-bb2a-2ede821a18e0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "648e3818-f483-4f58-b71d-3b5788058ea0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "328ef321-12c4-4501-8b72-6595ff75c3a2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "56ab33d0-3a55-4e1a-b861-3be5eb8a935d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "191113ac-93da-4d51-a7f2-a1cb0d922c2e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "09ae1720-6631-4456-a31e-6b93e4a18583",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "76d752d5-8448-44ca-b3ac-c70e83ffcede"
            }
          }
        ]
      },
      {
        "id": "5077373c-c354-440d-b2a7-776cdb5a50d7",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "a10659ee-beff-4c2e-bbbf-dd67398a063c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dcdb2855-62ad-43f4-857f-915977fc4eda",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7c8213f8-095f-401b-9208-f6c5f7a00635",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8109581-f807-4bb5-9915-6049895ec03b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24ccbf15-0952-4cef-b6a1-bd32f43473f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e298f85-3551-489c-955b-95d2228c6bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "54532e5e-2733-4588-943a-811ed6bfe331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af312957-15e1-4884-9674-11a567f22e1e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dad3cdb-bc8b-4e3b-9212-30d031c36e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00e6ba84-15fc-4061-8a1c-80db85f279a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74dd6bb1-ed98-4a99-b9b0-19ca0b747031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbd439d6-76ca-44bc-afa7-22295f1c8f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29074ee1-db13-4af6-99a6-46d03190e6c8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1241412e-226e-4815-805c-787a8a7af930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcc0ad88-3ebb-4fb3-98f9-66131603c4a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b58eb617-1d49-4bc7-8721-966792c3c8c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7eb55b53-e711-43ad-9d8a-fa734c3e2ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e65a3d08-1d0a-4e73-b918-5d568bef67e6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79aa0aea-b247-443a-a4f1-846ca7b9412a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd230e5f-188b-451d-a12b-5bbcc313781a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b698ae-3820-4688-aa3a-761174359962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "44b1dba3-db3b-4ced-9262-dd31c6cbf715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97529cb1-73d3-4ba0-8c59-044e3960ad4b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e551ad46-2667-46ca-bd50-7563a2797ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "339805b3-4552-4244-99c2-e20c93ab8b97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c92a9f77-f61e-4ad7-ab69-9d1d5e4e40de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9d1f01f-0089-4076-8a45-04bbabceb370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f11ceec4-bf17-4d30-8074-d1d5e920a0a8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe49aba-5607-487f-9b13-d6f2f9341466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29d0ff5c-4757-4fc4-9c7f-6ab5d77bc1cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6aecffb-8ca2-43c7-b0b9-36b42e1ce4ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9653a5b-9c98-4d5a-a464-dc0620aa49f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deac2163-2c54-4fd1-a283-438b6be4379f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc243d1-00bc-4635-a920-bc4bdc373a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a0783e0-bc1d-4529-93ce-9ff9002f3f22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f66796-2fe4-4dce-b5f7-a801d5255556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a40d82b-08d4-458b-a522-a35fd458cc6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c21a70e-7dcb-4a9e-9020-da31c689e509",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d135b8f-7027-447c-b21c-d3ff2ef1c5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0c2ba99-6e40-43bb-9e72-83e1acd34230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ade5787-e10f-48a8-808b-9e2e31720dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf8c066e-86db-47a2-b0ca-c61c51845417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb1ff6f3-f3af-4f39-b5d1-b39491d35e27",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a51be690-e21f-47e6-90c9-13bcbc3cd6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab65179e-aba5-4630-8068-dd511f3f516b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af9021ee-4589-4b39-87f9-e6bebf04d6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "898534a3-34d7-4562-bb41-da04c46caa90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca7c72c-cda2-47de-bcfa-3f95f76674a2",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72827578-c28f-4c50-8283-f4bc73c9fd4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15b6d370-27d3-4ac6-8402-c9dbaba61a10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a176f2c7-5d9d-45f0-a74d-3d17db625e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "77feb34d-943b-4d95-b991-3044ab2fe2be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7abbf060-9649-41a2-9bb7-f76550cd3715",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a3a52b-7672-4af7-85d2-bc20d0d035eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daebf34a-32f8-4ab7-9d39-42329669ceef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a070eba-e000-41a1-9783-c8399dbf6e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3c902bff-a69a-4c2a-9065-8b4934d9fba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59151ed5-ef7d-4373-b0b4-7081a6aed13f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd344f91-e312-42a7-9096-700d6887f2ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb3c5571-2483-44b4-a017-b665a7fa0531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a59d279-031b-486d-8f7e-d2484c8c212c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7fea0dee-9673-4c90-8165-5c7f61810af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c0846c7-4720-4f94-a123-bafc97812b39",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63702717-7cef-499f-bbd3-198bfa6f7a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d80b5ce5-4853-4b02-8df1-f631dfb859a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "330e222e-0f8b-481a-9614-e942c4f00eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5acea67c-c028-4354-86bf-8ded15ab3122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b541a2de-5581-419f-a779-aff1b305d724",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d62d70ba-12a7-432d-8599-0014828b542a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18d29b67-102e-4d6f-bdba-992fff03073a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b0308a-f444-47bf-bd70-1c457a8d1d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "dba15a39-da87-4fa5-a9ac-c12667c4dd95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "169bf442-07a3-4140-a357-e7ed31a55045",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa24000-e556-4d1d-86ef-e73c16d1c5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32f87c80-6056-4c8a-8e78-e5f05b11565c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c2301a-af53-4df3-a42f-af7288d73d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cda28c8-1d91-415e-a520-0cc4ddd5a54c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecdcf766-9701-4c75-9a19-db6a5e4fb677",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e01fcaed-ea87-4fac-8bfc-122c1883e999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21cee6bd-d286-4db2-b6e2-108854404b62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9720a70b-87f8-47f8-972c-0dcd890c2069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "605012e7-13f1-408a-927b-6b6bfb7c40c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b742d4-6d86-4e4d-97a1-081332a96d42",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d5de48a-07fc-4e68-b95e-f65e045648e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b2babbe-c786-4b6c-8bc5-eea38357b2b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc32e0f2-4cab-4965-9013-3d8b88b029f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "43d20cb0-164d-4914-bc85-07b97b064a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b55fed0-b2f1-4ed8-bb8c-0fba546ce6b1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc84f2a6-fb7e-49a6-9f36-2d08db6eaa0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f96d6274-f35d-4905-906d-74e05f0ab5b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "683b8876-e5c3-4b5d-b927-2cb68fc9cad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "585002d9-8f1b-4c97-83a2-1407f10e6da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "243a4c18-b008-4cae-9cb2-e80f33b05a10",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14677743-5813-43d4-9a47-42aacd5be138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "362c573c-83e0-43f1-906c-c859091a31ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f07f58-3cab-42d3-b278-f6e6328226bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bd9fa94-9834-47c8-acaf-377652429034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed199295-b8d6-4772-aba3-2a4aba66249c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d4d0436-6ada-4131-99b6-f9b2083f01cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9297e49d-376c-4a47-93ba-577958a3684d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ac82c3-9e06-490d-8207-45f111bad474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "033af57e-50ba-4cb7-a79c-0035c3bb7c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a047a7-46cd-4995-adb1-f8b04c086fc4",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9407ee13-d195-4340-ab93-d7a432424e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "387e155f-5d87-44ef-a4f5-92b9bb2e69b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae25041-b157-4654-b484-e58e09d2e2cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "701ee7be-e3f6-4b8a-b761-b64ce87cbc91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e675a2d-190a-4eff-bc59-f857022f625b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2dbcaf-27e4-4aba-abbd-5f0a225e5e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ede0229-3842-4bb6-a5ba-db4c228bcbcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b25096-442e-4fe9-8dec-fa291774cf6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91ff8b20-5d84-4d01-8235-e2d36bf103ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf7f7436-720f-47cf-aa1b-8917f95b7c4d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f4aa18-017e-4e2e-b722-4dcc570491c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fff61b87-d2c1-452a-82fd-11b220f30123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef2941f-5184-41ec-8535-b6dc671ec3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02a5b014-968e-4e44-8ee4-649b66150719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a625dc-a141-4f51-aaeb-78886019fc74",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f4efd8-6562-4dfa-9274-7ab5637fe948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "426eb7ae-5757-4dbb-886c-5706ce391657"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7d6495-7337-4113-b3d1-a2b54924a7b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b4d2b62-7a39-477b-b058-862dca6d7271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f19fb5-c89c-4e74-9140-cb52cac1e443",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5702d550-2767-404f-9aad-29a6764a7d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "567558dc-eecd-4925-8f34-6f946e731d2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd5bbb90-0ab0-4c87-8137-6f1beb017e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e04c0fa-ee79-46ca-bfdd-052d0f030aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa7d0ba-936c-4e16-97cf-690730b6b5b6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3461005d-4ac0-4baf-8cc1-d9e1814fb182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83672bba-ee0f-4122-9e16-a22faa5b9a13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3373935f-20c1-4fa2-a508-4dee3e6027b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c99e132-29b0-4486-8b2a-848b0ecff05a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e1de4b8-7023-4500-8544-3c4aecb3e355",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebcbf730-285a-4950-b04e-decab37ad89d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cefabe1e-2a8b-4f37-980c-171af698c6aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319b9d87-8655-4469-83ba-a38ad17b37a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a7e34be-d24a-4ec3-a082-474dc092f5ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b66828-548c-4fec-9361-2a2af3000062",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de0a907-e3a7-4be1-997d-c7daf80db43f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8f15ebb-b344-4c21-829b-43a68e519399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d765416c-79df-478c-a7b9-1fe2bf4e9ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d6c3057-36a5-45bf-8eb7-78dc3030b569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9a88b5-2183-43ba-9030-01f2abefc2ab",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d35f42-7b21-4df3-bc7b-a93f71693aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "927fe293-43bd-48eb-8953-78be61b5d8a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd9984d-b72d-4f5d-b568-a6b83f4f5c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "106b6a4a-8f20-4b44-a2c5-45ab9a84a2d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd71f0f4-3712-47ed-9856-e0123af23fa8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "292eb06b-5a40-407b-aa3f-ab93a83c48b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3439010-fccd-4215-a7a6-695b147e16e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa4ca0e-62ff-4d1d-b615-e791b6dd6e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "379e45e9-505e-4c61-a7bc-b8b533541337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a447c7f-49c7-4cab-9e43-411bfbf5d995",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6445ff86-39fe-4ed4-95bb-6b2de23eaef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca40468e-25ff-4e07-b84e-498c9a212a34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "807579f4-a72f-4b8e-b1aa-4d117bd9e483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c257133-4b2d-402f-bd00-cb2fa39e0950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df524ddb-b3b2-4ed8-b78b-803297d2a1cc",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c56dfd14-8197-42bf-b063-7049c69ad04d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa203e4f-c1aa-421a-b681-c2a0ab41f726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "000e041c-dca2-425d-9dad-60d433681f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8ac0e17-63e8-499c-bf93-569cea5486a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63f84d5-f9e7-4422-9425-354d152d628a",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e103d0fb-81e6-4653-bf4e-e2bdfb4c372e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b153b74-ad55-46d3-b389-931458b83057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e16ce230-f36d-44d6-b2b1-54682f745d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f0e6517-327e-4d59-923b-7c935cc51365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f818efa1-7ec7-495e-9386-1bf71d7daa82",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "461b6e82-3183-4146-8c0c-3ac7b6e69929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8870baa5-4835-4310-a75f-560a0d74d21d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b80accef-e22b-4e89-a607-f93392657b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "566dd713-fdab-4dc3-95f5-2a0e29565671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f73dad2-8f1b-4a3c-a20f-dcc441785da4",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b141089-6c6d-4431-90c4-45bc1834230e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "186dc18f-f2c4-4a3b-92b9-aed21e4b0524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bbab0e8-fa71-4bc4-ba27-af049ea04d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e2f9880-27ff-42c2-92de-2be7f27401ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "724b7a4b-b93a-4cde-960b-47122f331272",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "989fc7b4-bc53-42b7-81e4-5ed5925c5bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf8906b1-c062-4b7d-89b9-e7b90c9c45a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4eb192e-9f85-46ea-af3e-a7f078373c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a967f637-ff99-4e54-8cc5-24802d1dc782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe5aff8-054a-41dc-887b-619962df981e",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b30bf1-3051-4160-88b9-4732ae20b9a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4f7dd7d-5433-4d87-a8aa-4fb92b3f0b3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b5e411-76b1-4d73-b809-29c6f987b3f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddfa343c-5d0d-4bee-80d3-49d2ac12290f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "07b2746f-8aa0-405a-93c1-1a792c024a27",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "39f1af39-57d3-4a58-96dc-b7c6932b88ab",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036b2ae1-cf94-4e37-a815-5a5573e72291",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "17d56305-38b5-4d1f-9b53-363bff231c73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de7fad9-520f-4a85-a26b-7382a5126730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "09748f20-a633-419d-87ca-d35a9a01bf89"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80cd053d-0d15-4d93-a654-f2b3e50ca206",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "169b6313-c9a6-44a5-b515-98912137834d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f7938d9-75ae-4dbe-b3f0-290c7a298477",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62cf759b-d5e9-4a87-b9fb-bc4a2e2c4ffb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "91497172-4e52-49a8-824e-7b3b74a81f5a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ff93ef09-a321-419a-afe4-904da38e9c91"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "46a3d53c-29f7-4e9d-9df5-c11641d94a46",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e3e8c0f8-985f-414a-ba37-3c5bd55fa648"
            }
          }
        ]
      },
      {
        "id": "231a33bb-5659-4087-8937-4bc16e5b6273",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "fb7c754a-f95d-4374-b754-0f73530d8540",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ac6dcd7e-a9ba-4cf6-95c3-d7052ec668fc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1d026f5f-bde6-49d7-b46e-a81e8b8ae884",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c74c1257-1663-40d7-a957-c6fbb11d2b44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4deea152-8f87-4f86-8cb6-ce266ae5f60a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b46406cc-5964-4f46-aa57-511b16ddcaf5",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "864faf44-365a-47ad-93a2-09141e74db99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e9b05b7-7bfd-4df8-a22e-0eb0ce15609e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924cb3fb-7257-4873-bf64-54b3a717d53f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b6292df-122c-4582-833c-e39e1630a66e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5b753a0-52b7-4aa6-ad2d-0e6c43dc68e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c65476f0-5b2d-4ed3-bf1b-41f5a73b4914",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5974884b-eb59-44eb-9bf1-c0f24e3efabf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8a4ca29-f4c9-4f33-96b9-b6c93cc3a294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af95fab9-7119-4da5-b749-a079dac28992",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8500462f-56f5-4f91-ace7-e9b4ddbe1e17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bceb83d0-6435-4b78-a707-7158fcf3deb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "462a75b4-7844-4394-b5df-59555b0436a2",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7177fb-0a92-4820-996d-6ded3ad7b653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cf5f81e-f0da-4beb-a726-f0788210bc76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869324b7-5c1a-4c8c-acec-fa701a84b6ab",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc63286f-c016-4378-9080-f36a615a1d32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "682c83e0-01db-47d6-bad0-0e9ad737f8d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d592eb-b10e-48d1-b8c6-fd40e3b266ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8e843dd-1370-4b6c-a63c-a47669d55b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b9dfd38-dadb-442d-8e40-0a7bc6186d12",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b8e16e1-e2a4-4704-8782-346f46aa4d2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61bd0acc-3536-4785-b6a0-5e2a351c01ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca0d479-84c2-4093-8f16-997dae1d9709",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2adea294-fec7-456a-b274-cf5d42c715d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2e2215-70dc-4b89-bdfe-fbdeb61379c2",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "801cce32-c868-4624-9010-d8e4cd8259b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0dd6796-85ad-4304-9907-d8cdf68857cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6f9d25-0035-472b-8ed5-022bdf37a412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d74904d2-bf9b-446d-9065-9954ffab8d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb3f8da-20c9-4789-9397-33b534eff29a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa645d15-79e3-49eb-a1fa-477c8ad57114",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e6a2e73-98a2-4bc0-b01f-bccd53f5a8a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1785b3b7-e356-4240-9646-fb67d5baba9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "983daf46-cd3e-49a7-9dbf-1f46f2afccbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31454f69-7fea-41e2-a713-3ccd467a4d00",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f553a2-69cd-4277-a2ce-dc7660264f8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a1e1737-a0e7-4c26-8c4d-f14641024f91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21537c83-66e0-4507-8c72-19c1729b819a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e4c5fb7-bb50-4366-bbd3-c569158d8b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f9f2b84-b610-424e-9a5e-c1e0618d5832",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc18b5e-8416-4bac-9eed-7b1f9afd50ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d0a82f0-ed1a-46b9-a705-20a7b0aed7e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c985beed-d7b3-48a2-a06d-b66a99b9beb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b192879b-e5f6-43b6-9b74-f9500b76d762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034ca055-3eff-450a-bcd2-7a4b7d295f4e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c51a64-3cc4-49a7-bcac-317024c21dab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67d8dc3b-d96a-4b19-aef7-313b3b4b8b96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d07266c0-6c1c-4d53-889c-2f35bf492bbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80e56698-e7fa-4324-8c51-624f1e0af44b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e089669a-81ec-41f9-9e50-22fae545b050",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3fee92f-1ba8-4878-9c20-a77cde263667",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6ee2feb-c899-4925-b981-55316fe39725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59573c42-4bf5-4e23-a9c2-2e7c27e5b642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe6ae94a-217b-442b-8f7e-ef24ecda03b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4455915-b425-4905-8789-8e75137402e4",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d38176f-0dde-4e67-a432-20ca04e318c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87b6c7da-6c24-432b-a6bf-5f543cb32251"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1efbf85f-a6e5-4479-b757-10bb0536ef36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77dc61e0-f9f2-4249-9ad3-903419db1a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e91e87-4490-45ea-a3cb-659e50985f57",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b609f3c2-fe60-476c-8d00-a9e55708729b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6307d866-92f3-4410-9811-7f97c2e8b546"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ebff551-1775-419e-8f84-3ca290bdb815",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0129a1da-8c3c-45fb-94f0-48e5df035646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59313a56-f813-44e7-a9cf-1aeac6cc07f0",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a602b0-5c36-4347-a6be-ff435d280a98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32d3cd0f-5bab-427b-bda7-1dc12826ce06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06569c98-d7a5-482d-b401-673704829140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "939fa333-52ed-4224-9ae6-21928ede1641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a18297-ef63-40ed-8020-2aa3ca786bc1",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acbd45d5-f824-4979-8014-86096ee5c568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d160a06b-4f25-455f-a9f7-63530033dfd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "538902a6-3ffc-454d-86da-4722f7299cce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f50286b5-8deb-45b7-8fd1-076f9c48147d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41dba930-a86e-419e-a822-b1a1cfa3ec42",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12dc86ef-a7ec-4301-86f8-08b7f90aeec0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a89c66e-724c-4a58-92b2-964f0dcfab92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "927d06dd-b5da-462b-b298-bfa04d0e34d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21c9e4c5-ceaa-4e2a-a904-61b43e9fcfa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c6afb98-7382-4e4c-955e-1dd389bf64b7",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f64e6df-12e5-43f6-97d8-2927394e0a97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bb551ec-0c35-4409-a13e-0ebe723b32ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d11e6432-9b64-4721-b721-076068069e43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17422199-9404-49f1-ac7a-7a876cd1415c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1756abb1-0e6f-45f7-8756-f31eb1ef9edb",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e81a92-f6ec-4a7a-a068-b0b78545bea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3474d06d-45e7-4202-9d65-938d305a2454"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7cd2d11-c550-4ad6-b3a9-3c02ce427136",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fca420d1-1280-46bf-be66-6836e9235ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21328414-d5d8-401b-a288-47ccbc051dc7",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6172f3af-26a2-4517-bb38-33f9f318ab0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57fa71f9-1079-4941-95c5-f388cae6cb03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d81552-76e5-4153-9f5f-3d05b59e8cee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c79491e-5531-4733-aa2e-66a5278d57e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd1918a2-22dc-4da8-b8c3-dec71543dee2",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcd88900-79cf-4f5b-92da-ff72b5ce996e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e96ce8c2-e44f-4ff7-b02e-b08ce59c3205"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ee9cd8-f601-4696-801e-f116f32fa535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6514e692-f68b-46da-999b-3a1e4889ba05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d5f62f-361f-4208-ba03-643616574da2",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a530834f-16d0-4de4-b4a3-91ea6344dce6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48653bb7-18ee-4dc4-8c64-ec5f42ac100b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7cd20c1-91f2-4f1e-99bb-f551d67d583d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0bd4eb4-c41b-4e6d-8e76-b23668834391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e70b58-3049-4e16-8fcb-44ae9bf98c1f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8277faa7-b0d3-4210-9aba-5907f9c5c724",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a75c2147-261f-4343-8fcd-2b4abe018e9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f4d00c6-7642-40e8-8a1f-42da9843ca04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "430c52e3-2182-48d9-b505-1e2ca63a178d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89237a35-753e-45d9-a0da-f68a64d9b05f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45fcb2e-6910-4737-958b-56531f798445",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bca19f86-331a-43a5-9613-7f5212540666"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5754b03c-7e4c-4ba5-a619-553129c5f0ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d71f5bb8-4c74-4e6e-a23e-169c02ba78b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db5dbb18-b36f-4be1-8999-97175692cc0c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b6e897a-d5cb-49ac-af3f-9c4b2ca0aa71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdefdc00-48ce-4e21-8833-aef67d90456e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8745f838-1c94-460d-b981-9897c51688e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0603582-be24-44a1-b787-a65c56ca2105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "858b34c0-772e-4ce2-995a-cb10d0d6ea59",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ce01ef-f1a8-480c-a541-37205ccce634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ac783ed-a8c0-4eeb-ae5b-0625e481e987"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24333edc-4f26-4d39-a449-7fcd2d82e258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71c5759b-0118-4986-a088-5e74baa63554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9a7dfa-d590-40d6-a00a-f45c8f62a894",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4549a4f5-b965-4d59-ab8a-61c193988f3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "812cead3-5a24-4077-983d-9c3381e3bcec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae3a3b0-27b5-4383-b329-fa4cf330ba44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf50674d-ead0-4d40-8e66-b714eeffb2e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05d5a3d-a825-4b92-a33b-304e747a5e27",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f26f5a-dc09-40a8-813d-c469aa3d6e28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9df06c65-093b-4c89-9c69-ee1ed0b7bbcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae75f77f-962d-473b-b528-8c8ef9cccaa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5775db17-b303-4039-8df4-3a58dbe02cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f51f2586-9a63-43f3-af5b-26aec89486e3",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f8c7dc-317c-4b85-8125-9cc531075f6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27969aff-b4fd-4aa6-9686-197237d5db61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2dda7f1-59a6-42e1-8f7e-147e969a0af8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64a9f928-dc7d-4f55-bd26-e5a99232e7cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a45ca743-358f-441d-847c-6e8ca4db0516",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96830458-5ef5-4e17-80f7-42785412c4bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cff3fff6-930d-436b-b180-61b08a9a0e6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc078d7-2c4b-437f-8e66-f7b5e32b9839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1c59b4b-10a8-4ea0-b63b-f803a74aadbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a23f46-d9ad-4bde-b7b4-610926815cad",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "970d8626-700d-4151-a1b4-587a10bfc2b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cd663cd-faf8-453e-b5fe-2a83227d9078"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2abaaa25-5da5-484b-bde7-8f984e12ab0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e4e7525-b914-4097-8b1c-b151d432279e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6e7b77-0302-4822-bd4b-246722dc05d9",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e43f3af-cb8b-41aa-89f2-07afbf4e9ddf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2394175-a194-4b65-955e-78b3fdb6c6bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a40212a-30ba-498f-bf75-0d1af9d11227",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3e51682-1421-4007-99e5-729f7daaf26f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63cde782-9cd0-4c35-848a-6bc253a32e38",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2c3921-f4db-4551-bb6a-37bb0c538de7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2113713-efba-4cd1-8217-41b62b8223fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4100b078-dac8-408b-820d-c9f7e5288de3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e6b8919-ec46-47fe-ac99-94ca83e823d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ea10d38-f527-4927-b1e3-62126d147d8b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c7d68a-2514-4e40-9d76-d83d98b49e76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6ac1744-ae15-46d9-be6f-8cd6fce8d3f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "173a37d0-856b-4f1d-a552-6ca4e7ce5770",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07a45484-e0a1-42c9-a23e-5c66cb136715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f87c3dc-0283-4129-9325-55c33443c561",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52fddd3b-ecce-4bf8-8897-c29fb567c684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bc26527-33e3-468d-819a-44ae5d0f9768"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb144b75-9eb1-4061-a3b0-3b1e3a53ed52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68fa1703-32c3-4648-9abb-e5c8445aa572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23ae569-4616-4ddf-8bf7-df12d66e6a6a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac76349-166c-4e07-8be1-efa18375e722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66af5e03-4865-46b6-842c-70e0cdc9d684"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75e1bf2-8526-42e0-bfd4-59a4fad76ab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0f07b7d-fba6-4366-89a5-00146ad69970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7fa3119-bf0c-4fcb-b6ce-4f20e41415e0",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26685eac-43d5-492b-ac6e-eee7d2e8729b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54b9eafb-1b89-4197-ba5f-7f94b7c84590"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c338e33-c812-40b7-baa8-9b8605e10d95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef950741-9f57-4ed4-ab35-d7eb004b1b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6945ee2e-e98c-4b40-95c8-b9700d962f6a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e694ccc-a7e2-4a6c-b5bd-4729ca1f9b39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b1c87a3-c39f-4491-9dfc-077637d5f56b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb77206-bf53-47a7-9e77-3f4ab526e3b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1845e0b8-1fe4-4fca-b8a9-2640a7efdf2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a5b7be0-771d-4990-bb23-a02ede04c1e0",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2edbf16-cafa-444e-bc81-a2fefc651fe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b24582a9-e81a-48d6-8349-e54fd22400a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab444ea-60ab-4580-93d9-2f4921356a98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "593df40a-54d6-47a8-ba02-3a08ebe826c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867ea29b-383f-497c-b0c4-d2717ee1fdc9",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e66f4b-688a-4158-9639-c527b72c8542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96db2b87-3a9c-4add-a8fd-b2ec945fb87e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e1f520b-1769-4505-a0ef-fedf77845d3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8163156e-ca65-43d4-b68a-8d44cabe961b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f90191-664d-4e0e-bdda-ffa52b35d385",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1decc985-6b17-45f8-a2c9-07b3cb1f7ae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68175359-ce8a-4f03-85c6-7e06a9a3c0d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "298121d9-2c25-4ac1-a0d2-f4b6e0b60677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeb33053-c2bf-4352-a795-8600ac60a22c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa141d94-1afd-4630-92d3-aececdbff597",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b344eb-92c7-4643-af49-909596d0ba63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58d8f51a-ebf8-4535-b113-e007a6ae61a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae8c382-07b0-4ff5-a3dc-a0494fceda8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5818322-6b7b-4b51-969e-159998fda450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a08652f-1883-4612-b144-3633fb99709e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc80f0a-356b-43fb-ba00-9ec0cce0c308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f97f8a2-5d1e-4314-8342-2ba922536f1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d50e6c5c-e5e8-4a64-98d7-209e94870121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa101078-27ef-4e5a-ae75-4be029766ffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1d22d5-0e66-4882-9b2a-431662fe1f41",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9615f982-77ef-46d5-a00b-a34b6c5b17a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8443356b-cacf-4a7d-a666-a3ab36b4cd10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "575182da-8215-44f6-9189-9e3193070129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b73b3285-43d7-476d-bccf-eeb9c36455d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c8ad31-b59b-4725-83f8-3fc7be8a6599",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1744f90a-167c-43fe-9eee-123d2d1c0fe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08d13cc4-66b6-44ad-9627-da56069f672f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b51e3be-6f02-48df-953d-e85876335bb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "604c0a9f-de4d-4b81-b10d-6cc12cdac07a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38948154-7748-4e09-80a5-29fe83e22a87",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315f95ce-d759-433f-a9ea-96d939c6ef2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "884b4234-3b22-477d-a702-2dcfbbbc1734"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0add6926-30e5-4da2-adb2-b991067b40f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87fe4517-3f9d-4181-b453-398b245b8e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9216b21-87ee-4d9f-bfae-3097e4d12272",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca517ceb-127f-4c0c-8970-f3c503a88a9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d06d01f-9f58-4e8a-98a8-6659ce02275f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d38c8e6d-fb6e-41e3-9529-b4a7825c889e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b13b30e5-dca2-4e4d-a53a-8ba23535420f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d06cafde-05c7-413f-b262-9aa750ed7969",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df3df2d-ff80-4285-b3a1-6775591b7111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4be0bc21-d846-4e2d-a875-aa26273e7f63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f424136b-7134-412b-b0fa-7f17317e4872",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1223c52-1d10-45b1-9fa6-6a0be044130e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a685b256-995e-456f-a69f-e06c9ce72beb",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db4f3c0f-5297-4f11-b989-7e89413193ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e91b0a1-3fd4-4108-8e9a-5c6959d0ea50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45db0bba-4de5-407d-8ab3-dc6441aad06f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14abde42-b17c-4507-99df-baec6a4027d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d9ffbe0-4544-4cd8-a7d0-f2bf0b851cb5",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f9e9b7a-31a7-4714-8dad-763b8cf82074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd1f6553-d626-4082-9da0-7bf95d533f7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd65051-cf33-4ac2-9578-fdbdf1cd455d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63632b2c-1f31-44d7-9bfd-48903800ac63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e23722e-3083-424a-a7a4-541c4ae80641",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b11ee43-a088-446d-b16a-b27adc0db5ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cb4a245-5e9a-43f3-931c-9212aea4ca67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a5a541-776a-4eb5-bc46-16faa2e1b3e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea44a7c2-4aa1-43e0-ae5a-986941cb854c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0fab21a-f264-4ccd-ad64-3ec6086606b7",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff700f4-31f2-4495-8110-f202b53be4d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "432efafb-b23f-4a5a-9094-d0f2bd77479a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf9765de-1956-4e3f-ab28-474cf05e30d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04d5454f-d7f7-4ad0-a980-2b3116a7835d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c1f339d-30e8-47c9-8307-5e9a01ab7059",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d362f08e-1f6d-4edc-bd62-6c40621124ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e62d2bf4-7a80-4f8e-8524-3551aa19b58f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aed01d7-07df-4efd-acd4-91fd54221f2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbc74932-e1ae-42c0-82b5-eb564716a55a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b6b4502-8ace-4993-9fbb-5f0be20ed40b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39b046a-d5e5-4c55-8828-caf96d3e6842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "122e4f16-c8b1-4bff-aaa2-21479dbbfd30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b85b0156-a1f9-454c-a3f9-3066278ef6dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0c1da4b-f310-4dbb-955b-8c0567f398be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f5223f-fdab-44c1-8426-3e31d7cb5198",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d173ce0a-e1af-49bb-9c4b-9f0a192187fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26e2e939-9a97-4243-8929-0e39b90e60d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9adb698-16ec-462b-b443-df62891a90df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71ebe93c-0401-41fc-b007-a6f326133baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b352c876-3338-4a1b-bba9-e5f380bacb60",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e33b3a5-1212-47f0-befb-5b7d49825502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4f9f6f5-5844-4815-bce2-ef61e282abe6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd96e4f-27fc-46a8-8418-85f5ad19d74e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2549b578-f6ba-4c9f-816c-97e8a2c68a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a61e71ba-7824-4b15-92e9-d38487c88cab",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b3f23c-fe20-4fe0-86b0-07c140662aac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c1c583d-9c1c-4e70-ae6c-6bc5b7f757a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "578c386d-5cfd-4aac-92b5-d76592aa0b03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8587b328-0315-42c6-a9a7-5b5e13db8db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36dfd56c-bf2b-4aa2-8912-56814a452c2c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a9cdca-8ef4-4024-90fa-c7470ea51125",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd403bef-c5c7-428f-a3ea-ac361af43840"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26e1648-e191-408f-a242-082f1ac64cf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d072a43-4220-45aa-8235-a8dec0a586a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a1cec8e-dbea-409b-8ae5-fb9e21cdf427",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c84673-90f4-46ba-aa17-ba0e7c3bb7be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98d4b0f8-0cea-4cb8-a12d-f29e55eb2f52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9368018e-4fed-46f6-9ae3-62c823f61ddc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e86beb02-4f7a-4a15-a8c0-c819a581c4be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b17fe8-a661-4dd5-b4f4-4b84c494ba4f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d6a4135-8570-4140-b96b-47e05497f02c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78c9a89d-5522-4dbd-a914-e3fe80f0a7b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e8eae0-d319-410b-adf9-92e60264f19b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c9ed3d0-d12f-418b-b8a1-7b03494cd21f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b1f48b9-933d-4d68-8e8a-943675490143",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6179884-9a17-4c5b-b4d4-78d88f3b4098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2f7a0f1-81f0-48d7-a48c-d4f1f6e30162"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02278375-d3ac-444b-bb48-ffbca69865fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a38f7305-b07c-43ff-8792-b35f79043830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "477900a3-a273-47d1-a020-7286635fe6ab",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f9123cf-6c5a-4e03-827a-fedd7b98a644",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13d5469f-83da-4c8a-b080-5ad7433b0d96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f90c07e-8f88-4e5f-8206-4a91fc901077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e550fce-8660-4c3c-a737-672656f8945f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0767ce4c-848c-4bae-bf79-01918b5736bd",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec62b135-0ba1-4038-abc8-8d5c684fc77e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9640c21-6922-4440-9f3d-8f294663f1d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae06be9-1ee7-448b-b2d1-91ff543f450f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fceb837-9dbe-4d68-8d3b-72be0387b913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2465792a-2155-4ca2-9687-6c3d70446efb",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d615ea76-137c-4b22-97ba-cc80c18258e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0fd1026-c2bc-4b61-ac19-f0bd70d7556c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68950244-6e2f-4fc1-8d01-2273aab0a8fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6199b9d-b6b3-45e5-b198-2472659a6712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c4b91f9-da43-4669-9b52-49c7f18d652c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a40a5784-6919-48ef-b971-b831f354bef7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "731c4276-b295-4daa-9610-41fb8cb6742d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f5e0935-9628-4629-ae51-6b2a18d77cb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "235568a0-c0cd-4015-918c-61a045c9c909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a9688a-2d1a-4f1a-8a56-0a8dafead8a7",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04909cdb-edbb-4c0b-a787-052b5e2969d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ece1b9c6-32ad-4d5d-a7e5-397ccc3425bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ae84a4-7d2d-4aa6-9d90-0f0fcd2e0823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf8aa1b7-0b87-4a1c-807c-604323be2225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d287b7b6-21d8-4de0-ac2f-74d4553ab021",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "307322f2-5176-495e-85e4-d1cb49e4db8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2a30db6-d993-4c20-9389-9d6c2196f0f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a3dbc04-1d70-4e39-8e99-900d664a66de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08b4740d-6a1f-4255-8516-0a02651c21b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee49230b-c0be-4786-9383-a62afec53f7a",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7a0940-13f6-45b6-b35a-5798bb35ccd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76470e45-695b-458b-9c6e-9c3a952e6342"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac3bc8a-1915-4659-a001-6d0969677b48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a62f88cf-c85e-4496-bef2-be8f1c58456d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69472d5-aac9-4dfe-9d8c-3c7797eb1bad",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a8547b3-0a3f-4161-86ba-64aa8276838d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d9b2a46-11f9-4d1d-b26e-e17a3d843145"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e437abe-9eca-4223-8b60-623478fb7abe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0524ec05-813e-4522-9bca-d8f3dd660e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f296e36-ad65-4482-a4cf-d8ee28547894",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "431520d5-6fb6-4558-adfa-ae1dad693ded",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b067b76-2cf4-4bb5-b0a3-89abec4fbe53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92046d3-e464-475f-b8e6-356bc10c761d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96328cb1-cc0b-4af2-9e42-72f2c88b93e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa1295b-2d5e-49f2-9a66-01dd6dd039bf",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf605548-bce4-4c8f-86db-4e5deab08936",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd7246c4-958e-49f2-a161-6aa8b67dab73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b68241f9-1a1a-4459-81c0-2cbfc4556ae7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5162880-b041-417a-9839-410db25bcb17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc081dde-7015-4acd-9f76-ede6aa026602",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805ddc2f-e525-4189-84b0-799a9e1b9a8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b703ecb-a980-45fc-abb1-041de81ca270"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec300f6-7979-4fd7-9fa8-a376817ab977",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0003a726-7e32-4263-ba39-031cdb569f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db330994-d8ac-458d-b202-4f6573ae589d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac6adf7-a980-4f51-a702-64cb1e939711",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a560136e-0b59-40a9-a501-536552b0fd06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1cfca53-fd6e-4096-9515-31cfd1e34dca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ecd4ff5-6fb2-429e-93fa-26e3927a914a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a6e925a-e46c-4536-a385-e691d91cda03",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf1a445-a702-419f-ad33-b690667c4bf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47067a61-7d04-4a87-b6ad-aa8bc8758d25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ec709e1-33bc-4ff6-8aac-6ed0f7904ecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f5ce625-1940-42a0-801e-69586d65b1f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a1ad5e8-ffae-4eb9-bf6d-725d54903fee",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef7e11bd-76a0-4a82-a2fa-3a1704b89aa7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7516e56-3de4-45b7-92ed-185b2b5e44e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "038bca40-cc80-439b-8434-b5f3dae6578c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7b2653d-5ee6-4f1b-bb26-c11cd591fa5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ddecf55-0619-4285-b7f8-35dc242077f3",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de8a3cf7-adda-46a4-a912-924652a5146a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c5c6a31-8057-4680-a20e-9a02df85b493"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53060261-02b8-4bc7-82ef-5b17d3eb86c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50ed8c6d-f102-4263-a79f-30215af4220a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1febce3b-9d63-4a68-a37c-338ef42243b2",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8207fbb-c163-4fec-9b5d-9a1f2c6813f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9e2915a-f69a-4b2c-ab93-e7811d29a71d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e27ac504-2be3-4716-aa17-fd8728da1937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb7bf5f3-0f48-4eb2-96bd-7020b6afa4b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c0a74cf-f7ac-4066-b914-9adfca3a34f7",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fca6031-258b-4bd6-b7f7-58126f6a8ce4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8c98732-cf53-4247-ab8f-bb86a342e7dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9296e229-4eab-49d2-b0ac-1320495fbb7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "720ede77-b8b7-4962-bfb5-8dc5019f811f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28e821d0-a36d-4d9c-8bdf-798e978a093b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c35b44ba-b05e-41c7-9f4a-2d5b772d2933",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ceafc92-e3dd-42e6-bad6-45ec761ff9ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb53117c-5c6c-4922-9225-834c2332f9b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eac59e04-9675-4cf5-8eda-af9d850eb210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b44bf8b-9c64-4e13-8fda-667b7b1629fb",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3199a78c-8d3c-4eab-91b8-60733a5c5df0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "269a82a9-4e62-4829-ae9c-4363ca4e4b0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aea13f8-ae44-43fb-b161-11ac88bf3c81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01ba00b2-7af0-4204-9c3b-e51d51e34dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddfaa11e-cc17-4c01-998f-9ce14b2940a8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11eae716-ae86-49f2-9161-767f63a98f93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13c3869d-6675-4422-9a46-a791069c15b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6e132f-9f73-42ef-bb5f-a90ffc220ba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00d3a3ff-77a9-4971-83b6-b5048ebad2fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f543b81-e1e6-404f-85de-4be595c533b7",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf6e1cb5-49c8-4ebf-9d97-c8fcb40fae83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84b6a02b-8d5e-450e-a8a7-d6114a9160b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4cb412-a9bf-4395-b836-c9d695f03417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4f6c7b6-289f-4a98-af1b-e44b0cf0d8e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1596b1c-57ca-4845-9f61-ecdcc2723ce7",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5f5567-e7b4-4a4e-a890-b3cc94ce70bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75d7bb15-2ca7-4be5-9c15-6ad07e9252c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e5d3c4e-664d-4a09-be96-9c7e7f634173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bf86675-f6ab-44da-9303-d5e905b417e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1edc900e-17e2-472d-8cae-ee2e50d289d3",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd8654b3-716b-4556-b288-e9e097ccda93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a2deeed-dc33-4fbc-819a-9aa2058752e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1fb8a1c-0f13-41c5-be63-aeac4f5b2f5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97c9d3b4-e64e-4a48-8f16-b95f1a3015a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b3ebda4-e626-4035-ab04-5a7f480ac6e5",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec04f65-bf55-4683-ac6f-4a0d7eb55f72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "620c79b8-8a6e-4ace-ac7f-a4cee702a538"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "291bc08a-3b76-41f8-a155-c3c1282a787a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65cf8490-6fe5-40f9-85e1-5dd6222eb4c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "608d08b0-55f9-4faa-b2fe-6987ddf17cda",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b901ff0e-71a5-47b1-9b02-36093c8232f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c02175db-77ef-48b2-9ac1-4b6df868af74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac4bc5ec-45b7-4b52-aa72-fe22993a3dac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31b7cdf2-898f-4b3a-8779-c2b04b55d48d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "993e20d1-e11d-478a-8a7f-2077e7f70409",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcecdb53-0bba-4ba0-ba73-5f0211976c7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41ce36a2-2746-4cba-8dff-298bde26e1ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0485de1b-6513-46f9-89d2-7559363c74f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5b7eacc-adff-4dd4-91b1-fc8d9d7ea99e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "681e9f67-bcac-4da6-bd67-219b89bb6421",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f86bbb-fed8-4b88-8593-3149a48590bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2d4c903-f694-4a8b-b436-980aa9f047de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "967ec288-585a-4c91-bfb4-53caaadf2646",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ff22064-af08-43ea-8f0f-646b2ab06e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e92a99-c616-4be0-9fe2-88ab2456e332",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8991db5-1262-44d1-b2f2-3a3a8220a3c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00e6b282-cfab-4d3e-80b2-50af3e980f51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8b6147-5aea-4fa6-878e-ea5ad097fddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26e268fe-7799-4457-868b-4b1d990871f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f1f43c-92c4-4f70-82a1-af16037fd428",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222f9b09-a53f-415b-8ccf-25b73e9a5984",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4d1b551-e619-41bc-a713-bd0fcac08779"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e53557ed-82bc-4605-a1f6-3d6ddeeaf632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5de5991f-b807-4a51-9554-57f2cf39ba92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e0e293-2ec1-4392-9afd-ace09cf41052",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b25dfb4-09d4-4f9a-82e1-6a88ec8355a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69098279-6622-4698-8483-50978f1c16eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ddf06b-d8ff-470d-8720-06759502fff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "333bc8f1-664e-44f7-a676-02c84b3a6a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "338dfd59-b36e-4410-9d74-6834508da0e6",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8148a395-de73-471a-93f2-5a6757e3399b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0936d410-8456-435a-a287-fa5be8bb244f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "995d3387-e8a7-4687-8d2a-fe7df2304d05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74f0e584-7b60-48bf-a59a-0a4d3d3cd361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c6581c-3dcf-4479-8b02-117fb73f7287",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286c1824-7798-4b55-9915-f2eb404d609e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d39c6c79-a1cc-4666-8f43-faaaeef07bb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56cb153-9a1c-4a89-b3f4-98766d746cc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d25acd2-d2a3-4720-93f3-66549e8bfe95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d0ea62d-e162-4c40-a266-31adbb1f0079",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0d9607-095e-4b38-8496-7fb9120837e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a5ae455-7fa8-44f6-abca-f8f5544a108e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "929cd0a1-966b-4629-b8f5-de5bd5189689",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "908e526a-8169-4e6c-8266-1a2504931fd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2eb61f9-881e-4eb5-b2e7-4e41bcc98db3",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c296c6b-3bee-41b5-91bd-a7de87a6b622",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16b994e1-37f2-46c5-aebc-6a7bef21b048"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10aee7be-74d1-4e8a-809f-191e0da5cee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f32586f-bcc5-4035-a56d-3e0f38888073"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "476e36ec-7e32-4a38-a244-c76775aa7bda",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "01c94520-899a-426a-bf2f-55ad1b7883bd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "22d75c9d-3d16-4d13-b7cb-ec3900b0c2c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "77464f05-849f-4c28-bf39-4eff424fe7dd"
                    }
                  }
                ]
              },
              {
                "id": "699ed5c6-3cca-45d5-a38c-73d6e074ae98",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7d3aa822-eff7-49e5-ac69-4e8a6286226e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d8b0dc-97b4-45a3-accc-249bd4db5013",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9ad4198e-a69b-4094-ad83-69c79b93fb15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce1f475-61d7-49ea-8a27-2de258331b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d56456d9-35fe-4092-a1d0-597009704b12"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c4eddd0-055e-4fc6-b135-3e366bf75c72",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "92597085-cd6e-4d1c-aee7-aa1a944f8aaa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b55c41c-78be-491d-a2f8-d5ea209f014a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8214ad5f-f9f9-4953-a990-795f802e9e3c"
                    }
                  }
                ]
              },
              {
                "id": "5eca3b3a-9a08-4405-bb40-08e85a4b6bd4",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f605227d-a001-4f54-95c8-64381a803d1e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "605f696f-136c-4e11-a100-6f4adaac5603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c09a87a8-bf2d-4727-a12a-379c01c6b3bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2807b730-b008-43cf-998e-b7ded9319a2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a980e087-e20c-4651-b41b-82f283f699d6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c66660c9-2031-45b0-8a72-585a51aa903f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "75ad63de-ca8f-410e-9ab4-3cccee4eb11e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d6e73fd-6f95-4348-862b-4c30e469a80a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "53e440b2-205a-4785-9189-a960b4e3618c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d9c2b33-acd2-420c-9195-458724d7a16c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65e65478-47cb-47ac-8a73-a34b5b785599"
                    }
                  }
                ]
              },
              {
                "id": "272aca42-d9c8-44b2-adf5-485c6a770476",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "14af9375-6d24-48d1-a288-68be06fbdff3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "db96e4b8-1109-409e-bc60-f8d5f1e02d27"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03c84652-c5ca-483a-a0f2-a68724d0c18b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f19c5d40-4183-41be-9b11-8f2dedebfed5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0711bd2a-fe74-4577-b4f6-f022cc80d858",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3e514b5d-4ac4-4b8b-a11a-977c7dd37360"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "956a5008-ae8a-4a16-9718-69eba8e7c581",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dcb00cea-8961-4695-9c94-2eb7fc9f5fc5"
            }
          }
        ]
      },
      {
        "id": "5ad3156f-1a65-4465-a587-5b7d76aef823",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "697dc495-9901-44c0-a103-669ad9fb5219",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c9822cd4-7e33-4f31-a43b-dec3574f7805",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e1d336bb-d89b-4418-8b08-d9101f44e723",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d3981c-1629-4504-b1b4-d190b8f3ed26",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5c7e4352-36d5-45aa-9396-4508cef97db8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb779795-f861-4d23-8786-9466243524fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1261f7af-7d2e-49aa-a31a-7b1624e5d66b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e257dd2-589b-4ab8-b169-772ef6d6c93e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9efd1395-70ab-40e2-a37d-0165c3b2953d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "553644cf-664c-4cb1-831e-dab171422b6d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "624907ea-10e0-49ba-b125-f0fc5c0c561c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "926f4d1e-d55d-40c3-94f1-7099151f8a9c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c86564e7-04c4-4e8e-862f-19169f2f57f5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0486d399-5af6-47fb-bdc9-f3a41c4fe913",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7d745210-f7ed-462d-ae18-9908e595cd2c"
            }
          }
        ]
      },
      {
        "id": "0b0f121c-df93-4c79-a370-b3c6f64dcae0",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "1cc0da37-6b18-4fcb-8083-709c2d55aa84",
            "name": "Negative Testing",
            "item": [
              {
                "id": "965883ee-78c9-4378-ad85-4e352b09b7fd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "953ba35a-36f8-4820-a447-457df861d9f9",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "836ffe2f-b833-4f5d-ab38-74d125017c0d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c51b393-7d33-49fc-a146-46d07bf49b06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9cac51e-bb62-402d-8527-9eb5c67c04fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aaf7f0ea-b544-4021-ae58-153364238c48"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d185ada2-cd97-4de1-8354-c0834dcddf91",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3dc20828-46d4-49c2-934a-6da58cae4b45"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "65d1cd0c-da4a-4d78-8e86-552be1070d0b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c0c8a3b8-1ddd-4c64-90a0-68d9c9bd56aa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3ca7911a-1699-4a3e-b1a0-5ff0971a4a74",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "27e60c9f-22b5-40a5-9b3d-7b14f43709ef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "737fb599-9223-407a-a891-402b2c1db5d1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cbd796bd-42b8-421f-8a97-4930ad189938"
            }
          }
        ]
      },
      {
        "id": "db4bd91f-9da3-4543-9082-3b1168f64a9e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0461115e-827b-4ea2-b57f-4a238b619752",
            "name": "Negative Testing",
            "item": [
              {
                "id": "118d299b-318a-4ff1-bcc4-778b955a183e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "62856d62-a4ee-4825-839d-a25a6d77305d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f17e8f-eccf-4627-9ee0-a617716412a4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74be2315-30ab-4ebc-a5f8-64802d964a36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae460ca8-2151-4677-a95c-448afa95a5c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4b2bab7f-c996-4907-875b-8512d49ef372"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "821f4106-8f86-4364-a41f-b10df844a57d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "61b07470-67fb-49e3-a12a-7c08dd55ab2f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c335472-e1a8-4d18-922c-a2b80efc9c3f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c5470574-65ab-4786-9a72-608ba141f2a7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "94420dc9-5bc9-40f2-8013-6427bc6deed8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0024349e-f0c3-45a8-8512-b14c6d34b2b4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c1281d47-d693-4b4f-af2c-4ae4b7128659",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8053487d-e605-46f6-b056-ff8841d05e23"
            }
          }
        ]
      },
      {
        "id": "d1582859-2345-4b4b-be45-26273ce79ef3",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "245a4bfa-6925-4940-8e4e-c4ffb9558076",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d62b1e4b-05e8-446c-b13e-766268101654",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "dff3f2eb-9c42-4265-b52b-d554b4bea621",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "959332b6-b1a0-41a5-bd13-99d7b573d0e9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "31dd0b9c-cdb7-4a8c-a23d-5e0110caa673",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 341.2535211267606,
      "responseMin": 33,
      "responseMax": 7570,
      "responseSd": 921.6266806814684,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1694997204124,
      "completed": 1694997313523
    },
    "executions": [
      {
        "id": "b274b739-8f3b-45ce-bdec-5837702d9053",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4a49c2cb-6876-46af-bf1c-70b4c81e1b0e",
          "httpRequestId": "cb485dfc-d8e8-4db8-bd6c-6ce762a5372d"
        },
        "item": {
          "id": "b274b739-8f3b-45ce-bdec-5837702d9053",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "097c8815-1f08-4b46-af3b-f568d595d56b",
          "status": "OK",
          "code": 200,
          "responseTime": 115,
          "responseSize": 0
        }
      },
      {
        "id": "d6cea0e5-6583-4ba6-80fe-3f8b90a8c811",
        "cursor": {
          "ref": "1ae79883-27cb-4686-9316-a446513939de",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b45ec456-89bd-4741-ac35-70c5bbc83017"
        },
        "item": {
          "id": "d6cea0e5-6583-4ba6-80fe-3f8b90a8c811",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "9e4ec601-962d-4a16-913b-da864b6fba02",
          "status": "OK",
          "code": 200,
          "responseTime": 33,
          "responseSize": 0
        }
      },
      {
        "id": "fdbff3b2-3bfa-47a8-978c-1e9978810f1a",
        "cursor": {
          "ref": "01fa965e-cfa4-45f2-94e3-125033c17d2b",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "0b85374f-7312-46f0-aa50-9ef2b928e9f7"
        },
        "item": {
          "id": "fdbff3b2-3bfa-47a8-978c-1e9978810f1a",
          "name": "did_json"
        },
        "response": {
          "id": "7cdd0a15-092a-4d9c-88c5-523b5d617121",
          "status": "OK",
          "code": 200,
          "responseTime": 1376,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76031e94-d75b-4978-b209-496d5195c485",
        "cursor": {
          "ref": "acf74c8b-4178-40cb-9491-7100effe1fc9",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "833e1b89-ed06-432e-9a1e-439c0d991956"
        },
        "item": {
          "id": "76031e94-d75b-4978-b209-496d5195c485",
          "name": "did:invalid"
        },
        "response": {
          "id": "3b4460b3-95b6-4f84-8fcd-665708cdb173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76031e94-d75b-4978-b209-496d5195c485",
        "cursor": {
          "ref": "acf74c8b-4178-40cb-9491-7100effe1fc9",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "833e1b89-ed06-432e-9a1e-439c0d991956"
        },
        "item": {
          "id": "76031e94-d75b-4978-b209-496d5195c485",
          "name": "did:invalid"
        },
        "response": {
          "id": "3b4460b3-95b6-4f84-8fcd-665708cdb173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3227ad4e-3b40-4d30-863f-3408bde32e4d",
        "cursor": {
          "ref": "6ff9095b-e88f-48d3-b8cf-4ad179d01b73",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "240ef3ea-6c92-4a98-8a2e-8637473a8424"
        },
        "item": {
          "id": "3227ad4e-3b40-4d30-863f-3408bde32e4d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0df40a08-3df1-41c7-8bde-1836ab13d755",
          "status": "Not Found",
          "code": 404,
          "responseTime": 434,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c4b2d3-fec6-4197-9061-6425d3dfbc42",
        "cursor": {
          "ref": "56b7f275-cfb8-41fa-99c8-ca0961bbcea6",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "8da0d5e5-1abd-44d5-a2c5-efb3d6232032"
        },
        "item": {
          "id": "16c4b2d3-fec6-4197-9061-6425d3dfbc42",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5ed36cba-1a8d-444d-80cf-8bb29c2d1838",
          "status": "Not Found",
          "code": 404,
          "responseTime": 267,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc351e76-4d2c-4a31-b3ad-0ea9e3c567a6",
        "cursor": {
          "ref": "8a681a94-d10f-49ec-a274-607653d3cc9b",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d7f25a25-2ba1-49bd-873f-d61eac1fe5e1"
        },
        "item": {
          "id": "dc351e76-4d2c-4a31-b3ad-0ea9e3c567a6",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "7c6f554f-c94a-4179-af56-c097e3d8162c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5503f931-68f2-466d-9a7f-6f7e12c6e5a7",
        "cursor": {
          "ref": "2cbab829-83f0-4c57-9f97-1cbbb611089c",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5a2ae537-45e8-47f2-853e-9bf1eb9e1520"
        },
        "item": {
          "id": "5503f931-68f2-466d-9a7f-6f7e12c6e5a7",
          "name": "identifiers"
        },
        "response": {
          "id": "3f9ce27a-d7d8-491b-bbfc-ca4a32576909",
          "status": "OK",
          "code": 200,
          "responseTime": 1279,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2beefcb-2735-4e4d-9f02-57798127307b",
        "cursor": {
          "ref": "8eed5cbc-60bf-4390-b7f6-9a2eb21fb211",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f200f78c-b155-4aeb-81d2-018de0ee6bb5"
        },
        "item": {
          "id": "a2beefcb-2735-4e4d-9f02-57798127307b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e6fe8b0e-6f53-4349-ac83-71b8af084ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3990c4d1-d6a8-4758-ab17-0fc9e351620a",
        "cursor": {
          "ref": "21f6f26d-a93e-4abd-9b91-b36c9c2e5804",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "59123e75-bbe0-4024-8904-ae4941bcc0b4"
        },
        "item": {
          "id": "3990c4d1-d6a8-4758-ab17-0fc9e351620a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "73de4009-5af5-4b50-866a-55935e8b6ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b7f5937-5081-486b-ae6e-bfebee16c925",
        "cursor": {
          "ref": "90b600f9-38cf-4170-96a9-c68bd79aed61",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "6f6c6999-ba57-4ce0-be0c-34599238ecd8"
        },
        "item": {
          "id": "4b7f5937-5081-486b-ae6e-bfebee16c925",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ad4fd9be-5892-4503-8f53-cab5ca396fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb1390f-ca86-4e00-8769-074fbcd34847",
        "cursor": {
          "ref": "fb236717-61cc-402d-9f30-3674da134f14",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "57346e87-1988-4f5d-91d7-78b1c075dcb4"
        },
        "item": {
          "id": "0cb1390f-ca86-4e00-8769-074fbcd34847",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ff0c530d-7ba9-49fd-8b4a-7918ac2d0101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ef3e00-195c-4cf9-99e1-7e17f6283eee",
        "cursor": {
          "ref": "a2bee657-6826-472d-b4ee-1a8199914cb1",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2fe96d9c-2705-4206-a0f3-dd935d2ff2f3"
        },
        "item": {
          "id": "54ef3e00-195c-4cf9-99e1-7e17f6283eee",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8817ba6a-01ee-4ca4-874c-9503eefee360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f64f4088-a7ca-420b-b65e-15ae8600b1b0",
        "cursor": {
          "ref": "a6ab4ee0-8e80-48c4-b956-d2e855a8a200",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "da7fc379-a638-416c-941c-6d662fee41d1"
        },
        "item": {
          "id": "f64f4088-a7ca-420b-b65e-15ae8600b1b0",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "8cde00b7-8ecd-4f88-9bd7-38f935c894f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a8cf23-a1f1-4c6d-98da-01b22bf18bb0",
        "cursor": {
          "ref": "bd3d4481-06de-45f2-9f0d-87c5536a86a3",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "671722a9-18b7-4f62-b76e-c8fc7ab230b2"
        },
        "item": {
          "id": "52a8cf23-a1f1-4c6d-98da-01b22bf18bb0",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5f4df58a-d806-4ed0-b382-e53b1e7a36fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df23acb-153c-4db8-805a-387a14af71f6",
        "cursor": {
          "ref": "a36197ef-fc21-4aba-a8bc-587a196b1aca",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "9a494947-0704-487a-8ea2-05cf2f18b2fa"
        },
        "item": {
          "id": "4df23acb-153c-4db8-805a-387a14af71f6",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "31f0ceec-767e-47d5-9de9-f054c634f16d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e8bb8a4-772d-47c9-bead-f72c1f5cba06",
        "cursor": {
          "ref": "c6f31535-b13a-4668-a181-0d85ecef1ef3",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "8d3344f9-329c-45b9-80c7-a9ad2799c613"
        },
        "item": {
          "id": "3e8bb8a4-772d-47c9-bead-f72c1f5cba06",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "64027248-ca23-4d0b-96bb-af1f095ae720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b016c33-d1b6-46c8-aaf7-f9b7cd1f3847",
        "cursor": {
          "ref": "0fcd0773-f88c-4761-8f35-8c093bde7563",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5ae5dfb2-0c56-496d-b4f2-d8665b84d2ee"
        },
        "item": {
          "id": "5b016c33-d1b6-46c8-aaf7-f9b7cd1f3847",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "0b7cba80-3090-4d18-af26-1ff86cce30ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c61143f9-657c-481a-b9ff-9989e2f74e67",
        "cursor": {
          "ref": "10a9002c-6f5b-4523-a13d-031e7787450c",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2bd33e0d-6f6b-45c7-a412-d71c5ad688f9"
        },
        "item": {
          "id": "c61143f9-657c-481a-b9ff-9989e2f74e67",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b03cbcf1-0cae-4e16-8d98-a13f15df2727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b3a12e-4c83-4f73-85f0-19423b634351",
        "cursor": {
          "ref": "23962261-b724-4437-aa6e-9eb2b822561c",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "dd2cfa8c-e421-4b4e-a523-d81d40d228ac"
        },
        "item": {
          "id": "42b3a12e-4c83-4f73-85f0-19423b634351",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a6d1cbae-54c5-4af5-9583-903af16d9872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f939975-54e4-4674-82a7-7943ce868fc1",
        "cursor": {
          "ref": "aa73648f-d62e-435a-a728-e4c9a22aa844",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d5967495-aaa5-4a69-bc93-83e07e099ca4"
        },
        "item": {
          "id": "3f939975-54e4-4674-82a7-7943ce868fc1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ce1bedd6-a555-4fce-94de-35909d2c29af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63bb97ad-7803-4857-a67c-050e23a65297",
        "cursor": {
          "ref": "94acd42a-e9f8-4dd5-80f9-87a578d44060",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "642f3ad9-cd55-484d-a430-30a431a1f38d"
        },
        "item": {
          "id": "63bb97ad-7803-4857-a67c-050e23a65297",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "3458ce93-1f99-4afa-843f-335385504811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c0bf3a-30e8-41b5-b5e7-802a3a701f65",
        "cursor": {
          "ref": "0dbcdb52-8eb2-4c11-8847-e3c09deb00dc",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "7cfa09c4-b165-494e-b62f-393a03e68a02"
        },
        "item": {
          "id": "09c0bf3a-30e8-41b5-b5e7-802a3a701f65",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "888d2dce-2cbf-4cc6-8c5a-7b42fed57205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee67330d-c6c7-4800-b211-f87bb057cc4c",
        "cursor": {
          "ref": "06afef04-6027-44c9-9a21-947e59de2ffe",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "482e9f12-1614-470f-8d7f-f6d7b0a8ef68"
        },
        "item": {
          "id": "ee67330d-c6c7-4800-b211-f87bb057cc4c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "7909e85f-51a0-4746-9423-5ce940573aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e484f77d-508c-4ba4-bb62-e27a464daff7",
        "cursor": {
          "ref": "ecfda6ca-3859-468d-8ec8-a32e99ee969a",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "196dc0c4-01eb-4433-8889-c5db40ff2827"
        },
        "item": {
          "id": "e484f77d-508c-4ba4-bb62-e27a464daff7",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "dd3beba0-9522-43c9-8c28-2a30bba547ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d47b330-e034-4b07-af46-3cead5827ee3",
        "cursor": {
          "ref": "6453bc90-a9ca-46d0-bd7f-f88622472d59",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a6d974d9-0bee-44ca-bce7-ca271aa510e0"
        },
        "item": {
          "id": "9d47b330-e034-4b07-af46-3cead5827ee3",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "37875ac4-0044-4a62-a500-cc5ee0bbee44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c16aaf6-3e48-4b67-aebb-7e36696d5625",
        "cursor": {
          "ref": "20719539-b882-4a8d-b8b1-8310953dd1b2",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "417d8543-f270-447b-a27b-fb3bc9455d66"
        },
        "item": {
          "id": "2c16aaf6-3e48-4b67-aebb-7e36696d5625",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "5e9d898f-89b4-4275-afd8-461865634e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e435c49-64b7-4127-932a-41f1fcda73f5",
        "cursor": {
          "ref": "eba53bb2-b154-416c-9afe-714db000400a",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f2d18cad-5b1f-4fb6-8611-e1599c39b361"
        },
        "item": {
          "id": "2e435c49-64b7-4127-932a-41f1fcda73f5",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "82aec15a-fe03-44ab-98fa-0802de3ce957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e88859d-e8ac-444d-8077-66fbc712e49f",
        "cursor": {
          "ref": "e1a9e2d7-ac8a-40b6-a1cd-b2dc8a5d1517",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "fc405044-c803-405f-b4f4-a893d914d088"
        },
        "item": {
          "id": "6e88859d-e8ac-444d-8077-66fbc712e49f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "c119e08d-58bc-433b-a37b-7eb88c0faa4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f33de1f1-48a9-41e2-a2f3-6205094e4e1e",
        "cursor": {
          "ref": "087f94be-21c2-48d0-82e4-ecb974868fda",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e36c443c-01bb-49af-930a-79273c5b5af7"
        },
        "item": {
          "id": "f33de1f1-48a9-41e2-a2f3-6205094e4e1e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e587ac5f-e4a5-42f6-9670-7fb3a7d4a0d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "400206db-19c7-43a1-82e6-932bb03219c7",
        "cursor": {
          "ref": "86518609-f741-4b64-916c-e54fbb5de9f5",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "fd2d985b-e125-4074-9c9c-85bfa89b2547"
        },
        "item": {
          "id": "400206db-19c7-43a1-82e6-932bb03219c7",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "d98a69c9-e3d3-4dd3-bd1c-9d0c59cef40b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee40dcc-6624-4ca6-9cc3-6028621e1a5c",
        "cursor": {
          "ref": "8dce5865-ccdc-422f-becc-f3c56c25afed",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "853e5a52-aced-415e-afbd-2d5e5a65eae8"
        },
        "item": {
          "id": "bee40dcc-6624-4ca6-9cc3-6028621e1a5c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1e6bace5-12cb-4686-ad94-60d984658261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c6d781-f1f0-4f7c-8953-e66bb9f2304d",
        "cursor": {
          "ref": "0fc5b60c-29fd-40bc-bab4-dca6dd7456e8",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e6411359-8a86-4712-81c3-3510939c7b66"
        },
        "item": {
          "id": "25c6d781-f1f0-4f7c-8953-e66bb9f2304d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "60605ae1-d917-4779-aaa0-e0f3c46ee81d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb12900d-4dd4-4638-8565-3fe9ee34da59",
        "cursor": {
          "ref": "d9598208-a46f-44cc-bafe-cba73259e2c4",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "683771c6-c050-4e55-95bc-107b89532199"
        },
        "item": {
          "id": "eb12900d-4dd4-4638-8565-3fe9ee34da59",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b945f151-6c9d-4943-a270-1a4833d07e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc5830d-38a1-4a3f-a827-360398b21b35",
        "cursor": {
          "ref": "1d252372-d781-4689-9ae7-643368b8cf99",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "42d5a6ca-9def-4994-acfd-59c53e8a24d9"
        },
        "item": {
          "id": "6cc5830d-38a1-4a3f-a827-360398b21b35",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ea79a1bc-eb15-4ed0-8bbc-95416149489a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f38f849-c481-455a-a6e1-670639fd6863",
        "cursor": {
          "ref": "6bd202a4-db00-44ca-a25d-1dbde5512340",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "42655507-4ce6-40fa-ad10-a1570724a4b1"
        },
        "item": {
          "id": "4f38f849-c481-455a-a6e1-670639fd6863",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "bb575849-0052-4f4d-8a97-f986d706ad99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e01bc9a-7571-44ca-a219-7660acc27ce5",
        "cursor": {
          "ref": "3e98a7c6-8fdb-4806-9fbd-75c54ae2872a",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6a668bba-1ac8-44a9-8dc0-4d449b60cc36"
        },
        "item": {
          "id": "8e01bc9a-7571-44ca-a219-7660acc27ce5",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "56f321ac-a689-40a7-bcb6-13d318cb4a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b08345d-988b-409e-91ff-1db86d6fd1db",
        "cursor": {
          "ref": "857c11fa-b499-410d-b619-f3b061b4f08d",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7433442d-9261-42f8-9619-d4100074ed5b"
        },
        "item": {
          "id": "2b08345d-988b-409e-91ff-1db86d6fd1db",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1d089a80-62f8-4021-a81e-25b8cdf7d785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a65a07f4-6ad7-4645-82e2-fe5c0d41fcf1",
        "cursor": {
          "ref": "215e13f4-7517-429a-8ac8-7fbbc053da6c",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c4ee5df2-ebed-4c7d-8cd3-cd1beb665533"
        },
        "item": {
          "id": "a65a07f4-6ad7-4645-82e2-fe5c0d41fcf1",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "3437b6fe-fdaf-4b8f-aaeb-651c5ab2a3d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6636fe65-3ad5-437b-8117-21a9c4087d37",
        "cursor": {
          "ref": "7fc9b3f4-778e-4e39-be7f-789929cec2d5",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "6e6b6af8-c2bc-490d-a643-ad99f54c4260"
        },
        "item": {
          "id": "6636fe65-3ad5-437b-8117-21a9c4087d37",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "5993e961-53b2-4f7a-bb2f-5bd01270b7ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda32dc4-bb17-43a7-a6c7-5d7bdd44d152",
        "cursor": {
          "ref": "6f437e4c-01c8-4199-966f-fcfea81acd55",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c5c3c0d8-54f2-459e-8166-0faeb69f26fb"
        },
        "item": {
          "id": "eda32dc4-bb17-43a7-a6c7-5d7bdd44d152",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ea864d28-b3fe-4e76-8877-702608311c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc73fe82-7703-42f6-824c-235d7fb112fc",
        "cursor": {
          "ref": "b26b9501-3547-476b-9f80-f4f83b6e7f1f",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6a439be6-da03-405f-8de1-4002d2a08c72"
        },
        "item": {
          "id": "bc73fe82-7703-42f6-824c-235d7fb112fc",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "bbb962a0-6345-4cf6-bee5-f1f19283275f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be15c4c6-9f06-4380-954f-006923448b35",
        "cursor": {
          "ref": "ddeb4c9c-3511-4eec-8402-a9c6c71fea03",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "443094fc-d5b1-4f67-91ae-4fe53d70eaa6"
        },
        "item": {
          "id": "be15c4c6-9f06-4380-954f-006923448b35",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c8aed268-a7d5-45ae-8d43-045ca081381e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e69547-cada-4acb-9de8-9be6937e2639",
        "cursor": {
          "ref": "1958eafb-aa26-4c75-ad19-a423b551c34b",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7f4955ac-2bc1-4ace-ab0b-42e5cecbba2c"
        },
        "item": {
          "id": "c0e69547-cada-4acb-9de8-9be6937e2639",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b0482e25-e9cd-4137-830a-1c8a05d54a11",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 603,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d456041-0047-4a63-92c5-c61946f1b4ce",
        "cursor": {
          "ref": "8bfae2ea-efc3-456c-b83e-c7e1358416fd",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "7432f2ab-215b-4eda-9453-86a3e7f6ab86"
        },
        "item": {
          "id": "3d456041-0047-4a63-92c5-c61946f1b4ce",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "36324b59-e965-46ec-b742-9b4ce4530afc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "326486d2-4078-44bc-a8ca-5fb075fc3380",
        "cursor": {
          "ref": "26e3b6d1-979d-4d71-a43b-95086e42aa8e",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d853a196-24b6-4958-a2ae-294e14f45202"
        },
        "item": {
          "id": "326486d2-4078-44bc-a8ca-5fb075fc3380",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a5e64862-c189-4b09-806b-88721662a013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9682fd48-d26c-45d2-9a40-8ea26ca7a761",
        "cursor": {
          "ref": "94bb7451-fd93-4663-b82d-020eaf89e140",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ead29cbf-a05e-40ea-bdc9-ceb20c8b894f"
        },
        "item": {
          "id": "9682fd48-d26c-45d2-9a40-8ea26ca7a761",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f4ba548e-cb05-4387-aad6-10a48cc748c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97548c59-646c-4d59-a8b9-020f4b6321df",
        "cursor": {
          "ref": "c1b5461c-3e47-4684-a8f1-15faa936a3de",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a2817468-dd10-4328-a480-be9fd6e5fbb7"
        },
        "item": {
          "id": "97548c59-646c-4d59-a8b9-020f4b6321df",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "171c6579-ecd2-49ba-8ffe-bc03f102e47a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc58782-d220-4672-aff3-38a649b6a1a5",
        "cursor": {
          "ref": "c23ee43c-e366-498b-a774-da1a5acf08af",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "601d5f87-eedb-4571-87a7-298d75a7f46f"
        },
        "item": {
          "id": "0bc58782-d220-4672-aff3-38a649b6a1a5",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5266fa94-2080-4fc5-9d75-6f5ccfd4e8b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "198838cf-83e7-4251-95ac-e649d3b7d1f3",
        "cursor": {
          "ref": "24948350-1796-43cc-b194-81b3710860e1",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b9c63890-e7a2-4327-acab-7c635f239b35"
        },
        "item": {
          "id": "198838cf-83e7-4251-95ac-e649d3b7d1f3",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "99b8b202-9311-4b27-86c8-29a2f38056af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "207b42a5-4968-441f-bfcf-fbca34f57a16",
        "cursor": {
          "ref": "7091494f-6ed5-44d4-a356-9b7fa22de088",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3877eaad-4457-4793-bdc8-3d5712b0a382"
        },
        "item": {
          "id": "207b42a5-4968-441f-bfcf-fbca34f57a16",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "1dc5b88c-1f7d-4ccc-8633-63496dcd4648",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 619,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b539166-a6b9-4d05-b97f-cab13206e588",
        "cursor": {
          "ref": "b757d61f-53ef-4bd9-a8c5-096a59c6d319",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "6c5a5763-89c3-4336-a9ef-2c04a5c52160"
        },
        "item": {
          "id": "0b539166-a6b9-4d05-b97f-cab13206e588",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "453004a1-eb4f-47ca-b326-5de4b007c7cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d018ba-5364-4225-81ec-250b71808783",
        "cursor": {
          "ref": "892b73e9-592c-453c-b3e8-42d0eebd311c",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "be001b4b-42b7-4401-a4e5-580fe74b5d96"
        },
        "item": {
          "id": "75d018ba-5364-4225-81ec-250b71808783",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "8872a295-6183-42a4-b58e-94ae4e1dd4a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aedd2264-2175-441e-9ff2-75a19e22b5c1",
        "cursor": {
          "ref": "16de66db-9104-4c98-9f67-21795b141a16",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "15d48f04-9972-4d27-841a-3da647b75253"
        },
        "item": {
          "id": "aedd2264-2175-441e-9ff2-75a19e22b5c1",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "cc325269-09f9-461b-b71d-73f7b5cb1571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff3becfa-dee6-48a9-a71d-ec8964050eb6",
        "cursor": {
          "ref": "e8afd8df-ca71-4f2f-8d52-797aef26538a",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "8d633341-a603-4050-84cf-999e3a46167d"
        },
        "item": {
          "id": "ff3becfa-dee6-48a9-a71d-ec8964050eb6",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "5cb43707-747c-4181-8d50-eb49e74a73ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d05eae89-7efb-4dd6-8534-78e3fd996d30",
        "cursor": {
          "ref": "3d6c580d-2f05-4727-a841-6bdb439d3c79",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b6149a32-8399-4718-93f5-3b74f7cd5fee"
        },
        "item": {
          "id": "d05eae89-7efb-4dd6-8534-78e3fd996d30",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "50dde509-e284-43dc-bd62-c673e02d30aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "427b54c1-5d60-489d-93a3-75cd3022fa5d",
        "cursor": {
          "ref": "e1495c9a-4c72-412b-a399-f7f82e8a3165",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "21f7801b-5b13-4e52-aa10-c5672c9fc2b0"
        },
        "item": {
          "id": "427b54c1-5d60-489d-93a3-75cd3022fa5d",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ac487db5-ddf2-47d4-ad96-f2fc1e3e402b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "076eb09d-925e-4999-aa22-66619f83f14e",
        "cursor": {
          "ref": "9a422139-9938-4486-88a0-6a22c68a4549",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "340f1a34-3962-4cbf-9a5a-e980d596aed7"
        },
        "item": {
          "id": "076eb09d-925e-4999-aa22-66619f83f14e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "76696fc4-8545-455c-b6e2-2613160618e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e92d57c-9975-489c-aacd-cf1e4738087a",
        "cursor": {
          "ref": "eb8ff387-d955-4996-ace8-14e777caf80e",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "0e614ed7-d276-4b85-abde-1b06ad2a2a98"
        },
        "item": {
          "id": "1e92d57c-9975-489c-aacd-cf1e4738087a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d01e9e53-a85e-4825-82d8-e0aaf596dbc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64613e04-8189-462b-b9ba-a5a3f6e3a07e",
        "cursor": {
          "ref": "4487977f-229b-4cd8-bc41-757ac4ada1d6",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "1bf061b2-cc29-4214-9d0b-2e15fe265da0"
        },
        "item": {
          "id": "64613e04-8189-462b-b9ba-a5a3f6e3a07e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f58767a9-ae38-412c-b437-b1a76aa504bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c2469c-2014-48d3-89c0-616cf385fb4b",
        "cursor": {
          "ref": "7bbb77c1-7b8c-4971-abac-96a96432ef4b",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0551d7cf-64e2-40cb-b03c-9f02e0160b9e"
        },
        "item": {
          "id": "b3c2469c-2014-48d3-89c0-616cf385fb4b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d88d5089-f36f-4cd9-8710-b0fd0d2c96ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "680700b5-5904-447a-8fa2-df067a4d5ad5",
        "cursor": {
          "ref": "bb9e6a07-4f60-4d16-b73b-a18d2272e62c",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e1ccf6a3-49fa-45e9-8233-20746925e0af"
        },
        "item": {
          "id": "680700b5-5904-447a-8fa2-df067a4d5ad5",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "97e7cf33-b706-4780-8da2-27259e94812b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f418cd7-c973-44be-8aba-e37fcfc7abfd",
        "cursor": {
          "ref": "31ee82e1-8d7e-4b68-84e0-32d3a62ec178",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c48013cc-0258-4e08-8648-2e28a63802de"
        },
        "item": {
          "id": "4f418cd7-c973-44be-8aba-e37fcfc7abfd",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "47e6ee41-4fd3-453a-bd92-5e2af06ab05b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b231443-4d40-422c-bf16-d54eb0e6798c",
        "cursor": {
          "ref": "7942d8d0-529a-4bb2-8640-25c4a42df01c",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "3c7312e2-bb78-4c0d-b470-de0433d0b805"
        },
        "item": {
          "id": "3b231443-4d40-422c-bf16-d54eb0e6798c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f883d387-8a2e-4639-a5de-d56584918da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c670390b-24aa-41cf-9b73-a101068b626d",
        "cursor": {
          "ref": "8b1d01e7-4549-4a38-ad9d-57a772013891",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3929ce7a-cf4a-44b8-8366-f09f23185555"
        },
        "item": {
          "id": "c670390b-24aa-41cf-9b73-a101068b626d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "78f9f4ef-0099-4980-93bd-e1909f01dd3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b085e0d-70b4-468b-827d-8a73573a0d34",
        "cursor": {
          "ref": "3bf081f0-7dc7-4a2d-bc50-dd36e4f3c318",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "36193fac-394a-498d-99b8-1f1ee0fd5a47"
        },
        "item": {
          "id": "5b085e0d-70b4-468b-827d-8a73573a0d34",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "cebe5e11-7700-44a5-b469-01c6bf05eb35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eaaab90-4113-4fa4-a6c6-c6820dc91279",
        "cursor": {
          "ref": "66be6098-2f0b-4907-85fd-356011867ded",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "0d90895e-7d23-429a-a4a1-68fef5b6f5e2"
        },
        "item": {
          "id": "6eaaab90-4113-4fa4-a6c6-c6820dc91279",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "04d97af6-d4ad-4a8b-9de9-323f82a044a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8b1b67-d95c-464a-9bf0-cebab48c0f71",
        "cursor": {
          "ref": "906fce29-79dc-4746-8d9a-b5e57513b8aa",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "2a7ab32c-7b7e-477a-8e23-e34c8a0fc197"
        },
        "item": {
          "id": "1f8b1b67-d95c-464a-9bf0-cebab48c0f71",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a1254f98-a1bf-4609-8f82-b177b0410432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c788913-6e19-42a2-aad8-77e6b9e5657a",
        "cursor": {
          "ref": "1a68b8b4-eece-4ea6-9d98-41233bc6baa2",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "1d4f2180-7b64-4021-8932-f4c05af7dc39"
        },
        "item": {
          "id": "6c788913-6e19-42a2-aad8-77e6b9e5657a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ebc6d33e-6a72-413e-9186-76acae513054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c103e9d6-87d4-4c9a-897d-2553bdd2b1ce",
        "cursor": {
          "ref": "83c66c7e-9e28-4c45-96d9-fed26029b5de",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "bec547e8-f246-4ac9-89cc-26fe3160fb21"
        },
        "item": {
          "id": "c103e9d6-87d4-4c9a-897d-2553bdd2b1ce",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c3e27238-1ee2-44a7-ba98-4fa2c0652afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ec9444-6a6e-403f-8f9a-d5ff6be99add",
        "cursor": {
          "ref": "a7cd91c3-1451-409e-a312-9312107d4dbd",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "de55fc4d-70b7-4e89-804d-c2a3fd70611c"
        },
        "item": {
          "id": "01ec9444-6a6e-403f-8f9a-d5ff6be99add",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "8be7f3db-0e79-4f90-a704-259bc5eaed21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4116ae06-1b39-449d-aaa0-98ae797f77a7",
        "cursor": {
          "ref": "6f8411a5-8196-4538-aeff-b90361ac0422",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a21cffad-22f2-4152-ae4f-7c2e2f51856e"
        },
        "item": {
          "id": "4116ae06-1b39-449d-aaa0-98ae797f77a7",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "99e14532-892c-47ed-9466-e60405a149cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d20377-73a4-4ca5-8b06-5d8f85fc473b",
        "cursor": {
          "ref": "ef362652-caa0-41bf-bca2-871279ff3de9",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "508b4629-71ae-4c17-bc4f-9ea437726839"
        },
        "item": {
          "id": "28d20377-73a4-4ca5-8b06-5d8f85fc473b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1d86b4db-f83c-4456-8b10-07afebd31c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35bbf938-fb6d-4ea8-a3f4-c8182e803d4a",
        "cursor": {
          "ref": "d020d951-bc04-4a2d-bd0f-b73f85fce957",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e3387891-3257-41ea-a64f-17e62e77b96f"
        },
        "item": {
          "id": "35bbf938-fb6d-4ea8-a3f4-c8182e803d4a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e2b3239a-5f40-485d-b5b5-2a50e194bbd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a543ac8-e03f-479e-a96a-d54ffe946ea9",
        "cursor": {
          "ref": "b18e00ae-e160-42c1-ad3d-5dc8ba6a9d4f",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "50d35cde-c913-4596-abad-270c992853fd"
        },
        "item": {
          "id": "1a543ac8-e03f-479e-a96a-d54ffe946ea9",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "bbe5166d-51cc-4aaa-959b-94005a3d11f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc0bfdb-9d51-40a5-babe-7fe70cd85e97",
        "cursor": {
          "ref": "d4ad43f7-286e-4be4-a790-a42f9264a3b4",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b8ea84d9-d5c6-40ea-8109-43d3ddaf9bfc"
        },
        "item": {
          "id": "7cc0bfdb-9d51-40a5-babe-7fe70cd85e97",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3ebcba42-cef5-4e19-ae17-a7be851b5d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "586b2dfe-d098-4341-8533-b123220b006e",
        "cursor": {
          "ref": "7d1761c2-77da-431c-926c-48954088fd3c",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "534e6e73-8e6e-40b8-b990-4d20d7956387"
        },
        "item": {
          "id": "586b2dfe-d098-4341-8533-b123220b006e",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "763650bc-e5b1-42f5-8541-49e51214e089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5133f55-e05e-4fb9-ad69-da1fdc343873",
        "cursor": {
          "ref": "92c7079c-13ee-4c1e-b0f3-db67a4b9fd4c",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "55304298-e66a-40e9-a6d8-29138b785059"
        },
        "item": {
          "id": "c5133f55-e05e-4fb9-ad69-da1fdc343873",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "888d0402-fd36-4ffa-a741-06f5aceb29b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f7da6d-d380-4a21-a62e-27f46a7baa24",
        "cursor": {
          "ref": "388eeb76-e082-4878-b4b5-a2b28f6b94e1",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d0e184ae-d9ae-4c98-9d5e-979e14771d9a"
        },
        "item": {
          "id": "55f7da6d-d380-4a21-a62e-27f46a7baa24",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "bc5e21cb-43b1-406e-a878-66a8f4c30ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6babaa2-4bf8-42f1-831d-302f222810f1",
        "cursor": {
          "ref": "d5cf6045-555e-44b3-b1e1-f26a3d8d6ff2",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b7e42417-de2f-4502-81d6-f9a8ed51091c"
        },
        "item": {
          "id": "c6babaa2-4bf8-42f1-831d-302f222810f1",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "728ba51a-cc3b-4709-894f-d12847f7eac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4e96e12-74c4-4064-99cc-f448dddaee51",
        "cursor": {
          "ref": "83a903bb-ecee-4bd2-afc5-aa48a10893c0",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "3c4e438c-17a5-451b-84e5-5b4419067fb7"
        },
        "item": {
          "id": "f4e96e12-74c4-4064-99cc-f448dddaee51",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f8ae3fb4-335d-4783-8769-f54bd4b588c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9a1eec-cc17-46ab-afd3-adf8406b9b13",
        "cursor": {
          "ref": "02e04fc2-3b1d-49e1-a5b1-51505e40aaa1",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "280d4f67-8887-435a-a9c5-0ba7777db196"
        },
        "item": {
          "id": "be9a1eec-cc17-46ab-afd3-adf8406b9b13",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "fdcee067-f5ac-47ff-95b8-fd959e05dcfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "387f8dc1-e1d8-418b-8d4a-1fbdc682653a",
        "cursor": {
          "ref": "9d5ca83a-40be-459c-a297-ab43736f613d",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "03f2c777-fdb6-4b60-b6ee-cc4c3045b404"
        },
        "item": {
          "id": "387f8dc1-e1d8-418b-8d4a-1fbdc682653a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "80f2e084-3985-432a-a589-56d3f6f0598b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc5eb48c-9484-4940-9acf-6526cb271f0e",
        "cursor": {
          "ref": "e0ce3b12-a728-4a65-9630-f2ca45f52884",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d9f202f4-5a1e-4c38-a098-ad68b65a5041"
        },
        "item": {
          "id": "dc5eb48c-9484-4940-9acf-6526cb271f0e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e0115999-c931-4fdf-862a-0cd446ba4466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e86790-a43d-4703-9ed7-93b1cf0adff4",
        "cursor": {
          "ref": "2ff10092-6f3a-48c4-b255-efd97dca7a8c",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c53edda2-9891-48ad-a8e9-70d59873be40"
        },
        "item": {
          "id": "e3e86790-a43d-4703-9ed7-93b1cf0adff4",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "5c030b15-0784-4f96-9926-303be91b7a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a75c0c09-f634-48cb-b028-4222301460d3",
        "cursor": {
          "ref": "25a60331-9b00-4815-822b-fc17288119c9",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5201b53f-3656-4e16-aec7-b4fd4911b300"
        },
        "item": {
          "id": "a75c0c09-f634-48cb-b028-4222301460d3",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "88079602-ecdf-4ccd-a17b-15a53f991e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff25ecb-7213-4665-a128-c87a8ae2c680",
        "cursor": {
          "ref": "0e7603d4-4f0f-4a1f-b552-2cad43927fdf",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "85e74ccd-82bf-48ee-b2ec-b952fe06d456"
        },
        "item": {
          "id": "5ff25ecb-7213-4665-a128-c87a8ae2c680",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "72dad0bb-0bf4-429b-ae98-4824b814036d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c3bb79-935d-4b34-a620-49f9691dcf71",
        "cursor": {
          "ref": "ad1989a7-5813-411d-8db2-5ce85ba65071",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "dc70e0b5-84f7-429d-a927-9e41123dc19a"
        },
        "item": {
          "id": "54c3bb79-935d-4b34-a620-49f9691dcf71",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "cffa9d3e-74db-480d-80a9-351fec11b81f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06cf6683-5abf-4fdc-8fa1-3fd2323b6e69",
        "cursor": {
          "ref": "cc28bfd6-6dad-467c-a7a9-e0cd10adfb19",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "51fb1943-f1a0-4ede-887d-a6f62e825965"
        },
        "item": {
          "id": "06cf6683-5abf-4fdc-8fa1-3fd2323b6e69",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "9e8cd1d1-dead-4f3e-8c1c-6ac1a7d169af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c65457a-e4fb-48c9-b36c-a3c994736c71",
        "cursor": {
          "ref": "3e26137c-f76a-487b-9235-8133d23d6d76",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6d22e356-6d63-4f0a-921c-7a367a16e318"
        },
        "item": {
          "id": "5c65457a-e4fb-48c9-b36c-a3c994736c71",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "bbab0198-e6b9-49ca-8133-11e015da48b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0343ab9-2f73-45f8-afaf-34095e1f8f51",
        "cursor": {
          "ref": "dd3fc054-fa38-44df-bd58-385d77f55ff1",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "58d4ed05-16b2-409b-a449-042828f266da"
        },
        "item": {
          "id": "f0343ab9-2f73-45f8-afaf-34095e1f8f51",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "74576fe8-ca90-4404-90ac-d0a997121e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b4d218-7947-446a-bed6-f41de89c9ead",
        "cursor": {
          "ref": "fcb5ffae-bb51-42e8-8d83-ac7214c7776d",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c04e28fa-c3f0-441e-b7dd-6c9873036301"
        },
        "item": {
          "id": "e2b4d218-7947-446a-bed6-f41de89c9ead",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "2d9da3b0-a5b6-4972-abed-2820e37216ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf76445-49c9-4e29-aba0-890822112423",
        "cursor": {
          "ref": "3ee687a2-3356-4706-ab39-a24550b2df0a",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "65f683fb-2c2d-4de6-8454-41481a77fc32"
        },
        "item": {
          "id": "ccf76445-49c9-4e29-aba0-890822112423",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b271836e-dbaf-45ed-b58a-b6ab8d6a6fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "753a3e47-2f0a-415d-a168-beca96fbce97",
        "cursor": {
          "ref": "7b3be2a5-8a43-4770-9eda-72eb14a0e627",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e211f073-4eaa-4859-bfea-091939ea79dc"
        },
        "item": {
          "id": "753a3e47-2f0a-415d-a168-beca96fbce97",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "585cc085-923c-4228-99a9-687980d1abc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afbd689c-a9ed-4f48-ac06-57ae73eb40f4",
        "cursor": {
          "ref": "5d7a0a3e-c929-44e5-ab31-d395eb362832",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2c9b72e7-3de6-40fd-88ed-df7c89858efb"
        },
        "item": {
          "id": "afbd689c-a9ed-4f48-ac06-57ae73eb40f4",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "8bb3c1a4-f20b-415d-9427-df61f8406d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c72d81-4f8c-43a6-89d9-261fd92fbaa0",
        "cursor": {
          "ref": "d6292ed2-dfa6-4697-a8a7-c179b19341b7",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e7fb0552-e02b-4d59-9d22-2a72770a9f69"
        },
        "item": {
          "id": "b3c72d81-4f8c-43a6-89d9-261fd92fbaa0",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "2d3e01f0-3883-4f7a-a784-ce3720228722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f1feeac-dcb2-4c20-8f90-5193ae052e6b",
        "cursor": {
          "ref": "5bbce313-c8a5-4af3-8a17-1eca6b71f341",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "3c6f5d2b-343b-437c-9cd0-a9c827c61004"
        },
        "item": {
          "id": "1f1feeac-dcb2-4c20-8f90-5193ae052e6b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "339cc4cc-48ca-479e-a570-a8250832a6c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db65b9af-4e82-480b-9cab-2151dffe9669",
        "cursor": {
          "ref": "8fe00c62-6089-4269-a1e7-df6bcda2101f",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e568bada-1dad-417e-aa6a-c524c6d165b6"
        },
        "item": {
          "id": "db65b9af-4e82-480b-9cab-2151dffe9669",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "103a1302-b0c4-4c1f-a8e1-f87e03130d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b72f3104-37d9-4d93-9080-4bf7b233fb52",
        "cursor": {
          "ref": "e4804d3f-d792-449c-8b31-7212eb3e7fb5",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "cbbf811e-2ceb-410a-a2b7-3e7f85f97d43"
        },
        "item": {
          "id": "b72f3104-37d9-4d93-9080-4bf7b233fb52",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "222d9145-e8a4-4369-8b98-0c15a7639c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8cab69d-e45a-41dc-9111-9a39efdf9935",
        "cursor": {
          "ref": "f59f2fa5-7982-4d92-b5df-1e44ace4d255",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ed2f6f16-1285-493d-94e3-168fa4db6101"
        },
        "item": {
          "id": "f8cab69d-e45a-41dc-9111-9a39efdf9935",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9617c074-50d8-4f1d-8361-71e28bb06fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec6e971f-2420-4a5b-a0eb-23a2ff71999d",
        "cursor": {
          "ref": "62d159fa-65d4-4e17-b54f-b995956108cf",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ea9db753-772d-41a3-a0aa-0738b5d68970"
        },
        "item": {
          "id": "ec6e971f-2420-4a5b-a0eb-23a2ff71999d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2fc335fd-03e5-4b4f-8474-380976349732",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2fc1f8-66b2-46cb-b099-bbf9ab768010",
        "cursor": {
          "ref": "7cc221f5-b2f5-450a-aad3-b00a6217adee",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f5e4fb3a-3231-4aca-9e64-aa9afe38fa99"
        },
        "item": {
          "id": "ad2fc1f8-66b2-46cb-b099-bbf9ab768010",
          "name": "credentials_issue"
        },
        "response": {
          "id": "390cda11-0685-45ae-94ce-d921df2b00df",
          "status": "Created",
          "code": 201,
          "responseTime": 7570,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f683d0-d4ff-4dad-a1ba-2a60e96f1790",
        "cursor": {
          "ref": "f0e2ae0c-0251-487a-92a6-dc308eaee416",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "95f38c0a-9a84-4ce9-b519-ff5da2e52fd5"
        },
        "item": {
          "id": "50f683d0-d4ff-4dad-a1ba-2a60e96f1790",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e5e532b0-6789-4a30-903a-33df7e91a656",
          "status": "Created",
          "code": 201,
          "responseTime": 6751,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b104c66-46ed-4718-97bb-b56525cfab93",
        "cursor": {
          "ref": "573156b9-9769-4ffe-9660-c640f6cc9a4d",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f508dbc9-d1cd-4a23-90d0-581b1bc82a70"
        },
        "item": {
          "id": "9b104c66-46ed-4718-97bb-b56525cfab93",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d679c1da-0986-4c7f-9ec8-715ff9b42752",
          "status": "Created",
          "code": 201,
          "responseTime": 6744,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe851ce-73b8-4d16-94c3-e986d238288e",
        "cursor": {
          "ref": "f33a1faa-b14d-4ecd-86e6-05a10c27f101",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "442fd7e0-5a7d-40b9-97bc-15eaad40d0c4"
        },
        "item": {
          "id": "cfe851ce-73b8-4d16-94c3-e986d238288e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "269aecbb-4aff-441d-9fb0-37c0897a388a",
          "status": "Created",
          "code": 201,
          "responseTime": 7177,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2db535-c352-4486-a5f4-171331f7e20e",
        "cursor": {
          "ref": "c7a4817c-5b58-4dd0-94b5-e92775384528",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "dab7f422-f57a-486f-9ada-86fe68ddd38b"
        },
        "item": {
          "id": "9c2db535-c352-4486-a5f4-171331f7e20e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "a7e191da-4f28-4596-8ddb-d8eaf78e3b84",
          "status": "Created",
          "code": 201,
          "responseTime": 7115,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "d315eb91-a051-430b-94bc-08670786a8bb",
        "cursor": {
          "ref": "b63f34f8-601d-4789-8a0a-a16d7d7abe72",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "84c3bfb6-4550-4076-84a3-77dcc2197b8b"
        },
        "item": {
          "id": "d315eb91-a051-430b-94bc-08670786a8bb",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d2f670ec-5d6d-49dc-94d0-2fca00b67e1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "3b4ef233-9758-40ce-8e4c-e545d50ff5a6",
        "cursor": {
          "ref": "5c75cca3-b94f-47b1-8d3e-9eca70900217",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e2048e20-fe79-4dc8-80ac-7524389e2042"
        },
        "item": {
          "id": "3b4ef233-9758-40ce-8e4c-e545d50ff5a6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "09833181-14d1-483b-b5d4-8b5715394070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f39b59a-8024-4450-b785-fc45e7674ba9",
        "cursor": {
          "ref": "d0b6d9a2-1672-41b2-b5f4-9aecdae908a5",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3be032da-33c1-458e-98ed-30a8d946c270"
        },
        "item": {
          "id": "0f39b59a-8024-4450-b785-fc45e7674ba9",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "47c7548c-5bd1-4e15-8eb4-ac04e1e072f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f85f9ab-1ce7-4aca-a110-83caa2fdcf4e",
        "cursor": {
          "ref": "7cd642de-1d39-426c-bb54-5d50e2b4fd24",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "af148121-60ab-4b9e-9c31-75da38bb060c"
        },
        "item": {
          "id": "4f85f9ab-1ce7-4aca-a110-83caa2fdcf4e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "477057d2-963d-47c1-a766-b1bcbe332def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31d59b8d-dbe0-4ca6-8528-894dfa069cb7",
        "cursor": {
          "ref": "b2ff1ee0-0435-4ee9-9072-88cb37723f1e",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "510d5bc8-4e0d-425d-ba8c-a958bd975142"
        },
        "item": {
          "id": "31d59b8d-dbe0-4ca6-8528-894dfa069cb7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "837df2b4-ebfd-4fab-badb-19e00fba1919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f6f643c-2f45-4d62-b0a7-462d676ea71d",
        "cursor": {
          "ref": "b811f1ff-4d3e-4c3d-b5ff-50618b172b15",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "6e17660c-5354-49c3-89e3-a99741645598"
        },
        "item": {
          "id": "7f6f643c-2f45-4d62-b0a7-462d676ea71d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a9093c22-1020-4314-8ccc-8e3544082ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b6ddb4e-d861-419d-86eb-dfb31c976ee1",
        "cursor": {
          "ref": "7081f18e-7608-4ea9-8e94-906a01b037a6",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a0b70c89-3b8c-4bab-81cf-5a20b44a1209"
        },
        "item": {
          "id": "1b6ddb4e-d861-419d-86eb-dfb31c976ee1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9b0a132e-4968-4f82-97d1-3f3116ead9c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "164734a6-8388-4e6f-84a7-24a6bd0802ac",
        "cursor": {
          "ref": "485aab96-eaa3-49a9-b165-e96dbbeb1c3c",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "37e8dcc8-c7de-43a9-b664-492a35a4bce9"
        },
        "item": {
          "id": "164734a6-8388-4e6f-84a7-24a6bd0802ac",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4b2032c3-d154-4984-a822-279bd7b73960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b282af25-0c15-4739-97c5-e6e275e8f479",
        "cursor": {
          "ref": "a57075bf-34a6-4114-b3d6-c925f7a7b9b2",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c5bb4f02-72a9-4c3b-a8c0-ea5988af2127"
        },
        "item": {
          "id": "b282af25-0c15-4739-97c5-e6e275e8f479",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8222a891-c488-4222-887c-6cc73b8f2319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "457599cf-c325-4e2c-bb8a-0e3cb98dc650",
        "cursor": {
          "ref": "1d6b5c97-ee2b-478c-815f-ab818a87d854",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b0a4bb51-d9c0-4bc3-898a-eeadca2470dd"
        },
        "item": {
          "id": "457599cf-c325-4e2c-bb8a-0e3cb98dc650",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3ccca9cc-1c24-47ba-afff-e4e9f5250e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a8bf4e-0bbe-4753-a202-4e6bf1b4de08",
        "cursor": {
          "ref": "02ef9184-7e51-4554-a1e6-9debb9d2a096",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "afe19594-9ab8-4e61-8e41-e007a568c839"
        },
        "item": {
          "id": "29a8bf4e-0bbe-4753-a202-4e6bf1b4de08",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "32e4907b-6b05-4410-aa10-22a6c017fb56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb492369-fc76-4f00-ac6b-d7f28955229f",
        "cursor": {
          "ref": "0065bf99-edbb-4023-9d14-aff3c1f7ebe6",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6c5b00bf-b0a2-4640-a294-7ae1e6442cd6"
        },
        "item": {
          "id": "cb492369-fc76-4f00-ac6b-d7f28955229f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "83a74572-9311-4a67-9e2b-eae30572f793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "464e4a15-9a87-425a-ab7c-471d49f9f0b1",
        "cursor": {
          "ref": "0f97fdae-1506-4656-95c6-9339630e3365",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "eca7f816-c091-4086-a2d6-76f5d7a7ac52"
        },
        "item": {
          "id": "464e4a15-9a87-425a-ab7c-471d49f9f0b1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "677f06ac-6023-4884-9f67-9cf464bed97d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b11a21c-9a40-4f0f-bb39-e0a5e562129a",
        "cursor": {
          "ref": "a7c8deef-b1fd-4fda-b275-9983b032af4e",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "4a34ef52-7e00-4214-bad2-1d041603c2b2"
        },
        "item": {
          "id": "8b11a21c-9a40-4f0f-bb39-e0a5e562129a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "34c89314-fbf1-4104-b1f5-9854b3c15f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d793d57a-926a-4b9e-b9d0-9b58b2615aad",
        "cursor": {
          "ref": "140b7af0-3afb-4554-b36d-67154b83b665",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "1da3d1ed-6be8-42cf-a393-05e11d789713"
        },
        "item": {
          "id": "d793d57a-926a-4b9e-b9d0-9b58b2615aad",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9197184f-6a48-4927-bcc7-d99db252b880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db7be542-7283-411b-9d51-a1fb7cc3afa4",
        "cursor": {
          "ref": "ef2ff9dc-6037-4c33-bcec-13a4eb9bfefc",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "78d79ab4-24c3-4ba7-a255-0ac12dcd1bd2"
        },
        "item": {
          "id": "db7be542-7283-411b-9d51-a1fb7cc3afa4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "faab4528-2b13-4e12-a74a-3894d2577fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04b440b-98e8-43ca-81a4-71e84ec5ec9e",
        "cursor": {
          "ref": "f024e786-766d-45e3-a03b-992d109fbc0c",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "49d3ead0-1cbe-4c4b-923e-84b313146f49"
        },
        "item": {
          "id": "e04b440b-98e8-43ca-81a4-71e84ec5ec9e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "311a6a02-c2bb-4c62-9e0f-bbca181cf955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa15004-40cb-4b10-be42-6de2a65b904a",
        "cursor": {
          "ref": "013a34be-a6a7-4025-8060-9952d7fcacde",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "499674c3-72a9-4add-a8c3-d37f207da160"
        },
        "item": {
          "id": "6fa15004-40cb-4b10-be42-6de2a65b904a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b75751c2-70ca-4ec0-9195-ab2e4ff43d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6511d1a-9363-4db1-9b5e-deacc2cce196",
        "cursor": {
          "ref": "ca29c9de-2685-40fa-bffc-a01861f4b740",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "79175e99-0b82-4c70-be46-d69ec78fa706"
        },
        "item": {
          "id": "f6511d1a-9363-4db1-9b5e-deacc2cce196",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b02c58c0-63d8-4290-8044-66bc1bf8d5bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d1bdea-0efb-4a64-a311-dbe655fd7fac",
        "cursor": {
          "ref": "4f9e292b-75ad-4ceb-9c89-203ffe30b7c8",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "be726271-f5c5-401a-a330-71625417bb84"
        },
        "item": {
          "id": "24d1bdea-0efb-4a64-a311-dbe655fd7fac",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "fa8f2d44-5ac1-42b1-9e70-8791072c63b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1395910-6cb9-4483-bae4-5e79b86f5a50",
        "cursor": {
          "ref": "ab774ebb-152b-4dbb-af1f-1b058a6d08e3",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a7b615ab-a762-4428-83d8-f470ce8e3828"
        },
        "item": {
          "id": "d1395910-6cb9-4483-bae4-5e79b86f5a50",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ac8301b8-a457-4cae-8c7e-1ed611defa1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca1378e-d644-47da-a705-d0669e6bb7aa",
        "cursor": {
          "ref": "4fbf8ebf-9790-4823-a1cd-71937fa522ac",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "45e3f609-6d26-4bde-aef9-2c3ca9c8b806"
        },
        "item": {
          "id": "cca1378e-d644-47da-a705-d0669e6bb7aa",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "02955d23-19e2-4a0a-b227-5146cb37c21e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46366b2b-2616-430e-a1f2-843bac5977bf",
        "cursor": {
          "ref": "20b2d3fe-074f-4c29-a9ee-5d1764a79e67",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "4a0e3d1b-cc3a-4e05-ac99-9a3190d433ed"
        },
        "item": {
          "id": "46366b2b-2616-430e-a1f2-843bac5977bf",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "caffb9e5-15d8-4d7e-bf8f-9d0780ea007a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b34beb1-9a08-4c9d-95b5-2d7a4215378b",
        "cursor": {
          "ref": "88d5d201-e068-471f-9a25-872fbd65d4c7",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2aba6b2d-5c39-432c-a56c-259d3b589f72"
        },
        "item": {
          "id": "5b34beb1-9a08-4c9d-95b5-2d7a4215378b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3cf74e7e-1ef0-43c4-ad94-50edbdd6b13f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e7c1c8-31bb-4fde-ba0e-10a7fac130c4",
        "cursor": {
          "ref": "e438d77a-d9a5-4b92-af12-5b02c1daa740",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "430385a7-d753-49d8-bfbd-55ca4042ea7e"
        },
        "item": {
          "id": "b6e7c1c8-31bb-4fde-ba0e-10a7fac130c4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ca00f9fe-e04e-4172-9717-0d8b2fff0972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0066d353-0cb1-4e6c-a1f6-531a39ac128b",
        "cursor": {
          "ref": "d3a2ce7c-14d6-4d03-995c-13a8e5e7ff6f",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ee6630a0-cd11-4d4d-8b40-1d53331f641e"
        },
        "item": {
          "id": "0066d353-0cb1-4e6c-a1f6-531a39ac128b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2745d1ae-c0ef-4747-9a71-62119fd89030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b000d6d1-9b01-4c51-92ef-4b639141852b",
        "cursor": {
          "ref": "fa32583c-62fa-40e1-9859-705c727f6fca",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "72716e95-1c74-45f0-90d1-4d5c35ff3b71"
        },
        "item": {
          "id": "b000d6d1-9b01-4c51-92ef-4b639141852b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9f748b86-39df-4069-bddd-95aa397dd1db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad10233d-88a8-4b0e-ab07-75fcb31dfc8c",
        "cursor": {
          "ref": "1ffb2984-a202-46d4-bd72-07b3a4598ab9",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a8f8e81a-621d-4869-9433-45032c52f995"
        },
        "item": {
          "id": "ad10233d-88a8-4b0e-ab07-75fcb31dfc8c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "bbdd1b04-c2b0-4335-8fc0-60c4b8b14554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daced73b-f364-4415-a6d6-c1a50d540d32",
        "cursor": {
          "ref": "8813f065-a07d-4218-95e9-214d43bd37e9",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "41aabe7e-0090-44a3-81e9-e998b361b1d9"
        },
        "item": {
          "id": "daced73b-f364-4415-a6d6-c1a50d540d32",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e605ffb8-003c-4e05-a1dc-d07ccd078d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc30092-d409-4c69-8c13-095ac036bf17",
        "cursor": {
          "ref": "e318d80e-36a7-4765-b435-66c5b6f098cf",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c4e6077c-c57e-434c-b03d-14158b25c206"
        },
        "item": {
          "id": "0dc30092-d409-4c69-8c13-095ac036bf17",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "37f7bf7a-3caf-4521-b3d1-b62bab84cbaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d355b78-2e00-4a2b-85fa-bc750cdddb65",
        "cursor": {
          "ref": "86c267fc-fc35-4992-ac40-8f19c12792a4",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0f7759e2-6412-4fe6-8933-118d9c06a129"
        },
        "item": {
          "id": "3d355b78-2e00-4a2b-85fa-bc750cdddb65",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ebc765c5-18ab-4fbf-8065-0faf13256376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee0cd14-0b76-4d78-9db4-243f6883eb17",
        "cursor": {
          "ref": "dbb025c1-7997-49f3-b002-c2dddc1dc674",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f7978217-603d-4a12-9b54-442428966556"
        },
        "item": {
          "id": "9ee0cd14-0b76-4d78-9db4-243f6883eb17",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b4542052-fcea-4ea3-a33a-18dab10034b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff4e471-10d2-45e7-a6ac-6a11ce40b669",
        "cursor": {
          "ref": "0cdb1c34-8d43-47fe-af63-b99fec5067f4",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "8dbc017e-3333-488e-b2af-207772b10872"
        },
        "item": {
          "id": "fff4e471-10d2-45e7-a6ac-6a11ce40b669",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "82960a98-f932-4dff-9449-bff9b2c62adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "785f9615-c183-46ed-8763-8943e03c29e2",
        "cursor": {
          "ref": "9f112e6d-2e72-4b79-9c32-5b638ae2b5b6",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "bd2a88a9-070b-43c5-b62a-46b0765a3fbd"
        },
        "item": {
          "id": "785f9615-c183-46ed-8763-8943e03c29e2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ebdc476b-c562-4acc-807b-b8e0f6cc1120",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c8213f8-095f-401b-9208-f6c5f7a00635",
        "cursor": {
          "ref": "fa672a13-9b2f-4ee5-996f-d64e7ec0747b",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "024fe3d9-96bb-4615-9636-454cf4e3cb8a"
        },
        "item": {
          "id": "7c8213f8-095f-401b-9208-f6c5f7a00635",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "482ea4ec-9c54-4e2e-8231-443bb4b2cae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af312957-15e1-4884-9674-11a567f22e1e",
        "cursor": {
          "ref": "523c0912-ae57-4aa1-aafb-94bda84ac7b5",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f95c7a95-38c8-4554-b866-a82bea7597cc"
        },
        "item": {
          "id": "af312957-15e1-4884-9674-11a567f22e1e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "54fe1df6-0837-457d-84ea-1084abfcb939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29074ee1-db13-4af6-99a6-46d03190e6c8",
        "cursor": {
          "ref": "47951531-9e28-4932-9ab0-ea427d6f2c7e",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d79cc688-a3df-448c-b762-da898848bd00"
        },
        "item": {
          "id": "29074ee1-db13-4af6-99a6-46d03190e6c8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "65d126cb-4244-4a1b-8f5d-8a69a0eb5850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e65a3d08-1d0a-4e73-b918-5d568bef67e6",
        "cursor": {
          "ref": "e85a6436-2907-439a-ae1a-6e3a68368dfd",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8a6a630a-f478-4ffa-8109-7c3e390eec76"
        },
        "item": {
          "id": "e65a3d08-1d0a-4e73-b918-5d568bef67e6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c3e6e228-2cb9-446d-94f1-d7ae9deff06f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97529cb1-73d3-4ba0-8c59-044e3960ad4b",
        "cursor": {
          "ref": "c9a9ccae-5153-4fef-bc59-9643eed760e0",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "236d0cf0-a6fc-4b76-b133-77390b09f8b9"
        },
        "item": {
          "id": "97529cb1-73d3-4ba0-8c59-044e3960ad4b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c46f7eff-3dfc-446c-a448-164be4e274c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f11ceec4-bf17-4d30-8074-d1d5e920a0a8",
        "cursor": {
          "ref": "d1b7dc9b-5345-4d38-8a8d-f4b5b4012b2c",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "2c820ec8-add1-4cfc-9d04-16141b70e704"
        },
        "item": {
          "id": "f11ceec4-bf17-4d30-8074-d1d5e920a0a8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7342b978-cf46-443c-94e7-9aaccf3a36e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deac2163-2c54-4fd1-a283-438b6be4379f",
        "cursor": {
          "ref": "d869eb04-3881-4542-b307-c3a5e6a8272d",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ebf19cce-fffd-4356-9221-dba8f9ad8e5e"
        },
        "item": {
          "id": "deac2163-2c54-4fd1-a283-438b6be4379f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "735d003d-87e9-4384-84a7-d67231b16b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c21a70e-7dcb-4a9e-9020-da31c689e509",
        "cursor": {
          "ref": "78268189-8d66-4de4-9814-ce2e47a30937",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f8e25a13-9613-4b60-9dc7-21cd7b2295e6"
        },
        "item": {
          "id": "6c21a70e-7dcb-4a9e-9020-da31c689e509",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "06b9c886-dd02-4f06-9d58-ffb6ca3ccd40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1ff6f3-f3af-4f39-b5d1-b39491d35e27",
        "cursor": {
          "ref": "417d68ba-1ed3-45ee-b915-bc6c33251b45",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d3623d6c-4902-44d0-bf93-4c0b87e0af87"
        },
        "item": {
          "id": "bb1ff6f3-f3af-4f39-b5d1-b39491d35e27",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "bfb7df47-ca7f-4ce7-a4f2-7a3469b4f034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca7c72c-cda2-47de-bcfa-3f95f76674a2",
        "cursor": {
          "ref": "13212164-12c3-4290-b0ee-ee468dd71052",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "87ecf16f-3275-4250-8910-0582d471044c"
        },
        "item": {
          "id": "3ca7c72c-cda2-47de-bcfa-3f95f76674a2",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "552c5647-8388-4c02-8384-8274fe9d4683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7abbf060-9649-41a2-9bb7-f76550cd3715",
        "cursor": {
          "ref": "2d162c51-93fd-4614-bd4a-469d77caf535",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "abce3294-1ce9-46fe-81da-436af01d5197"
        },
        "item": {
          "id": "7abbf060-9649-41a2-9bb7-f76550cd3715",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b722a8be-9b96-42b5-9bc0-d00778c69cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59151ed5-ef7d-4373-b0b4-7081a6aed13f",
        "cursor": {
          "ref": "0329e668-c995-45da-bc45-5dddbfc263f8",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "72e40bc8-eb97-4671-8e30-1c197f5daf94"
        },
        "item": {
          "id": "59151ed5-ef7d-4373-b0b4-7081a6aed13f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b8343031-5bdb-43ab-8d76-5b48113cadec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c0846c7-4720-4f94-a123-bafc97812b39",
        "cursor": {
          "ref": "44933934-8807-460d-aebe-aa2ace71d9bc",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "516dd266-2a00-4280-9371-3b922d1119d2"
        },
        "item": {
          "id": "1c0846c7-4720-4f94-a123-bafc97812b39",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7a1180b3-15a5-4e25-94f0-e98ae1fbb422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b541a2de-5581-419f-a779-aff1b305d724",
        "cursor": {
          "ref": "c84134f9-480c-4cd2-bdff-271b7241b0f8",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "248c356a-c2a3-4c32-8a67-048b48ebe0ac"
        },
        "item": {
          "id": "b541a2de-5581-419f-a779-aff1b305d724",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6e07dce0-5442-4063-92e6-8676f56b7571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "169bf442-07a3-4140-a357-e7ed31a55045",
        "cursor": {
          "ref": "cd62712d-89f3-41bd-8049-5792b8505fd9",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "539b67b3-aa29-4d2d-b7cf-dc66703ff8bb"
        },
        "item": {
          "id": "169bf442-07a3-4140-a357-e7ed31a55045",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b9176813-a285-499b-9fb9-291899deefda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecdcf766-9701-4c75-9a19-db6a5e4fb677",
        "cursor": {
          "ref": "5cb6c523-b8b9-46ef-9642-033c6680d1c5",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d89ed2d2-04be-4ec3-bdf6-590282d815f2"
        },
        "item": {
          "id": "ecdcf766-9701-4c75-9a19-db6a5e4fb677",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "90a16b2b-d910-43f0-9ed7-6a13ab0f639f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b742d4-6d86-4e4d-97a1-081332a96d42",
        "cursor": {
          "ref": "0adc5f54-f28c-4a19-9ec9-43c4a1b8d67a",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "103b2509-fa84-4320-9b70-f64223350556"
        },
        "item": {
          "id": "02b742d4-6d86-4e4d-97a1-081332a96d42",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "19f9a809-6a94-4ab5-a882-cd1620246b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b55fed0-b2f1-4ed8-bb8c-0fba546ce6b1",
        "cursor": {
          "ref": "e2bf54da-9110-4f0c-97a3-3870422aee87",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a54e466e-1bd7-4f05-9af5-63892b5836d3"
        },
        "item": {
          "id": "6b55fed0-b2f1-4ed8-bb8c-0fba546ce6b1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "cbfcdcf3-d110-497f-95bb-75086c9fe256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "243a4c18-b008-4cae-9cb2-e80f33b05a10",
        "cursor": {
          "ref": "cbc60f70-2a98-4ba2-92ff-75878eaa3e6c",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "212cc8c9-f59d-41e8-9cf1-838abd961b19"
        },
        "item": {
          "id": "243a4c18-b008-4cae-9cb2-e80f33b05a10",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6afdcbc1-16d9-4de3-87f0-39832da0d6d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed199295-b8d6-4772-aba3-2a4aba66249c",
        "cursor": {
          "ref": "dd0c891a-07db-4274-bf42-ef6dc46de876",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3f2e77c0-40f3-498e-bd74-48e9c163c6db"
        },
        "item": {
          "id": "ed199295-b8d6-4772-aba3-2a4aba66249c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c8423aeb-c889-488e-9546-c0e2b6e622a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a047a7-46cd-4995-adb1-f8b04c086fc4",
        "cursor": {
          "ref": "f55d91b4-7d41-48d8-ad13-373ef253c6be",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "55b73d13-91f3-4ce4-956b-ddb4c1c4c28b"
        },
        "item": {
          "id": "52a047a7-46cd-4995-adb1-f8b04c086fc4",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d5438348-d22a-4b0f-be1e-b106c6b77399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e675a2d-190a-4eff-bc59-f857022f625b",
        "cursor": {
          "ref": "706d640e-5a36-4b10-bbe1-882e917bab54",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "43d83ec0-516e-4277-a709-85bfc01cf148"
        },
        "item": {
          "id": "6e675a2d-190a-4eff-bc59-f857022f625b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1c5bb6cf-5fe0-4213-8f3f-cca45de23c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf7f7436-720f-47cf-aa1b-8917f95b7c4d",
        "cursor": {
          "ref": "9788734a-b83d-4790-8a40-d39745798ff9",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "dbde56ad-3d58-4203-9aad-31ca9f8292f1"
        },
        "item": {
          "id": "bf7f7436-720f-47cf-aa1b-8917f95b7c4d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e038723a-b06b-4673-922e-9ae760255c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a625dc-a141-4f51-aaeb-78886019fc74",
        "cursor": {
          "ref": "2540a099-639d-4a2c-9d7f-29662fcbc9d2",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6914c5db-2362-40f2-b17d-042827e0b45c"
        },
        "item": {
          "id": "55a625dc-a141-4f51-aaeb-78886019fc74",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2173b188-46b6-456d-a99f-2c50ca57fd65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f19fb5-c89c-4e74-9140-cb52cac1e443",
        "cursor": {
          "ref": "3a035083-885a-46ab-8854-e8d379e19074",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4bced527-85e4-4362-ae2b-4e143475d633"
        },
        "item": {
          "id": "48f19fb5-c89c-4e74-9140-cb52cac1e443",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "66edf87c-e3cf-4243-a2c7-f8ea7e671dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa7d0ba-936c-4e16-97cf-690730b6b5b6",
        "cursor": {
          "ref": "319d0269-e4c6-4646-891f-f670daeb1bfd",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c9421f1d-566b-47ad-9282-40e7a069f748"
        },
        "item": {
          "id": "caa7d0ba-936c-4e16-97cf-690730b6b5b6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c7e6294b-84df-4f57-b9a6-b4c44b032557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1de4b8-7023-4500-8544-3c4aecb3e355",
        "cursor": {
          "ref": "5ac5b598-ca27-45ed-9a36-ab8b979c3301",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "922a0055-bb90-49f3-be95-1e108c0e6e0e"
        },
        "item": {
          "id": "0e1de4b8-7023-4500-8544-3c4aecb3e355",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e9316163-88ec-4fee-97ec-a2b87661dbf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b66828-548c-4fec-9361-2a2af3000062",
        "cursor": {
          "ref": "feddb5f8-ce72-430c-94a5-407518ae1a48",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "50c5812f-3bfc-41a2-964d-2b0db541c773"
        },
        "item": {
          "id": "70b66828-548c-4fec-9361-2a2af3000062",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "018f75c1-4643-4f67-b656-c3980105a65b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9a88b5-2183-43ba-9030-01f2abefc2ab",
        "cursor": {
          "ref": "4ebc5b2e-f5a1-4b2d-97d6-80caac23b387",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "35a115e6-a74b-4c4f-baa4-7b4f91c63efa"
        },
        "item": {
          "id": "8d9a88b5-2183-43ba-9030-01f2abefc2ab",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "09573ae8-2030-451b-8e4e-9393b07b73fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd71f0f4-3712-47ed-9856-e0123af23fa8",
        "cursor": {
          "ref": "d4988e47-fbf9-4a31-88bd-241ddb3bbbbe",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9562c47a-de91-4e62-b364-64305a8cb06a"
        },
        "item": {
          "id": "fd71f0f4-3712-47ed-9856-e0123af23fa8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f16bd8fa-ea6c-4d0a-9f58-5ed023a9e7b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a447c7f-49c7-4cab-9e43-411bfbf5d995",
        "cursor": {
          "ref": "e482c662-1b52-4dbc-b71e-a70914e240cd",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5db3b3a1-c131-4cf4-b524-3aad4cfc2f78"
        },
        "item": {
          "id": "8a447c7f-49c7-4cab-9e43-411bfbf5d995",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f1fc9054-85ff-4208-9fed-a4811f41d85e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df524ddb-b3b2-4ed8-b78b-803297d2a1cc",
        "cursor": {
          "ref": "2625eef8-6735-4a2d-926b-f32e99a7988e",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "28b6f9b9-763e-4e6e-9ebd-da6ff688976c"
        },
        "item": {
          "id": "df524ddb-b3b2-4ed8-b78b-803297d2a1cc",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f40cfbc4-accb-4af5-9172-fb6e98205a5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63f84d5-f9e7-4422-9425-354d152d628a",
        "cursor": {
          "ref": "51b187a0-2ab4-4f15-85c3-d497f58b82f6",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "aab886d9-540c-46fa-872b-8bd2489f76e3"
        },
        "item": {
          "id": "c63f84d5-f9e7-4422-9425-354d152d628a",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "3cffc97b-9348-41e7-ba23-5adf667c1240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f818efa1-7ec7-495e-9386-1bf71d7daa82",
        "cursor": {
          "ref": "e323f4da-bef1-4cd8-a222-9cb39f3cc4c0",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "85b63fe8-1b60-48a1-bd22-0eee5dd59c36"
        },
        "item": {
          "id": "f818efa1-7ec7-495e-9386-1bf71d7daa82",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "05b330e5-1535-491e-9558-3537184cd666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f73dad2-8f1b-4a3c-a20f-dcc441785da4",
        "cursor": {
          "ref": "2594ef8b-953b-453c-8ed8-204560de888b",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "edd41c80-d0f0-4627-9131-3e18c0619eaf"
        },
        "item": {
          "id": "1f73dad2-8f1b-4a3c-a20f-dcc441785da4",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "f804a182-e410-4b28-bcb7-8038e8e04e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "724b7a4b-b93a-4cde-960b-47122f331272",
        "cursor": {
          "ref": "007350fb-50fa-49b9-84e6-9ba0c63a7bce",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "4c5b3437-5044-45a3-8605-1461b678e57f"
        },
        "item": {
          "id": "724b7a4b-b93a-4cde-960b-47122f331272",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "8b8ab2a6-6826-45f7-b110-3c3790417f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe5aff8-054a-41dc-887b-619962df981e",
        "cursor": {
          "ref": "1f995255-0a99-4a93-be8d-57ae3efc0e78",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "385f49b1-0e47-43fb-bbea-1a7ed9362ce4"
        },
        "item": {
          "id": "7fe5aff8-054a-41dc-887b-619962df981e",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "18e07e6d-aa63-4386-b957-c5680438f2f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f1af39-57d3-4a58-96dc-b7c6932b88ab",
        "cursor": {
          "ref": "55943616-497b-479e-89ce-a050458243f9",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "15e6b9c4-362c-472b-bca7-ffc9f685cc5b"
        },
        "item": {
          "id": "39f1af39-57d3-4a58-96dc-b7c6932b88ab",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "60fbbe29-aa00-4d5b-86fd-304cb97bffcb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d026f5f-bde6-49d7-b46e-a81e8b8ae884",
        "cursor": {
          "ref": "bdc7d34a-98ff-401c-aa41-f2cbd714f468",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b6035e9c-ba92-4f3a-97cd-76827de68182"
        },
        "item": {
          "id": "1d026f5f-bde6-49d7-b46e-a81e8b8ae884",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "54c9fed6-dff1-46ab-8df7-f111c656dd79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b46406cc-5964-4f46-aa57-511b16ddcaf5",
        "cursor": {
          "ref": "7dc822e7-7f06-45dd-8455-9246069cd612",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d5d41603-9ac0-44d4-b0ab-ecd9d9cb10a1"
        },
        "item": {
          "id": "b46406cc-5964-4f46-aa57-511b16ddcaf5",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "48a23d8e-ad28-4418-9e46-833cd493e1ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924cb3fb-7257-4873-bf64-54b3a717d53f",
        "cursor": {
          "ref": "ea0135c1-5038-402f-af47-e90edc27fc21",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4da2faf5-d84c-417e-960d-d198b0b66fd7"
        },
        "item": {
          "id": "924cb3fb-7257-4873-bf64-54b3a717d53f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "07000694-8518-4f90-b683-15471592ee84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c65476f0-5b2d-4ed3-bf1b-41f5a73b4914",
        "cursor": {
          "ref": "3860b052-29cf-4fc0-a99f-0298c93cec0d",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "38bb49d1-a157-4f4e-9912-f3839875ec7b"
        },
        "item": {
          "id": "c65476f0-5b2d-4ed3-bf1b-41f5a73b4914",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "81a3056d-a776-4a45-a285-f6d1a705a01e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af95fab9-7119-4da5-b749-a079dac28992",
        "cursor": {
          "ref": "6bd1e341-018b-4a60-aa06-f106be7d90d2",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "72009e08-c264-4ec0-af5c-782a7be8b72b"
        },
        "item": {
          "id": "af95fab9-7119-4da5-b749-a079dac28992",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "35512ef6-c69e-4890-a6e4-9f584a8ba558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "462a75b4-7844-4394-b5df-59555b0436a2",
        "cursor": {
          "ref": "bd0c2c20-e0ef-4317-bcf3-b0ed4806b491",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7d73dc2d-d8d1-42fe-89be-f37f838f1585"
        },
        "item": {
          "id": "462a75b4-7844-4394-b5df-59555b0436a2",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8a2ca8c5-d443-4bc8-824f-cdcd8dd1469c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869324b7-5c1a-4c8c-acec-fa701a84b6ab",
        "cursor": {
          "ref": "9dc44b1f-f078-41b5-a906-5c9e82887048",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a5f89f03-b58b-4b73-b6e1-1f55cd1f3307"
        },
        "item": {
          "id": "869324b7-5c1a-4c8c-acec-fa701a84b6ab",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "5b627177-fc4e-45c0-938d-41f7e5a2afb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b9dfd38-dadb-442d-8e40-0a7bc6186d12",
        "cursor": {
          "ref": "6a400fc8-a835-4fcc-a043-329f8d8f0037",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "309abf9a-e729-4512-9a02-7864dfc9c575"
        },
        "item": {
          "id": "7b9dfd38-dadb-442d-8e40-0a7bc6186d12",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "c94c6854-7e30-43d3-b1c5-f9f003a3bb7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2e2215-70dc-4b89-bdfe-fbdeb61379c2",
        "cursor": {
          "ref": "767e00f6-c416-4f00-9ac6-485fdab049aa",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3ab56e94-8341-4cb8-ae2b-285988127083"
        },
        "item": {
          "id": "1e2e2215-70dc-4b89-bdfe-fbdeb61379c2",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e3c36734-db7d-4b20-8358-20222c651aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb3f8da-20c9-4789-9397-33b534eff29a",
        "cursor": {
          "ref": "eee46554-9db7-4019-a383-f689088779ea",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "debe01bf-779b-4d7e-aabf-3302e11db041"
        },
        "item": {
          "id": "1cb3f8da-20c9-4789-9397-33b534eff29a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "8da48919-3d1c-4156-b249-7b2a2839eae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31454f69-7fea-41e2-a713-3ccd467a4d00",
        "cursor": {
          "ref": "f652603d-e79c-41e8-addc-09b995351e0f",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "453d9300-9c2b-4187-b262-fa955ab02ae2"
        },
        "item": {
          "id": "31454f69-7fea-41e2-a713-3ccd467a4d00",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8d2be096-e2b0-45c5-a975-e7c39ebd0cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f9f2b84-b610-424e-9a5e-c1e0618d5832",
        "cursor": {
          "ref": "c4b0a2cf-1c44-41f5-80fe-81a82acae98c",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "613591f2-9140-4a85-9a27-e96081c8cf4f"
        },
        "item": {
          "id": "2f9f2b84-b610-424e-9a5e-c1e0618d5832",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "097bd396-836d-4c4f-8248-ec130ba2aa78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034ca055-3eff-450a-bcd2-7a4b7d295f4e",
        "cursor": {
          "ref": "d119c7c8-002c-4c83-876f-28322fd895ff",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "1aa37e71-22a8-447d-8255-ed20fe1658cb"
        },
        "item": {
          "id": "034ca055-3eff-450a-bcd2-7a4b7d295f4e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "71323841-dd31-4a6a-9493-fcefef17c8da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e089669a-81ec-41f9-9e50-22fae545b050",
        "cursor": {
          "ref": "97bae586-eaa3-4660-91f1-b914ae4d8909",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "0e75b3f1-cf41-455c-8fec-07b31b664f34"
        },
        "item": {
          "id": "e089669a-81ec-41f9-9e50-22fae545b050",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e5206dd0-a94b-4fdf-bcca-a9b43416704d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4455915-b425-4905-8789-8e75137402e4",
        "cursor": {
          "ref": "9775a8c8-f1ed-4801-a58b-8af77e435cee",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "fe5fbf58-dd12-46a7-8f6b-14c5357112b7"
        },
        "item": {
          "id": "e4455915-b425-4905-8789-8e75137402e4",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "07e68913-6cb2-470c-9501-d83a582b152e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e91e87-4490-45ea-a3cb-659e50985f57",
        "cursor": {
          "ref": "6fab2105-a8f8-4b1b-9616-c6765142778f",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "87dcdf82-f7f7-4981-b5cd-892fcbf92e6a"
        },
        "item": {
          "id": "04e91e87-4490-45ea-a3cb-659e50985f57",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5940c6d4-c6eb-45bb-b93c-3c91132a2f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59313a56-f813-44e7-a9cf-1aeac6cc07f0",
        "cursor": {
          "ref": "7d81c8d8-4c59-4446-81b4-7f983346f4b1",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ac97ee7a-dc89-46f4-922f-45b1e755df47"
        },
        "item": {
          "id": "59313a56-f813-44e7-a9cf-1aeac6cc07f0",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "55a77c6d-4a4f-4cfa-be07-6df50c9aeb21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a18297-ef63-40ed-8020-2aa3ca786bc1",
        "cursor": {
          "ref": "f31789f3-e7a6-40c7-9697-b5d813453a5b",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "30010276-6ee7-4f48-86b1-1e0a45cd193a"
        },
        "item": {
          "id": "11a18297-ef63-40ed-8020-2aa3ca786bc1",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "68bd96bb-8e93-479b-9a58-e06b0e22be0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41dba930-a86e-419e-a822-b1a1cfa3ec42",
        "cursor": {
          "ref": "9a742f45-b993-41eb-ba0c-42b77a711314",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "82f6117d-3f73-47f1-a2ed-0bbc0e426acc"
        },
        "item": {
          "id": "41dba930-a86e-419e-a822-b1a1cfa3ec42",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "1e16e5a5-9c07-42c2-bcf2-b3ac9aab0c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c6afb98-7382-4e4c-955e-1dd389bf64b7",
        "cursor": {
          "ref": "7a758953-c2e7-405b-b747-178aaa02b4d9",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4226764d-0759-4157-a3a3-974ee684c094"
        },
        "item": {
          "id": "2c6afb98-7382-4e4c-955e-1dd389bf64b7",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "059b3411-23a1-4cc7-8b1c-263841686df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1756abb1-0e6f-45f7-8756-f31eb1ef9edb",
        "cursor": {
          "ref": "89ca4294-2fce-42c4-b557-4fc4a04b8b83",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "3287ce75-26ab-4601-9258-62a2c113e12e"
        },
        "item": {
          "id": "1756abb1-0e6f-45f7-8756-f31eb1ef9edb",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "0ac6edec-3c3e-48a2-8ffb-4c592fe0dce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21328414-d5d8-401b-a288-47ccbc051dc7",
        "cursor": {
          "ref": "18cd2862-a99b-4e86-8910-6cee3fc2e823",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "bce9de71-827d-449f-a87d-e72e0d582ede"
        },
        "item": {
          "id": "21328414-d5d8-401b-a288-47ccbc051dc7",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ae26f6f9-8194-42dc-8837-4768d34d1d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd1918a2-22dc-4da8-b8c3-dec71543dee2",
        "cursor": {
          "ref": "18215b14-ee60-481a-a99d-3ff535bd6f73",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "728e7593-1e0f-4f67-8aac-ea2587b6bb89"
        },
        "item": {
          "id": "fd1918a2-22dc-4da8-b8c3-dec71543dee2",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "5ff7f8c4-4971-4d82-965b-61685efddd6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d5f62f-361f-4208-ba03-643616574da2",
        "cursor": {
          "ref": "c848817b-65c4-40f9-bc3e-c941df7df8ea",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1021a7d5-c64a-44bd-a0c4-17e68fe23a5c"
        },
        "item": {
          "id": "e7d5f62f-361f-4208-ba03-643616574da2",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "97edfdce-eb8b-4935-b509-e76f3ccc15ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e70b58-3049-4e16-8fcb-44ae9bf98c1f",
        "cursor": {
          "ref": "f83e6aac-2ff6-4abc-b960-cc46dea337ba",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "8a1cad3c-2ba3-4324-983c-04380bc8b854"
        },
        "item": {
          "id": "b5e70b58-3049-4e16-8fcb-44ae9bf98c1f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "096e037c-5d53-489b-ab67-2b61ab9eeeb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89237a35-753e-45d9-a0da-f68a64d9b05f",
        "cursor": {
          "ref": "76ade46e-cb01-47d8-8435-c842443502b3",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "cacc4286-ebb2-48b1-90e3-ea79e2bcd6d8"
        },
        "item": {
          "id": "89237a35-753e-45d9-a0da-f68a64d9b05f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "88b7557a-1237-4e31-9cb7-d8be8e5e7731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5dbb18-b36f-4be1-8999-97175692cc0c",
        "cursor": {
          "ref": "13e72b13-627c-4bfe-be88-ddc5a13015c2",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "4c51a969-b449-4b51-b3f4-1a800bae9b16"
        },
        "item": {
          "id": "db5dbb18-b36f-4be1-8999-97175692cc0c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "7cd4b873-de2a-4b16-9c77-b1cbe7a9ee8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "858b34c0-772e-4ce2-995a-cb10d0d6ea59",
        "cursor": {
          "ref": "80ea8960-6486-40ec-a11f-19726d196070",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8f3710f0-639c-4149-a005-9313ff7a5cef"
        },
        "item": {
          "id": "858b34c0-772e-4ce2-995a-cb10d0d6ea59",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6c5edb0b-7f7b-493c-9eb4-8ff11fc71ba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9a7dfa-d590-40d6-a00a-f45c8f62a894",
        "cursor": {
          "ref": "986904ac-8c6b-4136-80d8-6a4586eff060",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "332bf411-ccb6-40ad-9397-cf941f2489d4"
        },
        "item": {
          "id": "be9a7dfa-d590-40d6-a00a-f45c8f62a894",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "cc7cc3e1-3326-4190-a1fb-2c59e6c2dd5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05d5a3d-a825-4b92-a33b-304e747a5e27",
        "cursor": {
          "ref": "7ed4bacb-3d70-483a-a6ab-3391c4c1dd96",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b5db23ed-78b3-4818-a7a9-8344d7307c41"
        },
        "item": {
          "id": "e05d5a3d-a825-4b92-a33b-304e747a5e27",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b28a7c96-a643-43d7-99e8-f0f03b0dfa1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f51f2586-9a63-43f3-af5b-26aec89486e3",
        "cursor": {
          "ref": "ea457ce1-8e4d-4468-a79f-e7deddfd6926",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "90635d18-ba53-4318-9d6d-1f8282496ad8"
        },
        "item": {
          "id": "f51f2586-9a63-43f3-af5b-26aec89486e3",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "9d3d4795-1d35-469f-83bf-dc75291bc97a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45ca743-358f-441d-847c-6e8ca4db0516",
        "cursor": {
          "ref": "a318ac4d-b744-4e39-ba75-123cc30f48f2",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7d9a1979-9053-4553-8724-07b63aabedea"
        },
        "item": {
          "id": "a45ca743-358f-441d-847c-6e8ca4db0516",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7c6bfd81-0b1b-47fb-977c-0099c8483917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a23f46-d9ad-4bde-b7b4-610926815cad",
        "cursor": {
          "ref": "b41f6fc0-c956-4518-a02b-8dcd81a995f1",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0411637f-4aaf-423f-b76e-4c9df4934210"
        },
        "item": {
          "id": "90a23f46-d9ad-4bde-b7b4-610926815cad",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e401cdf5-2c37-4fe9-b75e-9b4ea98befdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6e7b77-0302-4822-bd4b-246722dc05d9",
        "cursor": {
          "ref": "83865569-deb1-4dfc-9465-4e96d8d40a0a",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "7419e2ff-ce80-40f0-80b8-585e3b03728f"
        },
        "item": {
          "id": "5b6e7b77-0302-4822-bd4b-246722dc05d9",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "de5bed86-6204-4530-9435-055374c88b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63cde782-9cd0-4c35-848a-6bc253a32e38",
        "cursor": {
          "ref": "501d92d2-56d4-4bce-bbac-ee88179c24ea",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "5c5accd6-5ab5-4920-a3c7-8846ec4b6600"
        },
        "item": {
          "id": "63cde782-9cd0-4c35-848a-6bc253a32e38",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ae1b877c-4da6-4c00-bc3d-dc0ca65659ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea10d38-f527-4927-b1e3-62126d147d8b",
        "cursor": {
          "ref": "d1b4e71d-a1ac-4579-8c4b-e15a635fd9a9",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "fd282752-314f-44e7-958b-8c4b24dfb95e"
        },
        "item": {
          "id": "1ea10d38-f527-4927-b1e3-62126d147d8b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "968fa877-80f6-44ab-b326-7a1c8e979122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f87c3dc-0283-4129-9325-55c33443c561",
        "cursor": {
          "ref": "6550d056-0772-495a-a8a3-137e5f06f8bf",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "7ee202f4-edb1-4578-a24d-698142ad3ec2"
        },
        "item": {
          "id": "7f87c3dc-0283-4129-9325-55c33443c561",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "54d9a774-34a6-4593-a519-0431336923bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23ae569-4616-4ddf-8bf7-df12d66e6a6a",
        "cursor": {
          "ref": "9aaaab4b-60de-423f-b001-964af3dee8e6",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9a300a98-35c1-458e-9892-32aeb491a879"
        },
        "item": {
          "id": "b23ae569-4616-4ddf-8bf7-df12d66e6a6a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "97bd0524-f689-48af-8707-cd6b0801bd2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7fa3119-bf0c-4fcb-b6ce-4f20e41415e0",
        "cursor": {
          "ref": "ff85f973-f2b4-4a68-9207-1bb4b3cb0262",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "89103016-5df2-47c5-9b4b-6e9e0883d033"
        },
        "item": {
          "id": "d7fa3119-bf0c-4fcb-b6ce-4f20e41415e0",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "fcd454ef-425b-4c19-aae9-618994a7962b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6945ee2e-e98c-4b40-95c8-b9700d962f6a",
        "cursor": {
          "ref": "0847bbee-d58d-441f-84b0-88df91310c3b",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "82e0398b-8c9d-4de6-8ec6-0572843b0f2a"
        },
        "item": {
          "id": "6945ee2e-e98c-4b40-95c8-b9700d962f6a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4c76934a-829b-40a0-851b-075adc660cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5b7be0-771d-4990-bb23-a02ede04c1e0",
        "cursor": {
          "ref": "7548ca59-9c19-49a6-9253-4a4bebbd814f",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "658aa8a2-fc52-42b6-a87d-823bd5908203"
        },
        "item": {
          "id": "9a5b7be0-771d-4990-bb23-a02ede04c1e0",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "351dc8ee-a2d4-45e1-9ee8-dfbc6305645b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867ea29b-383f-497c-b0c4-d2717ee1fdc9",
        "cursor": {
          "ref": "bdaef1e9-4498-4717-94ad-3e959fa3a2a1",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a0a6d7f0-2007-493b-a299-f6ab26a2906f"
        },
        "item": {
          "id": "867ea29b-383f-497c-b0c4-d2717ee1fdc9",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "4c96fa2d-cd15-499b-92ee-9594d758df61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f90191-664d-4e0e-bdda-ffa52b35d385",
        "cursor": {
          "ref": "ea5f09d0-ec3f-4ec0-a23c-8a58d2d16a9e",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d00ca9f8-8ed2-4785-9703-87b82d94b0f9"
        },
        "item": {
          "id": "38f90191-664d-4e0e-bdda-ffa52b35d385",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "dfd535e2-d802-46df-a4bd-699404309618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa141d94-1afd-4630-92d3-aececdbff597",
        "cursor": {
          "ref": "c86dd34a-e9fb-4009-8570-b35d89cde14f",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2da7a5a9-e6b5-462d-97b5-f718f77c233a"
        },
        "item": {
          "id": "aa141d94-1afd-4630-92d3-aececdbff597",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3b2ab29d-c24d-455c-8325-96a81f3d70fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a08652f-1883-4612-b144-3633fb99709e",
        "cursor": {
          "ref": "3ecc9c48-8402-441b-b2f2-001b8a110ab7",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e3e1744c-e969-4401-a8af-eb1cf30ce0d4"
        },
        "item": {
          "id": "4a08652f-1883-4612-b144-3633fb99709e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "2681f249-1411-42c4-8cb3-6291bea61fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1d22d5-0e66-4882-9b2a-431662fe1f41",
        "cursor": {
          "ref": "9f717a97-9d2c-4751-b18f-d06d844e9851",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "f556532e-ba33-4673-abba-c0e5430d9e23"
        },
        "item": {
          "id": "ae1d22d5-0e66-4882-9b2a-431662fe1f41",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e0d3a9b0-c87d-4ec2-9748-766aaeda0adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c8ad31-b59b-4725-83f8-3fc7be8a6599",
        "cursor": {
          "ref": "fc677e0f-73ff-4da7-8662-444f70f8783f",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "fdb124ee-4778-4f92-af05-eb7308ede5fa"
        },
        "item": {
          "id": "90c8ad31-b59b-4725-83f8-3fc7be8a6599",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "fb6dc344-4327-4c84-992f-6b4c8da38019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38948154-7748-4e09-80a5-29fe83e22a87",
        "cursor": {
          "ref": "76c21a16-4b0a-434e-a9f8-30eeb67718d2",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ae4d37e6-c3c8-4c49-b1c5-5efcd2f8ee83"
        },
        "item": {
          "id": "38948154-7748-4e09-80a5-29fe83e22a87",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2f361195-21c2-4ac8-b901-51f45c93fee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9216b21-87ee-4d9f-bfae-3097e4d12272",
        "cursor": {
          "ref": "bd8b1825-ed2f-46ff-9975-7551c2084521",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9fe3e8d8-3e45-490a-ac13-c651d503edc5"
        },
        "item": {
          "id": "f9216b21-87ee-4d9f-bfae-3097e4d12272",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "6d970f4a-1e6d-49f2-a74a-508f32e39a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d06cafde-05c7-413f-b262-9aa750ed7969",
        "cursor": {
          "ref": "c8d44e5e-c8c8-48e6-80c7-ca7bfd84e7ff",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a2c471e8-9eea-49d1-8a07-0ef0e04fc860"
        },
        "item": {
          "id": "d06cafde-05c7-413f-b262-9aa750ed7969",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e5068b21-eb32-4ae0-a3b4-66c188c2dd46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a685b256-995e-456f-a69f-e06c9ce72beb",
        "cursor": {
          "ref": "d72eb814-9126-4023-812c-1d94c4dc2ea4",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "534a2b99-d64a-4694-8bd3-0e88735ef8fc"
        },
        "item": {
          "id": "a685b256-995e-456f-a69f-e06c9ce72beb",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "214e1916-148a-4309-8cf7-7924e7079731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d9ffbe0-4544-4cd8-a7d0-f2bf0b851cb5",
        "cursor": {
          "ref": "94397884-6d21-4b0b-b390-0a4082135e73",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "91c66c3f-588f-4a22-8067-c3579d0a22a7"
        },
        "item": {
          "id": "0d9ffbe0-4544-4cd8-a7d0-f2bf0b851cb5",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "6b08d6a2-cb8b-44a0-89d4-76da655c4a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e23722e-3083-424a-a7a4-541c4ae80641",
        "cursor": {
          "ref": "ec0983db-6d68-4861-b0e1-4c17a4eb55ee",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d3b30ace-c539-493b-b243-0c454b0a0938"
        },
        "item": {
          "id": "0e23722e-3083-424a-a7a4-541c4ae80641",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e49974c4-f330-4cde-b36f-883ee2f2d950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0fab21a-f264-4ccd-ad64-3ec6086606b7",
        "cursor": {
          "ref": "117b8840-d4c3-4565-b9b0-ea977915fe3a",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ecb9c820-a617-41c7-90ed-a8927ba344d3"
        },
        "item": {
          "id": "e0fab21a-f264-4ccd-ad64-3ec6086606b7",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "7f86ec40-3cc8-4995-9ffd-cf916cc3b2b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1f339d-30e8-47c9-8307-5e9a01ab7059",
        "cursor": {
          "ref": "3e0fb993-586f-4765-98ad-5a3155fea34c",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a6619e66-d948-47a5-9145-9e90b22f9b71"
        },
        "item": {
          "id": "1c1f339d-30e8-47c9-8307-5e9a01ab7059",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "0566eb2e-780e-4705-b39a-5ab7c35f8c71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6b4502-8ace-4993-9fbb-5f0be20ed40b",
        "cursor": {
          "ref": "1042d23b-54f2-4d46-9101-31f3a65cbef4",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "3b42494b-4483-4f21-a5b8-a36ac1b6dc21"
        },
        "item": {
          "id": "3b6b4502-8ace-4993-9fbb-5f0be20ed40b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c48f5117-a16d-4013-bd8b-9223dca8a5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f5223f-fdab-44c1-8426-3e31d7cb5198",
        "cursor": {
          "ref": "97fa3b41-e393-432e-8913-55e2e0efba78",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "5ce8a9ac-102b-4609-b091-4dd334ef2276"
        },
        "item": {
          "id": "47f5223f-fdab-44c1-8426-3e31d7cb5198",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ed30544d-2935-4223-b1d4-0fbed16d67fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b352c876-3338-4a1b-bba9-e5f380bacb60",
        "cursor": {
          "ref": "e606a127-6fb0-4f3a-9386-23ea8e65f527",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "595d30cc-9951-4eb1-b80e-ebd796eeb710"
        },
        "item": {
          "id": "b352c876-3338-4a1b-bba9-e5f380bacb60",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "50289b29-67ea-4516-9fa5-e1f075fe363e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a61e71ba-7824-4b15-92e9-d38487c88cab",
        "cursor": {
          "ref": "3d30eb9f-eee9-4b23-a0a2-f5b23bda0d2f",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a5b86cfe-9bcf-4b99-a064-0e53472b1426"
        },
        "item": {
          "id": "a61e71ba-7824-4b15-92e9-d38487c88cab",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "4179bcf1-d5a6-4272-b419-92031ae5d651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36dfd56c-bf2b-4aa2-8912-56814a452c2c",
        "cursor": {
          "ref": "199c0ba3-6dbb-4074-99f9-35ac99dd6564",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b247a8ca-ddf4-4b16-93d5-1def3f78da67"
        },
        "item": {
          "id": "36dfd56c-bf2b-4aa2-8912-56814a452c2c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "99a7bacf-d56a-44d2-aab5-14c5cce8a26f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a1cec8e-dbea-409b-8ae5-fb9e21cdf427",
        "cursor": {
          "ref": "001a4e6b-f435-4be4-8500-d3b1b02e699f",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ef179ef0-96b6-4f15-89bc-a7b37e5c7dd3"
        },
        "item": {
          "id": "4a1cec8e-dbea-409b-8ae5-fb9e21cdf427",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "eefd3619-9c55-40f6-a581-fa237017e58b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b17fe8-a661-4dd5-b4f4-4b84c494ba4f",
        "cursor": {
          "ref": "f52ff193-5eaf-4b08-b172-b457972acf5e",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "2f988e99-5c14-4aba-8e00-2d8f72248f8d"
        },
        "item": {
          "id": "c4b17fe8-a661-4dd5-b4f4-4b84c494ba4f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f552e6a7-e671-4db8-86db-b838a1cf94cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b1f48b9-933d-4d68-8e8a-943675490143",
        "cursor": {
          "ref": "60d1b481-591f-4c30-9403-a8960713561f",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c1bb44e2-ec1d-43c3-8292-08b23187dff8"
        },
        "item": {
          "id": "9b1f48b9-933d-4d68-8e8a-943675490143",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "de5ec901-6844-4aa8-ab7e-b384c45957ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477900a3-a273-47d1-a020-7286635fe6ab",
        "cursor": {
          "ref": "dca8d747-f579-4d9c-b558-8a416ac4aa77",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d479c133-64b6-4e92-be3c-590f654f4233"
        },
        "item": {
          "id": "477900a3-a273-47d1-a020-7286635fe6ab",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "1ee4c247-a4e3-4a31-b868-3f362a95c486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0767ce4c-848c-4bae-bf79-01918b5736bd",
        "cursor": {
          "ref": "dcb802e9-6b75-4cdc-8f7a-1a0144d34b45",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "76f2ff24-d09a-4411-8393-210ebf316df2"
        },
        "item": {
          "id": "0767ce4c-848c-4bae-bf79-01918b5736bd",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ba4ab9dd-2d5f-4080-9b04-7485b1889a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2465792a-2155-4ca2-9687-6c3d70446efb",
        "cursor": {
          "ref": "bb0b9bfb-5d76-457e-bcff-41b1f1fe3474",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "44231391-127f-419a-bfc9-36fbf8330ed3"
        },
        "item": {
          "id": "2465792a-2155-4ca2-9687-6c3d70446efb",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "159ad07e-b068-4fe0-bcc3-7c79303aa7f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c4b91f9-da43-4669-9b52-49c7f18d652c",
        "cursor": {
          "ref": "1ce8d719-f856-4b60-bc24-f568b43b80f1",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "b1e647f0-09c2-44a9-b800-a6a33c479b58"
        },
        "item": {
          "id": "1c4b91f9-da43-4669-9b52-49c7f18d652c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e77a34da-51e7-42cd-84b8-c38b7c816c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a9688a-2d1a-4f1a-8a56-0a8dafead8a7",
        "cursor": {
          "ref": "5f790e7d-4762-4698-8ccb-bdb6da9f3ba8",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "a8cdaf82-b556-4337-b6a8-786abf1fc4db"
        },
        "item": {
          "id": "c5a9688a-2d1a-4f1a-8a56-0a8dafead8a7",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "9f4e1ed9-cf5b-462f-abc3-7ab9aafe01c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d287b7b6-21d8-4de0-ac2f-74d4553ab021",
        "cursor": {
          "ref": "02616e11-b16b-404a-b17e-d0813373a407",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1a5f4755-f639-47c2-abe8-7a20b686a6c1"
        },
        "item": {
          "id": "d287b7b6-21d8-4de0-ac2f-74d4553ab021",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a8bf347e-7741-469b-a296-8dcacd8f6c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee49230b-c0be-4786-9383-a62afec53f7a",
        "cursor": {
          "ref": "28a052da-7b47-49fc-8538-45c8f2193b4a",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2abf5da4-1023-4616-96c1-48f45dbb17d2"
        },
        "item": {
          "id": "ee49230b-c0be-4786-9383-a62afec53f7a",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6754738a-f007-4871-8872-4b00c01f4271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69472d5-aac9-4dfe-9d8c-3c7797eb1bad",
        "cursor": {
          "ref": "9b57ee9c-c4a7-4187-978e-b9c036a23cdc",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "6aedf4cf-e221-4df4-8a4e-56cac0246cfb"
        },
        "item": {
          "id": "c69472d5-aac9-4dfe-9d8c-3c7797eb1bad",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "33c16743-efc5-4443-a3c3-5738ebc49c53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f296e36-ad65-4482-a4cf-d8ee28547894",
        "cursor": {
          "ref": "721c2aa4-d7d9-4584-b4e8-5ad30f91cab8",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "bad8c0af-3e4d-4e83-9355-58f0207a0258"
        },
        "item": {
          "id": "5f296e36-ad65-4482-a4cf-d8ee28547894",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "874da62b-d339-4dbb-873a-c1180335de41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa1295b-2d5e-49f2-9a66-01dd6dd039bf",
        "cursor": {
          "ref": "73f2d194-3556-4205-ba88-05a1c6d0d6e7",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "189e1d17-f85f-42fc-8a73-f1eef8e6e25d"
        },
        "item": {
          "id": "8aa1295b-2d5e-49f2-9a66-01dd6dd039bf",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "57df040c-c885-460e-8a8c-8cc21ff96cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc081dde-7015-4acd-9f76-ede6aa026602",
        "cursor": {
          "ref": "5610f8f0-3984-4c82-a01c-896c6a933c7a",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "03424de8-f457-474f-a70a-f2453c233201"
        },
        "item": {
          "id": "bc081dde-7015-4acd-9f76-ede6aa026602",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "194a44f1-32e0-44dd-bb53-e0a9f61c0a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db330994-d8ac-458d-b202-4f6573ae589d",
        "cursor": {
          "ref": "93bf5167-7a81-4264-a6a3-84ca776356a4",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "21badd20-f1a3-42ec-9dff-954cbec45c19"
        },
        "item": {
          "id": "db330994-d8ac-458d-b202-4f6573ae589d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "00764b63-6984-4ac1-ba6d-177f36956c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a6e925a-e46c-4536-a385-e691d91cda03",
        "cursor": {
          "ref": "7f49cf18-c379-4880-9e62-9159ab778e49",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "83ba7b65-69e4-4044-8e39-c76fd748985a"
        },
        "item": {
          "id": "1a6e925a-e46c-4536-a385-e691d91cda03",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "02d19901-a8da-49c7-9c88-bfd89cc9ca76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a1ad5e8-ffae-4eb9-bf6d-725d54903fee",
        "cursor": {
          "ref": "580831b2-dffb-422f-bf79-0de5125d4c86",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "aac96b0c-51cf-4a13-8925-1652cec62426"
        },
        "item": {
          "id": "9a1ad5e8-ffae-4eb9-bf6d-725d54903fee",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e51489c1-cd7a-4f17-bb9b-81af5f1c4598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ddecf55-0619-4285-b7f8-35dc242077f3",
        "cursor": {
          "ref": "f13cbcf6-bb7b-4977-bb11-3fea06b20bb9",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "ecd5d0b8-dedc-4ffa-9c13-44cd1db6bbc0"
        },
        "item": {
          "id": "3ddecf55-0619-4285-b7f8-35dc242077f3",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "39c6d025-54c1-4312-85c9-b09b70500355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1febce3b-9d63-4a68-a37c-338ef42243b2",
        "cursor": {
          "ref": "304f3c11-5bbc-4d3a-9b44-5f817997ada9",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "032c16e6-6e6f-4879-94b6-ed89fdb17db7"
        },
        "item": {
          "id": "1febce3b-9d63-4a68-a37c-338ef42243b2",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "aeae8660-00c9-4079-8924-e81e9a0fac0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c0a74cf-f7ac-4066-b914-9adfca3a34f7",
        "cursor": {
          "ref": "9885f1ff-f08e-4e60-80b4-e160c386da08",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "0dfa1775-01eb-4fff-99ad-cc120d1c5d2b"
        },
        "item": {
          "id": "9c0a74cf-f7ac-4066-b914-9adfca3a34f7",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9700fbb4-723f-4045-bb2c-55aebc2fed6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e821d0-a36d-4d9c-8bdf-798e978a093b",
        "cursor": {
          "ref": "d7e2f5c4-eba9-40ac-8962-847adccee0b6",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "512c45bd-8ab9-4313-96c8-1b92e921daa3"
        },
        "item": {
          "id": "28e821d0-a36d-4d9c-8bdf-798e978a093b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "570f90c6-c854-4254-93ee-27ddfb2a2eab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b44bf8b-9c64-4e13-8fda-667b7b1629fb",
        "cursor": {
          "ref": "10d7d157-85a1-40ab-9e05-37f7472c87bb",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "60fd7825-6141-4ab2-b346-80ce46ec24df"
        },
        "item": {
          "id": "3b44bf8b-9c64-4e13-8fda-667b7b1629fb",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "323be3c3-b06b-4efa-9ab5-35739acc3c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddfaa11e-cc17-4c01-998f-9ce14b2940a8",
        "cursor": {
          "ref": "7da13a2f-45f4-4a2c-af3e-f0b96e5f95dd",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "e9f36bec-4d3a-4009-9c0a-571eb28c7828"
        },
        "item": {
          "id": "ddfaa11e-cc17-4c01-998f-9ce14b2940a8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "be2b0394-24a8-45d0-8a36-4fa352ae524f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f543b81-e1e6-404f-85de-4be595c533b7",
        "cursor": {
          "ref": "1f36a234-60fb-493f-9280-97ca20b4f0f6",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "1a16246a-9628-4a6a-b365-910aeb20b494"
        },
        "item": {
          "id": "0f543b81-e1e6-404f-85de-4be595c533b7",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "99bbc26b-0efa-4677-8dfe-83a9f77281b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1596b1c-57ca-4845-9f61-ecdcc2723ce7",
        "cursor": {
          "ref": "f2f50020-33c0-40ee-a83e-5dec92d97f02",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "9ced7c07-f85c-4e65-ac19-c47aa5f0543f"
        },
        "item": {
          "id": "a1596b1c-57ca-4845-9f61-ecdcc2723ce7",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "daedfcf1-80ff-469a-91e1-b68100a5d577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1edc900e-17e2-472d-8cae-ee2e50d289d3",
        "cursor": {
          "ref": "f9b4baf1-8b25-456b-9e2d-bdb367b9d763",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "e4bcdcb5-4f35-4c35-9378-14b8c13439a0"
        },
        "item": {
          "id": "1edc900e-17e2-472d-8cae-ee2e50d289d3",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "8becdef2-41c7-4600-aa46-6acc417518ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3ebda4-e626-4035-ab04-5a7f480ac6e5",
        "cursor": {
          "ref": "346781e1-cb86-44ab-ad40-fe26d0be92e0",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "e19f2bb0-d29b-426b-896e-e00794956eca"
        },
        "item": {
          "id": "5b3ebda4-e626-4035-ab04-5a7f480ac6e5",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c72b606a-55a3-4dc9-8222-2d4f7369bba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "608d08b0-55f9-4faa-b2fe-6987ddf17cda",
        "cursor": {
          "ref": "b32300db-b419-4457-aa27-727c603ad364",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "6f62ce71-26ad-434c-bcc0-79579d545343"
        },
        "item": {
          "id": "608d08b0-55f9-4faa-b2fe-6987ddf17cda",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8acc94d6-617f-44a4-9529-6f950a4314d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "993e20d1-e11d-478a-8a7f-2077e7f70409",
        "cursor": {
          "ref": "cf996096-3ac2-4c74-b1f4-1cf3f05f8a55",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "36146557-137f-47a9-9961-49aab2a8d29f"
        },
        "item": {
          "id": "993e20d1-e11d-478a-8a7f-2077e7f70409",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "404b6363-05ee-46c5-880a-3208a84a4ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "681e9f67-bcac-4da6-bd67-219b89bb6421",
        "cursor": {
          "ref": "c6107da2-41a6-4cd0-9893-d22ba7f4c59f",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "85e2fe2b-103e-4482-8fd1-cdfc3a3efd90"
        },
        "item": {
          "id": "681e9f67-bcac-4da6-bd67-219b89bb6421",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "210a625a-ac8f-4aa1-9270-3a8b884f7eeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e92a99-c616-4be0-9fe2-88ab2456e332",
        "cursor": {
          "ref": "9f08ce6e-e93e-4439-b88f-f0cd3d0e08d8",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "3197bc92-01a6-4539-85da-d860b7aa6a47"
        },
        "item": {
          "id": "c0e92a99-c616-4be0-9fe2-88ab2456e332",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "8e886adc-5e2e-4152-934e-b60c5dfe1195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f1f43c-92c4-4f70-82a1-af16037fd428",
        "cursor": {
          "ref": "e4899382-5cc2-4379-a214-a4d22345df13",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "bd66c52b-35f0-413c-94d2-831f095f8d53"
        },
        "item": {
          "id": "d6f1f43c-92c4-4f70-82a1-af16037fd428",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9a6b9999-be51-4829-8827-c2a8aca9de2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e0e293-2ec1-4392-9afd-ace09cf41052",
        "cursor": {
          "ref": "bb864540-7669-44e1-8468-2638ee8bff1e",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "ef9ecac6-6c03-471c-8ae3-e67fb5f25381"
        },
        "item": {
          "id": "57e0e293-2ec1-4392-9afd-ace09cf41052",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "deb84f40-dd85-42c1-933c-3cd1b37640e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338dfd59-b36e-4410-9d74-6834508da0e6",
        "cursor": {
          "ref": "8e57af52-173b-4d3a-b1ef-cda2a8206ce2",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "84f9b2cf-fb7f-4edc-b2f1-2acce0d91377"
        },
        "item": {
          "id": "338dfd59-b36e-4410-9d74-6834508da0e6",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b35066c2-aaf7-424b-9f25-91abb8d070d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c6581c-3dcf-4479-8b02-117fb73f7287",
        "cursor": {
          "ref": "71b130e4-3170-4b86-b219-94552ba6019a",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "1aa4cfe6-2e78-4ed5-8312-10992a2b5ffb"
        },
        "item": {
          "id": "08c6581c-3dcf-4479-8b02-117fb73f7287",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "6c8e07e6-48a5-42c4-a883-4460dae91287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d0ea62d-e162-4c40-a266-31adbb1f0079",
        "cursor": {
          "ref": "a10feaaa-6eb4-42cc-933a-fe0ac3c31a76",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "fa595263-d99f-4ef9-83a6-9fbe71d7943b"
        },
        "item": {
          "id": "5d0ea62d-e162-4c40-a266-31adbb1f0079",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ffe664fe-7b10-4a8a-a796-83aa480d1d90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2eb61f9-881e-4eb5-b2e7-4e41bcc98db3",
        "cursor": {
          "ref": "cac5c3f3-02e3-470a-9993-9e0a66f78da6",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "8932f2ca-1046-4c12-aa15-9fa45c56f423"
        },
        "item": {
          "id": "b2eb61f9-881e-4eb5-b2e7-4e41bcc98db3",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e9f9a430-edaf-4871-a500-c144334cd41e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d3aa822-eff7-49e5-ac69-4e8a6286226e",
        "cursor": {
          "ref": "dc8d0c8d-375e-4d70-9012-36cce8e42943",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "df5ff27d-9f7d-4cb7-b399-2384cc8f2e4c"
        },
        "item": {
          "id": "7d3aa822-eff7-49e5-ac69-4e8a6286226e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "be6c8dbd-0807-40ba-9abd-818b37d6b8a0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f605227d-a001-4f54-95c8-64381a803d1e",
        "cursor": {
          "ref": "88328e83-7b58-4793-a9e0-b3bc6f08e42e",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "a1cbf953-d6f4-4bc5-9460-c4684ca47662"
        },
        "item": {
          "id": "f605227d-a001-4f54-95c8-64381a803d1e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "81955dce-12c4-4892-a059-6455a8bdf492",
          "status": "OK",
          "code": 200,
          "responseTime": 113,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ad63de-ca8f-410e-9ab4-3cccee4eb11e",
        "cursor": {
          "ref": "5b20e179-31e6-4f06-8b18-4c8915f04d5b",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "d9d33527-fec8-4a8e-946d-1b6ce7fb9e2c"
        },
        "item": {
          "id": "75ad63de-ca8f-410e-9ab4-3cccee4eb11e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "1127ca0d-d74d-4b30-b89f-67344418f6da",
          "status": "OK",
          "code": 200,
          "responseTime": 1541,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "272aca42-d9c8-44b2-adf5-485c6a770476",
        "cursor": {
          "ref": "932aff21-5f20-4daf-a261-fbe77daae999",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "a0a2d858-f64b-47c9-a30a-a61ead97786d"
        },
        "item": {
          "id": "272aca42-d9c8-44b2-adf5-485c6a770476",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "165c6b7f-d73d-461d-865c-a8b890fbc2e2",
          "status": "OK",
          "code": 200,
          "responseTime": 1271,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d336bb-d89b-4418-8b08-d9101f44e723",
        "cursor": {
          "ref": "16dd3b5b-6234-46b7-b93b-4e5930403c12",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "da203bf9-28fa-4bbd-85ef-30274b2438f5"
        },
        "item": {
          "id": "e1d336bb-d89b-4418-8b08-d9101f44e723",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4ae50ec2-3ccb-4750-b418-ffa7e3ff1591",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d336bb-d89b-4418-8b08-d9101f44e723",
        "cursor": {
          "ref": "16dd3b5b-6234-46b7-b93b-4e5930403c12",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "da203bf9-28fa-4bbd-85ef-30274b2438f5"
        },
        "item": {
          "id": "e1d336bb-d89b-4418-8b08-d9101f44e723",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4ae50ec2-3ccb-4750-b418-ffa7e3ff1591",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "953ba35a-36f8-4820-a447-457df861d9f9",
        "cursor": {
          "ref": "3777655e-0392-46e1-b545-a85d08482232",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "e9f81f67-6696-486c-8961-869158883735"
        },
        "item": {
          "id": "953ba35a-36f8-4820-a447-457df861d9f9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d85b053a-197a-4852-b7ee-56746dfa37ec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62856d62-a4ee-4825-839d-a25a6d77305d",
        "cursor": {
          "ref": "a07300a8-9492-41c6-978a-189627dc314b",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "50efb24d-c474-473b-a01a-591da838fef8"
        },
        "item": {
          "id": "62856d62-a4ee-4825-839d-a25a6d77305d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6e80a3c6-7a03-4d50-8c6b-2b8fd131a831",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}