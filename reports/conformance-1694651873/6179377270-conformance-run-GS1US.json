{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "11fe30e1-cdcf-4e5c-a926-002b83130854",
        "name": "Clear Cache",
        "item": [
          {
            "id": "37e2eab2-ce6d-41eb-854f-8cf237f21af2",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4ed0b94e-2cc6-4b0b-8647-57c011106ed0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c761699e-d60a-4d66-aa2c-b3569ba44b78"
                }
              }
            ]
          },
          {
            "id": "49242500-044d-408d-9fbc-9aac67f7a3fe",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c668be70-d125-4f04-ab3b-38f52710d39c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "21e4a0d4-39b6-433b-92e8-592109578cde"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "5bd7dadb-efa5-4058-a540-2bde36b9dee9",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c2525a20-fd46-4cab-8c2f-85547ec2f19e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "741f4444-730a-4c69-a3f2-c390c8946952",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ca8c68a-f029-4a7e-823f-960a1d7ec90a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "98abf23e-8263-495d-aed1-155327385602"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "31d22960-ef80-4046-bf54-818d61b602ae",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f22f6309-5037-4add-8d3f-14777de1d98c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "447580ce-c0f3-4181-8606-d394a4a6e443",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c5186c3d-3ca2-4ac2-845f-4f1cd0242a82"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "baa20b1e-a4bd-478d-b119-94cd78d2d309",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c0679419-037e-4ccd-b1cf-c94ffce910ba"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4946e43a-cb34-423f-ad90-031abc51cb0c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "284286a4-44a7-4739-a306-e5210f069da7"
            }
          }
        ]
      },
      {
        "id": "a297fc40-98f6-4fa4-b819-6b103f26509d",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "5d8e106f-855d-460d-90f9-dd149e1b1bb7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dff91664-6f15-4f0a-98c3-bbf46d7f3c05",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "422d7efa-63b4-49e6-add5-4da5d216bc2a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7a8f0b-145a-4891-bf44-8a3731131cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "770e87e6-6011-4f59-9165-a63915f110f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660c2b5d-26a2-4aa1-b20d-8373e3ff1b3c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d0128d1-45fa-4be7-b373-c770f5c8fd96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7128637e-6621-41ea-a664-03cfdfb1b7f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ea4816-a9eb-4ed6-ac38-165d9da92281",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "666f498a-7bdf-4c6e-8c92-5c802ebb40b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea0a804b-c916-4fa3-9257-ce5ff85758b6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "008eac24-21a1-4c04-afca-8a340a814263",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "268d8936-ca74-4c8e-8b11-bec062edbfab",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd1d247b-6be2-4fa0-ac02-a5d4653233b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "848652f4-eadb-4bec-bb7f-91fa3ec655e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aab0f4f-c49e-4ef4-bb70-478a7b67ede4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2649e10-9b5d-478d-9419-6826ac90d030"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9c595749-36d8-436c-bece-0cc0413d7820",
            "name": "Positive Testing",
            "item": [
              {
                "id": "443213a9-9f43-4537-bd14-18a5e6bb15b1",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0cbee85c-3622-4a6c-aea3-8ee511e9c38e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "2146b14a-fa7e-46ab-8dd1-775fc6de8f37"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2bc81bb5-ef25-48aa-be1e-56c274013922",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "1e9adac7-7d80-49ec-a778-ace7c5eee3d1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "144f6308-b6f3-41ee-8d5e-f46203a3017b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "945146b5-9fc0-4043-9d43-f96f6eeeae2f"
            }
          }
        ]
      },
      {
        "id": "aa75ede5-0364-451a-ab7c-b98da683717d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d06862e0-8563-48a8-be2a-3a86bfdded50",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0c7178b1-bb57-4b19-92ef-99815d327805",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ac8ba985-4835-4178-9d64-ff2a46f4b54f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e1aef28-8bc7-4c9a-b69b-a77d83838091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e37dd49-a209-4497-b7f0-1d517615c0d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6046cd10-43ec-46fc-a49b-06921f8b7b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "577d2162-b3e9-43e7-b640-b0b1533e1d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6745a7bc-a48f-4bea-b5b1-2de7b89400ba",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f14bcff2-688d-4299-a281-574c95c41427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f09ae9ff-6fa7-4ec9-b683-2096755cdb9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38274287-2089-4168-b1a6-564155fca2e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7721a7cb-9d8f-46af-bd85-2dbce71f6e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2062b6f-7a85-4dab-9b8b-414669e74475",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "544046a6-841f-44f9-8a2d-d3dd3ad86ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b92053f-88e3-4516-9c31-da732904641f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163b2241-ee58-490c-9209-f2eef547ac65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68cb7842-b18a-4b9d-8b8a-22a35630abc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e46a0587-0b5e-4fe8-bf5e-240ff41463fe",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "312fff45-c658-4ce2-80bf-31b438bf850b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1634b22b-4614-4e91-8208-9089799e9d99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d6cf9fd-f823-4737-abb5-d8f9bfb92810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40d75002-d8b7-4681-b0e1-43a1f39aff9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a9c33a-e9ad-4075-a22b-67a122b5bee1",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33949f60-96a9-4374-b5ab-34c5da1798ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c36840b-09a3-480e-935c-6b142a4e7bfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2156f6e-84c1-4911-9295-99d14377b4a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed72f423-7f92-42b8-b752-0dad558fa980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "526cf53c-9da2-4988-b7db-73cda8fdab8f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d073c5d-7abc-4439-bbbc-bdcc70aa2df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98200aaa-3c67-4218-abcb-ef531d84176d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b677a49-85e8-4357-8aac-83fc9863f987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3938d08-79d1-4181-a883-c220109440d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d65a1c88-cbfb-4861-9cea-e37990b162b0",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c4d6b64-047e-47cb-a51e-48c3dac7de4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40ba3a45-8945-4bde-93dc-6c3ad9d6c049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ead943-97b0-424b-8c45-a4e9df03d950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3e26204-1a18-4bfd-9b19-fb664c648e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "580fd01b-22ab-48de-9eee-508278c5570f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2618d43-b8d5-469f-b366-00ca016a33b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec18082e-f2ae-4dfb-a6da-1c833c12461f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f6ac0bb-4ec4-4628-b7a3-85be1e248d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a596e6a8-9aee-439e-a591-2c23908c8a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8bfd939-4e58-4cad-b502-484cd84f38a5",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea1c3d4-9058-40b5-a275-39a0150ab0b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "234ae521-cbaa-4147-bde4-08f748106dd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7184a546-13d1-4667-8a8a-f83de4d89c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a86853f-ed4c-48e9-8864-fc701afe8f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cde4953-b270-4e9a-8dd9-09176498d266",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5744755f-5d7f-4a4a-a827-e44c65980d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96418413-8916-4976-9342-af8ba1a3ab0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc42ada9-bb97-45b7-8d33-525376bad5fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "579246e8-c2bc-41b6-81bf-9091dcb0a908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c6c025-36f7-4065-b0ad-64edd68f0552",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a2aa54-c7cb-49f2-9dba-260921390631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a325b4b6-7592-4380-bd85-1b1a7dee59ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c576ac6a-159f-4534-9ad7-fa96a7e2527b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b49f7cef-e172-48c8-8aca-1b48dbf0586c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fe4096e-cda1-47b2-a9ac-543a43f851e4",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b87f096-9b66-4c08-9afb-15f9e0993c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e2ad16a-616f-4aa3-8448-536313821fb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "768468eb-b18c-488f-a14c-1229020843cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68dde1b1-fd64-432c-90a4-9245e0f6f8b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1fe3363-a0ff-4cfb-ab88-aa25196d584a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d1bb28-9091-460b-9598-63ed5ed59d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8e88b27-2a0b-4268-9413-807673b6860b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b4402bf-2168-420a-a403-fcf2955ff4c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f02c4e7-002a-479d-80e3-18ca7cd01266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71a87395-48ac-4ff3-9db2-264df91c797a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb896c91-bb9e-4ffa-b6e0-dbef8174d36e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70f17404-0067-48e3-84ec-1442366042a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d1097d3-b412-45e5-a377-921e7a0dbf98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b61fae3a-fed5-4f8c-a5e4-66548d6fffb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d5e15b7-fa0f-4e5e-8b9e-ebea51631368",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63bd8945-9f5e-4bc4-b409-bd525705dada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab01b986-620f-43f3-85c6-0a788cfb1807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63fee79a-0061-4380-8737-2fa21ae79022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c594724d-c0ff-46f3-85fa-669906926e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df24a4b9-cf80-4408-b3fa-2aed8b7402c1",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9179009-8aed-421c-88a2-7163eceaeb53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f7d7fee-ed26-41bf-93a8-2bc0623709da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ea040d-47c9-4244-983f-abdca2b5506b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac9cf1be-e1d2-42c0-a76b-cdbe59d60a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd8aaa1-ae98-4e5c-8518-fe308a8a7461",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d28e7c64-c0d3-43e9-8324-d47f373d1b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03f89019-b4f4-4714-a7db-4c2abb4fd6bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf31789a-ee3e-4379-b6d4-86ffc7bdf290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f100565c-0399-4c07-81a9-35ac3144bc6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6350107c-9342-40e5-bae7-a9a713bf7ebd",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41398cb7-ce9e-40c7-a73e-6a1c8a3aede1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e3ba8e5-be2e-418e-837f-b95257efe047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a2d53a-63dc-434a-8fec-2ed1eb1488f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9c80dfd-a045-46ec-b8b0-bf198c528899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16dc0c91-f93a-478f-a5e7-68515f4cfb00",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "821a1054-5add-460d-8f1d-14b09b9c8582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfc9decf-c57d-418b-9fd7-49d3af9b370a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9bd8a8-1dd7-4533-8c16-0811be6ed804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "725194c5-9e9f-4d8d-8086-b2b516082b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32945e52-e9aa-4307-8147-cadb1a44704f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a2f78d-630d-438a-abf2-a145e0a95949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb616952-951b-4ebc-a337-268593fdee0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13bb17ab-a11b-49d8-9a2e-2f4b84aac541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3db3a41c-7e7a-4853-8805-c84dab4a7f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dadd1e93-3597-4312-97e7-12e544241487",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "380345e2-de17-41bd-9f92-df0f3050a445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d04372e-ce7b-4dba-b60a-5e9fbf924eed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "554a0820-9dbc-492d-a7af-2fdd7a147b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d45b4a8-0e01-43c4-8d32-6b8f415140b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1bc3976-eea1-4fe3-9232-229189a0e7b3",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c77b4bae-abf9-4df1-b317-44caeadfd4f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ceb6a48-de21-41a4-9c28-0fb24ef2e936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d76b5d-f215-4d42-a232-81629368bd49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "533e0962-d1d8-446a-8684-cc700957a824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05d65e31-0dc9-48a1-9ba0-199c583454b4",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc065b7-b60a-4351-bb8b-8ba0a8d908b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f69be569-1ff1-45b9-a8d7-9ac3af733a01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20ce30c-1420-4aaa-b9f9-658e500ff42d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b8d0ecf8-4580-4aa6-8eb9-6f3dd2928d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae77a35-832e-4bde-b523-1eeb39c0e5b2",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d7a757-9050-4246-a85f-d30950905253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45f18da3-0bc6-4f85-a21f-d29f7cb163bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5363abd-0d82-4863-a8dc-11a5a1f82b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a99d1fb3-93b1-47a9-b4d5-6bc2a0825f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b105c516-92e7-4241-8386-8631df624c84",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d992e0d0-b712-46b0-a0e3-1278d7678743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4682d36a-5b86-4363-b753-33516d2650b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c039da-6825-4f8a-b73f-0d23806b6dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "247da5b5-e30f-4e15-868b-44e4953bd390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b4d491-1491-4601-b103-e1d967d890b8",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e76b3c4-158e-4e64-93c5-3cf65b183108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3ef2596-d00c-4144-9cbd-6feef8d88c98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb49f1f0-a353-4b73-adc1-e6ff11fa99b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "32b01aa1-c795-4eac-bbef-3486ba6b454f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78abcd7d-ffb9-4dd6-9ca6-2dbf3c2069d2",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f70e5e-b9f5-46c0-8a1b-f222399d1316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13ee87b3-f0c9-4fa8-b638-c925b96b1663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "299f0720-58af-4961-af99-2876216ef7fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "832df656-38b4-431c-91f6-28ae6b3ac743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c03921-4f7e-4600-86b2-a3cd1d589831",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c470ff2e-dee0-4d6a-af0e-3dfdb6e34e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca7e1776-d8eb-46d6-9672-7616cb469ba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e567ee-51b1-489f-8751-16356255f63a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2e96def-09e4-4332-ad11-94dcd4c2cd83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c95c619d-898e-4d02-a359-053fb76d8cfc",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db1bd5bd-7a03-48fc-bd31-29fa021ef6b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dd89438-df1a-4a19-994f-a9de1e76ba97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1dcdb03-28a3-4168-8e68-31e3eb2159c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "80e96056-e181-4026-84ca-72ebd2afe4a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "694e529f-4eb1-46a3-8090-5053fa1f477e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9228a7-1be3-43af-8ec1-bf89a505c0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f0963f9-27a5-4be4-bda3-53b143c02eaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f158e2-56f0-41ae-add0-f07485b489cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "734014dc-2ee9-41de-8518-13a7be1181a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f9954f4-f77c-47e8-a9d4-333841c6b0b6",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b4b57f-36c2-4e60-bce1-c9ac9d2cdac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c4c9e6b-2a0d-4afd-8a55-022cf8bbbc64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "042c0e7c-c8b2-4f71-8192-8c8f99bdfbd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "de16dc89-8f23-4751-98e3-4cf924ae7fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaeb01cc-a767-4be4-9910-21701b4b4f50",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2107f3e7-c8ed-4ba4-8001-071675be2391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c2c42ab-5d52-4ccf-a8be-fe0d370e738e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "786f45a3-57ab-49c1-ad0a-9dab8980f93c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9edcdd12-8066-4810-a7e8-9118198e556b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa2030f-402e-47aa-ae62-60d380baffb7",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab18dfa-f3f3-4bef-8d1a-caa3e24cd075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d87cb837-f4b5-4409-956e-3774355d2714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03843e9f-0200-47a5-9d83-846c891619ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4df16d30-4598-4d4a-9db4-0770ebb5c721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95797f54-abb0-4d57-b4d9-89bb79baeed9",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf8f51e-362f-4efc-8ad8-3faac3f56c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22f2d8ee-1fbb-4f16-a0e8-114de510fb10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f776dcbf-6189-46bc-bbca-0e8ad32ce5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7651c04a-efb2-4750-bb71-867c0dba01c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb9baa5-e7c0-452e-9a7d-05323f86bb41",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2faf748-2802-48d4-962d-db68273d44f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75f7e8b3-e9fe-4c62-ae7d-2e103abdc2d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4f6f43-4ce7-4bc5-a092-54386307e4d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "61ad30aa-8b05-4ba2-8156-8e2be9954e04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f21be2-2725-4f08-a791-c52d7c7ab0b6",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d695ff1-eb59-446c-b4b2-91cd76072eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c04e4d9-be58-4e55-a4c1-a53f8ed390c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c33df0b2-e7b0-4f85-a0f4-703883144377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2ea46755-6973-4cce-8d06-db1f716852cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e828dcb7-9afe-4b05-aec9-d48d182f4d5c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ad5460-5dbe-4750-a569-423c17dc9cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a42c721-cc33-4e0f-a352-974db515b074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0faef26-2479-49b9-94d5-9695f31ae1ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "95bf865f-f33d-4793-a6fc-78abf7dfc3d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d507a12-128e-47ae-9261-f030ee232ab4",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6b05b5-a5c8-4a06-ab9e-bb405f343364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5e0de12-2d6d-426b-b60f-c959ea0793ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa96f2c-e262-4a98-be52-510dce00fa5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d886123b-25c0-487f-987c-b250d6ee1566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10dbe7ca-996d-4ebc-9ef4-0f90bd491ad1",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5765fd4c-09d1-4b44-b9c5-813212778581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cff3a81-7a9e-44c6-8698-98008257b17f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5badd5-d923-49bb-a5f1-409b73cef198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6583fa73-db61-449c-87e6-35a80744ed77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f640dc5-80d7-4e0a-b041-ad517883d8f4",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a8c0d94-ff35-40a6-b5e0-2576260207a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "593e280e-67d1-4edb-b97f-d158f0b7d91b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d67ba79-44de-4271-8e1b-cad0c89af4d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d88ba3e-b823-4863-8bb0-df111f8621a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "930b7020-ffd6-412c-bc51-dc2a9377577c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff83d86d-7495-42b6-a6ad-b08f5ca74140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50fc201b-7737-4ef7-9ec8-f1196005233f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af833141-3ad1-46f2-af03-32b9dbd91351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d00cbc11-0b9e-4ae4-8a7b-998f6ebba8c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "496ab783-931a-46f1-a4cb-a53eac22c482",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3c5df9d-7f28-4b85-b1fa-45a3920af974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6fc4734-f7f7-44e1-8f9b-64a4c91df66b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "406473b5-2991-4cbb-8ce5-b4a6342bb2a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9151df83-55e5-42d5-a249-a30a4fb92fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f716e6-852d-4964-b6c2-bdba8529f69e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e7a209-7c2c-4d4b-81e6-c9f4e12fefb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed66de80-545b-4ac9-913f-2e963db4b36d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "700131e9-da47-49cc-9638-49083bcc7625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "629a7526-b5d4-4322-96f3-e7104f65ee55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3899941-6285-4e5c-a2f1-fa98616b41d4",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ff52df-38f0-4ef9-a4f5-bbc3fcf77cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c86ffad1-2e50-4365-b5cb-7223c5a9473d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a0b6920-29bb-446a-88c1-5b92d00d0320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e5df6f3-eeb6-417f-a2cb-a9f7e60afaf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c274dce-adb0-4e88-9a85-1b6e495e1510",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddbf03ae-112f-4485-abb5-cda9dfa11481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69d4323b-778a-4426-91a1-5d3157f15185"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "557eace6-8d40-4fd7-a114-3674e9f91af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "98f8ae65-e995-4e34-ac70-b3e590878cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03fef937-e81f-45c9-ae5a-64b35365e3a9",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "832cea92-60a9-4bbb-ac99-bf17bc8c3cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad7b3c65-907e-472b-ab3a-e7a64555d470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea556e94-62c0-47b1-93dc-cd467cff4d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6157798-52e5-4041-b579-72ea592852d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7b0163-5f59-43f1-a2ad-4f5063bbbfba",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e7b9bc-4c08-48b2-ae6a-da93abd705ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ec3b9ea-731f-4fc8-8437-6c49d2048b8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfde1d45-1895-4088-bc71-1cbc5e037357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "18db4282-553e-451e-8114-f8e1e3a1c192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "187ef6b4-f5d5-4ccd-bd07-a276ad92d462",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed5f479-f24c-4abd-b8ff-91e144f467ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14d9ce63-6e43-4428-8130-caf4728dc0c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080dd9eb-5e9f-4f42-9246-a1478d6e88b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1369558-93f9-45d6-9582-c31e17e6cda5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5345671-2da9-486e-ab83-efc302de0800",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb679ca-b174-46c8-a44c-4c3205ed11d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08482b77-1912-46c8-9702-e332952171d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7d2919-ae99-470d-a591-c78f58c3ab77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1961d074-cd89-4959-b3e2-9ddf2d42cfaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d4cd947-0cef-4a9f-9e9e-1607bd265fae",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e0fb953-44d0-4c86-9d36-a291998242a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3d1d758-2550-4135-bfc6-17f966e24848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ff2fd8-b4a6-4a3c-a4f1-5e81a589c830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ddcf93b4-596c-4a8d-9576-291f1180e638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d23f57a-e8bb-4a48-a8a5-bf0bb93210d4",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17bfdc60-eca6-4c48-8dbd-38d505e7f85a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bff04156-d7d3-4396-82be-fcb6e14d28ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b52e522-6a66-4166-9810-03cdbf195bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "957b7e75-efe7-4b28-9397-e052b9a8b98d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eba48a24-4342-4334-b2ee-3a215ab59fd4",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7584bbad-3637-4141-a4e8-c0ee6bf1eccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f172803b-bc23-4c7f-9202-117094ff910c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cfc88b2-6af0-4bab-863a-715909a86c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "985a8e64-6254-4425-b8da-ca5dfff1e922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b91d41df-7b8e-4681-a3ab-9eb2f8cb805d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aafabf0a-48d4-454c-a68e-408c6834e9d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9352244-4749-4f1f-9380-885da8525ce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3fa1be5-ff3b-4a87-a301-f920ca6e5964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "44a0b9eb-f282-46e6-929b-2489e4d0a7f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6505316e-6249-4e1f-9e30-e80ff379190d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1071708-36b7-460c-aa54-78a1057a75bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c1aa269-c24f-40bd-ac5c-9f3aaf70d6d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74fe084d-4d3d-4b42-806f-e0e2bb53d1fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c148125-be9d-4c51-94df-5904df312d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9dc355e-a754-4a8e-b521-b07eb20e1ee4",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea4f9fc-41b4-48ba-8434-36d6b8bfcf47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03c71abb-0c8d-44d6-89a8-d5a676e1f0eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e948fd79-9852-4ed5-9238-98e6b972e133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc10bc8d-0f72-41dd-b6a4-ca3db34460a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b12be007-a056-48e3-b3d3-65a41e660d74",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c45bb15-27e0-4511-92f7-8e1540997c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14005052-c68f-47c2-b927-c7a23bdc4c1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e92da7-f4e9-4150-a2e8-53e2f13cdf6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "89344419-e5ae-45b6-8a1e-b3f07ddbb56f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d85dc1df-3187-49da-8a20-594f6c0189fa",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccdc1ac3-12cf-459d-8978-75b7ad9ab6ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfc23888-d001-4431-8028-c10058d35f21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d6b8ac3-8c86-4ec7-9255-b77fd25f3fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c802e14-ab28-49ec-a925-ca8fd6fd3ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fbcea24-06e4-42c0-a60c-aa6d6981a292",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4bde81-4daa-42a8-8c44-645062235c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "777f896f-f00e-410b-861d-9c75ec398adb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2700e87b-ae30-4deb-86bf-a9fda57001eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "22e7d97c-5d8f-4a70-a658-7a0ccb8efc3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "818d22f6-ec32-4a25-9d82-c81b566318c1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a3ce517-27f5-4f5f-9440-016c1fcf9657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98895306-5592-4522-b722-3017449a0108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf36020-710d-42d6-a6dc-1a943619c85f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9892faa-c829-4b85-b2cd-636f1448c8f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c68b72ba-5f44-4aed-a6d8-117715bac2db",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1068364-ec5a-4f0f-8d21-1c8e03347b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69f2c5db-ac85-4217-8c9f-e1b64f570bf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1112a2ca-7ec8-4b13-8514-86e0aea5e14c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "02c1cee0-e289-466f-9b39-cbb62ee74f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d3a5e9-cea4-40fe-b8d4-9f53846b0932",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e399ed-1f93-47e6-abc4-f00860facbc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74f2fad6-d39e-4d77-adf9-d985a580264e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ec0bd2-4ced-46d6-a06d-e8f9c1708f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9cf72088-257b-4136-bd5a-28298054c8b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "545dc434-2aac-4e78-92f3-b2ab4351fbf0",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e8365c8-6aee-4219-991e-47cb9ce3711b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60907dd6-9d74-4ea8-9479-65bd1e935f85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12379138-9f29-49fa-90af-fb394eea835f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "2653471f-9057-4077-b518-a8dda1e40994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6096a6ca-3498-4892-856e-e2f0ec7ed733",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5fcf7c-09ed-461e-b872-64182a1a69cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32a2b8b3-786e-42e9-90a9-3110511ea090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae503e1-0b1e-42da-b0c3-dc8e9c4b224b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "74016fa1-0ee9-4ee8-8f2e-729b448ef347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c6d5a3-c20f-4b69-9c52-8231474be0a6",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16eedfc7-9ef3-41ce-a454-8c6650867e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05532213-c1b0-47ab-83da-e7f3196bd1a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92017dab-74e5-4eef-b025-fcee001226f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f456ede5-e649-4b8a-a935-05e1876144f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e99cd14d-369d-4a77-9d50-183f6d6e9b37",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67509778-de69-436b-b336-e66f7046214a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d27a48f5-f1f1-4eaa-9447-b4d76fd25efc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0181098-6fab-46fb-b94f-d2620b948cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9847ad3e-1a39-48e7-866e-24402c31a156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1471f08-f71a-4419-88b4-3b4e60117fd1",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "025f5bef-e900-47b3-a802-dd62b45fa187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7671184-2af0-45a2-93cd-b2ad40776b0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51148dd2-f418-4cbf-ba3b-9cdcf0d291ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d79ed3f1-0320-471e-81a4-dad1b97b512e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "514283aa-a6ce-4cd6-9717-f67e32aa9c8d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9b7edda-3e36-4480-bb7a-c494349313ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d4f9c81-b4f5-44ff-ac1f-5701597b02ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc4deeff-d894-463e-a2ae-f9c215fce42c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5bb3805d-3315-4cdb-81a5-04ca70195388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f428c913-4527-4dfd-a793-35f9236d682a",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07828775-45dd-4340-a9ff-e1e8e86389c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93e09b3b-71f8-4219-bac5-7970a69a2e8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f534cf-0f44-4c88-9683-a5041e2e5e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "dff2eb11-6006-42b4-8406-720e78fd395b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ac2df2-c116-4a9b-923f-823ba5fe23c4",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5e6846-73b2-469b-8771-c0d4fb0ea38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "927da47e-1240-4bbb-a24f-1bee269d9cf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf92b3f-a8d6-4e69-a0d5-3f6cb551be3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "252ba228-acd0-4d67-8ffa-40e07b4e6fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9243b9-c63e-45c2-8d90-5a0045bfef3c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba44abf-72f6-4f5b-b5f1-a1505b868fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "342bbb21-8ad1-4f2b-a906-090afd90afdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5c4b4fd-5cb2-4183-9c91-e81804792d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "654bb827-c895-4856-b90f-b8b4bc9aaf98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c3b89b-d346-4d7e-9bf5-21bbd2509954",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2b7988-1b34-44ae-b5b9-4f3023c51c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f812ce71-df0c-4cd9-9407-458c086c233c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d00d9a85-1831-4a58-b3ee-462f7f9e0650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "70f05e95-0462-4034-bfaf-84464b78a8bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c20cec6-f634-4119-a2a3-29a3147e21aa",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fcab8d7-3ed5-46dc-8389-be993756755e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abe62736-dedc-4020-9a83-894b32fd9b06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05bcaeea-4b4e-4328-b8af-4589d3b4d5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5eaa2577-ef75-42ff-8a39-3268e56188f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c9bfc7d-2b08-45fc-8162-a76974f96132",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "235e3d24-879e-4638-9a43-a6c935c2fe8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fbb3c20-949d-4e09-b42f-b5796aa047bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b7361e-3c76-4da1-81b2-c0b16d94b4d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d2eaf62-9d42-44bd-ac10-c3b552c79ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a34fc04-c9c2-4fe1-b83b-79aae80766e8",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25769761-8dca-4f23-9117-90a49cace564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5df57662-c2d0-432f-8615-1b67b26692b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a8eb2c4-91e6-46e0-aea0-1fc8440367b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1067362c-fc29-4d24-98df-10569c9dc4ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cae087b-5097-43be-aec1-c060b4bd9ce1",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e6bd7e7-820f-4b12-b5be-47db9cd3d117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04da172a-0fd5-4a98-8a91-05380355431e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54bfe1e4-8e03-47e9-a46c-ea971e039c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2700caf7-f3b4-4c43-8505-3cadab02e5c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee486e08-2f0a-4466-8010-2bb92c0330a0",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0696fe8f-b398-42ea-a28e-fe1937abe969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8ed2daa-22d1-43ab-ad9d-228370f7c70d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c09ebe-f983-41d1-bb46-d9e146572b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a412dc51-634b-482a-8ee7-37aa31145b4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d315c58f-9f7f-4cb6-a037-1144cb5a043b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f969387e-f645-46bb-bd48-bd75faeb2093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ab7ea49-01eb-464e-862d-b792ad023f9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "543582b7-9658-4018-8b1a-56a429d031fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "440936b9-8491-4ac4-b770-065cebfb532c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a288b0-1c48-4bca-8ba8-54df0f0f58fc",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea554a6-5df6-496c-be23-9b29256d49fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9043388c-f9b7-4472-8231-a513d8c8e429"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f30b3d-ff16-4f96-81b1-54e442183922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f81317b9-2d0c-4568-919a-ac4f003be910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bfaa94a-c4ad-4666-aa04-d63b137d9a76",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d0c23fc-657c-4fd7-9c0e-8a107aa9c841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89892bb2-4fb7-4925-88ad-a4163e7b7086"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "474e673c-8cf1-45dc-b987-24a84bb21492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb2ec05d-950a-417c-b3ea-23465e74a868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f22b388-88f5-4ecc-90e2-944cabe65ef0",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "183fd5b4-005a-473d-9eca-eb92824eb15a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d45f0e64-ac46-4bb2-acb7-48dedf8f1e2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2877073-ef2b-4cc0-8443-27d8f79b40ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b138f077-58d9-42ad-85d0-43a676df8a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b3eceb-f8d9-4d4d-bd28-10a7888a71e7",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "222a8519-b953-433c-b84e-e7cca74b0910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "152589b1-20fd-4661-bcfa-bc1c17507d3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50290624-a3fc-4728-9014-1f2850b54d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6866d6bd-fca8-4469-802e-ca79c87ead37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a84c3565-4677-4944-bb6f-3662ed8f4907",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f45dc03-2cce-4ecd-82b8-17024cd4e857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e9dbd74-fe39-400c-94c7-62585e5598ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e9bf1f1-efc8-42d9-9af0-a84531c9acc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3556acff-8eb5-46d1-885a-50e7c76033d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d6c67fb-ac08-4bc2-b2b4-a405d18c3843",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c5d134-f576-4967-8bd1-a4fb1260b444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bcf3b72-bcc2-4d96-aba7-5cd237b0d6c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79179085-09e9-4e58-ae0f-868bf88f4a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c538ad33-eac2-4e11-9fbf-8b553e4633a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f90ab325-0c69-4731-b09c-5f80a5189103",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4028c38e-45e0-4889-bad1-8b5e46e937c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "429bfbbe-36de-441c-b7ce-fc35952e5888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c87a6fb5-fb09-4e01-bdda-6a05e751fafb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6775956c-936f-4b8f-8415-ce6f314044bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba724a19-e04c-42dc-bf20-c04b5cd59b7b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f28c771-c2ff-4cd1-b483-7107e023524d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de53fb20-8964-4aa9-9168-653becc4c076"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e3fbcd-70d6-4562-9b76-880aab0aab5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9d718791-3b64-430a-a17e-8e91eff8c365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b86fa869-55e1-4f2d-86a4-7d8829961b3d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c57e49c5-b52c-4725-aa3a-9dbde27cb8eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10ed2060-5e0b-40cd-924a-b6fbd56f6b28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c91613ad-d64b-4c73-8524-6013ff49fdac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b79bb65-733c-4c14-a524-4f53040db2b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d490d47a-f315-4ee8-96ed-2101fc533387",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c110d496-a0b5-44da-ae5a-8e7cdd9a88d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0369966b-41c2-410f-9927-4775af84ab26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a17eb8-1523-4558-9aca-2d3fb56a468d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6207b8d9-ddc2-496b-ba18-972c22d7b843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dba511b-edcf-4c51-88b4-5ea72da400c4",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "512648e4-177a-4c69-9e67-81b161da1278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bc6bb68-2530-454a-91d3-dd04df5421a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f100d7-fe38-4650-8a6e-625a4a746b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "28e045b3-63a8-4bfb-9e45-d20b2e8979b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3037a5a8-f8e3-43ed-8b5e-f896da802de2",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a0efb3d-2e0d-47ad-991c-0223ff3bdd10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c430364-8a60-4762-bc6c-96299083edee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e16cce0-cbc3-4a8b-85b6-19546f26fcc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4991426d-fc2b-4b7a-a014-5e047c60a51d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3838aca8-d1c7-4e57-8140-555cce499be9",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a851f4-1ccd-425a-8b28-6ed3ea8ba7e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdc1cf81-35df-47ae-85aa-f55c361ff6a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d1c516-a647-47c2-8443-e3ade1f9ca1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "74e1ccde-2540-49c7-a227-6d8dc8dabc73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cb80860-1269-4ff7-9dee-34749c30402f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef23f05e-384c-4244-b3bc-e1eb43e0ed25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13407f56-a637-4d58-aade-33c58dabc492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d517cac2-bf45-4c61-a91d-10be8f0dcb01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6535db9-fc15-461d-92da-8e0966fe6ddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d48c214-b828-4acc-ada0-480ed0b5193f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ce6cce-87fc-44bc-a6df-db091f4ab26c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ada7ba75-2d50-4f68-81f5-eaa0bb178b99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a48c0cb8-d40b-4cbb-96df-5e9739bfb0d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0d8f078-4a20-4333-8dda-8dd49bffa0ac"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d9c0c30c-fe33-41b5-903f-370b832fa0d9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e0d23056-21cf-4a30-9a8b-eb935a0fd231",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3beedbe-5f06-40fa-aa04-283435f2d276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36fc7356-b861-469e-8e0b-976e34e86c5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07bac6ef-2ca6-4931-941c-71f5bfe63152",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "282b7a27-d8cf-4eaa-aa03-1c93daa8beb2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a31d2fc9-5777-4ef3-b350-69f70296cd0c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e017a573-34ad-4783-86e9-24ebac01fc0a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "36f42f9a-139b-4e74-b4b6-8f0919831d34",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f8bc2121-c326-4bd7-82ce-298a9bff066c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "219a051d-ab48-425e-9bed-da320b442481",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "409bf05a-fec1-461b-a32b-c0de71ee3a7a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2c4bb846-7274-4cac-86e2-637bc29a232c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e0d509ef-58a8-41c9-8deb-3c1c59b35458"
                }
              }
            ]
          },
          {
            "id": "a59d0120-920b-403c-9d5c-32951b7a6765",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5594c1ad-7380-4a0a-8505-327efb42c8ce",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "403de100-9583-4c9e-8e22-2f50e53ed765",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8822e0cf-c67c-46f1-bc19-58e4f8aeb8e1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "46d7c8d4-1a3a-48ab-a147-990342b7f6d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d0b57980-b5e2-42c9-8f51-34a2ec32ff30"
                    }
                  }
                ]
              },
              {
                "id": "b9ebd5d2-6efd-4eb0-8456-947afe81fc30",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8094165-1c96-4ff7-abd3-83e32f7e44db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "532e5a5e-6703-4292-a6ed-da0b50a97b39"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd953e89-ff5b-4bd8-86c4-5276fb262adf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "83ccaddd-213a-4240-a17a-aad5aa96340f"
                    }
                  }
                ]
              },
              {
                "id": "029449c4-1655-44a6-81bc-2e53098ad238",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8625702b-1363-475c-8b40-c4f609cf5283",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a1fe6289-d707-430e-81cc-f85b38be1726"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d64dc943-f1c8-4ddd-a17a-3005c37b49a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9587324a-7168-439e-8bc1-43d0851f2ba0"
                    }
                  }
                ]
              },
              {
                "id": "7ee7cd9b-0afd-4ad7-b61b-3c7859146c54",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "12be6cca-4b1e-485b-a3ab-901d814eda1a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "58d8a69c-6456-4c19-8925-c2c401b26c5c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2cd396bf-a822-4e5e-9795-1ac7e84085d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b8276128-d17a-4e6a-a4cf-d44775455c6c"
                    }
                  }
                ]
              },
              {
                "id": "5c5024e7-a3b5-44d3-8f52-6a8f53080fc4",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e890b8f7-f5b3-4c8d-b247-514c073a5cf8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dabfff9f-58cf-4196-9443-43f40a79c12f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cade9c3c-2d7f-43c8-b814-321e950d777e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4b988b45-96bb-43d3-86aa-35c5830db448"
                    }
                  }
                ]
              },
              {
                "id": "162b9995-e382-4e78-a219-7b7513eda13f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0bcd742a-d60b-4a1c-9a22-7c58919dbd8d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e41c631c-3146-4cba-84d2-396b61020b45"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ad0d821-0d86-4d48-a33c-634ebdc22949",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2a75af2b-ed25-4869-9951-bed7b5474dbd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "37e778ed-210c-4a2b-912b-e7b37f02a16d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "988543c4-e36f-4c59-a20c-c6fb076016e4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7be223fd-f316-4eb2-bf78-9c7e85dc958c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0fc4c0b6-9415-4f11-905c-94ef1bee26b0"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8cbebf00-9230-4e8b-a762-567ffd7580be",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1dc86c2f-9a9c-41f2-b418-0377e0af96b9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9e8f3887-0d4a-46df-9201-cc2c296d3e12",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2c16708f-143d-4b9a-9305-683bfac16fc5"
            }
          }
        ]
      },
      {
        "id": "5610614b-78d8-4dab-bf69-b039665e907a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "11128727-bbe8-42c3-ac85-1d9a5f436de5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0fb99ea4-0303-4106-943b-bd82dba1d2f6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ba329412-50ef-4097-94fe-3a8aab2806d0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a4de27-f5e8-4a4f-9b4f-58ba51514f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f0774d8-c843-43a4-b5c2-afecc4c9b413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c823d0-765c-46d5-b268-8f071027fd88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b7a4a6d-eb4a-401b-989d-b2e55337173b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4b7acd-949b-4574-86a0-1a88813f9bd8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e85171-5c35-4749-8080-f350b70ad02a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5913f75b-da28-4c22-9dde-2822fb42a2a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5160eb16-ceb8-495d-a603-288c33338038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "559d1110-8f4c-474e-b4cd-d04aa0555306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18010826-c0aa-4564-b94a-4c9d95d1c687",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3519d26e-df8b-405c-b4cb-6787ca6de156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96b17fcb-a53d-4654-9ee2-940f08c9f852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b435857-8503-448f-8eea-d5e5d4bfebc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "03374bfa-5237-4ee5-97dd-eeaa2ba8374c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29defff5-7849-45e2-98ff-b727076bbf7b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6c2e1f8-b8cc-4c51-90fa-cd2a11c4fcbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea7775ad-d85b-4a5d-bc45-0299937c7c20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "601c328b-0385-4d0e-bfd4-e6bf82653688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "485e577b-f5ed-481c-a25e-447c8c6a748b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d881c8a-1fd2-404e-9475-7adbfeef4dbc",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "579d839f-a2e7-4136-af59-7c9d482471a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f5fac1a-caff-4785-bfc5-032a77c20f75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2744359-045d-432b-9c15-edae4f3be2a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b420909d-ed91-40fa-869f-4175870c2207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b62a3df-f17f-4794-a8a3-b8b35b1b0787",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de028190-59bf-43a6-b584-39539c166cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2142a62-b43a-449e-aef6-43727fcb178f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07190f9f-ec66-48cf-854c-155439b30eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7200d41c-fa24-49f4-9e07-2c058d8be976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89bf2f36-1b55-47ed-a6f5-f84ac0de8677",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9596805f-a06e-483d-8803-0574e27d12dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6ab661f-7835-432c-87b5-b26409938ee3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d0c523-64f8-4cff-bd24-2bc977039f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "37e35383-a219-4989-9527-e71ca1c7d7c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "976b868e-b2ff-41cd-a571-04ee14fbe84e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05def9cc-38a9-4f2a-8eba-f37a38246513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7b17650-e2a2-436c-addc-984bb94a0ff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1c7f405-b50a-4bc3-8004-24917b75961f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "78494e8a-c192-461a-be60-ba5f4d3a37ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc12f18-8e14-42cc-b735-0d81bffb2f6b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6466bef6-0c88-48a4-8612-8c7f38006cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5d119a2-1ead-4a55-bb9a-69c0c23c20eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a273a128-d714-4771-81d0-faa5de1fe104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bbd759d-4994-4eb3-8e9a-62d2e85abe62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6b7d08-7b33-42f5-a955-c3f3bb3c27b4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "820c12db-08e1-4338-b909-7b4b626c33c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e11968f3-601e-4087-b79f-c009672afd91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d22fa9-5e88-4064-a557-25ba36712b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9ebd1c2-a878-4cbc-b1bc-c8bb7df10951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56338cdc-5421-406d-babe-7686eecb525f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8507653a-a8b6-4670-8be5-182314aa4c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f8f3dc6-f80c-476c-872e-99a98f620e37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "589ea319-797d-469b-b8af-404ddd7fad43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e6ec69e0-3dab-4a06-9c4f-44fd07a79ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "913cb7c6-4f8c-4d68-a7bd-682d44b12194",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f833d9-dc58-4905-8189-797012d31de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c7afcca-7c25-44be-9dc5-655a2c36aabf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acea3be5-16b1-4c50-bb5e-f0c87940088c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b701844f-c503-41fd-b95d-ac0c5503bc39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "640f166d-bf0a-4ab8-9247-8fd6129f2121",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc72f37-4d3d-46ff-8818-c5ef92129850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d532f4a-d4e0-4a54-86a0-f3110ccdebaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c16d20-283c-4e2e-8672-17dcd01103ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "044c6a9a-8565-44ad-8221-7d9be446c0cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9543c606-59d7-4b3a-9d83-4258d93214e7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d82073a-8bef-4db4-820f-674ad9413324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "091e5391-a8c3-4c5d-a1e3-c928e1dffe06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8057db83-66f8-493a-82d3-89792e980049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "50f47053-7740-48d4-a28b-9e6b44c9f24f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c23c6d20-a9f7-4e33-ba37-162962a5f442",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dccf4bf3-f9ac-4774-aa2d-4c0a8ba82697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77581b3b-678d-4cf3-8600-5f1aac7b94c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ef5411-c393-4f13-833a-8645980d9eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7f561e2-de61-4f40-ad14-03b22b26d3f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2066fdf7-4e2b-42ff-b93e-74302c6570d6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16fc0911-22e6-4c50-83f0-1c947ad8d04b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efba19c7-4a51-4edb-abfa-c9f40fad59ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3baac5d8-d55b-467d-8ba4-908a5f838453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9cdf7ad-d888-4a37-b4b4-ffd5dedcfeb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb7623f5-a414-4ada-bcf2-ffb4e77895f7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc9557d1-ec2d-4083-a755-c95666a53f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d427c6f5-b1c3-42a0-99dd-e7ce21acc010"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c2d48a-495e-4370-a0b2-29b9d008fda3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "903e4c70-3465-486e-8878-36815d018e39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b9f5e60-f4cc-4835-aca5-d64554e572c2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "681d029e-7f7e-4f20-ac88-32c28f9f0187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fff84264-0ddb-4a19-9996-5462dada9286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f67bfa-411d-4e3f-9854-2fd60c45290b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "94c85ef0-bea9-424d-9f8d-000870d1f480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e9dc9c-9bf7-4582-829e-80d63977bfd4",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55f465e-1f95-46da-8f45-ffab108cee59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23370240-7f49-4ed0-afa9-55940205fbd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a83280-d8a6-47f1-ba81-3399a3370665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9c731e2-6ac1-40fe-92eb-8e317c9ab8be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92dc988b-d180-42ed-9192-3f27cd7cbb3d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aecbef2-8682-4a26-b4f2-986388f34483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "affccf23-7173-4f7a-a87a-2326b56730ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f4be4a7-efa4-4b63-97fd-c3ffaad8f428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fac7a9e9-6f8f-437f-adb5-b987574926c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ac8404-1235-4bd2-958f-12c313f30270",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "462a0152-da05-4077-bfd3-7695162905d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79f09c45-6c19-489c-95a2-8004ae466a18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba285d89-98de-4bbb-9822-64767d965998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "057ee46c-7930-4112-9f0f-16488725d850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69eaa8ca-4e3e-4ad7-aa7c-886c588b6383",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de4c600-ae42-4445-9bf8-24257e181542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d0c434d-6bdd-4f96-bea6-78e323dc0904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5648d259-ae16-45d2-8fb0-c6f4c1be0bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3041e85b-53a8-4c03-ba2f-710efc2ab3a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df18d988-5312-4222-882f-c02e6e7ae5f9",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c54409-f38e-40b4-abc8-948daaa6ba96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e0578f3-1cb7-46c2-a39a-0e1546bada34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b973b391-a751-4d06-86fd-f95d1aa06bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db6955b8-a470-49ee-8e27-cc3deee67777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c23dff6-5b41-4386-9d36-7e533d13adb1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6354f651-5296-4cc0-9002-c6b4bc03a0d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38a3ad3d-f022-4950-9951-354423764e7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718dc116-eb14-4610-b3f3-f03596814ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c7b1588-5a6e-4a2d-b01b-1e42c5d2820f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9edd7653-e699-4fca-be08-22b9daea3293",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9a16d2-2571-45fa-a250-f65ea3b36c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ab48140-501c-45ab-a543-d57767d13902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3cfb9cc-5c5d-495d-aae1-2a1c354df232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d133a756-36e7-4cf9-aff8-a66238d173fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "325955e4-abee-4ded-9419-3863c7f354c4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e85f0b95-6e13-4051-9c38-9d7c593846e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfffc76e-f7d4-4e1f-84f7-92ee9d0d00d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d50aa2e-be15-419a-a683-ac36cc633694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee25dfee-48e5-42df-88e9-475f43e3abed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775127d9-e189-4d72-b375-871db9d000c6",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b189d343-ba16-428a-8a76-59e9e8f5320d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ed04467-3ac6-4fe7-beb4-3b7a07d0de80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086775eb-67ab-4c6a-a224-9bce20ef7ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb59e545-e400-40fb-9331-d5d6be74e8b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "495aefcc-e92c-4e01-9263-028f411ddad0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a60ae52-b38b-4722-8d0d-549e95386211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a344f51-1769-434d-853e-ead663627158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a44582-c4d6-4e94-9b2e-558de66a8a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c721af0f-b4ca-4446-bfc7-91e464fc752c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc958af-c6a2-474f-85cb-629224ffda6d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6591d7c-927c-42ff-808a-b6eca8dabffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "037dc14b-4fa7-4562-9374-f31dc182cb29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe0f237d-8cc8-4f38-87b4-3519fa91f114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0628987a-d1b9-46ab-a2cc-a59494e43477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8260f79f-d476-4bde-b0ae-968dba996f59",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4531ebb-c22b-4252-985b-eb2275b940a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ca7886a-2fbb-4049-8eec-d5f99530a3f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f564a9a-43dd-4023-8a4e-f0e44dd7f31a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fd98b67-fffa-4884-9b30-46f7cf2717ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bdfa4e3-423e-4921-814b-811d295d479c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a45539-a26c-41f5-9d91-c9dee5cac965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc7cf550-7a31-480c-8553-6bfa7695fd57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b56f54f-e75c-42c5-9548-35e18161201b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3ba19da-8a53-487a-ac36-5400a82e6b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef6ac64-bb4f-4334-9d36-db1496ab866f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac293d0-3537-48b7-8a67-5f67caacf53b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ea5579e-1701-4ea2-b184-f9b8e4c4d64e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "485c1256-4ea3-443d-86ce-503644c75c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d5f4fe9-68d9-4444-b000-6e56b37a3aa8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8fff13e5-2e99-417e-87ec-09bc83ed7818",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f7d8e605-9029-485b-af76-5c9c3e1a8a58",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "285ee65e-a4c8-46dd-92cf-52355b5623a5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f4235a44-0039-401c-b04b-1c76070deb9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "993dadf0-89b7-4b97-bd7f-fa4a078eee60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e7ff7995-4e6e-47e7-83ea-28e16cc4a316"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "61fcde16-25d9-44fa-844b-29482cb588f0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c884f434-4132-45c4-a0b7-38f4d6e91be0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "14ee927a-b196-4380-b539-c2b7688a20ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e3e884f-a592-48a2-9f84-6e5d4214475a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "58ffb782-62b1-4c2f-8ab8-c9f6412ed41f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cc4847fc-f170-4fe7-b702-26216fe9e16f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "45431ba9-0928-4ea6-9935-e6cf63f35684",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c4606b32-92cd-4452-910a-bc719bc50bc9"
            }
          }
        ]
      },
      {
        "id": "f6eb6ffa-5e1c-44b5-afc8-f2a89b55e383",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "047c54dc-75f4-459f-bd5d-97799d289f58",
            "name": "Negative Testing",
            "item": [
              {
                "id": "720b97bc-edb5-4a06-933e-456bad9295fe",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "542e736b-82f8-42a7-9e43-fcac5cfe437d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1111db94-44fd-40e5-85db-60a06ac0947c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c70f5420-df01-47b5-8427-49fa394e682f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da82382-d98b-48d5-b84c-194a82aa2f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "25ac6ed5-5762-4b25-8465-9b0b923695f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c032376-986b-4025-9dea-8955308d03ae",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ece83f-4f9d-433b-8e14-0ec51c3fd670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c5dc373-fca2-48e8-95bd-9acf2cc924e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3846b61-194b-4679-af4f-42cfb64f2ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "703ddb97-5885-421e-9e76-4fb48ae41406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb9cd3b0-12a3-48b2-b175-6171e92053be",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b0aadd2-0e45-466d-9a3e-c3a25f07f059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3828909f-a1ae-416f-b401-8945d47f1b05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f652162-502b-4643-a969-5d15553f092f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "907bdd22-ace5-46b8-baef-0818776d30ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b670e4-141f-4553-b1b0-311ea2ba9b41",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b58510-dea5-4c12-99e0-86f4250b23d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "277f73ad-d8a9-4b9f-a4d9-6b57caaf27e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3f0f63-7e76-4a5a-9673-8888a848e87b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e3ee406-5719-4641-a2ea-67cea66f93f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "121cc285-9a70-4edf-9609-4cf58ab83507",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f2ce969-0229-4939-a650-830427df03cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fda2dec8-0f27-4769-ae25-92a558f4b291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b161f4-620e-4b86-95a0-f5e3ccc66d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e499126-88cd-4852-b52d-4439f9b33f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c14ed1-676f-4056-94d6-506f12ac7e02",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b4c0df-6f8f-4656-ae61-2faf0085117c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13cd69a3-31b0-4dab-9107-61f8854cf594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "babc1fe4-d2b7-40c8-afb8-f0b6289b0bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4cf0039c-373e-4137-b223-b4785c2818af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df3f06a-7221-4627-8ddf-b6770a25a42a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec9bc0a-13c2-4b28-8237-7876300534b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ec6c0a2-b788-48ae-8894-e557ea6479fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5010c225-d7aa-4429-99ef-132349f5e5ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f1f8765-214a-4bb2-aa48-171b42bacd8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0de53a-1e2d-4e22-85fe-266e7f6139af",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d2a085-fb0a-4401-9379-ae780db8066a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdf1fa5b-1ab8-4d50-8b0c-05c3261f7458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e6869a5-5ce7-45f9-90d7-c18821caae3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "39b3cae4-5704-406b-89e2-65455bdb197e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80cf5be4-bf4b-408c-8705-29174078f1bd",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a9fb0c4-34ab-4341-a72b-dcaa9f8d58db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19514dbb-faea-4c04-8322-9fc9bc88643c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f870cea7-bea0-4db0-badf-e14718b3244f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce9aeb96-3b81-454b-814d-ad2000f87cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3442c3d6-b877-4bad-a8fd-8eab54b86ecd",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f4d920a-2af7-473e-a22a-166253283cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86a168ed-8e1e-423b-84c7-6dc5daff7def"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab064c8e-6ea6-443c-8576-f25a9f4021aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2440c982-3130-47eb-b9f0-b06959911366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2ec3f87-6da9-469b-9d83-ee05682e84fe",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc7eee4-da5e-4fec-a295-f7c72ba69bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50e33ad3-d474-414a-802a-091880e79ac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "283ecb70-cc63-47a4-b350-048d03b1eb7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e23a83e3-a2f1-4bd3-ba51-5df55a4b2bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d89b6c6-c250-4f46-b766-3f37eda9581a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "badd0857-e4fd-4879-b3bc-7c357e927c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bb7d508-04f7-4619-a378-0f1060afe2ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85eda284-b768-421d-ae5e-16759b700926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eae0b8e1-e8ff-4d2d-b953-b1f3b74ae2b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a27b90f-8da1-46c2-af78-a5bb7f3c3ba2",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b74c7633-6caf-4e74-9ed7-0e99089ab23d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebe7d7a0-11b3-4355-ac04-3670acc34e92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa7ffea6-364a-4d77-bdd8-7d9dccd6a133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "86b6e4be-2c10-4c8c-a078-de5e561a0602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "912881dc-76fe-4bd9-ac1e-b51c235739a6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73516661-fdc8-4f96-9575-baad876ff274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95aa3fe2-6eeb-4019-bd31-1e6a835228b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdcf5e57-5222-4bb2-9622-bd30b43613f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cf27e4e-7b2b-43bc-92b9-098be50fa1f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5f8a4b-c697-41ab-a5de-7a4cb99985f6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56c6851-080c-420b-a2cd-80c1503bdb95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26841565-5b2d-4069-9f23-a80b8f871a0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f58782-aa2e-4ca1-9d4d-8d023a4999cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "96322f86-26bb-4c43-bd41-385c48dc18d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "457a9442-4d54-4f06-a687-942128b9a0f1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef1655a1-4df7-4c82-976b-fd3c0d10523c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b00edf5c-5074-4e80-b9a2-b3dc2291c9be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7065eb4e-7f9a-4461-973a-9f2fae06bceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7bf8080-038d-4476-99a8-bac4e64a0d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5aea086-1dad-4f69-9125-8f51b7d9ae81",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52199823-4b68-4f7d-adf0-2901c7186f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f137dea2-6f26-456f-85ba-198a38dc1f2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e887af8e-dd1d-421a-a790-19f70e9d613a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "481c25be-5074-45dc-a29c-dd391c4eef54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df068257-a235-436d-b9d2-d9558a2ba1e7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "118399bd-91ad-4ab4-afd5-b5844c364c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d99664db-5737-4db2-98ec-82194e7d8dd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22fabf67-b2c3-4b02-ac27-473aa3cee060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "52aae83b-e77a-41c6-a8c0-bc7d72f8b560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7956369-6ff5-417d-8c2b-1f8912439528",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b0b64a5-ea3c-461b-910c-6b9ad67ba596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3b5721f-a405-4ef0-973a-3ab35282fd82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ab0070-f4bf-435a-be5a-7e3d43308407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c61304c1-9d27-48e1-af2f-a07cd59ba84c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1972e66-acba-474a-a4a3-4648a76d41d4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc014c8d-c2ef-4757-b151-e3249cab5983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94642af9-bbcf-492e-8249-9d5312203e88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e596e13-9d33-4512-b200-a932abb3985b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a4574b3-ee5a-43c6-84f2-dd6e247d050c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc1ce76-3505-4978-b4b4-eee08ae49510",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed6342d-fc5c-4548-a7b4-6370d1611605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7802a41-eaff-4650-bbf7-86d964ec4f5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e092e43a-123c-4c0e-9c1f-916f4e28a230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a8f2771-9129-43f5-b5ee-93b06efaf860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5937a8cc-88f7-42cb-948d-5100771bcfe2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0637ef8b-6a00-4274-8832-c1ac1382d7f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f4696e3-bc85-4664-af6a-08a506f026ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd62ab5f-7098-4092-9cc5-3b67c1d7638b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26b191c0-efb7-4d3f-bf9c-d8d67d8f627c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e25a74-5f08-4f13-9b83-3d64d6265807",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "074faaab-257e-4e22-8f45-3f33b120df22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51a2633f-cade-42dc-be71-642b5410fdbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79934a34-14a3-4afb-befb-ffada428199b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48ae756a-c19a-43f2-b188-c26ab8a58526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a270ec-b734-4c0e-83d5-281bd4639200",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e38efd8-7c4f-4d1b-94b1-23586f2c7fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55d5594d-2e3c-43d8-a9b1-5d693d573532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd8fd6f3-84e3-4d79-a669-3013e7f797fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0de2bb8b-f9b8-4616-9c1b-1b7704fae200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e5ed40-9bb3-42a2-8a97-e2bb6f148876",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09125424-68fb-4fa3-98ae-3bcc4ec1a4d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bb0a739-1221-4c84-89b0-32b0324b1d0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e4a068-077b-4bcc-b2fc-6e5e48704d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38024003-a98a-4bcd-918c-bd97c90f7c00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7d1dbf-d11b-479e-9955-f550ad27d131",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6b2578-2e36-4241-89d9-10ac3fd3cb96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "659f752a-0ee7-4c25-9b6b-2e73a566ad9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8bf7383-1202-41a0-ba19-1317f2d9326f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8a72cd2-481d-4589-9139-8b6a7849da6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11851466-96b9-4e13-8cc4-63277c798ee5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a628ab32-58d3-49d1-a506-958760f9404f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6afbccff-240d-491d-bc9f-5c34f55ac0a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "544d2cfa-9694-4860-af34-4c3031a9baba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f355952-aa9b-4ed2-84bd-a5d5ebce3c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c385af-c102-4b15-8f6c-ffaaebd25af9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02269755-d6d7-41f7-89aa-a4fb90e84e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37bfef3f-8ea3-4d3f-8d8a-447000564114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac899aaa-0271-4419-80f8-cc40f86d61f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "366bb48b-a8e1-4461-940e-777dbf3fb52c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38730b5a-4a9b-4f18-bc9f-43a6f7d25c37",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2caa7bf2-7d50-4ec0-becb-1d52e065accb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f374822-979a-471c-9f86-92fa61ddacd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4fa1429-a583-4e73-bd83-42ee9e130010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "937ac34e-86d2-436c-861d-366da420caaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ccc4f38-8b8c-400c-8a09-877728f6ebe2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28eafad2-b286-4b89-8613-3abfd553c6ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d91f1107-0577-479d-b90c-bea3a961e1cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cbef6d8-c123-4c46-bdfe-393b1f77ecb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b40c445-01ba-494c-8ade-6700516eaf8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c0b933-c997-44ff-90b2-5a2571d58ca2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8628489-bb2b-4c93-a8a9-46189aa886a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "649bb0a4-76d9-4e4d-ac7c-ddc2dd6ceb57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b94ab09c-2b32-48ad-a5a7-dddf0ae1085c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19b0b548-31ea-441f-8d46-c3d98c9438cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad071a9-0342-4d38-8996-922c827a687c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e8da899-8a8d-4a05-b503-161391787672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aec7dd6c-e7e5-4a28-bde7-a9bac3e13bc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b05d8b-97d6-41fb-a11c-1ec265ad0b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aaaa86ef-7d90-4393-8b90-74e554f16353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a123160-686f-4085-87cf-71bba08141ab",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe78ba2-fe39-4b36-bf50-9cf06cadc0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21792113-4697-43d8-9c1b-6ee89d682731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "136b945c-4b8b-4784-b490-f3ae09f65b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d921d289-954c-4d0d-8a82-ce5b5a482995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81cd81c6-182c-446e-8dc9-c23b5453f35f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c211b354-f27d-4c99-8193-b995b8731220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dd47734-47fd-47ee-a009-12d1ef1df125"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c75c5e-e308-4e2d-8fab-874a8ef73166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62b874ca-60af-4644-8770-3923b6bb3d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1afca86b-4415-4f4e-a648-ce01a2b667b7",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2fa53f-c296-4778-bb0d-b746a01fa719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d1aa11a-14d3-4e93-8955-228fa560bf54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e26c4317-6e52-4b74-a209-b18d5b5925a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7513423-ecd0-40dc-8796-10da88140d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b770e13-723d-4a77-9e9b-46ac4442585c",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f8dd1f-2e69-48f4-b6c7-606d13808845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b37b7be6-224a-4966-8028-8d7a65962276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8999bf6-d9fb-4c12-9ce2-c803de6b69bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "559822f7-b3d4-4c2f-926a-4673228299e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d35a5f6c-5337-43cc-ba46-62a3ea4b0a20",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9762d602-1e0d-4b36-8f56-8ccc23b54040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dc2f620-9481-44c6-bc06-d2a5d8bf171b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90fdd2bc-16a1-4468-82d9-9479fffe18d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6201df6-98da-471c-a0ca-5c085098ebe4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0e9a56d1-da95-4601-8d33-48c9e6d653fb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1417a501-b9de-4b7d-8f7e-d51775051419",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00eb4b3d-7ea4-41d9-8ba4-985f7bfc3453",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4288866b-72ad-45dc-85e6-09572224ab41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc65bb40-d1b0-404d-8274-f6b02eaebe89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8be52747-9ccd-48cc-8163-18e57efe5f76"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26ed60a2-49e1-47a2-b741-6c63821b09c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c3e981df-6d68-4b49-a53a-c90133a80185"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc99035f-87cf-433a-afd6-3d4f2d7018ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "598f5e33-d59c-4ff1-a68c-3e0e4e70eb09"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3abbf0a1-79f8-4b02-ad42-07fcfd0872f5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a0438ccf-9de5-494d-8d8a-e090abbb8cbe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e0b60be7-55c6-45bd-ab56-9bf7cac58c1e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b5ba3d02-659a-4aa1-b1c2-5405d65d7015"
            }
          }
        ]
      },
      {
        "id": "3364b079-e776-4bae-8038-1b5dce550d7c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "19bb63a9-c367-45cf-b73e-7f946a8bb6e3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0b94e045-5137-4c4c-8e76-38e2ffb10212",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "639da33e-3d98-425b-ba03-3a4822e610b4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "594aa763-68b9-40e3-b38d-0cf88bbf39d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51f00137-7a26-48b9-b859-d408d62c97cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de7a1cde-6dc8-4c5c-9dc3-e038f2e13ec9",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4381dd2-8ca6-4c6e-8fb5-5c60eb146857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5611fab-ea5a-436a-9f10-9a5da8403a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb49e30e-3fef-41aa-ace6-248b0e6ad201",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f27b691-2ec8-4c0f-935f-c308eee22d80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce16638b-f332-4b2d-b133-cd0fe3ad0b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ef47398-1dfa-4d64-a00b-9ff29956f6e9",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "577f35d5-c198-4360-8bf9-9a4d34777ad3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43353aab-beb7-4c2c-9b8a-237d15f58410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a25b29b4-d19c-4449-8412-2850a82c9d11",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e94932c-fa4a-424a-b505-2561733bc141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c2ea26a-5236-4409-a391-6d18613178e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e1a287-7131-44d6-8605-3d8f59e5a64a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e6110e5-5816-4b55-ad19-40c00c998b3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3996e100-f666-4fd3-9016-f700b9fb22e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b039d7e-b8a0-4888-ba0f-caedb48c4478",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "046ce413-83e8-4622-b2b4-31a2fa557104",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58ed921e-39f1-4c4c-ba09-f37c6b71bdb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3ded29-5dce-44d2-96e1-ba2ca2209a34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a7493c4-d853-4cef-a77e-763d236f92a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6310472a-d419-4935-9223-90cfb7e80066",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d2fc0cc-b2bd-4673-a198-4a24a50bbefd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac400535-2f58-4e64-a111-37825ba70e74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c042323-d07f-4c30-8d01-12ee7cdf2f1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee17f476-877c-4b8b-9fd5-4afcec02eb17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aecbf3c-f4ab-4813-a714-ae3890034455",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef38041f-ce4a-4988-97ec-9e9c7c3f8e99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e91ba21f-3c66-4274-8d1a-bab594452467"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b8ae07-9f16-4445-85e7-d74efde83882",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11243c21-ece6-4ad6-8bbb-cdd9fd1cec7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5523057d-cb1c-4106-8e21-f7bf8a4f18e8",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0886b0c-3ab1-4ceb-a7e0-e4d37fe331ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0cc4efc-4fa3-4034-bb36-51ea6a73f36c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f805ebb-af08-4f5a-92f4-95a6deb6f50b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ab679ec-dd3c-482d-941d-661467274eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2de19e5-58f1-436f-9ca9-91c000a81e50",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a524a6-f557-4699-b42b-3bf29cbdd8c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab06eeb1-bd92-4e24-8f32-a82a6c8a1b72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31883511-dc18-49da-aa20-91d29d08b7da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1ca5dc2-fa9c-428d-97b6-efd948653aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f1161d-3479-4279-8e46-fe3b64c5bec2",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a37d0774-8206-43ab-8590-0d887dea195f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48680865-5c87-425e-972e-0797f2507c5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7feec7f-f170-497b-984f-56e743ed0201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5de45607-4ddd-46f6-a7b3-f3ca411a95d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e77dd28-7e95-4227-a9c9-9f7c8a66c3c2",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a96f14-4ef7-40e9-8ca3-c352cee2173d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "032555df-3f6c-40b6-b889-3cd83acd0196"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2294e213-cab2-42a1-999c-47404ec47a63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c63b01ee-6d95-4a31-b6d0-e543f82c017e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af02920d-ee7b-44ff-a702-f8be4c0eb245",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "658c2d12-783b-4d64-9b0a-ad3742f18ceb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53842ccb-6150-4871-b8e8-9cc0077c169a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ce7faa-9447-47fa-a1bc-4b5346e93ce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc671ec2-5996-4922-b3be-a4bfdff05209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8297ec86-0a73-4e39-91f1-42e3e45f6110",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79cd5f52-a339-47bb-90ba-95520d273902",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7398995-74d2-4773-a6ec-730d25361050"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32c144e-ec0c-40b6-b552-31476dc1a4d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "253141b8-d022-408f-aa10-550c4185edc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b94d953-8302-45e5-92be-5a724aed8b71",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eea6045b-9626-4168-b329-e7d25c3b37fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22982cc3-159b-4235-9176-d6b575ace1b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "894ea08d-6c80-4e29-8118-f460a41a6751",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcc77cd2-e1d0-4452-ab05-3c7187f4bd51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ecb26bc-167b-4545-897c-17aaae73b1ef",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de6259a5-856c-4b46-8503-a47e21db3206",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef838ac5-959c-4131-961b-e0afb6f2049c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a643ff81-9249-41b5-bb2a-e87b8817ca77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f00f4694-9016-454d-8750-006bb9b23b17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86191d70-11e8-4875-a58e-1d63d5e266a0",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aaf4f04-7777-47e5-824c-95841a2739d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ec1e7ec-f19f-4920-99c0-c03a2a654c09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "108caebc-bed4-47b9-980c-6a219acba092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb23eb88-6a55-427b-a065-c831c3e16225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de03158a-737c-4e08-8024-2e977ba2757b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb68c847-9ead-4c0e-be41-3875a324e08c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49a4963c-b746-40f2-9d88-4ce2aa0413ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2393a23c-0109-4183-9d06-b3e77ab6bb0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ab6d73f-90e3-4678-86c3-1ac3d9d02faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7cd543a-91f1-43aa-af07-e1441d9ba993",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f1a248-dd6d-43b7-a987-5841bd8a55f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c244798c-e8fe-482f-a9c6-e69019108a92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b17f6e1f-be3e-4dde-abe7-507520aab132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92b1cedb-ea2b-4c71-8784-f279d1b21557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a80049bc-4abf-4210-a0f6-779911833e1e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c728d0-c4af-4291-8cfb-d4316c221880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac11808c-0a32-45bb-aba2-2484b0704dc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f67859-983d-4fb9-991e-09ff7e9fa588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd34189d-bcc7-4193-903c-9c6e70a76c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a547d9cf-0d2e-4926-a1d7-2aa86419230d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e565969d-122e-4c57-b906-512e2f8e377d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6ce5495-d04c-4e94-b7e5-e7510fb2733d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eaad25f-5a1c-4fa6-a6fe-1ff98bc381c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bafcbb77-b91b-4bc0-a26d-e314c408b306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6620a41-33e7-4877-992e-a5020d4574e1",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9be0f93-ce6b-410b-bad1-99d8b9851988",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b02f286e-84bf-475b-802e-af80815f5c12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffddfc61-d4c0-46e8-bbe0-63756e157c1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f84a5039-af37-48b8-ac08-414a03947b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f960b5ab-7913-47cd-8588-be2c80d7a60c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "804e27e5-3ba8-47dd-bac1-d57c981aaf69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d787e35-91a0-4cc0-be87-25e179ca3fb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1160773e-68ff-49a1-8c3e-559ba30b767b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e966ab8-5fe9-4f33-a26c-ec70269ef7ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d89053-a2ab-4ab5-acc0-cec4f1d8668f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a50b75-783a-46dd-a671-950968df9203",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dbc3830-5f19-4574-a1cb-6ed2d76b5b2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e8463b7-4cf1-4f71-90f5-88bcfc61e933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17a1f161-3801-4038-b2db-ba37e35b0da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31bf504e-70f8-460d-b503-a1bc27f1fdf8",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f741786f-2ee0-4e28-8798-aba53a6f4681",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10f8acdd-7273-4636-ae67-719f188d444d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c4f84fb-574d-4345-a2ab-eab1414c4d34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bceaf28d-0920-47d7-b48c-de5c9989503d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da101457-736e-44a8-9049-8acf5e4a9071",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "769320db-cfc4-4e49-8df8-90d9126c4ba5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f279587-33ac-42ed-b653-962c3a554e24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3b4de8-327f-4d99-88c8-a2682a00682b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ea335d7-1788-4428-a065-9ae112517216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56cb92bd-e80e-43b7-b37a-f5ae60e7203f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac15fe8-317f-4bfd-8041-5543799fa5ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd4ddc38-ca16-4366-9add-f05b87c586fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d3f0b2-da2a-413f-8c8c-2c46e1fbc62b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f38baf7-fdf5-4e0f-8692-44206b29995f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd6f63a-a94e-44bf-a870-d70b9fbee9ba",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7504ecd-bf72-4e6e-a7f8-6fe45c7655aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78a9ddc1-b376-4b6b-bfd6-61a82627c167"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b93b7b1c-2695-454d-b15d-a07926eaca95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "971d9a97-60d6-4c88-80f2-09855868bdf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c09671cc-f265-41bb-b529-2d15e9c55dff",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f8e9d43-cf3c-4664-9bda-8bf8f81a812e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d267977b-3f55-4848-992c-0309c178eb73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "212b453b-83ae-444c-b125-3017b6945d37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5629430-8d6a-4b5f-be76-8d7d8c77d7d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dadba0a8-22f4-4969-96cf-2b4cc26c868a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b42f358-d9e5-4689-882f-40830590824e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cea35e61-3378-41a7-8f35-e84dff7dacb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2a3720-ea36-4162-9d5c-497ac042a6a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25673d19-679c-4b28-b61c-14b723198a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "726f9fc0-6ee6-49e9-b736-8e32544fb371",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd4f909-62e4-4c07-8c26-313e7df866bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e31e79fd-7ea8-4d28-9ccc-5103ea977952"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1febc65c-e3b6-47d2-a651-267019bdaf78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b367535-9c4f-4933-9c31-446feda946b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd8283d-5ef9-408c-b084-6e2ff86b719f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cbd54c0-4425-4ff7-9e93-10148b44b846",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb477b80-3eea-42c4-a2ea-c8701ac31967"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "626f7c9f-6319-43e9-8cf3-9a4509e41de1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a467e88c-7365-4665-bee7-b9eac8001263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff286247-d18b-4f74-a4a1-c9d41c743f75",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c63795fc-e17f-4480-80f5-c755f82f1e04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "735b72a4-0ff1-4cd3-afad-2a09263050f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f956ea-f39e-4227-aa7a-f0d2e63182f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95408a90-2a44-4e79-a279-a4ca796d0661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "070d6b78-9de9-4418-a571-da0866fe63a4",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a7dfbf5-bbe3-40a5-a55c-49a4201e4aa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d923c0e-65a2-4431-a515-d2ac8cb1e0d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e01f828-c0da-44d6-864b-a056a048d828",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acaf95d9-388f-433f-a8c6-6ef3afce521b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c6abbf6-1872-4118-95de-95ba444f8641",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc924f8-47c7-4fc7-af24-8d83db394540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8722bde3-ac96-45e4-b607-84d622b4a94a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b0a1be-781b-4c60-8950-014abb10c172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbcbf1f5-7a1d-43e4-aad1-c673c54d6f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e50a64-516e-45d0-9c2e-572c4a542a3a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd79e52-9548-4441-b0e6-f904a911c444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a44c845-1f41-4e79-ae94-369e6b55276d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48086a4e-1392-4b49-9069-cde2da5677ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f0e3af2-a1fc-4130-972c-5c6fccc9a8ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d836e8e-aad7-41f4-a56b-21950caefde3",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8076543-5d96-488f-9e4a-f5bcac7765fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d6e651c-8172-418f-baea-97aaeabbe4bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbc4a5fb-4816-4dfd-b29f-047d0583bf6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f9af462-d8b4-46d1-ab79-ea6e6f01ef59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d825cb7-358e-4bd8-ab84-00ac60c74863",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d3125d-cc48-42a6-95b4-c30165b274b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea7fc0f0-22b6-4c82-9737-ded23dd26118"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c00c78ee-258b-448f-824e-f92c8dc3485c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21dff63c-dc8e-4c18-99a6-6d5977616d49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd0cb109-62db-48cb-a47a-052684db311f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb1b9a96-b99a-4910-a3c1-53276c454144",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c2fd0a9-bdf6-475c-9b89-17b250d76316"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "886d8ebc-c97f-40d6-90ff-cf980e0cd8b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b39ffc7e-4e69-4ecc-bc90-1c8d50df8c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bcb0975-6835-4640-ab2e-22ac3d59bee2",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfde6281-d48a-4279-9cd2-65a0da9c2972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e73a09a-1ecc-47b1-bed2-61032d95529d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6189f9b4-e558-48eb-8e0b-6ff85ce674d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50f2437f-3aa7-41b4-956b-57315f2cf800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606a1c10-3241-44cf-8947-b4e0e7d07ab5",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3afd68ed-de40-4e0d-81b1-635b4502d9c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15d4f52e-08f6-41e4-9f20-88fa5d779da2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6443122a-c8a4-4a92-84a3-714c32fa0185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80287fce-f056-4823-a7ac-4fdcec051c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e644429-54b6-4955-b1d3-2d70abdd49b7",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a535602-7e17-4fad-a311-e4620394b7fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab62c4c8-1baa-4d4f-b9f7-a1f1d6bd79d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5372298c-ae6c-4904-8c64-76bb273b0eb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a67aadec-8d28-4415-9a29-56424a778e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "908681e8-3913-481a-a357-5854bb419d7c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d5606d-c1e0-4c2f-9b90-be8dddd3dc6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b75124ec-c00e-4fbe-93ba-a2ef83af921a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d9836c1-6192-40e2-b8c7-41e7bc38936d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d45efbe1-de94-4129-add6-37b3bc139997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a9dc234-c73b-481b-8e8a-ba7b3e5f677d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2cca966-c89a-4ffa-800b-d6ac3deac74d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcd47f63-e5a4-406f-9510-f61a50186d69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "137eb5f0-8687-497b-a2c2-3a533989f910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c24c5607-6923-4e9c-a7d1-c836c2928783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e21d0d80-e9ad-4f35-b4b0-27387b9872b3",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02dd16f5-bc34-419f-838b-cf30e03e6aa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3202f683-b5f4-427e-86a8-47c880e30863"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1286eeb-55bd-4dbe-a504-8295adaadc32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d249394d-78f0-4451-888d-f9e6d774b33d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8949f608-c3e0-4844-8dbc-b4e2dfaba2d0",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed2af2d0-2ccc-4624-8622-52b7355455e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b24025c-b407-4c2d-83f4-e20c109430da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e6d715-9cdf-4a23-9317-ab63a6750c6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eacee53-e8bf-4221-9df8-63d8a0e83852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4429a003-cbb5-433e-ad09-6e4ea7e43096",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf5270c-10ba-473e-9b7d-62c30c3a2a8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a4cc08e-db9f-44b1-92e2-a9c9f8c22afa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a4711d-609c-4592-8850-06720fd5841e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64011fa6-7cda-43a7-b1bc-9827cd8b643f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20e71383-5388-45a2-8e46-843c1b421cd6",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c89f50-bc3f-4505-b4c6-7d9714f8b4c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b64262f7-ceb4-4cd7-8e19-ca0c40a1f21a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e7c890-9871-47f3-b0df-5523c1cdd636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dadb558-55b2-44b9-90aa-0a5b3a1f6187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de988766-cf0a-4bf3-b602-322d771d8e10",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86430e47-99cf-4480-849d-64d918a02780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ba36136-bf1a-465d-b057-6bcc9cbd621d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ce9eb1d-bc8e-4e39-8fcd-abdaa1b11b64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c985b85-de8e-40c4-9e7f-b9ac785dd280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adbf50f0-d0c8-4017-9256-a9e0e9a94029",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e547d8c-6894-41a4-989a-fb18907d42d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8096a37-c7fd-4594-b617-6f8bfd1c8876"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "864f6b20-fe83-4a8f-be60-e485f79f1678",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e39281b7-bdc4-4af3-8e13-6d8c4d900460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41fb3e83-84f8-46f8-9397-47b852e33189",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d85f5f1-1304-4bf6-b979-99464eed5ab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2e3d6bd-0f76-4708-8f0e-4e5d22c017ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14140c05-4393-4144-94e4-16426fff44c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eb4ad59-ef55-4183-a4c9-a7921df31f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1f66be1-51f6-4a5a-adc8-1a098f96783c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda355e3-b651-4995-9f13-0919355d6023",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55b62fae-942c-43f2-8719-81eb0481e69b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7442c3a1-1a9b-41f3-9639-1cf74568df20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9619e0b-505b-49d5-aace-2f61cea6a00a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b0e809-1a81-426a-a390-25cebfe0e626",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8730b3e-dcfb-498e-9d3d-c96d52fa7698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55da2e02-b1ca-4b04-bb65-e2f6e71874e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12fb5a43-6d3f-4728-b585-75e42893a776",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb4ca790-dc3f-46b8-ace9-b79631ca2f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96370f93-381c-4335-b346-32f2d46ec4a5",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8adef81-d613-48a3-ac39-dc4575ac9f65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "868a0478-6e2a-4708-82c2-f1afbdcfd553"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e164b4c0-fed5-4a41-9ecf-f38dcb558e95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bed5e8b7-a9f4-4a97-819b-0b106a427cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab4e779-0f28-496d-a98e-47f1d023500f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355b5616-8070-465f-a30e-f3f584e67f25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88aefb8a-9426-4a97-8869-fd74a52c7043"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "638db612-da05-47e8-ac2d-1dc66afe7a5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bf35c22-96de-4558-98e4-bbb1edb5178b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "684f1bdd-8a8a-4151-8a5b-7d88941ff0be",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db0de7a-890f-48ed-8ca5-3975227c731d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "563bf101-1b58-4ef3-bdcb-9f1a19666adc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc898ec7-7179-4f85-ba28-c8eab8260c6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e003987-7c1c-4a55-8a8c-f3c619eefd63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d2b723-bd0f-4152-b3b5-82a67d51ef50",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54cdec74-e6da-4bfd-b7ac-93a0118772c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42fb99eb-8b00-435a-b462-7f449da1b77a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d57475c-9036-4167-891f-4ee011269620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a12e3095-66e2-433a-a388-aa739aa7f0be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f828bf4-0862-4c56-8f8f-3c1a3ca10be6",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70df967c-4940-4e9c-aac6-5043713bcb3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e180ec2-d1fb-4452-953f-bca99b67e5f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c1d58e-bfea-42fb-b6a3-77c0ee2582df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0177aa06-9b9e-4156-9778-f8c0d5ae6111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "482b099b-0bbd-4fa7-b6aa-95330af91b27",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d20d1160-3876-4902-92c7-cc866be22d81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca7a676b-bab5-40f9-89eb-dfefbe1a470b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "933f4ed7-761f-41b4-8115-328fcd5f7b88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41900cd7-207d-4f3a-8b68-0ea34413e805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79cb2767-af12-4718-a57d-b33f4318f1a0",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd38d69-67aa-4b0b-a25f-39798a36ab9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "855110c4-8b36-454f-88eb-1b8450851d83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "461907d3-b0f0-4a2a-b3c6-c567c853057e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ea346f9-7811-4e38-ae73-f68ddb9260a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cc840f6-81da-4bb2-904a-b0dcc1834566",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85afd8cf-b6e1-49bf-ad41-edd56a86678a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96bc84d6-73ba-4be6-9195-a0c29c8c638a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87bb51b5-2865-4c36-bed7-2f4636b581e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4a896a0-5d31-4877-9dba-6c6a6b401fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd93077-be5a-4450-b9b5-32e6ddc9619a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e68e6b9c-92ce-4638-abb5-765a01d968f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "901fc351-b098-4631-ac92-b5d9d79b7739"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a2627e-af11-488b-95fe-16e77d8b8d30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efcb9bbb-0e0e-47c1-aaf6-ec5fa71c5c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8819e64d-ebf8-4490-a65c-830bd829f08e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcff5323-efdf-40b0-a939-320424acab0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16f43b8a-3287-42c4-a582-3d1cd4d70fd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13857321-d388-4323-a76b-5c4333a7a855",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b6c4f77-7f04-4cd0-8a9a-107e740f36ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8860d8aa-91f1-4cee-a93f-937c7ae8051a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c97de6-86d1-4ec5-b0fb-db53d74d78dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03978a3a-daa9-4f18-90b8-5dd3f5990f34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b290b5a-49d0-4b0c-8353-57b5c191e6ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad684a92-5e9e-4d8a-a743-c184b1490957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6179e13f-ed50-470a-8518-593c6a8d81eb",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "115ffa83-61b3-47d0-9dcb-f81b8a09548f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "450857b3-7022-4e46-b5f3-0e8c9c6eeac0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4eda5a6-a299-4782-b356-2501b17192fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c50a9220-f6b0-4081-b306-e9e4170b346a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d70c93-54e9-4ce6-b4cc-2bd332b920e7",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1861544a-0dad-48af-ac58-72e65e7ae181",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f674584d-757c-48c1-93fe-04c33171a3b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d224d49-25ef-485a-a931-6e7a3c43fd6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "876523a7-9a62-434f-bf25-4f3c9ddccead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6751c17-ca6b-48d7-b639-32bc503a9ef1",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da8cb76-57f8-4754-8dc8-4e2308634b79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e1dcaca-467d-46cf-a14a-2691a564d2ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a88a0b0-9bdd-4e81-8b42-2db4de5be945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16c04ede-af77-4887-b5ea-e467bedc6943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "550e91fb-5974-448f-9370-6d48508a7d4d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51df4533-5758-4745-8594-696e391da2e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bddeb507-e9ec-4802-a51d-be4b85d7c35c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9327c14-08a9-47c5-9504-18d31139a572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f6d92d9-7367-4182-b887-75616e1d7c0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e46a96a9-ff04-4f7c-9131-12da5be0b0d9",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "900362e6-1bd1-4f16-bdd6-6d5ca1918903",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e55c6294-3501-4289-a6f1-360a0ce4dc7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4edb8e81-61a8-4d13-999d-93a7fb614e47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "979eed4c-8948-40b7-bd38-c65107e5f368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c134950-0d89-416c-9a45-ef12d03c37a7",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9eebd9e-d0c7-4ac9-959b-7cbca32d5ca7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b0adefc-fe38-423e-a875-a42fd046bac0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5adf69c4-6f4c-4514-9a98-e80f02788a95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f00a3049-5d9a-4b2d-9d84-1d0170d44a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a35da8c5-648c-49bd-825f-361a494b80b9",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0537677b-ccc5-497e-bab6-ac88162e1966",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e56ee1b3-39ef-4d90-a72b-692f9c39453d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce52616f-eea9-44af-8792-d9253eb09148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "506a521d-d9b1-4227-9a1c-7466293d1ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d994b3d-1547-47cc-9859-0fc4f297a95e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255205c8-030e-4e87-8ff3-fdb4a82bcc16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12fc4366-f42f-423c-8581-aa45650b2f79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c013a4f2-5855-4127-aaa6-c53f3e142b06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a07641b-c7c7-4896-8206-6aac7c9f7fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fa2520e-0619-45c3-aa48-e6526b0e43b7",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c6e4ff-8744-433c-9b9a-0773792e38b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe34a63b-081f-47e9-b9e1-d19aec32f9e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0202c95-70f6-4b68-a1a7-1725fbc5ff7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86e47305-722e-431e-8198-e6b06c62d433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbfd4702-3a1d-479d-99bd-466b6bb8b4dd",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4007034a-5088-41b5-bdda-57fa32c4a99b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80f75eca-3aa1-422d-a291-4cd481892f53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b849ec-df84-4822-856e-d0590230a1cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e929cb6-14c5-431a-a1d9-a8b4adfc4f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe02b8e8-3cf4-41d5-9e10-a9dff076cd35",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c020f65-e82d-44df-b0a2-6dccbcc12f4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d009229-6a7f-476c-a20e-86ba03e9d94c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "710f70b9-59f5-4944-a095-96bf682dc860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbfc65c3-3a45-4378-9600-9eb98f89e88d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e16564-4175-4ca2-b1d1-698f2c6a8f4d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163a2bf6-6688-4c91-b012-f41455483a82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3be3a16-1a20-49b6-9ed9-e83d7bb9ee4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54403d77-ca2c-4ef1-bf99-ff7e91c824c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad7ada34-6eb8-47eb-821d-40434358c370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65527f5a-564c-44a7-94fa-070c9453ba70",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da737e0-01a0-46a1-a7b9-c8fd6d42a186",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6713bae9-f497-478b-a823-8c6bfaf65646"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "014b8327-38f7-4639-b199-fd264e21ba1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13488dc1-0c32-4eda-8366-c8d4ae673af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a378433-0110-470a-bd8c-b27c5819f378",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba9fb7f-ffa2-4687-882c-88a2f47e01f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d315842-7e23-4ad1-af25-f49c8119df43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0546582-92bf-4850-8fea-2a92f89f9136",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d84df68-fbab-4267-9d1a-5cdb2c9484d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2507717-d656-44c0-9a98-6b12e171040f",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "356f3efc-018d-4e11-a5f8-316c3cfd77d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de1a0fd4-715b-45c9-b468-9d6d582570b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45ca506-8ed9-4c03-b323-8123850c4e76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c4fd4f1-1edf-4aa9-ae60-0f4e7b374222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd1a2a5-bedd-495b-a4b2-64acaabdf9c1",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50658d7a-df0a-42cc-8e3a-f7481906533e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c6102c4-0784-4a2a-bb5f-4ddbffbfe057"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff4d51f6-a00f-4369-bd36-dce6338dd0aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac593194-9506-4d8d-a0e7-343fa2b836a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60d82b6-8d33-46aa-8529-717b98c2564f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a075be7-8653-4c91-8a4b-78eb5708fdfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29e24d73-928d-41c6-a3d3-f97505c87606"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "213218cc-de72-4c72-bae5-70a374508c6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "400dc210-bb1c-430d-a0c8-8707b75e2a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a3de52-f353-4f6b-9869-fac3f81fcc35",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e48d2839-2455-4d55-aa02-e01288da5dd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20218725-5a9e-4ab5-a1d8-06c8d8dcebd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ec2338-6a4b-4159-af6e-79fb3b5b16bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a4910de-64f1-4058-ac1f-781d0449a026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3157b920-6c4b-451c-b363-f70b61776062",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b0cefb0-0e62-4917-a424-aa4e340b3d72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a3f9678-9a47-4eec-8fce-83ed92cdd271"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11803f3e-9c9a-4c7c-ae34-65c01637935b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bedbe50b-71b4-46c1-9e2f-e6054b57f88e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7682db77-94ec-42bd-9809-690f1409a50e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743a6a4b-702c-4656-8374-543696a32283",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e54ca77-c614-44b2-985e-a79b49e166b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "372e7080-d9d1-45b4-a490-757b59b8ea36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a19ce55-e211-4d01-9bc9-e958a10da916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db2a81e1-f5e4-4a45-af84-b4c9e1bf9ce5",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "150d1bba-a5e6-4344-bca7-19b5f17d37fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20b0a9b2-0679-4c95-b110-b7e941cdf2fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "878c8eea-3457-4e87-b00d-fa87bd99744f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f1f4877-4859-4a88-81d7-3592f4c6199c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba9bb2f-6a10-4aba-b4bb-e3aaa492fb8b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc6fab2d-5b07-4223-8fc6-6dceadfe8c7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19b94182-a612-4104-a154-6054092304bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f366c7f-1255-4bd1-b146-a44eafee85c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca9e80e9-9340-4164-bd18-97be113d5330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6667f884-40aa-4aba-b411-8f53daabd135",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d345ac0-6379-4894-9cf7-8bf65701c12d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab80d6ab-9e4e-48c4-a840-9088cec6176b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c59e81bd-0309-4a55-aace-379f85efd942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c20176e-a363-41e1-8158-2f3b727d34e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5dd40e0-f616-4122-99c8-9968d51db9c5",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a79fd8-12ed-4ae4-9015-2e2a8d67de41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1479582-4576-458d-bf4e-7e19a198652d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5860ecb7-affd-4b91-a621-63645d821c0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5318bd3f-1f9e-4bb7-b250-fd9add2c39bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cabf54b-844b-4ceb-b652-897de5074afa",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a07d687-34b2-446c-a4d9-1449321d8678",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56b92625-672c-4471-ba22-75aa1bf88603"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c4fd68-8d43-4cc3-8a43-cb935726a4d3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31f82d16-944f-4c69-9644-e4ee03d02f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c5637e-d0b3-4d04-87b7-715f37938d15",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01245c5e-20a8-4181-969b-1fa5e66c96fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e6cb71d-22e1-4392-bb8b-e77a7ee013ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1fd7c25-667f-43ca-b2a9-b756b5fbc5e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b45f9d2-8008-4217-8bd0-87de60a60578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73394a51-e19c-4d9b-a726-c81a5648e3fc",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eab924d-129b-46a4-90b6-06aea13f6fc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d631f8da-833e-4914-b01e-67d99cbe3f1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e49fe55f-b11f-429a-91ba-5484d7a16394",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feebe86f-7c17-43b8-ad8a-43ab27210d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d07c16e1-590c-428d-bf28-0072bef4a3c8",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ed5065-c0b2-4543-a366-0aabe48e7c65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04feb247-971e-4c75-abfc-2323a01123a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9848a039-1c88-4a49-8df8-78c4ccbd249e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5051400-3d68-400e-ad97-fec065bcfa93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6709444d-a89d-4f41-aa2f-21907b6ccc86",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9cbc82-a07d-4f1d-9b10-60841c8d5637",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71b5e527-a948-425a-91e8-9e8ff1ee80f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed39e983-4c6e-4968-bb29-c80d336b2554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c62fe0eb-585b-40f1-a4af-0636169b4fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c764931e-7121-4a18-8eb4-81ee8bbd61d8",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4214bb8b-f685-4599-840a-4b659b8d3201",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8700f09d-bff3-4e28-bd83-3067030d45ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1aba0e-77e3-441d-a346-bedd4fe4b50b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a78fc8d-20ff-40e5-b72b-0d771680f967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c43788-a2c8-40b2-a75a-4afbd62251f8",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2978923d-000d-41cc-b287-aa8951d6a570",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "753ccccc-8d83-44e0-8f65-f0983b549f9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0319e4e5-b3a1-442f-b544-5268431c5cc8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "562fb8c3-fe6e-446a-9331-2b6b801994fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad8b77a-fd09-4354-b26f-56fb374ba834",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d4a0b57-2451-41fc-ab0c-01ecf83fae04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c7195cb-76e1-43e6-a84c-9ddf9d33cb4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea74e5db-c705-4afb-be59-740a78d76a95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbb9cd5f-bcac-43f9-9b80-632d16b1d841"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "60263135-6c60-4111-8b8d-748d2e009ea4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19e100f3-a20f-404c-ae62-5bbf160898a9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb5780f1-d568-4cf0-9215-96206fae5057",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "07e0d34e-7242-456f-8f42-56dc8d14dc81"
                    }
                  }
                ]
              },
              {
                "id": "6a8df10f-c8f3-4b04-9055-28e64c28d213",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "989ce274-a1d0-4e80-a9a5-604d22eedbd6",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6014de7b-9495-4a56-8c13-9e7f19c19aae",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ccd270a7-3c7a-4852-b33a-f54a08d48663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82961e0-17c0-440b-b2bb-dc4fe9f0a6da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e3984bf-0a05-4fd4-b9b1-cc687376a1b0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79438674-546f-441e-9a11-d2638d068c8e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0cbd8742-1cc7-4307-9c72-2395ca3eb635"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "69f413c1-1d08-4d34-812d-1aa809c4139b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da03d679-ed6f-4f92-b970-aa91eb4a2d1b"
                    }
                  }
                ]
              },
              {
                "id": "ac390718-a449-4007-afb2-7c72a1d45b2e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "5b26b5cf-d408-440f-9b42-97697499ecc9",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec68bac-61bf-4bbc-8512-ab44727eb203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b428e7f8-d9eb-4b79-97bd-72fd6b66a36d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d0a09f-483b-4492-bd98-fcb9c3b44db6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21098277-5208-473e-9518-01685f945f65"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "788bd6da-05a8-4c87-9e96-980459374a27",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9155328e-a6b0-47b3-9216-e3846fbd304f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b335f197-2e30-45a2-b478-fb5ae9e8a547",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "11ebbb64-8e62-411d-a7a5-bde050e366dd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb45694b-39c7-4c63-95d1-e45bd0926449",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be9ffd95-e288-469c-9b4e-cc44a541afd7"
                    }
                  }
                ]
              },
              {
                "id": "0e52a0ed-53ac-4eb2-9d30-a6e5cc997279",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "21fb5256-5862-46d9-a0c1-80119c892b62",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7b1617a3-e972-4c57-8811-6e3154f6dbc6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ccabef13-8698-49d7-a594-b18a30458129",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26b605d9-5fcd-4dca-91ef-bc333cb5bec4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "31e73814-051b-46bb-86de-493919e930ba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "cd092e92-5933-426a-beb6-76b8df5d7999"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "430a4659-7e3c-4297-baa1-a0abb1d62ca3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "500ecdcd-02a7-4e73-a540-467ddc8333b0"
            }
          }
        ]
      },
      {
        "id": "2cd19d01-1db6-4ecf-b3e3-99a9caa0f7f0",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "dff7294a-e42b-4193-bb08-776cf9a44025",
            "name": "Negative Testing",
            "item": [
              {
                "id": "718600c1-b146-4e10-935c-561d09624461",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9d86c0a7-4a30-4590-979d-b99d5aa86f92",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17983e03-94f3-4088-8d32-593592d7ca27",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "abac4dca-e3f4-4d45-aa41-cb9131a0b6f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c00a9941-b378-40a7-aebf-4169e3cf1b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34c0c199-180b-4f90-8ac3-dfe5f4d60f71"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b231e138-463a-42dd-b8b3-40533b4d7828",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ef3a727-6410-41fb-a946-b19823b1a000"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "95994d68-443c-43a8-a549-db94abe93390",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f1ef42a-6640-4cec-94ad-3fc0205cc149"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "efbc9ea9-4363-41d1-b588-1ce170d0155d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7530d989-27e6-47cb-808d-28b2a455e78f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9cd2a1a9-b268-444f-bd1c-f14d7952cc66",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6a73ce5a-d549-4160-8a5f-4407136793ee"
            }
          }
        ]
      },
      {
        "id": "0cf82f71-7862-4fbe-bc99-5e437b875938",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "aa97c058-5808-4baf-9fcf-8cda331d3fb2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c01a3a1b-fe9d-4fd0-8438-d78a01be5b98",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c36b4c2b-1fcb-4768-aa61-899b845e6e97",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1819fc9-e83a-48e4-bdec-2a818881c098",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b4e2bfa-d704-4936-babe-7be136b696f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55c12913-3a38-40c8-8627-4975da9e9a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "556f8e68-7b90-473e-a7d1-031819e13c06"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "deebeebe-29c8-429b-bed0-64c73d3f70c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8417e98-8896-4313-84c0-ded198788268"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "547a5f2b-98e7-4b8c-b393-23163453868b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6fe32e7f-86bc-40d7-ab17-bacb0bebde82"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4901c96b-f9bb-49fb-873e-9633ea7e7210",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bdee5b31-93ce-4320-bb31-358c577bf77d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e30cbb2b-c123-489e-a25e-c61cbd04c1a6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4201a2d3-1bee-42f3-8931-b60866c58d8c"
            }
          }
        ]
      },
      {
        "id": "bd31d07d-91a9-49eb-998e-f7b92f227692",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0ced332f-dff1-45ef-9ee4-08cf82113e75",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a18fe701-a973-4aeb-a4c0-ce6cee186119",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d698726c-98a0-460c-88ca-f5fb07a561db",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6824ff44-cd1c-45d7-b4d5-79549b79a64c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce4dbd5f-f2e3-4e28-b25f-931162d7f059"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3510e93d-a018-471c-a6d0-791c251fcace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a694a465-214e-481e-8278-509b98ba9dc5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d45f1d88-bdd1-42fe-a5a8-09bb2cd6a082",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "035972f5-6116-46c1-b8cc-629c786e080b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ecd3981-7401-445b-9031-3d1601075e5e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a26b51f9-fcee-42c7-b98e-6d3b0fa0edcb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6cbc12e9-d754-4f1b-aba8-ff6d8ee5e6cb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "21d3fcff-4e44-4dac-9b56-6692eeb88f13"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "966207cc-f54f-42e1-a468-890f95a59b5f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1898c51b-ba2d-4392-8226-b5aed3b818f5"
            }
          }
        ]
      },
      {
        "id": "09d21ce7-75bc-4b79-9140-76bd75e0ce3a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "abd6b6c9-6b60-44d1-982f-43c8f352aabb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7ebaa5c3-4b64-423b-b509-f37666d87199",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "12b8d9ba-afe1-4c3e-9b55-afaf842d331a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6357103a-3633-4331-88b8-c97407170201",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "de14320a-8697-40b3-a6d8-a9362455e885",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 93.94366197183096,
      "responseMin": 6,
      "responseMax": 4977,
      "responseSd": 431.9100759735007,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1694651567849,
      "completed": 1694651606212
    },
    "executions": [
      {
        "id": "37e2eab2-ce6d-41eb-854f-8cf237f21af2",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "006e5684-ca40-4344-ada2-5631c08dd973",
          "httpRequestId": "a1d4c0f6-87d6-4bc6-b195-0aaccb30c130"
        },
        "item": {
          "id": "37e2eab2-ce6d-41eb-854f-8cf237f21af2",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f7238bdb-991c-41fe-85c1-5344155da230",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 0
        }
      },
      {
        "id": "49242500-044d-408d-9fbc-9aac67f7a3fe",
        "cursor": {
          "ref": "9e6920d5-d0e0-4f10-abcd-96979e44d4a0",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "bd544e9a-eb0b-4d7e-816b-64a481be191a"
        },
        "item": {
          "id": "49242500-044d-408d-9fbc-9aac67f7a3fe",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7bdf075f-add1-49ec-a821-8584202fd1e5",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "741f4444-730a-4c69-a3f2-c390c8946952",
        "cursor": {
          "ref": "13891ce0-ba40-46e9-8ba4-4a3d402eafaa",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ee08e2ef-3b63-4072-a6ba-26d54362c7f9"
        },
        "item": {
          "id": "741f4444-730a-4c69-a3f2-c390c8946952",
          "name": "did_json"
        },
        "response": {
          "id": "1198e1af-171d-4455-9fab-314eb301e666",
          "status": "OK",
          "code": 200,
          "responseTime": 156,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "422d7efa-63b4-49e6-add5-4da5d216bc2a",
        "cursor": {
          "ref": "d3a876bc-9148-4acc-bf73-304b42368491",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3a834f32-5e18-4169-93a0-17cda2888f4d"
        },
        "item": {
          "id": "422d7efa-63b4-49e6-add5-4da5d216bc2a",
          "name": "did:invalid"
        },
        "response": {
          "id": "23952271-2951-4fce-b8e5-2fe2310296e2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1011,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "422d7efa-63b4-49e6-add5-4da5d216bc2a",
        "cursor": {
          "ref": "d3a876bc-9148-4acc-bf73-304b42368491",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3a834f32-5e18-4169-93a0-17cda2888f4d"
        },
        "item": {
          "id": "422d7efa-63b4-49e6-add5-4da5d216bc2a",
          "name": "did:invalid"
        },
        "response": {
          "id": "23952271-2951-4fce-b8e5-2fe2310296e2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1011,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660c2b5d-26a2-4aa1-b20d-8373e3ff1b3c",
        "cursor": {
          "ref": "ea927cd1-66d4-44fe-a1a8-4d3f1f5c9d87",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ae0367e6-ab55-4d74-8e0b-9416ed5a1c0d"
        },
        "item": {
          "id": "660c2b5d-26a2-4aa1-b20d-8373e3ff1b3c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c0f89127-bb4c-4932-a283-230a89ed857f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 39,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ea4816-a9eb-4ed6-ac38-165d9da92281",
        "cursor": {
          "ref": "c90a3f2c-b32e-4c75-9588-d40546efe04f",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2405d915-8efe-417f-aeb2-9c7d7787a227"
        },
        "item": {
          "id": "b4ea4816-a9eb-4ed6-ac38-165d9da92281",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c10f2f67-c777-492d-bc61-7d374ee9205f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "268d8936-ca74-4c8e-8b11-bec062edbfab",
        "cursor": {
          "ref": "63055f8b-4b5d-4b18-816b-7546c0d42085",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "bc071ffa-c0e5-434d-962c-db406a8064cf"
        },
        "item": {
          "id": "268d8936-ca74-4c8e-8b11-bec062edbfab",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "554133d2-3d69-4ddf-b85a-2c571d79e745",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443213a9-9f43-4537-bd14-18a5e6bb15b1",
        "cursor": {
          "ref": "85ecfe27-9fc4-41c0-a4e6-9c6de1ef46d0",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d0260b46-f2ca-46af-b211-2fbd00e4b6d8"
        },
        "item": {
          "id": "443213a9-9f43-4537-bd14-18a5e6bb15b1",
          "name": "identifiers"
        },
        "response": {
          "id": "9469c2a2-279b-4346-ab72-da273b8a2260",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac8ba985-4835-4178-9d64-ff2a46f4b54f",
        "cursor": {
          "ref": "4a60d34a-2e92-420c-b2ea-fada17fdc011",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "48653a42-3576-4269-ac84-1a00e0329f8c"
        },
        "item": {
          "id": "ac8ba985-4835-4178-9d64-ff2a46f4b54f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6a6859ef-6578-4f1a-9f5c-4664e7e43c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6745a7bc-a48f-4bea-b5b1-2de7b89400ba",
        "cursor": {
          "ref": "f396a2a0-e758-4bb3-9d00-0e516cc5371b",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "64a67e99-f573-468e-81e5-4877320496ba"
        },
        "item": {
          "id": "6745a7bc-a48f-4bea-b5b1-2de7b89400ba",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "4026df9a-f77c-4453-997f-3f1a55ff5c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2062b6f-7a85-4dab-9b8b-414669e74475",
        "cursor": {
          "ref": "69295836-fc2e-445e-8c34-bac079bbc135",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "686cf67a-89af-48d6-9a85-3274403dbb72"
        },
        "item": {
          "id": "f2062b6f-7a85-4dab-9b8b-414669e74475",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "43e464e9-bbe8-43ec-b51b-a45bb5b487ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46a0587-0b5e-4fe8-bf5e-240ff41463fe",
        "cursor": {
          "ref": "92205ca3-2de3-4e01-b498-9956a89ccc81",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a046054c-20f3-4212-80e6-f8dd7085b0da"
        },
        "item": {
          "id": "e46a0587-0b5e-4fe8-bf5e-240ff41463fe",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "834a4a62-d725-4e9c-9480-3838e0069f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a9c33a-e9ad-4075-a22b-67a122b5bee1",
        "cursor": {
          "ref": "133265ad-7821-42c1-9eb5-ea5f91d30998",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5119b39a-1873-466b-8170-3df1b4303d28"
        },
        "item": {
          "id": "17a9c33a-e9ad-4075-a22b-67a122b5bee1",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "42907386-e727-4614-912a-9c0b12fd37b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "526cf53c-9da2-4988-b7db-73cda8fdab8f",
        "cursor": {
          "ref": "d2b22879-665e-4073-82ba-0b6ffa02b909",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c6b4c00e-0a7d-409e-9d30-06b5bb820962"
        },
        "item": {
          "id": "526cf53c-9da2-4988-b7db-73cda8fdab8f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "bea735be-db20-4137-8111-6db43382ed8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d65a1c88-cbfb-4861-9cea-e37990b162b0",
        "cursor": {
          "ref": "707b466b-8095-43fe-ab9c-64e269c00637",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ee213e45-93f1-4546-b258-1533ff4f373e"
        },
        "item": {
          "id": "d65a1c88-cbfb-4861-9cea-e37990b162b0",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "016bdbd6-c64a-458a-a256-e6a826f85153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "580fd01b-22ab-48de-9eee-508278c5570f",
        "cursor": {
          "ref": "43c77520-fc4a-41bb-b8b4-5933d564318b",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "cb75ef54-dd6d-421f-8e65-349beab51d68"
        },
        "item": {
          "id": "580fd01b-22ab-48de-9eee-508278c5570f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "41da584b-f797-4d09-aea0-1642a0d797ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8bfd939-4e58-4cad-b502-484cd84f38a5",
        "cursor": {
          "ref": "e8130f75-eefa-4c7c-969b-e58e2d784aad",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "eedb4a61-e5d0-440b-aeac-c26ede4035f4"
        },
        "item": {
          "id": "f8bfd939-4e58-4cad-b502-484cd84f38a5",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6677d3a7-9322-4922-8294-6b4ddb10b78e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cde4953-b270-4e9a-8dd9-09176498d266",
        "cursor": {
          "ref": "dbb5afcb-094c-41ce-9332-9b6610dd0c4b",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "82494c46-47b4-4756-8cd1-4d945a075078"
        },
        "item": {
          "id": "1cde4953-b270-4e9a-8dd9-09176498d266",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "2bc090fd-6d21-4565-b731-9ee4b3f1ceec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c6c025-36f7-4065-b0ad-64edd68f0552",
        "cursor": {
          "ref": "14490461-4705-4ade-8847-90976216c941",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5969a781-1c21-490b-be3d-646b03db4b81"
        },
        "item": {
          "id": "35c6c025-36f7-4065-b0ad-64edd68f0552",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "14d79d3b-8fcc-4486-913a-05254d6f84e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe4096e-cda1-47b2-a9ac-543a43f851e4",
        "cursor": {
          "ref": "472330bc-b044-48a5-a461-3f30026bea58",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "52579bd4-2e1d-4d70-8871-37905d3ad2c6"
        },
        "item": {
          "id": "8fe4096e-cda1-47b2-a9ac-543a43f851e4",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b07beaf4-0f9b-4230-a31f-f9913bac50c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1fe3363-a0ff-4cfb-ab88-aa25196d584a",
        "cursor": {
          "ref": "1a6cce1c-b528-49e8-b4c8-c383896d3fbe",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c558fb56-89ec-4c48-b378-4019ed222ea9"
        },
        "item": {
          "id": "a1fe3363-a0ff-4cfb-ab88-aa25196d584a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3bfc8804-feb3-42ac-bf56-51b09dbb12e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a87395-48ac-4ff3-9db2-264df91c797a",
        "cursor": {
          "ref": "86590022-63bb-4d27-9391-0f3fff7af564",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "0976354b-4b99-4a7a-a9da-6f25676db6a9"
        },
        "item": {
          "id": "71a87395-48ac-4ff3-9db2-264df91c797a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "51d3d0f0-b10c-4f40-8e8a-5e14eb1d3597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d5e15b7-fa0f-4e5e-8b9e-ebea51631368",
        "cursor": {
          "ref": "4aae8e4b-f3a4-49ae-8016-9e2d784adbd5",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "fac53fbf-4a7e-42c3-af34-3acf8a962e48"
        },
        "item": {
          "id": "8d5e15b7-fa0f-4e5e-8b9e-ebea51631368",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c8cf57f4-ce62-455b-ad6e-c577a3f46e56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df24a4b9-cf80-4408-b3fa-2aed8b7402c1",
        "cursor": {
          "ref": "ab314b68-e164-4eac-862f-96d035a63b82",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "97357b05-a14c-4c81-ac5b-1dcb12dd8ac9"
        },
        "item": {
          "id": "df24a4b9-cf80-4408-b3fa-2aed8b7402c1",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e87b8811-a38c-474a-aec0-139f8b48025b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd8aaa1-ae98-4e5c-8518-fe308a8a7461",
        "cursor": {
          "ref": "b53b9a85-963c-441c-8da7-7a840f3b14ea",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "34dd2d2c-c6bb-4f06-8cff-0e2286d51ffe"
        },
        "item": {
          "id": "4cd8aaa1-ae98-4e5c-8518-fe308a8a7461",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7368201d-f5bc-4289-b7c9-fbb20456203b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6350107c-9342-40e5-bae7-a9a713bf7ebd",
        "cursor": {
          "ref": "e40a50de-bfc7-4e18-8cf2-ee5e4e420672",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0a12c799-6a6f-4e68-8f14-70036d6a0e62"
        },
        "item": {
          "id": "6350107c-9342-40e5-bae7-a9a713bf7ebd",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0c7899f3-5773-4af7-b7a3-71be22ce3c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16dc0c91-f93a-478f-a5e7-68515f4cfb00",
        "cursor": {
          "ref": "af5f31ac-0c4b-49f7-b4b8-bf5f9f989c9e",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "40494a71-c3fa-4a93-88a0-b151bfc3ecc9"
        },
        "item": {
          "id": "16dc0c91-f93a-478f-a5e7-68515f4cfb00",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f7952e34-d100-4587-8074-a49e7f24f8ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32945e52-e9aa-4307-8147-cadb1a44704f",
        "cursor": {
          "ref": "332104d4-df51-4609-aac6-ed7159600b3a",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "aa5d1074-2774-434d-a632-9f2780477fc8"
        },
        "item": {
          "id": "32945e52-e9aa-4307-8147-cadb1a44704f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6bb33892-a6fc-449d-9b60-62fbb045894c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dadd1e93-3597-4312-97e7-12e544241487",
        "cursor": {
          "ref": "fbf0c597-61fe-42a9-a812-7e41f1b14769",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "be474fe1-4e05-4fb8-8655-fed4760cdb94"
        },
        "item": {
          "id": "dadd1e93-3597-4312-97e7-12e544241487",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "151e4a03-d6d2-44dd-9134-fd9885da0728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1bc3976-eea1-4fe3-9232-229189a0e7b3",
        "cursor": {
          "ref": "5a19cd4d-0855-4ab6-9376-9d4fd04ebf5a",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9a26d696-2df3-4141-904e-f3732892ac92"
        },
        "item": {
          "id": "b1bc3976-eea1-4fe3-9232-229189a0e7b3",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "27fd06a6-e36a-4750-99d8-dbffe859d4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05d65e31-0dc9-48a1-9ba0-199c583454b4",
        "cursor": {
          "ref": "943a7990-c12e-4458-bc19-990a85b458a0",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6c1723b2-cdd5-4a0a-addf-c2d77332909b"
        },
        "item": {
          "id": "05d65e31-0dc9-48a1-9ba0-199c583454b4",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9083d247-df04-48f4-8857-09dd066e70fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae77a35-832e-4bde-b523-1eeb39c0e5b2",
        "cursor": {
          "ref": "302231a8-ab92-45b2-b3dc-a5cd6cbc126e",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c82d2a7d-ef7c-4fdc-8935-3197b9a61458"
        },
        "item": {
          "id": "6ae77a35-832e-4bde-b523-1eeb39c0e5b2",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a33e2587-43d5-422a-b906-ccf4bdf29087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b105c516-92e7-4241-8386-8631df624c84",
        "cursor": {
          "ref": "1187a561-b7d1-4f9c-8ee9-c9423daa1e91",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "8de7b970-8101-4f78-b8df-c3760920c3b8"
        },
        "item": {
          "id": "b105c516-92e7-4241-8386-8631df624c84",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "752b754f-ee69-41c2-b0b5-d8889d3e23b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b4d491-1491-4601-b103-e1d967d890b8",
        "cursor": {
          "ref": "acb2a1c2-f9bb-41f1-b9c0-b90b4f338ba7",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c1c4904f-463d-4216-8977-d1cdd8acf7b1"
        },
        "item": {
          "id": "17b4d491-1491-4601-b103-e1d967d890b8",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "88f67a1e-e56c-417e-a314-068d49231f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78abcd7d-ffb9-4dd6-9ca6-2dbf3c2069d2",
        "cursor": {
          "ref": "2a5507d9-e0cd-41ab-aa64-55728ddb3d62",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "59a4a178-b200-4d38-bdba-06a707403ce1"
        },
        "item": {
          "id": "78abcd7d-ffb9-4dd6-9ca6-2dbf3c2069d2",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7003f01f-1bc7-421a-afc9-abd0d20c8947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c03921-4f7e-4600-86b2-a3cd1d589831",
        "cursor": {
          "ref": "0476cd68-5fde-4b1a-91f9-05f80f3d260b",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "596ab48f-f84c-4d1a-aa13-baa4a8fdd247"
        },
        "item": {
          "id": "46c03921-4f7e-4600-86b2-a3cd1d589831",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "28fbce44-ed3d-4fd7-a498-ca6b1da1296c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c95c619d-898e-4d02-a359-053fb76d8cfc",
        "cursor": {
          "ref": "65769a15-1782-41c1-8c86-8aebf209e237",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "165aff4b-f3d1-4a4d-9f97-3cc66921a689"
        },
        "item": {
          "id": "c95c619d-898e-4d02-a359-053fb76d8cfc",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "445a2ed1-a314-4558-9d29-3f6030783aae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "694e529f-4eb1-46a3-8090-5053fa1f477e",
        "cursor": {
          "ref": "23d4f364-1ffb-417b-b27c-35a419e788be",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c7936366-1801-4b60-8f8b-778b85f4973b"
        },
        "item": {
          "id": "694e529f-4eb1-46a3-8090-5053fa1f477e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "69bb9ac4-ed1e-4675-bbbe-5a33a33d522a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f9954f4-f77c-47e8-a9d4-333841c6b0b6",
        "cursor": {
          "ref": "5bed7ac8-400b-4d8e-90ce-de02bc68af4c",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "db4e82dc-ff87-4df0-bbe1-25fd94679639"
        },
        "item": {
          "id": "1f9954f4-f77c-47e8-a9d4-333841c6b0b6",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "514bbebc-caf7-4ae3-a368-94074ff2d7e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaeb01cc-a767-4be4-9910-21701b4b4f50",
        "cursor": {
          "ref": "aa9868d9-a593-451e-b77b-f064b594ff98",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8154e8cd-c34f-479a-af9c-cb3c66795ada"
        },
        "item": {
          "id": "aaeb01cc-a767-4be4-9910-21701b4b4f50",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "fd2ac630-9b7f-4f8e-9faa-91df29e379fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa2030f-402e-47aa-ae62-60d380baffb7",
        "cursor": {
          "ref": "ddb3de43-575a-4df6-9944-3050e63dad48",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b0dd0d61-f32a-4815-9273-2d9750a80a86"
        },
        "item": {
          "id": "1fa2030f-402e-47aa-ae62-60d380baffb7",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d7c9e86a-f757-4ca1-bfc8-626dfb6de0b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95797f54-abb0-4d57-b4d9-89bb79baeed9",
        "cursor": {
          "ref": "b6fe95f0-7dd3-4cf6-a694-33d94bb0e0b3",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ef668d18-010a-41d1-944d-26212715cb53"
        },
        "item": {
          "id": "95797f54-abb0-4d57-b4d9-89bb79baeed9",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "79f4b25b-d317-4968-8d40-8dbafb4131a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb9baa5-e7c0-452e-9a7d-05323f86bb41",
        "cursor": {
          "ref": "c2534aa1-5910-4ddd-8d4d-2ff271d503cd",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "85962d9d-feee-4ca3-838c-c3c68a6b2fce"
        },
        "item": {
          "id": "8eb9baa5-e7c0-452e-9a7d-05323f86bb41",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "1170c2b9-b9ce-4c43-a7ac-2045b22404c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f21be2-2725-4f08-a791-c52d7c7ab0b6",
        "cursor": {
          "ref": "fe8d7f22-7024-4607-8aa3-5090ca952ef4",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a356b1dd-efea-4bb7-b867-f842007cdf16"
        },
        "item": {
          "id": "31f21be2-2725-4f08-a791-c52d7c7ab0b6",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "44afbf34-8869-47f7-b583-7b9c92c17e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e828dcb7-9afe-4b05-aec9-d48d182f4d5c",
        "cursor": {
          "ref": "1dcdea07-2300-4792-86b7-fa2d89ec6bc6",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "04f6f4d0-6b9f-4cd9-aa02-41a957a9a8d0"
        },
        "item": {
          "id": "e828dcb7-9afe-4b05-aec9-d48d182f4d5c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "901e7e85-6731-4b56-8388-a579638a86c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d507a12-128e-47ae-9261-f030ee232ab4",
        "cursor": {
          "ref": "96b2eba0-a90e-4167-850a-172eb4506f28",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ca9b71ea-b692-45c7-b1d2-7be8a4d0a5af"
        },
        "item": {
          "id": "7d507a12-128e-47ae-9261-f030ee232ab4",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "3b7a5e92-4106-4557-a890-c1205f9193a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10dbe7ca-996d-4ebc-9ef4-0f90bd491ad1",
        "cursor": {
          "ref": "d6638baa-f38a-4cb3-9bcd-81a6e356eda9",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "73ed7119-096a-4fc0-86ce-2e112976fa14"
        },
        "item": {
          "id": "10dbe7ca-996d-4ebc-9ef4-0f90bd491ad1",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "eb024c22-7640-45b4-ad6a-24afdccecb1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f640dc5-80d7-4e0a-b041-ad517883d8f4",
        "cursor": {
          "ref": "5c56fa5c-ddbb-4907-a87c-b65b891b6ddc",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "36ade150-88f0-44a5-b034-5d3273ab87af"
        },
        "item": {
          "id": "7f640dc5-80d7-4e0a-b041-ad517883d8f4",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "eafcc9da-4627-43ed-bfc9-570508f4f261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "930b7020-ffd6-412c-bc51-dc2a9377577c",
        "cursor": {
          "ref": "529035da-940b-44c2-8c75-1a30f12ee935",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ac46a956-4929-4d0a-bb4f-5eedca88bfc5"
        },
        "item": {
          "id": "930b7020-ffd6-412c-bc51-dc2a9377577c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a14cea35-f0c0-4615-8628-f4d99b6ba080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "496ab783-931a-46f1-a4cb-a53eac22c482",
        "cursor": {
          "ref": "6fc61a5d-0185-4ef6-a2fa-05037485775e",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "43bbb4e0-52e9-4d74-9a72-04331ffb9206"
        },
        "item": {
          "id": "496ab783-931a-46f1-a4cb-a53eac22c482",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "23d1e307-115d-4c0b-83fd-64a28eea2e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f716e6-852d-4964-b6c2-bdba8529f69e",
        "cursor": {
          "ref": "e942ece5-5e69-4fd9-9248-b4cd5bedc7e9",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "feaec22f-8113-4b63-ab3e-ecbe5718a98c"
        },
        "item": {
          "id": "52f716e6-852d-4964-b6c2-bdba8529f69e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b26cb0a0-e4be-40e4-a383-cb6748f9e37e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3899941-6285-4e5c-a2f1-fa98616b41d4",
        "cursor": {
          "ref": "8a6a5e60-d289-4a73-8dda-0593b14f0c71",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "8d862158-f84c-4fdd-92c1-7548501f3936"
        },
        "item": {
          "id": "d3899941-6285-4e5c-a2f1-fa98616b41d4",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f404ba6e-7a6e-41e7-a9d2-61042dbfc47b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c274dce-adb0-4e88-9a85-1b6e495e1510",
        "cursor": {
          "ref": "b350ef14-1b83-4b1b-a73c-02c4fe706533",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "04693822-2e36-44f7-ac85-53423a0ad809"
        },
        "item": {
          "id": "2c274dce-adb0-4e88-9a85-1b6e495e1510",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b2070f2e-d000-4dce-bb15-a4014fdb2075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03fef937-e81f-45c9-ae5a-64b35365e3a9",
        "cursor": {
          "ref": "e9b34dd3-27d5-4a2c-b05d-224391c9c8cf",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "2e9205aa-4547-4bea-a8bb-20fbf847c4dc"
        },
        "item": {
          "id": "03fef937-e81f-45c9-ae5a-64b35365e3a9",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "5026fc05-b6ce-4e4f-8fe8-20ec5ae01045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7b0163-5f59-43f1-a2ad-4f5063bbbfba",
        "cursor": {
          "ref": "1ad9883c-41b1-4c3f-92ef-410cb387473c",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "51ab9cf9-df36-421f-a35f-8b8e594d926a"
        },
        "item": {
          "id": "4d7b0163-5f59-43f1-a2ad-4f5063bbbfba",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "3cd14b3c-6a41-4ebb-8d89-19214e5090d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "187ef6b4-f5d5-4ccd-bd07-a276ad92d462",
        "cursor": {
          "ref": "f7c82e3d-334f-4083-bc25-b51256b3f587",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a0ae5011-31ce-4302-b226-8875a335dedc"
        },
        "item": {
          "id": "187ef6b4-f5d5-4ccd-bd07-a276ad92d462",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ec5c61a2-9540-40b3-b944-74db5090807c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5345671-2da9-486e-ab83-efc302de0800",
        "cursor": {
          "ref": "3876e895-382c-4137-b4b0-ec8491970613",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "0dd2f430-7a9f-4441-80a9-8d3592921b62"
        },
        "item": {
          "id": "c5345671-2da9-486e-ab83-efc302de0800",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f19997eb-5178-4cc1-bdb7-9b01b621d10b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d4cd947-0cef-4a9f-9e9e-1607bd265fae",
        "cursor": {
          "ref": "4ce1cdf3-3bd3-4833-8334-0c5fe7b0143a",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f22a8b10-6ed6-4e89-a46f-d61eae8c3518"
        },
        "item": {
          "id": "3d4cd947-0cef-4a9f-9e9e-1607bd265fae",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "aa70e885-be77-495c-83af-4b73bed0c836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d23f57a-e8bb-4a48-a8a5-bf0bb93210d4",
        "cursor": {
          "ref": "4f15d4b2-f4b7-4215-a086-3a2d7f23c164",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4c39378c-483e-4a63-b6f6-b274246484c3"
        },
        "item": {
          "id": "6d23f57a-e8bb-4a48-a8a5-bf0bb93210d4",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "754985d5-bd3e-4b8b-b7f7-91419e3f916d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba48a24-4342-4334-b2ee-3a215ab59fd4",
        "cursor": {
          "ref": "c2bfb00e-96a2-4ee7-ab08-9aed8447efbe",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "13c471ab-a8b7-411d-b4ec-142f63fa9996"
        },
        "item": {
          "id": "eba48a24-4342-4334-b2ee-3a215ab59fd4",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "cb8a2862-04c1-41f9-8d62-9e7bd89eb858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b91d41df-7b8e-4681-a3ab-9eb2f8cb805d",
        "cursor": {
          "ref": "3ed3c77e-6501-4cac-91ae-f77db60b228e",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b9c87b4d-0639-442b-bc87-1cfb711d53ad"
        },
        "item": {
          "id": "b91d41df-7b8e-4681-a3ab-9eb2f8cb805d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ac135513-f495-49c2-9f70-8cb6f6a198e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6505316e-6249-4e1f-9e30-e80ff379190d",
        "cursor": {
          "ref": "e48cbd92-b399-4846-8ed3-ec02aad84b16",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "66b063b1-ea21-40d1-8087-fef5d3cdb973"
        },
        "item": {
          "id": "6505316e-6249-4e1f-9e30-e80ff379190d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "5f1046a7-274e-45ba-9ef8-bf46cfda25d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9dc355e-a754-4a8e-b521-b07eb20e1ee4",
        "cursor": {
          "ref": "5927cd43-1027-44fe-bf7c-f10e93d175dd",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c0b47a84-dde3-4554-889b-d364cea06090"
        },
        "item": {
          "id": "f9dc355e-a754-4a8e-b521-b07eb20e1ee4",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "631bf638-986b-4e4f-a704-a4fa139cf23f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b12be007-a056-48e3-b3d3-65a41e660d74",
        "cursor": {
          "ref": "a9f9279e-1396-4ff3-afa9-e34fe15b2338",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8e4c9acd-d8af-4b88-bee9-880855062e51"
        },
        "item": {
          "id": "b12be007-a056-48e3-b3d3-65a41e660d74",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0dc26115-d5a9-4172-8da9-c97d76969bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85dc1df-3187-49da-8a20-594f6c0189fa",
        "cursor": {
          "ref": "bbb65b7d-1c06-42a1-8266-a3cb355c7739",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "0c424292-1164-43a6-8be3-1e1b08379646"
        },
        "item": {
          "id": "d85dc1df-3187-49da-8a20-594f6c0189fa",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "60441e1c-bd44-4fd5-b328-9ed36bce3b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fbcea24-06e4-42c0-a60c-aa6d6981a292",
        "cursor": {
          "ref": "301b08a2-4fc3-4a1e-98ee-42e0031e288d",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8e8ae556-21be-4b21-87c8-014f21c5b891"
        },
        "item": {
          "id": "7fbcea24-06e4-42c0-a60c-aa6d6981a292",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5f196f02-ec47-4018-b884-40bef69871e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "818d22f6-ec32-4a25-9d82-c81b566318c1",
        "cursor": {
          "ref": "1ec0a98b-e26e-4e45-9118-779f3bd3a319",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d11c4064-0d1e-4d29-b5f5-8ef2528c2b77"
        },
        "item": {
          "id": "818d22f6-ec32-4a25-9d82-c81b566318c1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "90aacabe-6f30-4146-b5ff-d61b20bec1d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c68b72ba-5f44-4aed-a6d8-117715bac2db",
        "cursor": {
          "ref": "479a0a7a-c1ca-4a30-97fb-6ae9c8974696",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "2838ebc8-0d4a-4e07-a0b0-6ad39081ebdb"
        },
        "item": {
          "id": "c68b72ba-5f44-4aed-a6d8-117715bac2db",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b4f75fa5-e234-4b2d-a2fe-7d2aebf0b6df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d3a5e9-cea4-40fe-b8d4-9f53846b0932",
        "cursor": {
          "ref": "e4e66d02-5767-48fa-bb37-aa165aee9849",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d0461e0b-6b8e-4f8a-990c-ebc30e2447b5"
        },
        "item": {
          "id": "33d3a5e9-cea4-40fe-b8d4-9f53846b0932",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "9891e4aa-1fc7-4a57-a166-949be94fd625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "545dc434-2aac-4e78-92f3-b2ab4351fbf0",
        "cursor": {
          "ref": "0bc708e9-d403-4997-96be-42b531e6d28b",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c44e232b-a97a-45cb-aecb-f05da0bb8caf"
        },
        "item": {
          "id": "545dc434-2aac-4e78-92f3-b2ab4351fbf0",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9a68e1be-cb20-4da0-8747-3a2804789c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6096a6ca-3498-4892-856e-e2f0ec7ed733",
        "cursor": {
          "ref": "ecbf6020-a6b7-4902-a50e-e8dc6a9230bc",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b741335e-e55b-41ea-8439-fc5cd15597c1"
        },
        "item": {
          "id": "6096a6ca-3498-4892-856e-e2f0ec7ed733",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3a9452aa-0e15-4c07-8ddd-ba8f6cf19105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c6d5a3-c20f-4b69-9c52-8231474be0a6",
        "cursor": {
          "ref": "69ae7a54-f275-4fd8-ad2e-26a7fe574205",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "135c8bfe-d52d-48a8-839d-e94bfd565e91"
        },
        "item": {
          "id": "44c6d5a3-c20f-4b69-9c52-8231474be0a6",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9ca0abf1-9097-41b1-bd61-55a183caa527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e99cd14d-369d-4a77-9d50-183f6d6e9b37",
        "cursor": {
          "ref": "ddff4396-1382-4230-a99d-b932c4e6d482",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "93f82e14-1f02-431b-b59c-a1ac81ed6cbc"
        },
        "item": {
          "id": "e99cd14d-369d-4a77-9d50-183f6d6e9b37",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "db352e99-35b1-4a99-8716-48b705470237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1471f08-f71a-4419-88b4-3b4e60117fd1",
        "cursor": {
          "ref": "275744c8-f6f3-4c59-9e59-7642cf8e8fb6",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "10007500-8b7d-4a2d-a234-0b38c2bd3046"
        },
        "item": {
          "id": "c1471f08-f71a-4419-88b4-3b4e60117fd1",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "3c520e7e-5a04-4090-9d5f-a3a890ed5e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "514283aa-a6ce-4cd6-9717-f67e32aa9c8d",
        "cursor": {
          "ref": "2d9394eb-3645-4b18-aaa4-60c5239f8959",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3bb7da30-5413-4f02-9b96-549b265a7b78"
        },
        "item": {
          "id": "514283aa-a6ce-4cd6-9717-f67e32aa9c8d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "9d273b24-81ee-4778-bd88-e006344c0f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f428c913-4527-4dfd-a793-35f9236d682a",
        "cursor": {
          "ref": "c1f8b2af-6695-4190-8412-d8fb747232f7",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "574122a2-135d-4dd2-8239-4e340a01f79b"
        },
        "item": {
          "id": "f428c913-4527-4dfd-a793-35f9236d682a",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "506f44db-d45a-4768-9d6b-96d8fd7e28c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ac2df2-c116-4a9b-923f-823ba5fe23c4",
        "cursor": {
          "ref": "26354769-0f07-427a-86c7-b95cf816ed07",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "71599744-8e62-4d5c-af6b-a06c28c284cc"
        },
        "item": {
          "id": "b8ac2df2-c116-4a9b-923f-823ba5fe23c4",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c639485c-298e-4784-b76b-8d2b7aa30c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9243b9-c63e-45c2-8d90-5a0045bfef3c",
        "cursor": {
          "ref": "c922026e-ea26-415b-a404-6ce4717de15e",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "009e5b55-60fb-4cb7-ac6d-9ac4162a1e31"
        },
        "item": {
          "id": "3a9243b9-c63e-45c2-8d90-5a0045bfef3c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "524805a0-e359-4630-a743-229441f3ddf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c3b89b-d346-4d7e-9bf5-21bbd2509954",
        "cursor": {
          "ref": "5432f7eb-f45b-4379-b094-c3110a41d9eb",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "6e2b8c2b-6e1d-4626-a3b5-a3b41556338f"
        },
        "item": {
          "id": "71c3b89b-d346-4d7e-9bf5-21bbd2509954",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b8fa91fc-aa60-4e6d-8d86-9b359fc8c65f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c20cec6-f634-4119-a2a3-29a3147e21aa",
        "cursor": {
          "ref": "8eea5dfc-7bc5-497b-b1f2-6efd0f7159f6",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "af9c28bd-e6ce-42fd-84df-8d8cb779eb30"
        },
        "item": {
          "id": "9c20cec6-f634-4119-a2a3-29a3147e21aa",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "02c99529-efa1-45df-a1c4-b0f730e6ae2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9bfc7d-2b08-45fc-8162-a76974f96132",
        "cursor": {
          "ref": "78cbabc1-8b30-4c27-854d-b7849a129309",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "afbbf700-213e-407a-a9ca-5572127e1497"
        },
        "item": {
          "id": "1c9bfc7d-2b08-45fc-8162-a76974f96132",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b4783dd1-d656-40d3-aca9-02e804eb39b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a34fc04-c9c2-4fe1-b83b-79aae80766e8",
        "cursor": {
          "ref": "f50a4960-d1f8-4f3d-afc5-8a53cc09347b",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "5ffde716-1583-4cfb-a16b-29c0bbe10e5e"
        },
        "item": {
          "id": "6a34fc04-c9c2-4fe1-b83b-79aae80766e8",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b70e1465-3b2f-48ae-a9a8-49df02d9c720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cae087b-5097-43be-aec1-c060b4bd9ce1",
        "cursor": {
          "ref": "f49a04e6-7d0c-4c9d-b980-e3c50e8233a6",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "3a0790bc-6ef3-4fe9-87ce-96eed8a2f729"
        },
        "item": {
          "id": "6cae087b-5097-43be-aec1-c060b4bd9ce1",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3d754317-e5aa-40c4-b494-c290581fab1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee486e08-2f0a-4466-8010-2bb92c0330a0",
        "cursor": {
          "ref": "08f3053e-dda5-4b6e-9ea6-ba40abe82ced",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "1d14e6f5-0709-4988-a426-473988c67207"
        },
        "item": {
          "id": "ee486e08-2f0a-4466-8010-2bb92c0330a0",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3e6562c4-270b-4256-b4bf-0ad6d1b625d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d315c58f-9f7f-4cb6-a037-1144cb5a043b",
        "cursor": {
          "ref": "1219e626-7662-4882-a9b6-867abd6c8b7a",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "17a638b6-91f1-424f-8c5d-dc4b99a1d72d"
        },
        "item": {
          "id": "d315c58f-9f7f-4cb6-a037-1144cb5a043b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e06cb547-640f-46f5-8571-004623be9a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a288b0-1c48-4bca-8ba8-54df0f0f58fc",
        "cursor": {
          "ref": "dab8bf07-d203-4341-87ed-502613a5da3a",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6dd6652b-91e7-4d81-b0a6-981f33188b51"
        },
        "item": {
          "id": "20a288b0-1c48-4bca-8ba8-54df0f0f58fc",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "726eab25-71b7-4931-a5b0-50211ae07c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bfaa94a-c4ad-4666-aa04-d63b137d9a76",
        "cursor": {
          "ref": "164580d2-8fad-4c52-a082-b8e29c6e3c73",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "2483958c-28ae-4020-9d79-677e220fe299"
        },
        "item": {
          "id": "2bfaa94a-c4ad-4666-aa04-d63b137d9a76",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d3fd08ac-c3f9-49d1-b4b8-cdce0b4ea427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f22b388-88f5-4ecc-90e2-944cabe65ef0",
        "cursor": {
          "ref": "5647267b-3759-4d79-84d2-40438606dc4d",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "63ac7401-d5ea-4ddb-9284-43dfd547e440"
        },
        "item": {
          "id": "0f22b388-88f5-4ecc-90e2-944cabe65ef0",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "4bcbfd1b-8464-4694-8d07-ef54560e9c89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b3eceb-f8d9-4d4d-bd28-10a7888a71e7",
        "cursor": {
          "ref": "d0dec46b-1428-4002-8c0f-64ac9dce1307",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "21b1977d-38a1-45c1-9600-06b0bc2eedbc"
        },
        "item": {
          "id": "b6b3eceb-f8d9-4d4d-bd28-10a7888a71e7",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "0a2879b9-1db6-43dd-9558-e1c0d7d1a51b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a84c3565-4677-4944-bb6f-3662ed8f4907",
        "cursor": {
          "ref": "a2f5b012-9730-4863-a595-c006d0c23ce3",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "517a5a63-59d6-4fba-bd46-dc9fbe1fb582"
        },
        "item": {
          "id": "a84c3565-4677-4944-bb6f-3662ed8f4907",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "987be7be-3b87-4dd2-b996-579145d609e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d6c67fb-ac08-4bc2-b2b4-a405d18c3843",
        "cursor": {
          "ref": "9c3e70d2-8ae7-4599-a263-ac75dc4bed1c",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "7addeb8f-e146-4658-b8a9-7e9d9242bc6e"
        },
        "item": {
          "id": "5d6c67fb-ac08-4bc2-b2b4-a405d18c3843",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "beeb9708-5ee1-49a7-8f53-3de71d5f1b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f90ab325-0c69-4731-b09c-5f80a5189103",
        "cursor": {
          "ref": "bf66ef88-d42c-416a-870a-05ff5b96c1c5",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8e0b4ab6-12f9-416b-b695-989a5f3a9a74"
        },
        "item": {
          "id": "f90ab325-0c69-4731-b09c-5f80a5189103",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "aa242706-1da0-4be9-9f9a-a292c81fb6d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba724a19-e04c-42dc-bf20-c04b5cd59b7b",
        "cursor": {
          "ref": "c2eda04b-ad72-4ba5-b5a7-e1aab3ab61e9",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "92436b39-423d-4df2-b4c8-edf9ed13be78"
        },
        "item": {
          "id": "ba724a19-e04c-42dc-bf20-c04b5cd59b7b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "dc29ba51-d5de-4b55-9548-139f8fa2af23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b86fa869-55e1-4f2d-86a4-7d8829961b3d",
        "cursor": {
          "ref": "cc41dcd0-a4ca-4022-8f64-b04a0ff8f91a",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "49ce30bb-bf3d-4ced-988a-e3629c9980c4"
        },
        "item": {
          "id": "b86fa869-55e1-4f2d-86a4-7d8829961b3d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a5cdbefd-8e3c-4787-aa97-942a6714fbe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d490d47a-f315-4ee8-96ed-2101fc533387",
        "cursor": {
          "ref": "8a08856c-5ab5-4c87-b52a-95ab53361237",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e5491567-870c-4b40-bb43-ba213c4d939b"
        },
        "item": {
          "id": "d490d47a-f315-4ee8-96ed-2101fc533387",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e14c6822-dd25-4e8f-9b73-964675877e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dba511b-edcf-4c51-88b4-5ea72da400c4",
        "cursor": {
          "ref": "9ecb303f-5bf7-4d63-b156-8e1f4e5b142f",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "450f85f8-17a2-425a-a0f4-53ecba40c75d"
        },
        "item": {
          "id": "5dba511b-edcf-4c51-88b4-5ea72da400c4",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "328c7048-05b8-45a5-a553-e862726c9da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3037a5a8-f8e3-43ed-8b5e-f896da802de2",
        "cursor": {
          "ref": "63bc26aa-a306-4395-9049-71208797d9f7",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "818e3b86-a531-4ccd-ac29-80afbd403094"
        },
        "item": {
          "id": "3037a5a8-f8e3-43ed-8b5e-f896da802de2",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1223ca4a-0b1b-4bf5-85ad-957ac2bfd9a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3838aca8-d1c7-4e57-8140-555cce499be9",
        "cursor": {
          "ref": "5a58cb62-bd48-45f0-b5fa-b21666c7e7db",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0cff0c15-12f9-461e-ac03-151b194d0cb1"
        },
        "item": {
          "id": "3838aca8-d1c7-4e57-8140-555cce499be9",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "7ff99b28-199f-42ed-9851-36c24a4255b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb80860-1269-4ff7-9dee-34749c30402f",
        "cursor": {
          "ref": "8bf4facd-eab9-4475-8bc7-b255e70fef59",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "abf5854b-b3cf-45fd-82ae-01c400729f6d"
        },
        "item": {
          "id": "4cb80860-1269-4ff7-9dee-34749c30402f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "93219c46-48dd-4b7e-b4b1-272868dc1f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d48c214-b828-4acc-ada0-480ed0b5193f",
        "cursor": {
          "ref": "74a8ca53-bb7e-4dd3-ba65-08796a488a27",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e017ac22-020c-44df-8d40-58a5d2edbf81"
        },
        "item": {
          "id": "6d48c214-b828-4acc-ada0-480ed0b5193f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "dd51d8d9-47d8-475d-9a8b-190833df85fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d23056-21cf-4a30-9a8b-eb935a0fd231",
        "cursor": {
          "ref": "c2b683e9-8ee3-4c71-8e67-26d1a3ab2c21",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f589e8fb-a918-438e-946f-9b69f17ded02"
        },
        "item": {
          "id": "e0d23056-21cf-4a30-9a8b-eb935a0fd231",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "ef0202a7-df29-4eb0-89f7-4d66a0caec79",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5594c1ad-7380-4a0a-8505-327efb42c8ce",
        "cursor": {
          "ref": "30eaa00e-e6e0-48f8-a894-d31137813f51",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "1155915f-edae-4520-8713-20bbb3d61a87"
        },
        "item": {
          "id": "5594c1ad-7380-4a0a-8505-327efb42c8ce",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5c1de1c8-2d1e-4266-aac2-f9ff5aaaf16e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "b9ebd5d2-6efd-4eb0-8456-947afe81fc30",
        "cursor": {
          "ref": "fd66793d-d7b9-47b1-9800-d4d1e7ecfc39",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "53ffec4e-09b1-4174-9f84-2167fc81a07c"
        },
        "item": {
          "id": "b9ebd5d2-6efd-4eb0-8456-947afe81fc30",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ae7158f3-a799-4740-b659-2f6887a6ff66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "029449c4-1655-44a6-81bc-2e53098ad238",
        "cursor": {
          "ref": "e1a05e64-94a3-4134-93e9-7945d599a72e",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7bdf671d-093e-40f0-9cc6-21e61b9178cc"
        },
        "item": {
          "id": "029449c4-1655-44a6-81bc-2e53098ad238",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d811fa29-d35d-4fb0-a95c-3559cda7a51d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "7ee7cd9b-0afd-4ad7-b61b-3c7859146c54",
        "cursor": {
          "ref": "5b6b0bd3-4ed7-43f8-8817-a2784927b9cf",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8d9a9fe9-e27b-4ac7-9b13-dae15efa75a9"
        },
        "item": {
          "id": "7ee7cd9b-0afd-4ad7-b61b-3c7859146c54",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "882f12eb-a4ac-4f05-99a2-9b57bf2c780f",
          "status": "Created",
          "code": 201,
          "responseTime": 4977,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c5024e7-a3b5-44d3-8f52-6a8f53080fc4",
        "cursor": {
          "ref": "cc043dd0-547f-457d-894b-9358e786f5fc",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "46ce37e1-2606-4c3e-87c1-38acb2469ff8"
        },
        "item": {
          "id": "5c5024e7-a3b5-44d3-8f52-6a8f53080fc4",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "a949a739-4c63-4688-b074-4e85ce76cdc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "162b9995-e382-4e78-a219-7b7513eda13f",
        "cursor": {
          "ref": "71a44d91-2cf2-4479-8695-f3d67fcff0d1",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "01edc5cb-b070-4487-98cf-45da384f4420"
        },
        "item": {
          "id": "162b9995-e382-4e78-a219-7b7513eda13f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f926b66b-0e7a-4efb-8076-d23b768d6ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "ba329412-50ef-4097-94fe-3a8aab2806d0",
        "cursor": {
          "ref": "adc78105-967f-43b0-b4e8-f6ab3d85c3d9",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c0c92393-9e8d-4af8-8dfe-966ac4faafb9"
        },
        "item": {
          "id": "ba329412-50ef-4097-94fe-3a8aab2806d0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7a9c59f0-d191-4a8d-9f4a-2574b31f38a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4b7acd-949b-4574-86a0-1a88813f9bd8",
        "cursor": {
          "ref": "cf264ff5-f0f6-4f33-bc94-4967b761b00d",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "9e02381e-a2d5-4cb5-9741-b871dc42cdcb"
        },
        "item": {
          "id": "5a4b7acd-949b-4574-86a0-1a88813f9bd8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "96f1865e-2cbe-4674-bb9f-eaaaa1de783b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18010826-c0aa-4564-b94a-4c9d95d1c687",
        "cursor": {
          "ref": "2a9e1ccf-f70d-4fde-8fab-bbd7d28f23c8",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "1f558af8-8ea8-472e-8064-8006db49ef4f"
        },
        "item": {
          "id": "18010826-c0aa-4564-b94a-4c9d95d1c687",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3553cc1a-82a8-4482-b45a-c7a4261501ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29defff5-7849-45e2-98ff-b727076bbf7b",
        "cursor": {
          "ref": "ab539091-856f-46af-9071-6c19836acd4e",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "9f3a0f75-1e54-4437-b5a9-95119e211eea"
        },
        "item": {
          "id": "29defff5-7849-45e2-98ff-b727076bbf7b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "fdff377c-34dc-42f1-9871-fd5eabb08a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d881c8a-1fd2-404e-9475-7adbfeef4dbc",
        "cursor": {
          "ref": "5e7a1fef-a380-431e-8021-03dd5b99b902",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "394cceae-5da4-4ad2-b2f1-4565222f8fe7"
        },
        "item": {
          "id": "3d881c8a-1fd2-404e-9475-7adbfeef4dbc",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "03ac9d1c-db9c-4d94-acf4-3fbfa0cba413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b62a3df-f17f-4794-a8a3-b8b35b1b0787",
        "cursor": {
          "ref": "80a01c6f-2be5-456a-b19a-4ae8545a300f",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "fb125297-b826-4ae3-814e-2883211625bf"
        },
        "item": {
          "id": "2b62a3df-f17f-4794-a8a3-b8b35b1b0787",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "59e4bddf-13cf-4585-9612-b0608786efcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89bf2f36-1b55-47ed-a6f5-f84ac0de8677",
        "cursor": {
          "ref": "328c4e90-7211-47e7-8a3d-a0f7f93c2124",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0918715c-d7ee-4123-a7a3-66484edafca1"
        },
        "item": {
          "id": "89bf2f36-1b55-47ed-a6f5-f84ac0de8677",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "fc19ae66-9afc-46e1-bbff-6aaacee3051d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "976b868e-b2ff-41cd-a571-04ee14fbe84e",
        "cursor": {
          "ref": "101fbb01-dc57-4ff7-b76e-aaa4c5ca7903",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3ecfa6ee-dd83-4407-a7c5-db93cc983db3"
        },
        "item": {
          "id": "976b868e-b2ff-41cd-a571-04ee14fbe84e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c1a9e6ae-9c28-4957-8dbe-41f0acf05e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc12f18-8e14-42cc-b735-0d81bffb2f6b",
        "cursor": {
          "ref": "6c08f35c-87f7-40ff-a051-7a8d99fac193",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "d737e93d-20f6-4a84-bf0f-ffb055ffbdb0"
        },
        "item": {
          "id": "4bc12f18-8e14-42cc-b735-0d81bffb2f6b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "de72800b-0640-4464-90ec-04f46fbcddd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6b7d08-7b33-42f5-a955-c3f3bb3c27b4",
        "cursor": {
          "ref": "09ad1414-d2db-421f-87be-3aa5fa896d42",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "bbcd208a-e941-46e6-b796-05acb921471c"
        },
        "item": {
          "id": "fa6b7d08-7b33-42f5-a955-c3f3bb3c27b4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "44113da0-56af-4a09-be09-36c782ab6618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56338cdc-5421-406d-babe-7686eecb525f",
        "cursor": {
          "ref": "5d751428-9284-4abe-bfc6-e98bc00f2b51",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a557653d-2a19-4745-b84f-eb87ef519d14"
        },
        "item": {
          "id": "56338cdc-5421-406d-babe-7686eecb525f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d811a355-68be-44e8-bb46-5cbe99f6dda6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "913cb7c6-4f8c-4d68-a7bd-682d44b12194",
        "cursor": {
          "ref": "7b607318-4822-4a6d-bca0-9d40153e565f",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "73178fc2-8ae7-4bd6-a8c8-088b31701201"
        },
        "item": {
          "id": "913cb7c6-4f8c-4d68-a7bd-682d44b12194",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "578f34f7-e9d0-48d6-b2c3-73996c1c921d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "640f166d-bf0a-4ab8-9247-8fd6129f2121",
        "cursor": {
          "ref": "93d0843b-f906-47ff-9152-22c11ee07e85",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2aa8a2ad-84ec-4f3f-98b0-90ea2f35b9de"
        },
        "item": {
          "id": "640f166d-bf0a-4ab8-9247-8fd6129f2121",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a8f2d5b0-e543-417e-97a9-1153a104ada3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9543c606-59d7-4b3a-9d83-4258d93214e7",
        "cursor": {
          "ref": "b85d4c60-9aee-4672-a785-caeea4eacefd",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "95738b55-637d-4868-9be8-9813daae52d5"
        },
        "item": {
          "id": "9543c606-59d7-4b3a-9d83-4258d93214e7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "14f859fe-795b-4aa8-a431-255841b1bc92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c23c6d20-a9f7-4e33-ba37-162962a5f442",
        "cursor": {
          "ref": "d046e903-1cc4-4f9c-8fb9-c9d7eb62eee6",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c4290f07-dde5-4ab1-bae7-8580c3b4f15f"
        },
        "item": {
          "id": "c23c6d20-a9f7-4e33-ba37-162962a5f442",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8d291d89-eb5f-4b3e-9656-04cb282ce149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2066fdf7-4e2b-42ff-b93e-74302c6570d6",
        "cursor": {
          "ref": "e2a2448d-8178-4a07-896f-ac0746e59db8",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "6b570c44-ae93-4a0c-8d69-1d0d2442d5e1"
        },
        "item": {
          "id": "2066fdf7-4e2b-42ff-b93e-74302c6570d6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "37b97b3a-5400-45a2-8d6a-b4d596e4861a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb7623f5-a414-4ada-bcf2-ffb4e77895f7",
        "cursor": {
          "ref": "22b68f47-c9fc-42b3-827c-8cdc80a3994e",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "cfa1acbe-bad5-46f3-a042-0379cb429852"
        },
        "item": {
          "id": "fb7623f5-a414-4ada-bcf2-ffb4e77895f7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c369696a-153d-4976-b372-109809d11fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b9f5e60-f4cc-4835-aca5-d64554e572c2",
        "cursor": {
          "ref": "b4546aa5-7a7b-46af-95e1-7daf7c83684e",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b33350bb-0567-43b1-8f46-c50102e3fed3"
        },
        "item": {
          "id": "6b9f5e60-f4cc-4835-aca5-d64554e572c2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "005dfc75-f92f-419f-9e0f-543fd8d27667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e9dc9c-9bf7-4582-829e-80d63977bfd4",
        "cursor": {
          "ref": "6eac35ad-f400-461b-9c22-c757ffc7e01e",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a0c1ce4d-5e8b-474c-be68-e3bddf8ab0af"
        },
        "item": {
          "id": "80e9dc9c-9bf7-4582-829e-80d63977bfd4",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "574513f7-2409-4c22-aff7-6689c78eb469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92dc988b-d180-42ed-9192-3f27cd7cbb3d",
        "cursor": {
          "ref": "8bb11583-7ec1-4096-9da6-364131a8dbb5",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "4d0820e1-5f89-4190-a81c-e355d9ceba79"
        },
        "item": {
          "id": "92dc988b-d180-42ed-9192-3f27cd7cbb3d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1ef2c94f-5ef2-4a61-a0d3-b2d6ae9046bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ac8404-1235-4bd2-958f-12c313f30270",
        "cursor": {
          "ref": "9794d08c-77fa-4721-ad65-db92d9496a4f",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ad9326f3-461b-4ae6-b63f-674d0987c29b"
        },
        "item": {
          "id": "93ac8404-1235-4bd2-958f-12c313f30270",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "65439227-6120-4d84-ba79-a96d1d6fc453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69eaa8ca-4e3e-4ad7-aa7c-886c588b6383",
        "cursor": {
          "ref": "c0642409-975f-44d0-b54b-7860ff7a86c6",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e730e555-fe9b-400a-aed8-391882fe2802"
        },
        "item": {
          "id": "69eaa8ca-4e3e-4ad7-aa7c-886c588b6383",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "52dfcf69-0d20-4bd1-999f-018f4eb4b139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df18d988-5312-4222-882f-c02e6e7ae5f9",
        "cursor": {
          "ref": "31df965e-1838-44a7-85f9-2d30f903ec12",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d84aba47-3c53-499d-88d3-de4d98b29111"
        },
        "item": {
          "id": "df18d988-5312-4222-882f-c02e6e7ae5f9",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e2f88d53-7a6e-400d-82cd-4c31c9d954e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c23dff6-5b41-4386-9d36-7e533d13adb1",
        "cursor": {
          "ref": "646cb718-fe63-490e-8c6e-26f6497b2f0b",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f17ce392-2506-4f38-8058-5f8d357a0a18"
        },
        "item": {
          "id": "5c23dff6-5b41-4386-9d36-7e533d13adb1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "78defcfe-b52d-42ab-8c93-514cc846354f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9edd7653-e699-4fca-be08-22b9daea3293",
        "cursor": {
          "ref": "d1ab6db1-28f3-4f8b-abb5-440468ad28b7",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f3f5b8a5-f507-47a3-acef-288e5e2a33d0"
        },
        "item": {
          "id": "9edd7653-e699-4fca-be08-22b9daea3293",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3dd371e3-f930-46a2-a791-49ed32faab52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "325955e4-abee-4ded-9419-3863c7f354c4",
        "cursor": {
          "ref": "e24957c8-d57d-41cd-9cc7-df0c24273bf0",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "1b3f1c89-ded1-421d-8876-bde63ba7541e"
        },
        "item": {
          "id": "325955e4-abee-4ded-9419-3863c7f354c4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e267ea9d-49f1-42ad-8ec3-4b9f45e079b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775127d9-e189-4d72-b375-871db9d000c6",
        "cursor": {
          "ref": "d8b95af4-9388-4c63-b9c0-6ff414029b2a",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d6ccd4fc-0d75-42ae-b8b7-c0dea86d7db1"
        },
        "item": {
          "id": "775127d9-e189-4d72-b375-871db9d000c6",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6c0c86ea-abf2-461c-80f3-13e07747f20e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "495aefcc-e92c-4e01-9263-028f411ddad0",
        "cursor": {
          "ref": "5a6d2ba6-0d89-41e7-9395-edfc612b5842",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3b74d6a0-ae03-4f60-9a45-30013911f8dd"
        },
        "item": {
          "id": "495aefcc-e92c-4e01-9263-028f411ddad0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f8396bc4-20c6-4485-833c-31aa7ac61462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc958af-c6a2-474f-85cb-629224ffda6d",
        "cursor": {
          "ref": "7c210193-ddf8-4d59-a09f-d18734d60037",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f13e0905-4fed-4d36-916c-7c82ccee63f1"
        },
        "item": {
          "id": "ecc958af-c6a2-474f-85cb-629224ffda6d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d6cbd375-6f84-4a52-ab40-6ed8a712ab96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8260f79f-d476-4bde-b0ae-968dba996f59",
        "cursor": {
          "ref": "ec33b858-1928-426c-8e18-b00fed801483",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "254d90de-e71f-4c69-b6f7-84cd9f3d8e4e"
        },
        "item": {
          "id": "8260f79f-d476-4bde-b0ae-968dba996f59",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f20befbd-e6f4-42b8-9353-cd9c73d7407e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bdfa4e3-423e-4921-814b-811d295d479c",
        "cursor": {
          "ref": "1c426dae-3196-41fa-85e8-204a3e7a0c1b",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "93015369-9bf5-430b-a9c3-4dbe32d87a49"
        },
        "item": {
          "id": "5bdfa4e3-423e-4921-814b-811d295d479c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6e0fd198-8694-467c-a2d0-f1903828d5f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef6ac64-bb4f-4334-9d36-db1496ab866f",
        "cursor": {
          "ref": "e7f6eefd-c19c-4c84-ad27-44ccb650406c",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4e3e2e48-2ac6-4ca8-b15a-4887d527a695"
        },
        "item": {
          "id": "aef6ac64-bb4f-4334-9d36-db1496ab866f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "403ef66d-b739-42a6-959e-c360da49f46f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d8e605-9029-485b-af76-5c9c3e1a8a58",
        "cursor": {
          "ref": "a3517257-5e5b-4366-b417-8b62f3d11a2c",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "733ab1fe-0d81-4d54-9e19-4d6443e742bd"
        },
        "item": {
          "id": "f7d8e605-9029-485b-af76-5c9c3e1a8a58",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "651abaa2-1684-4a48-b280-dd7c3aa8595b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "542e736b-82f8-42a7-9e43-fcac5cfe437d",
        "cursor": {
          "ref": "7eecd66a-c9d0-46e9-b476-ab85327cad46",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f221c650-8b87-412f-a55c-6938f5140ca5"
        },
        "item": {
          "id": "542e736b-82f8-42a7-9e43-fcac5cfe437d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d414a9ba-b8c9-40c1-b91f-65a5e33a4741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c032376-986b-4025-9dea-8955308d03ae",
        "cursor": {
          "ref": "9c995274-e38c-4bdb-af3b-9983ae10d4d6",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "6c002483-d1ff-4f62-99aa-bc175e36944c"
        },
        "item": {
          "id": "4c032376-986b-4025-9dea-8955308d03ae",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8bbc49ad-9e1a-419f-82e8-5ebd0e761fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb9cd3b0-12a3-48b2-b175-6171e92053be",
        "cursor": {
          "ref": "72033a0e-416f-4ade-8a21-61ef83fffbd2",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "aba60dbb-2523-4f4a-91e9-68b097bab82b"
        },
        "item": {
          "id": "bb9cd3b0-12a3-48b2-b175-6171e92053be",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "38c88cf3-7759-4b96-be1d-45da4f835c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b670e4-141f-4553-b1b0-311ea2ba9b41",
        "cursor": {
          "ref": "975a67ed-9d7f-4e7b-9c8a-7df55bac3b9b",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "fff680fa-5b9d-4486-a706-5ddadb439fab"
        },
        "item": {
          "id": "25b670e4-141f-4553-b1b0-311ea2ba9b41",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "253cd57d-debf-4eaa-be7a-e12f34430520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "121cc285-9a70-4edf-9609-4cf58ab83507",
        "cursor": {
          "ref": "a7b7d9dd-a83f-4094-9fcc-cfd85dda538f",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3d07537a-1ce2-4ddd-a0d9-b66d4acf2170"
        },
        "item": {
          "id": "121cc285-9a70-4edf-9609-4cf58ab83507",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3532f00a-cb7a-4971-8837-ce070126641d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c14ed1-676f-4056-94d6-506f12ac7e02",
        "cursor": {
          "ref": "6ae41d8b-3536-4170-ad7a-6b02f4024357",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ee66502b-eab8-4c35-ac49-f43b0eef82c6"
        },
        "item": {
          "id": "d9c14ed1-676f-4056-94d6-506f12ac7e02",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f1dc7b05-e842-41c3-b3e7-b1fef189d7d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df3f06a-7221-4627-8ddf-b6770a25a42a",
        "cursor": {
          "ref": "22ea77f7-70ad-4f43-bdaf-bd0b7c9bf0f7",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "1705993f-c396-40ac-8e13-60d3a4c3c875"
        },
        "item": {
          "id": "8df3f06a-7221-4627-8ddf-b6770a25a42a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3957af69-7fdc-4a6a-9678-85994c9d69a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0de53a-1e2d-4e22-85fe-266e7f6139af",
        "cursor": {
          "ref": "80eeaa98-4a17-4eb3-94b8-88c2e9670463",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7728547b-ae4c-4eb0-a299-fd79239db30d"
        },
        "item": {
          "id": "5f0de53a-1e2d-4e22-85fe-266e7f6139af",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b8a9cf7f-d604-4bde-9aeb-51775e1fbe4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80cf5be4-bf4b-408c-8705-29174078f1bd",
        "cursor": {
          "ref": "8ea6b198-72e6-44a8-96c6-c2487c1d38df",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "37c90609-1d93-4e5e-a9bd-e11b5cb94dba"
        },
        "item": {
          "id": "80cf5be4-bf4b-408c-8705-29174078f1bd",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9e5bbd87-d175-4b8b-b419-23603d1cc4f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3442c3d6-b877-4bad-a8fd-8eab54b86ecd",
        "cursor": {
          "ref": "51380250-29e3-493e-8f94-bbd7fc30212f",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e4691ca8-26bf-4e98-99f6-51beef6eeeb8"
        },
        "item": {
          "id": "3442c3d6-b877-4bad-a8fd-8eab54b86ecd",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2118ed6c-3d18-47f3-b91e-d54fdb58e925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ec3f87-6da9-469b-9d83-ee05682e84fe",
        "cursor": {
          "ref": "bd49047a-7961-4392-820f-e27dd55ccf2f",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d0003d7f-d643-43a7-b1df-0b6308a5a4e0"
        },
        "item": {
          "id": "a2ec3f87-6da9-469b-9d83-ee05682e84fe",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e6a00152-a85d-47b3-8f7d-c26095a620b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d89b6c6-c250-4f46-b766-3f37eda9581a",
        "cursor": {
          "ref": "bd553e84-6a68-4ed2-95a2-47b24cf7d3b4",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "7189f6f7-aab3-437c-b55c-a0f4c8b3c0b5"
        },
        "item": {
          "id": "6d89b6c6-c250-4f46-b766-3f37eda9581a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e6469f2b-9fc6-4ebd-8dad-e033e3bcec29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a27b90f-8da1-46c2-af78-a5bb7f3c3ba2",
        "cursor": {
          "ref": "67829717-5e3e-48b5-bd7b-9c6dcda4056b",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "959c607b-3741-4c20-a629-f8166e24bcbe"
        },
        "item": {
          "id": "5a27b90f-8da1-46c2-af78-a5bb7f3c3ba2",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "65d8dba5-0e57-415b-84cf-9bcd6d20db3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912881dc-76fe-4bd9-ac1e-b51c235739a6",
        "cursor": {
          "ref": "0dce0c50-7850-4f19-8555-f62b97a2d9e7",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "662f6f83-02b6-453b-8760-43504f1cf776"
        },
        "item": {
          "id": "912881dc-76fe-4bd9-ac1e-b51c235739a6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "363b6b92-919f-4d63-abba-e1219e14c010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5f8a4b-c697-41ab-a5de-7a4cb99985f6",
        "cursor": {
          "ref": "6711599e-87cb-40f7-88ba-673f838a7cee",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a5a750e1-b38d-4208-9b10-d57527437c76"
        },
        "item": {
          "id": "4e5f8a4b-c697-41ab-a5de-7a4cb99985f6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "66deaa5a-0434-482c-810a-37484c6dfc82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "457a9442-4d54-4f06-a687-942128b9a0f1",
        "cursor": {
          "ref": "388197d3-80da-4abe-966f-853e7f576921",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "dc54b831-6b3d-4acc-a6b6-9e011b867842"
        },
        "item": {
          "id": "457a9442-4d54-4f06-a687-942128b9a0f1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8ce13e6d-27b5-48bc-b51b-42497730a2e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5aea086-1dad-4f69-9125-8f51b7d9ae81",
        "cursor": {
          "ref": "7ee386c5-aaf9-46d9-8981-7c4d6d6bb39d",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "67d482ed-50a1-4ace-af61-5c0d002fcdb6"
        },
        "item": {
          "id": "a5aea086-1dad-4f69-9125-8f51b7d9ae81",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "edd29af7-2c59-4fc4-8f12-99e565e3276f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df068257-a235-436d-b9d2-d9558a2ba1e7",
        "cursor": {
          "ref": "3dd6d6cd-3656-4a99-9f72-18dfdb063637",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "05f404a7-90dc-4d94-a829-e2ce5d0c9271"
        },
        "item": {
          "id": "df068257-a235-436d-b9d2-d9558a2ba1e7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ae09ec8e-c678-40dc-ae48-26437297f024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7956369-6ff5-417d-8c2b-1f8912439528",
        "cursor": {
          "ref": "4226af24-9054-471f-9c3f-a8013fd4bcc2",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "071f1dd5-4953-4f80-9437-14f0a4f50f23"
        },
        "item": {
          "id": "e7956369-6ff5-417d-8c2b-1f8912439528",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "07bc26f1-8505-421e-86ed-d13485badcdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1972e66-acba-474a-a4a3-4648a76d41d4",
        "cursor": {
          "ref": "d6d9a487-b2cb-47d7-a4c2-7cfdb1898eef",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "badf15e5-0fec-4716-9c1c-f7b861ddc194"
        },
        "item": {
          "id": "c1972e66-acba-474a-a4a3-4648a76d41d4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9aa2f713-ccb3-44e2-aee4-958b734bf3b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc1ce76-3505-4978-b4b4-eee08ae49510",
        "cursor": {
          "ref": "0c9c13ff-7998-43b9-bc03-eba77d321538",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6eed0bcd-e98c-485e-80fa-3012c30f284c"
        },
        "item": {
          "id": "7cc1ce76-3505-4978-b4b4-eee08ae49510",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9996bbf7-0ce8-4669-8295-24935660a726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5937a8cc-88f7-42cb-948d-5100771bcfe2",
        "cursor": {
          "ref": "3ee0b7c6-af70-46b6-b4f1-b1f82efcdb17",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "c0bca710-e97d-4445-b1f1-7cf4c13eca4d"
        },
        "item": {
          "id": "5937a8cc-88f7-42cb-948d-5100771bcfe2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ebec2d75-77f7-4e36-99d1-244b54f1b212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e25a74-5f08-4f13-9b83-3d64d6265807",
        "cursor": {
          "ref": "103f85ed-4c13-42be-8212-3b7b2e4f2626",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "494bb2fe-68e4-4fa2-9e20-09479bb41e99"
        },
        "item": {
          "id": "d6e25a74-5f08-4f13-9b83-3d64d6265807",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "61cab0a8-3a3b-4d90-8b2b-f13ede6def9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a270ec-b734-4c0e-83d5-281bd4639200",
        "cursor": {
          "ref": "ea8d0211-7a85-465b-8b65-81a9c38f77c6",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "dfa1484c-0172-43f4-a403-ca042e5fbf58"
        },
        "item": {
          "id": "c4a270ec-b734-4c0e-83d5-281bd4639200",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e3a9e89d-0f5f-444f-95f6-aa319e945c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e5ed40-9bb3-42a2-8a97-e2bb6f148876",
        "cursor": {
          "ref": "27ee6e06-d4be-4983-bf06-8b7ca346e333",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "497b882e-ff19-453d-8eaa-6e71a9f559df"
        },
        "item": {
          "id": "48e5ed40-9bb3-42a2-8a97-e2bb6f148876",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "362487ad-0a8e-46cc-b6e0-a24aa8e7f201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7d1dbf-d11b-479e-9955-f550ad27d131",
        "cursor": {
          "ref": "e1c0fdd8-e08a-48d2-9a0e-3822cef1b673",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "aab04986-228b-4719-ab79-2f9937d61f6d"
        },
        "item": {
          "id": "ea7d1dbf-d11b-479e-9955-f550ad27d131",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "58fc00a4-5717-4135-a5e2-9d9aea16b743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11851466-96b9-4e13-8cc4-63277c798ee5",
        "cursor": {
          "ref": "17b73d7b-9fdb-4137-8a9f-26913c5f996f",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4f8dee1d-5219-4518-8df4-14ff21cb29ef"
        },
        "item": {
          "id": "11851466-96b9-4e13-8cc4-63277c798ee5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f491814b-a6ed-4ee5-ad6b-21f04686fd48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c385af-c102-4b15-8f6c-ffaaebd25af9",
        "cursor": {
          "ref": "62226c89-5432-4cf7-b74e-4ffa3a30fcff",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "882b4893-3369-470e-bc49-3a1494b19cd8"
        },
        "item": {
          "id": "69c385af-c102-4b15-8f6c-ffaaebd25af9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4e356554-35f3-47cd-9392-f3212bc12a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38730b5a-4a9b-4f18-bc9f-43a6f7d25c37",
        "cursor": {
          "ref": "113601ac-3fd0-402c-a8d7-b86d688aa175",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f20f4e9d-e921-4aa3-91fb-e716337e8db9"
        },
        "item": {
          "id": "38730b5a-4a9b-4f18-bc9f-43a6f7d25c37",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2d933e33-5c76-45e7-9555-d01ee28ee793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ccc4f38-8b8c-400c-8a09-877728f6ebe2",
        "cursor": {
          "ref": "33ad33a3-38ed-4d46-9bf9-8271f92e3de5",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "aa4919cc-bc95-4bf7-b652-3ac7e6de98c4"
        },
        "item": {
          "id": "2ccc4f38-8b8c-400c-8a09-877728f6ebe2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4b6a8c9f-1b74-41ca-98b3-01538c926e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c0b933-c997-44ff-90b2-5a2571d58ca2",
        "cursor": {
          "ref": "313d092a-ac05-4543-8b39-22d8b1955e49",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f0c5aff8-265c-44e5-9ab2-43d904beb783"
        },
        "item": {
          "id": "30c0b933-c997-44ff-90b2-5a2571d58ca2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4d1f409f-89f8-4299-9de1-208a2a7e166d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad071a9-0342-4d38-8996-922c827a687c",
        "cursor": {
          "ref": "84264593-e43d-47ab-8e98-739f04665234",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "cee9f642-3eb3-4e6e-a546-60bc2e8a6089"
        },
        "item": {
          "id": "5ad071a9-0342-4d38-8996-922c827a687c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "39812db9-506d-40ec-a106-95e7927c1504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a123160-686f-4085-87cf-71bba08141ab",
        "cursor": {
          "ref": "c711ebdd-9603-4116-a2b0-7937e84f1a7c",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f4f97e54-9a24-42ae-a29d-21ba8bfa5cf7"
        },
        "item": {
          "id": "9a123160-686f-4085-87cf-71bba08141ab",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "48d89ace-8489-45cb-a199-6065f2e40aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81cd81c6-182c-446e-8dc9-c23b5453f35f",
        "cursor": {
          "ref": "1e11086a-b481-4592-bace-c11532f36945",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "761d3268-b29d-4413-bead-4cb6a595046d"
        },
        "item": {
          "id": "81cd81c6-182c-446e-8dc9-c23b5453f35f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "eba061fd-7604-4d3a-b769-0dbf740ea648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1afca86b-4415-4f4e-a648-ce01a2b667b7",
        "cursor": {
          "ref": "60c65bd0-82bb-4bf7-bb58-90cb8ee80f50",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "42bba9d4-9dcc-41de-9297-29df45b6af67"
        },
        "item": {
          "id": "1afca86b-4415-4f4e-a648-ce01a2b667b7",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "3f40a232-cc1d-4b7b-93c3-a84ff50dfa89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b770e13-723d-4a77-9e9b-46ac4442585c",
        "cursor": {
          "ref": "09e3c97e-3b13-453e-bc5f-7ecce81fd784",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "1b400af7-5128-4a1c-b2ce-6f8f1445df2d"
        },
        "item": {
          "id": "1b770e13-723d-4a77-9e9b-46ac4442585c",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ac18a304-75b2-47ad-b043-8f20fb2bfbd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d35a5f6c-5337-43cc-ba46-62a3ea4b0a20",
        "cursor": {
          "ref": "f666d27e-9b14-4346-8121-67b5ce827b8d",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b867e040-8a24-4176-a120-4389110c363d"
        },
        "item": {
          "id": "d35a5f6c-5337-43cc-ba46-62a3ea4b0a20",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "efba8d3e-1eb2-420a-9344-550bbbc1d4a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1417a501-b9de-4b7d-8f7e-d51775051419",
        "cursor": {
          "ref": "a522888b-1578-499c-a72f-5a85f3abf58a",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f5b5b754-6949-4782-baeb-179febcf039b"
        },
        "item": {
          "id": "1417a501-b9de-4b7d-8f7e-d51775051419",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9fafd2e4-f652-4cbd-bf20-c3398856808c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "639da33e-3d98-425b-ba03-3a4822e610b4",
        "cursor": {
          "ref": "c8750dc6-712a-40cf-94d5-48a9197af4e3",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "950a85ff-7e0a-4ed2-b6be-1cbc70f0fe33"
        },
        "item": {
          "id": "639da33e-3d98-425b-ba03-3a4822e610b4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f841fef6-e2e6-4f78-9e22-d99f05076d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de7a1cde-6dc8-4c5c-9dc3-e038f2e13ec9",
        "cursor": {
          "ref": "5c459d46-eafe-43eb-a121-6697d8dd54e8",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2ce8e84f-bce4-4d50-acac-7776641d8fde"
        },
        "item": {
          "id": "de7a1cde-6dc8-4c5c-9dc3-e038f2e13ec9",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9048f17c-2387-49e9-8f0d-8d2a6f47abf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb49e30e-3fef-41aa-ace6-248b0e6ad201",
        "cursor": {
          "ref": "ae72ef31-f34e-4405-b14b-3aa59cd2ca60",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6e9884f4-491a-4308-ac02-9eb632e80b4c"
        },
        "item": {
          "id": "eb49e30e-3fef-41aa-ace6-248b0e6ad201",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "bc00cf9d-bfae-4043-927b-c7aa4600a548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef47398-1dfa-4d64-a00b-9ff29956f6e9",
        "cursor": {
          "ref": "86673c8f-fb95-4377-8d5f-7090c47dd7d4",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "840a3ef4-8c53-4199-8e5f-884ff96bfe3e"
        },
        "item": {
          "id": "0ef47398-1dfa-4d64-a00b-9ff29956f6e9",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f7af2f60-8df2-4f6e-b2d9-e4800a152ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a25b29b4-d19c-4449-8412-2850a82c9d11",
        "cursor": {
          "ref": "889eea90-ea21-4250-8d12-0a3a33eb490b",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "336968a1-2086-4fd0-a2d5-af5324a45c0e"
        },
        "item": {
          "id": "a25b29b4-d19c-4449-8412-2850a82c9d11",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ce99732e-0e4a-4a1b-8932-b94264735cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e1a287-7131-44d6-8605-3d8f59e5a64a",
        "cursor": {
          "ref": "188fe02a-58f2-4244-88fe-4376370d9f80",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "08201633-8770-48b4-8592-f423189ca797"
        },
        "item": {
          "id": "55e1a287-7131-44d6-8605-3d8f59e5a64a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "60e26d60-e324-4c8e-b44b-e3a70e19f3cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b039d7e-b8a0-4888-ba0f-caedb48c4478",
        "cursor": {
          "ref": "49c20445-b01c-4583-b8c6-e5d18017b19e",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "bd47b92a-bc4f-4e35-92f6-4cc41f49b9d6"
        },
        "item": {
          "id": "5b039d7e-b8a0-4888-ba0f-caedb48c4478",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "eb982084-a616-42ca-b850-7438436730ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6310472a-d419-4935-9223-90cfb7e80066",
        "cursor": {
          "ref": "b891b850-fa39-41d2-bba5-a3e6bedc494b",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "470570ec-c51b-4263-8738-09908698b8e8"
        },
        "item": {
          "id": "6310472a-d419-4935-9223-90cfb7e80066",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "dee9e129-f968-4ad5-8267-342cf242d331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aecbf3c-f4ab-4813-a714-ae3890034455",
        "cursor": {
          "ref": "7548ffa1-101d-45a4-a03f-d1697af37003",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8d9f636e-649f-478f-84ba-881ad4fee978"
        },
        "item": {
          "id": "7aecbf3c-f4ab-4813-a714-ae3890034455",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0522c1b7-028d-4e44-a485-4dd4c886db7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5523057d-cb1c-4106-8e21-f7bf8a4f18e8",
        "cursor": {
          "ref": "4b6ee544-ca63-4f56-8011-a556e469e25f",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "bba94bc6-29f1-4538-9d1c-3c3b6db56914"
        },
        "item": {
          "id": "5523057d-cb1c-4106-8e21-f7bf8a4f18e8",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "75064786-1f2e-4c98-98bc-7ab74525b5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2de19e5-58f1-436f-9ca9-91c000a81e50",
        "cursor": {
          "ref": "fb5c5156-6e5a-47fd-9c85-6dcda1720290",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "b361b89e-eb51-472e-88fa-584566eb0020"
        },
        "item": {
          "id": "f2de19e5-58f1-436f-9ca9-91c000a81e50",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c3333e39-e0aa-4960-9f8f-19b0b8a10602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f1161d-3479-4279-8e46-fe3b64c5bec2",
        "cursor": {
          "ref": "0fe93485-54d7-4f97-8118-25a87265c101",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f520835a-dd8d-46f6-9975-df12cc9e4353"
        },
        "item": {
          "id": "c1f1161d-3479-4279-8e46-fe3b64c5bec2",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7103d697-5f03-4bf5-8a96-0f775a5aad8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e77dd28-7e95-4227-a9c9-9f7c8a66c3c2",
        "cursor": {
          "ref": "6bb6db80-063b-4ba6-b678-e20afe5b9a2e",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "810abef0-ccdf-4b39-b6c5-19b99b007bd5"
        },
        "item": {
          "id": "3e77dd28-7e95-4227-a9c9-9f7c8a66c3c2",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f9e577f4-56de-4673-a285-81e328663868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af02920d-ee7b-44ff-a702-f8be4c0eb245",
        "cursor": {
          "ref": "5d3152a3-a38a-4891-a968-d1541d1030f4",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "7858ccd2-58ef-4a6b-9539-7c710986f40c"
        },
        "item": {
          "id": "af02920d-ee7b-44ff-a702-f8be4c0eb245",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "cf804463-1fb3-439a-a636-9249fed89a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8297ec86-0a73-4e39-91f1-42e3e45f6110",
        "cursor": {
          "ref": "4372f1b0-3f43-4de5-a5b0-a4054c051d33",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "d4aece17-8496-4c59-be00-ecfe72ae0296"
        },
        "item": {
          "id": "8297ec86-0a73-4e39-91f1-42e3e45f6110",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "09ec6cf5-45aa-4810-a0a4-daa14582e062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b94d953-8302-45e5-92be-5a724aed8b71",
        "cursor": {
          "ref": "4e3d3abb-d600-460a-b80d-21e3343954a5",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "bc249fd7-0204-4720-a8be-11f3768cc9a0"
        },
        "item": {
          "id": "7b94d953-8302-45e5-92be-5a724aed8b71",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8993f548-fc67-4aa1-b686-42991d8947a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ecb26bc-167b-4545-897c-17aaae73b1ef",
        "cursor": {
          "ref": "b352682f-9588-4ad3-85fa-381d9b2c5079",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "49d13bc9-5e24-4366-848a-f7570899e7c6"
        },
        "item": {
          "id": "4ecb26bc-167b-4545-897c-17aaae73b1ef",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "66cbc92b-58d2-41b8-991f-1351c1a1114e",
          "status": "OK",
          "code": 200,
          "responseTime": 92,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "86191d70-11e8-4875-a58e-1d63d5e266a0",
        "cursor": {
          "ref": "d5d98bb3-16b8-430d-a920-bccd2fd33af6",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d176c8c4-0c6f-46b0-bb6d-6cbf02f498ec"
        },
        "item": {
          "id": "86191d70-11e8-4875-a58e-1d63d5e266a0",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6cf3364f-e6e1-462f-8d2f-10ff85ab1c6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de03158a-737c-4e08-8024-2e977ba2757b",
        "cursor": {
          "ref": "df108396-e1fd-4c12-a45a-c808bb9caae3",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "5d8283e2-b034-4479-9863-1b052c4aed4d"
        },
        "item": {
          "id": "de03158a-737c-4e08-8024-2e977ba2757b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "5d6c4244-eed0-4f79-920f-6d0effac92d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7cd543a-91f1-43aa-af07-e1441d9ba993",
        "cursor": {
          "ref": "6e71fceb-4694-4147-8648-55c8cc0e7132",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "04dc4ddb-80ea-494c-934f-3cebdd3a093a"
        },
        "item": {
          "id": "c7cd543a-91f1-43aa-af07-e1441d9ba993",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b8dedc3a-db0a-400f-a6cb-fd516861faf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80049bc-4abf-4210-a0f6-779911833e1e",
        "cursor": {
          "ref": "dca7c68b-1aec-4c21-a144-5f93c8d227b3",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "85539312-35fd-477c-bf2f-4607bed69c49"
        },
        "item": {
          "id": "a80049bc-4abf-4210-a0f6-779911833e1e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "af4debae-aed5-421f-8793-2f70b7969880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a547d9cf-0d2e-4926-a1d7-2aa86419230d",
        "cursor": {
          "ref": "09436510-d14c-469f-8c59-b2e171f185f2",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "68a40658-6465-4123-b228-d299ed40cebb"
        },
        "item": {
          "id": "a547d9cf-0d2e-4926-a1d7-2aa86419230d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "33c15c08-2c6b-4271-bea6-ff4a9cdddd8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6620a41-33e7-4877-992e-a5020d4574e1",
        "cursor": {
          "ref": "a4f0fbad-30ff-4c71-96a9-0a3e6b6d6526",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c40380f5-f276-4fb7-a478-df81409a9992"
        },
        "item": {
          "id": "c6620a41-33e7-4877-992e-a5020d4574e1",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6a39cc1c-e731-4400-9829-fc0cb1c45103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f960b5ab-7913-47cd-8588-be2c80d7a60c",
        "cursor": {
          "ref": "b1c5f423-c3c9-48b7-b82d-c9687e326c88",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5ed2e65f-bfe1-41b1-a9ec-1c62928244d3"
        },
        "item": {
          "id": "f960b5ab-7913-47cd-8588-be2c80d7a60c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1bea0506-b04d-49b8-be74-aab6127e4014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d89053-a2ab-4ab5-acc0-cec4f1d8668f",
        "cursor": {
          "ref": "0b14d878-2d90-4155-89f5-85928b0825d6",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ed2967e9-6637-405b-a681-e6dcbfae7844"
        },
        "item": {
          "id": "88d89053-a2ab-4ab5-acc0-cec4f1d8668f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "3a3ababe-c487-401f-abd0-c9d8c189b935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31bf504e-70f8-460d-b503-a1bc27f1fdf8",
        "cursor": {
          "ref": "76b395b3-ec1b-4b87-803a-37b715acb4c5",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "f3f8cc4a-1e91-4d93-bc85-94673865c06e"
        },
        "item": {
          "id": "31bf504e-70f8-460d-b503-a1bc27f1fdf8",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4bbb368c-dd52-413b-a4c2-4fce1f307f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da101457-736e-44a8-9049-8acf5e4a9071",
        "cursor": {
          "ref": "ff31eb83-2c45-451b-afd2-ac467f90869f",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d04177cf-a0c1-4062-a073-679e12ec0d30"
        },
        "item": {
          "id": "da101457-736e-44a8-9049-8acf5e4a9071",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9b2f317a-9602-4e44-ab66-f9b4976f670b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56cb92bd-e80e-43b7-b37a-f5ae60e7203f",
        "cursor": {
          "ref": "1d0f1549-5105-4258-9a99-1c6f68f104e5",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8c99c838-debe-43d9-bb91-056011302204"
        },
        "item": {
          "id": "56cb92bd-e80e-43b7-b37a-f5ae60e7203f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a863ee27-9001-41af-8289-13d31a26c912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd6f63a-a94e-44bf-a870-d70b9fbee9ba",
        "cursor": {
          "ref": "17ec96b7-9f95-487b-b5b7-8c308e7b48b0",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "91c3134f-6d69-4f52-853a-d633af51dffd"
        },
        "item": {
          "id": "fdd6f63a-a94e-44bf-a870-d70b9fbee9ba",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "012f94e2-1f6f-4a10-b3be-8272de78b418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c09671cc-f265-41bb-b529-2d15e9c55dff",
        "cursor": {
          "ref": "464ef6e1-f3f9-47bd-b3da-b6080f5834a3",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2fc1e049-5018-4e2d-b1a5-2b3cd4f249aa"
        },
        "item": {
          "id": "c09671cc-f265-41bb-b529-2d15e9c55dff",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "4e519034-82b5-4ef5-8f19-20662707ca24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dadba0a8-22f4-4969-96cf-2b4cc26c868a",
        "cursor": {
          "ref": "312f9b45-d750-4efe-aa7f-d8057784c9ce",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a08e5b52-1ffa-4860-8fe4-5d8e6ac69532"
        },
        "item": {
          "id": "dadba0a8-22f4-4969-96cf-2b4cc26c868a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "228c7bbc-6c53-4301-abd3-2c5384d3b0d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "726f9fc0-6ee6-49e9-b736-8e32544fb371",
        "cursor": {
          "ref": "d69b8ed8-ba12-4fef-9d13-d4cadf67a634",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1b57c2f4-4f87-4006-a2a9-6d1cf6ebf26c"
        },
        "item": {
          "id": "726f9fc0-6ee6-49e9-b736-8e32544fb371",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "89e203bc-e3f0-4e5d-90af-ffa6eea333f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd8283d-5ef9-408c-b084-6e2ff86b719f",
        "cursor": {
          "ref": "9a30651e-c637-43c2-bdd4-433041cd6d4e",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "765652a6-d375-444f-b3a8-3cf214aac363"
        },
        "item": {
          "id": "ddd8283d-5ef9-408c-b084-6e2ff86b719f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ac6fef6d-64bd-42a9-98db-7baa2f491472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff286247-d18b-4f74-a4a1-c9d41c743f75",
        "cursor": {
          "ref": "7c1f372a-52bc-40ef-aed7-2935cfa7d185",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "7ac81098-7261-4dc4-a44c-c52b5d1aab48"
        },
        "item": {
          "id": "ff286247-d18b-4f74-a4a1-c9d41c743f75",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e928f5eb-9358-4806-a4bc-5bfcc55e5c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "070d6b78-9de9-4418-a571-da0866fe63a4",
        "cursor": {
          "ref": "a1aa7ac9-b0f8-4d29-9b36-a2aa6e90f6b2",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0afdd9b9-aa51-482f-a33f-cc35991f9b93"
        },
        "item": {
          "id": "070d6b78-9de9-4418-a571-da0866fe63a4",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "559e4269-2841-4c84-8339-600946de8b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c6abbf6-1872-4118-95de-95ba444f8641",
        "cursor": {
          "ref": "8be6fe80-1664-4407-8da8-cee019f003e7",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "5f577121-8b9c-4af6-b270-cdb5c5272ca9"
        },
        "item": {
          "id": "9c6abbf6-1872-4118-95de-95ba444f8641",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "32860f7b-1098-4039-a1dc-b0adb57518cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e50a64-516e-45d0-9c2e-572c4a542a3a",
        "cursor": {
          "ref": "91c1a31e-ca31-419e-b50b-3a46c1ffca21",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1588a588-f923-4e39-a67a-70f6f3b91bc6"
        },
        "item": {
          "id": "f6e50a64-516e-45d0-9c2e-572c4a542a3a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ca5fd1e0-a994-4596-ae46-c7baaab5f4d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d836e8e-aad7-41f4-a56b-21950caefde3",
        "cursor": {
          "ref": "ae8098ad-45c5-4877-a257-dd9c16ca6609",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "04b27f7b-b983-499e-8106-5e9fecf33aec"
        },
        "item": {
          "id": "4d836e8e-aad7-41f4-a56b-21950caefde3",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b9a23b58-bde0-4b73-8a63-c68c3e5320c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d825cb7-358e-4bd8-ab84-00ac60c74863",
        "cursor": {
          "ref": "b65e1795-2eb8-4819-bfb1-3a2f92ac9df8",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "77fb0d6a-1bb5-4122-9d45-6d1447b4f60a"
        },
        "item": {
          "id": "2d825cb7-358e-4bd8-ab84-00ac60c74863",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "086ce453-5b49-4faf-850a-24cc15e8c227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd0cb109-62db-48cb-a47a-052684db311f",
        "cursor": {
          "ref": "04077cea-d788-43e6-93cc-77929f18c98a",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "021b00ce-c79e-42fa-ad09-2d5d145bca04"
        },
        "item": {
          "id": "fd0cb109-62db-48cb-a47a-052684db311f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "52facf97-a24d-4104-a915-f69589d6f083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bcb0975-6835-4640-ab2e-22ac3d59bee2",
        "cursor": {
          "ref": "0c3dcf9a-949c-4bde-892d-e02db9f4f071",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c8dde89e-0ab5-42b1-a5c4-4fce1c3f0aef"
        },
        "item": {
          "id": "1bcb0975-6835-4640-ab2e-22ac3d59bee2",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "dfa6fb5e-634b-4296-b388-017f01bc9e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606a1c10-3241-44cf-8947-b4e0e7d07ab5",
        "cursor": {
          "ref": "7e97a4b7-5ea9-4f60-9c3a-7e5cac926e68",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "af586288-b331-4407-abae-1198536f5c47"
        },
        "item": {
          "id": "606a1c10-3241-44cf-8947-b4e0e7d07ab5",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "1cee87b5-c0ec-44de-bacf-64602da78c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e644429-54b6-4955-b1d3-2d70abdd49b7",
        "cursor": {
          "ref": "fbf08532-90bf-429d-abbf-145ba046c9d6",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "eff1487f-7fad-476a-8ead-21000cc51692"
        },
        "item": {
          "id": "3e644429-54b6-4955-b1d3-2d70abdd49b7",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f2e42f6e-4e4d-4b86-a1c3-c387c0825131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "908681e8-3913-481a-a357-5854bb419d7c",
        "cursor": {
          "ref": "45e6c873-3485-4920-8586-11ef46478892",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f01e4596-bbdc-45d6-a45f-3ad6a9569c0a"
        },
        "item": {
          "id": "908681e8-3913-481a-a357-5854bb419d7c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "0105a7ef-b4cb-4833-99f1-614ed9b19a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a9dc234-c73b-481b-8e8a-ba7b3e5f677d",
        "cursor": {
          "ref": "8ae3d7d9-c3db-49fe-b513-f25dce1cbf53",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "f4a521ab-88d4-4b43-82e5-0a3aec8753d6"
        },
        "item": {
          "id": "0a9dc234-c73b-481b-8e8a-ba7b3e5f677d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "3e64bc0b-46f7-40fc-a18b-07358e582e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e21d0d80-e9ad-4f35-b4b0-27387b9872b3",
        "cursor": {
          "ref": "255966b7-537e-4630-a15a-83e7954e9d08",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "318af298-faad-4d7c-a3b8-6cc1a606ed5b"
        },
        "item": {
          "id": "e21d0d80-e9ad-4f35-b4b0-27387b9872b3",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "71c74309-48b9-412a-9061-492c1c6ae659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8949f608-c3e0-4844-8dbc-b4e2dfaba2d0",
        "cursor": {
          "ref": "7485ac2c-00db-4fd5-a8ac-47066c4fffa8",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a50b9524-d0bf-4a03-909e-cbf0493fee06"
        },
        "item": {
          "id": "8949f608-c3e0-4844-8dbc-b4e2dfaba2d0",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "cd9a0512-ff65-4c78-a900-0f53e5d3aca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4429a003-cbb5-433e-ad09-6e4ea7e43096",
        "cursor": {
          "ref": "3193cd11-da97-43ce-a76a-28d362fa376a",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1b964dfd-4b6a-488e-ba62-25b42c50256f"
        },
        "item": {
          "id": "4429a003-cbb5-433e-ad09-6e4ea7e43096",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "7dc2f432-6176-4262-b13e-e6f8f079dc4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e71383-5388-45a2-8e46-843c1b421cd6",
        "cursor": {
          "ref": "d1de501a-635d-4198-8ac8-324280214b78",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e1a9d4b3-035a-4c99-b5f2-92d4dbb179ae"
        },
        "item": {
          "id": "20e71383-5388-45a2-8e46-843c1b421cd6",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d935b88f-13e6-4b54-bb84-5870bceb3d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de988766-cf0a-4bf3-b602-322d771d8e10",
        "cursor": {
          "ref": "2c19ecb8-a112-4e69-9fb0-1798f94d7b67",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "781c97cf-f2fc-42a9-b9e3-1307216d1c8a"
        },
        "item": {
          "id": "de988766-cf0a-4bf3-b602-322d771d8e10",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "7f96c332-76ac-4bbf-9cb8-4e182214363d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adbf50f0-d0c8-4017-9256-a9e0e9a94029",
        "cursor": {
          "ref": "cc5dfe17-9759-4df8-98b6-1d3c25696b1a",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ac2b9a2f-2cd1-4e52-bb98-8264a673cb4e"
        },
        "item": {
          "id": "adbf50f0-d0c8-4017-9256-a9e0e9a94029",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "35949a96-0d0a-42a9-885a-e6d1e5b994cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41fb3e83-84f8-46f8-9397-47b852e33189",
        "cursor": {
          "ref": "0c8203ed-d680-436f-97e3-6bf750f2c969",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "bb1123f8-c147-417b-9618-2ea8010c5ac3"
        },
        "item": {
          "id": "41fb3e83-84f8-46f8-9397-47b852e33189",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "3b90f32b-5142-4505-88fd-59e38c77cc61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f66be1-51f6-4a5a-adc8-1a098f96783c",
        "cursor": {
          "ref": "87707908-84f1-4e3c-a737-df65ee4f0959",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "7ecef132-8b89-4d8b-9aaa-6c2ed940a365"
        },
        "item": {
          "id": "d1f66be1-51f6-4a5a-adc8-1a098f96783c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "41a62507-0700-46f3-bbb2-962cecccd149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b0e809-1a81-426a-a390-25cebfe0e626",
        "cursor": {
          "ref": "5caf2148-15f3-4949-96b0-73b6d777f823",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "3cc6d962-7d35-4fcc-868b-fe18b3cf7992"
        },
        "item": {
          "id": "c8b0e809-1a81-426a-a390-25cebfe0e626",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b9c3827d-ef24-4094-a989-fca78804dea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96370f93-381c-4335-b346-32f2d46ec4a5",
        "cursor": {
          "ref": "9eb8ff1b-f124-462a-9d17-576378413f32",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "03f659e3-633a-41c1-9149-0f0a62cd10c1"
        },
        "item": {
          "id": "96370f93-381c-4335-b346-32f2d46ec4a5",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "44b3384c-6e8b-4f90-9252-396f15339226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab4e779-0f28-496d-a98e-47f1d023500f",
        "cursor": {
          "ref": "2dd0c5d3-aa72-4ff2-9dc5-4bd44e588939",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "9bc5aa9b-1865-4259-ba30-3e4143c1030f"
        },
        "item": {
          "id": "0ab4e779-0f28-496d-a98e-47f1d023500f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "02341eb9-0bce-4bfc-99cd-ab1e502cae6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "684f1bdd-8a8a-4151-8a5b-7d88941ff0be",
        "cursor": {
          "ref": "554db41d-e008-4111-ab8d-1631a814cab1",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "277f35d9-5f0e-4da7-9a1d-3333e1bf0c41"
        },
        "item": {
          "id": "684f1bdd-8a8a-4151-8a5b-7d88941ff0be",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "869e799f-ee57-4201-b362-8e0929c48e37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d2b723-bd0f-4152-b3b5-82a67d51ef50",
        "cursor": {
          "ref": "f4728f19-28c2-426a-9c9a-f95f56764820",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "24c5257f-b543-4a11-9f00-5ca42c20ad8d"
        },
        "item": {
          "id": "28d2b723-bd0f-4152-b3b5-82a67d51ef50",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e2e02957-8e9d-4b2c-bfbf-0b05dd568fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f828bf4-0862-4c56-8f8f-3c1a3ca10be6",
        "cursor": {
          "ref": "e5224136-b174-4095-9f9e-5243c6ba6417",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f9223713-23a3-4c74-9985-d3f0877dce1d"
        },
        "item": {
          "id": "3f828bf4-0862-4c56-8f8f-3c1a3ca10be6",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "96c787d9-2385-4555-ae0a-81c9fa86599f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "482b099b-0bbd-4fa7-b6aa-95330af91b27",
        "cursor": {
          "ref": "1bfe7681-6726-4db5-a513-2d5d35ebbe4b",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "8f8ef98a-47d4-4592-afc4-a3688b080fab"
        },
        "item": {
          "id": "482b099b-0bbd-4fa7-b6aa-95330af91b27",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "30048e6a-3de6-45fe-9f60-0f0e0242b5dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79cb2767-af12-4718-a57d-b33f4318f1a0",
        "cursor": {
          "ref": "21cb8fda-71cd-463a-b297-68ce08e5d84c",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ac2495df-68b5-4b45-9f00-bbe3b5f02b6a"
        },
        "item": {
          "id": "79cb2767-af12-4718-a57d-b33f4318f1a0",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "8776fbe1-2f5f-4da3-819a-fc6956ace148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc840f6-81da-4bb2-904a-b0dcc1834566",
        "cursor": {
          "ref": "71509714-8a3c-485b-87d4-6d9b4d685a02",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b1c40571-e459-44a6-87e2-c7a99831f82c"
        },
        "item": {
          "id": "0cc840f6-81da-4bb2-904a-b0dcc1834566",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e3120cb2-6e68-47eb-b5f1-6cf3252835fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd93077-be5a-4450-b9b5-32e6ddc9619a",
        "cursor": {
          "ref": "82ac90bb-78be-4604-a61d-07661c9ef542",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "26ccacec-cd42-412a-b781-9c99d4581d91"
        },
        "item": {
          "id": "cbd93077-be5a-4450-b9b5-32e6ddc9619a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ffe4eff5-a258-4d96-bfe2-f7d6b7f676c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8819e64d-ebf8-4490-a65c-830bd829f08e",
        "cursor": {
          "ref": "87a07bd2-63e7-4dfb-84fd-5412cc0c556f",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a5d06176-e253-4a97-8b14-655420e29a62"
        },
        "item": {
          "id": "8819e64d-ebf8-4490-a65c-830bd829f08e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a126a38c-9189-4d7c-bcbe-298325d647c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8860d8aa-91f1-4cee-a93f-937c7ae8051a",
        "cursor": {
          "ref": "78538477-c131-438f-9364-e3abdb5bec75",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "60fbc10c-d6a4-4a90-8966-da953fb30663"
        },
        "item": {
          "id": "8860d8aa-91f1-4cee-a93f-937c7ae8051a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "fd43d518-eeb2-4019-b84d-4b4198aeebb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6179e13f-ed50-470a-8518-593c6a8d81eb",
        "cursor": {
          "ref": "abc97a53-529e-4b50-8d50-3c3c5faecaa3",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "65992f6f-c2bc-40e2-b99f-161c8a2a4c6e"
        },
        "item": {
          "id": "6179e13f-ed50-470a-8518-593c6a8d81eb",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "96d1a069-3adc-4b66-b4e7-0d1be408f60e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d70c93-54e9-4ce6-b4cc-2bd332b920e7",
        "cursor": {
          "ref": "731b372f-3494-4446-abaf-88a4e05bcf69",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "450c8f32-29ae-4439-8f5d-0c19110bf938"
        },
        "item": {
          "id": "27d70c93-54e9-4ce6-b4cc-2bd332b920e7",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f28d6380-9380-4051-aa4e-54c6adb5b83f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6751c17-ca6b-48d7-b639-32bc503a9ef1",
        "cursor": {
          "ref": "5f130f5b-df5f-497b-9873-46a6014341eb",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "132be530-9cad-4856-a9f7-4dd38389ccab"
        },
        "item": {
          "id": "a6751c17-ca6b-48d7-b639-32bc503a9ef1",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7c4e383e-6b0d-4e56-86c4-c4ba1d7f0b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "550e91fb-5974-448f-9370-6d48508a7d4d",
        "cursor": {
          "ref": "b425ca7f-b85c-4691-9c78-b90ed5ef91f1",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9c386acf-9f39-4620-8278-7a7ff1a000a5"
        },
        "item": {
          "id": "550e91fb-5974-448f-9370-6d48508a7d4d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "85d79972-3e0f-4503-a4ff-677872bbf7a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46a96a9-ff04-4f7c-9131-12da5be0b0d9",
        "cursor": {
          "ref": "fccf8219-854c-4c47-a0eb-76aff2056087",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e15fad9c-0111-431c-92c5-c8d22b2e2452"
        },
        "item": {
          "id": "e46a96a9-ff04-4f7c-9131-12da5be0b0d9",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "95ae751b-fc8f-42d0-9ce6-1785847b8fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c134950-0d89-416c-9a45-ef12d03c37a7",
        "cursor": {
          "ref": "31942317-c693-4570-ab30-6e63abf65883",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7c55a980-41b9-4a56-bd1d-0541add5061e"
        },
        "item": {
          "id": "0c134950-0d89-416c-9a45-ef12d03c37a7",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "08bb58a6-7c13-4612-b572-a1fed1918b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a35da8c5-648c-49bd-825f-361a494b80b9",
        "cursor": {
          "ref": "77c9bf59-e2fc-4df4-8eec-90dd4b0dcb7d",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ac666505-6d6a-4720-b4fc-dde6b1904526"
        },
        "item": {
          "id": "a35da8c5-648c-49bd-825f-361a494b80b9",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "68308adf-324b-41b0-9aeb-f0a9e605a1f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d994b3d-1547-47cc-9859-0fc4f297a95e",
        "cursor": {
          "ref": "f0efea6f-326e-4a43-a512-ad9c61ae4a15",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f569c5a4-5b33-4721-a682-9056db0f40e3"
        },
        "item": {
          "id": "2d994b3d-1547-47cc-9859-0fc4f297a95e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "387c34c0-31a8-4f98-ada2-9695cd9c1655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa2520e-0619-45c3-aa48-e6526b0e43b7",
        "cursor": {
          "ref": "35fd1a08-a7f2-4e32-a0f5-b1af819b8b3f",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "ba3d0dcf-74f3-460b-95c6-049ed98bbb61"
        },
        "item": {
          "id": "4fa2520e-0619-45c3-aa48-e6526b0e43b7",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "32fd9da9-3602-4458-b460-71f80b12dffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbfd4702-3a1d-479d-99bd-466b6bb8b4dd",
        "cursor": {
          "ref": "c6f11e8b-9f41-4689-8cc8-a48666b74b86",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "ba948f41-298e-4940-b49a-d025b98d4640"
        },
        "item": {
          "id": "dbfd4702-3a1d-479d-99bd-466b6bb8b4dd",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "01697c1e-27bf-4f28-b5d8-331d72d85e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe02b8e8-3cf4-41d5-9e10-a9dff076cd35",
        "cursor": {
          "ref": "5ac41349-2fcd-4e45-a348-d8635d09e0b7",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "df2811b4-3d52-48b5-837e-55a6c38fb2b3"
        },
        "item": {
          "id": "fe02b8e8-3cf4-41d5-9e10-a9dff076cd35",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d059ed76-5c70-4c10-b046-cf5527647d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e16564-4175-4ca2-b1d1-698f2c6a8f4d",
        "cursor": {
          "ref": "40c0c431-2ca1-4dc5-ad81-1111a431d0eb",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "467ce216-f140-4d8d-8316-f195e957a5c6"
        },
        "item": {
          "id": "78e16564-4175-4ca2-b1d1-698f2c6a8f4d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b26ff41e-1369-4c17-8061-f0d48213ff80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65527f5a-564c-44a7-94fa-070c9453ba70",
        "cursor": {
          "ref": "cea014e7-b8cf-46e4-902b-22319959caa1",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "c9fbcb35-13b3-4910-9a39-aa2053e0a62e"
        },
        "item": {
          "id": "65527f5a-564c-44a7-94fa-070c9453ba70",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "9af76c26-2016-4d68-86ff-ef3182b617e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a378433-0110-470a-bd8c-b27c5819f378",
        "cursor": {
          "ref": "bf3b66f6-3cb6-4a67-9513-8d0423938100",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "2671ee62-4eb4-443a-a8b6-aaa5370e698b"
        },
        "item": {
          "id": "3a378433-0110-470a-bd8c-b27c5819f378",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e2028a4d-02af-4a8e-b7f0-839d10d4d98e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2507717-d656-44c0-9a98-6b12e171040f",
        "cursor": {
          "ref": "826b869c-9a2e-4d53-84eb-d245f0049f31",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "d64775ce-9052-4865-901e-6c012a7cef1f"
        },
        "item": {
          "id": "d2507717-d656-44c0-9a98-6b12e171040f",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c8964e24-8438-4eb4-ba45-149b367897ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd1a2a5-bedd-495b-a4b2-64acaabdf9c1",
        "cursor": {
          "ref": "ab303f55-f397-4b88-9a81-fcf41d3088c0",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "723a2fb3-c449-4d28-92f7-6562615ea575"
        },
        "item": {
          "id": "8bd1a2a5-bedd-495b-a4b2-64acaabdf9c1",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5aa5ca19-e978-434a-83a9-4cb314d926f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 882,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60d82b6-8d33-46aa-8529-717b98c2564f",
        "cursor": {
          "ref": "68a72b2b-69a1-48f6-9f2a-6ef24e199a84",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "98b933f2-dc1e-4fe1-9d30-6a6be023f73c"
        },
        "item": {
          "id": "a60d82b6-8d33-46aa-8529-717b98c2564f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "1770202c-bd30-417d-941c-9c091a7fdb34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a3de52-f353-4f6b-9869-fac3f81fcc35",
        "cursor": {
          "ref": "017f1e99-8aea-4692-8d8c-136e5855880d",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "2c7783ad-9c76-42d4-bd16-be0cc48ce6e1"
        },
        "item": {
          "id": "03a3de52-f353-4f6b-9869-fac3f81fcc35",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b0c2a085-8ab5-4aa9-be70-743de5c62e0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3157b920-6c4b-451c-b363-f70b61776062",
        "cursor": {
          "ref": "7b171265-c7d8-4058-8735-28b9d7cfb638",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "15786832-2b87-47fb-aa2d-46fcf410e595"
        },
        "item": {
          "id": "3157b920-6c4b-451c-b363-f70b61776062",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f6c88749-641d-4616-9dcd-8384ee82b298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7682db77-94ec-42bd-9809-690f1409a50e",
        "cursor": {
          "ref": "172abb73-139b-49f7-861d-b67500a6a79c",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "bdd68724-ce8c-45cd-994e-0e6461dbbb24"
        },
        "item": {
          "id": "7682db77-94ec-42bd-9809-690f1409a50e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "3be17b2c-b19e-40e7-b5f4-c0849a226838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db2a81e1-f5e4-4a45-af84-b4c9e1bf9ce5",
        "cursor": {
          "ref": "560ccb8a-6a89-4670-b15d-9e303efc6a7b",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "46ec56dc-d1c8-4d0c-969e-fd9b7059b331"
        },
        "item": {
          "id": "db2a81e1-f5e4-4a45-af84-b4c9e1bf9ce5",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "19d8b6c9-7ea9-4cf3-b957-de80119b98b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba9bb2f-6a10-4aba-b4bb-e3aaa492fb8b",
        "cursor": {
          "ref": "98bf6366-c9f1-402b-ad39-503256a617bb",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "322ab862-0fc0-4374-bb53-a3d6533584e0"
        },
        "item": {
          "id": "6ba9bb2f-6a10-4aba-b4bb-e3aaa492fb8b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "3df99165-5d54-41c8-8852-9a4606fa4790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6667f884-40aa-4aba-b411-8f53daabd135",
        "cursor": {
          "ref": "9b8e4301-07a3-46f7-8e19-05370b723aed",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "40195c87-a74d-4047-abee-ca8f5f1f4910"
        },
        "item": {
          "id": "6667f884-40aa-4aba-b411-8f53daabd135",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "aca11d64-d67b-4386-8913-c46781242083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5dd40e0-f616-4122-99c8-9968d51db9c5",
        "cursor": {
          "ref": "32a78d6c-6c17-4cce-a9e9-ba0a632c7380",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "eb958541-137c-453e-aa40-73c380e98c07"
        },
        "item": {
          "id": "d5dd40e0-f616-4122-99c8-9968d51db9c5",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "5f970bbe-5ccd-4b8b-8f3b-cba2e110a9f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cabf54b-844b-4ceb-b652-897de5074afa",
        "cursor": {
          "ref": "10b2c10f-184b-41dc-9348-47ebd8146af0",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "c8dfa833-271e-4c49-b980-86725e62c9ab"
        },
        "item": {
          "id": "6cabf54b-844b-4ceb-b652-897de5074afa",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "bc0a2686-684c-4b82-971a-19b5417b599c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c5637e-d0b3-4d04-87b7-715f37938d15",
        "cursor": {
          "ref": "aecfd652-fae5-4bb3-97cb-2f04f198f551",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "249a17c4-fb50-49cd-a890-89513565db93"
        },
        "item": {
          "id": "a1c5637e-d0b3-4d04-87b7-715f37938d15",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "af28441a-610a-4d27-9fe4-abfa00fdc808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73394a51-e19c-4d9b-a726-c81a5648e3fc",
        "cursor": {
          "ref": "4fbd739b-3fd4-4a3a-b60a-38c932638182",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "c35465e8-082c-4e7d-9506-ae8925727083"
        },
        "item": {
          "id": "73394a51-e19c-4d9b-a726-c81a5648e3fc",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b658f4e3-e59e-4190-8042-5295979abf6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d07c16e1-590c-428d-bf28-0072bef4a3c8",
        "cursor": {
          "ref": "fd5f5b37-70e0-46d3-9e90-ba3cf3d177d8",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "d5cc2869-ba3b-45a2-8d4b-a05b8c808ea9"
        },
        "item": {
          "id": "d07c16e1-590c-428d-bf28-0072bef4a3c8",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "626c5110-df0f-4c64-a0b9-8a0ef3121ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6709444d-a89d-4f41-aa2f-21907b6ccc86",
        "cursor": {
          "ref": "10ee25bb-e606-4683-a669-78f03b9cee68",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "73776f6d-0e7c-413a-ad31-b8fb73ab493d"
        },
        "item": {
          "id": "6709444d-a89d-4f41-aa2f-21907b6ccc86",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "76889db8-78d8-4e4d-826c-1f39fb5b1c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c764931e-7121-4a18-8eb4-81ee8bbd61d8",
        "cursor": {
          "ref": "26144680-6328-44ab-a922-129544ac6a5a",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "d88c9bd5-7482-423f-ad5a-b73112cd3fa2"
        },
        "item": {
          "id": "c764931e-7121-4a18-8eb4-81ee8bbd61d8",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b084a49d-3aa3-4711-a05b-a3a4a9223257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c43788-a2c8-40b2-a75a-4afbd62251f8",
        "cursor": {
          "ref": "91472856-f4c4-4dfe-ba1b-8f3c5e6ef712",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "de7e0b52-a05e-413c-8e7e-fcc76fedea27"
        },
        "item": {
          "id": "b2c43788-a2c8-40b2-a75a-4afbd62251f8",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "584130bc-2267-4c6b-b778-b9b7f9bf1c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad8b77a-fd09-4354-b26f-56fb374ba834",
        "cursor": {
          "ref": "db752bca-fe5c-4b3e-955e-2ee1709799f9",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "25bf4ec0-287e-4503-b95c-ae1437e5eb07"
        },
        "item": {
          "id": "5ad8b77a-fd09-4354-b26f-56fb374ba834",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2656ff40-dd34-41fe-8725-980e2e05934c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989ce274-a1d0-4e80-a9a5-604d22eedbd6",
        "cursor": {
          "ref": "e1840ce0-9558-4801-b94f-0b3374c9adc8",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "edbe512d-842c-4832-996c-7c71d7cce011"
        },
        "item": {
          "id": "989ce274-a1d0-4e80-a9a5-604d22eedbd6",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f6f57573-a7bf-4c98-a266-a101afccdd1e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b26b5cf-d408-440f-9b42-97697499ecc9",
        "cursor": {
          "ref": "5477dc57-8d1a-4496-a539-93e7b14ea72d",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "53cda6c2-53ba-4b58-9dc4-3735bace6a44"
        },
        "item": {
          "id": "5b26b5cf-d408-440f-9b42-97697499ecc9",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c06d0e6b-f7e9-4be2-8809-e05050cf8c21",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "9155328e-a6b0-47b3-9216-e3846fbd304f",
        "cursor": {
          "ref": "e3420e8e-d528-4ca8-9217-e3e6cd4dacbb",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "199ab7f7-1bde-4111-ad17-903c72bb4adc"
        },
        "item": {
          "id": "9155328e-a6b0-47b3-9216-e3846fbd304f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2118935e-fb49-477b-b075-8ebeb57782bf",
          "status": "OK",
          "code": 200,
          "responseTime": 3916,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e52a0ed-53ac-4eb2-9d30-a6e5cc997279",
        "cursor": {
          "ref": "bf6ab531-36cb-45a0-a707-024238f5ac2b",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "27ab3c36-877e-4685-b17f-de1420b297e8"
        },
        "item": {
          "id": "0e52a0ed-53ac-4eb2-9d30-a6e5cc997279",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "037cef28-6988-4ac6-b929-5df16ac61e62",
          "status": "OK",
          "code": 200,
          "responseTime": 2707,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d86c0a7-4a30-4590-979d-b99d5aa86f92",
        "cursor": {
          "ref": "f1770d11-9ab9-450d-8bef-c1a8e751569c",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "0e5042b2-d45b-4d74-8267-ce1cff692922"
        },
        "item": {
          "id": "9d86c0a7-4a30-4590-979d-b99d5aa86f92",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7a0402a5-efde-4fbd-9714-4393e6bb05a9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d86c0a7-4a30-4590-979d-b99d5aa86f92",
        "cursor": {
          "ref": "f1770d11-9ab9-450d-8bef-c1a8e751569c",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "0e5042b2-d45b-4d74-8267-ce1cff692922"
        },
        "item": {
          "id": "9d86c0a7-4a30-4590-979d-b99d5aa86f92",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7a0402a5-efde-4fbd-9714-4393e6bb05a9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c36b4c2b-1fcb-4768-aa61-899b845e6e97",
        "cursor": {
          "ref": "a8cd0b30-337e-46f5-b557-94d9034e892f",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a57098a3-0f29-4944-ace9-ee3a8014ba58"
        },
        "item": {
          "id": "c36b4c2b-1fcb-4768-aa61-899b845e6e97",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7ed7886f-027f-4da7-8a3a-157eb8b92849",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d698726c-98a0-460c-88ca-f5fb07a561db",
        "cursor": {
          "ref": "8cb86441-aff5-4e7b-a59f-8d7e8c6d84bb",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "da1a0188-6d3c-49fc-a3ab-eecc8a8ac3ac"
        },
        "item": {
          "id": "d698726c-98a0-460c-88ca-f5fb07a561db",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "aecc1e7f-ff4e-41d9-8d45-27f0edc8af2e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}