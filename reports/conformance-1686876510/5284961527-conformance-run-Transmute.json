{
  "collection": {
    "info": {
      "_postman_id": "e9c7f21a-ef69-4217-8f40-0424834c0fdc",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0e9dda74-6470-470d-a8e5-51f5cd11d679",
        "name": "Clear Cache",
        "item": [
          {
            "id": "63985e94-15f6-49e6-b06d-d9e6ce9c7891",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3ccaa938-a2ea-4681-8479-4e3d2b16e2ea",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "557d608b-7976-4a72-9f09-c32398a2aeb0"
                }
              }
            ]
          },
          {
            "id": "a95286a5-7cf5-4874-abf6-972d59af22f1",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "30d6bcef-7123-4925-ad3a-8010072439ed",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "bc1755d6-da80-4024-8936-3d950c49790e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "8875f6fe-8276-43d6-b80d-515e05c3a757",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "7c0bf34b-e289-4f4b-9874-d4eace3d19c5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "85e07d04-e058-47c9-817c-0539293641d7",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c042bf4e-3c77-4d8d-b1e9-3234348ce188",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f7ab8b53-1707-43b6-81ee-772ce238254c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "63115ba4-c476-4e48-b810-712bc1eb53a1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4596d423-a7d5-405a-a223-8d187ef159e8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0f987a74-c9ed-4b08-b6e9-9cb911872f1d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a74e21ce-097f-4e43-9fac-deb4e4280f83"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f08acbbf-9cc2-4f75-bf0a-e22eafcb1248",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7d0feabe-1030-4369-968b-f2293671a115"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0eb283e7-10f0-4b8f-80a7-a6bcb0136973",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7e82c4eb-3171-4633-898a-59fbd413b7d8"
            }
          }
        ]
      },
      {
        "id": "52008149-82e5-461b-8521-7a658e5ab7b8",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f6abb4af-fd87-4c8b-8a5d-a51b61d0a6ef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "95d81f0d-83d8-4951-88e0-ba3f392aafcc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "aac50abf-2bed-4dab-af48-72a81047394f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c55a47-7bd4-44fe-a349-c6b9b1ca9a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f59d1b1e-d9ca-4d7f-a06e-ae813ccf137c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70445064-49c2-4c61-930b-2e6e83e41c20",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2181057-a584-4649-8a75-c3d02370fd4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b77375cd-41d5-4a1c-bb4e-76d4e18dbd61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "906fa7ec-59e7-4102-a7f2-f2b611e35b89",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "022f14d6-b19d-477e-b28d-2b2c05009630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "98425027-00ae-46c3-94ae-7de39a4bc39c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8bb1e9a1-24dd-4c52-998f-c201a6b57202",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "20ae3b4e-8b3d-4c6b-9607-160bfde3a0eb",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c4ce5ca-571d-4d29-bdbb-c14290bfe1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "626c89a0-7305-4dcc-a97d-68677d67351f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1c4ecd-e0ca-4430-83f3-b89ebadadddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f44228d7-450b-4ca2-84f1-c037f0e1eab1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cfd3101f-c690-404d-9caa-06889eb0e9e6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "43372aca-eee9-4b00-8c35-7897ecb43596",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ae302c3-5de9-43c6-b6c9-a21cf2f4fcae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "1d1869a5-6267-49b6-871f-407b50e9de85"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2e71ab6b-67d4-43ca-ac1b-f00b89735527",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "40bce44a-c785-4d7b-9c9c-f4e5b586fb90"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7e180e94-31e7-4eb4-936a-1393dfa65b38",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dd40cadf-e419-481d-b331-f6b74eb5b272"
            }
          }
        ]
      },
      {
        "id": "552f777f-3bc4-4df7-ab73-b10fb10f8b10",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "0dabb510-58d2-4bca-8bb5-61f8ceb6e63e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "678a855c-5d07-4c18-8d4d-49f3db032a36",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a9fd30cc-894d-4aab-babf-76129b8051cd",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "575d4506-38fc-4372-b786-acc3abc36250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc6a8621-e5a4-432d-821a-adf5d168f3b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7175507-55d3-4eaf-bcb8-cdb3e0c3027d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d711d146-3bd3-4197-a164-02bbd0c4bd46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcda657f-64ec-4aeb-baa6-6c9eb9635101",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d06a1b4-9f02-4c3c-b2c4-a932960bec9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7279a96-31be-4819-95fd-a8effba75f78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ebb450-1a38-4d9e-a041-ac10f989650b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "522a66f4-c22a-44a8-a3c9-fb79b6f22690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a38dc2-b45d-4846-8802-da774cf4df73",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b133d7-24e7-4d3b-881d-f04801c7526b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "284c4f71-d32e-4b74-9062-905854550158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3811c72-cfbc-43b1-8458-cf0e861ed4e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78d0efb1-87aa-477d-a0fa-48877807cad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a97cda-e5b1-4038-8b75-7de66ad9df08",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22ece94-d6bf-4d1c-9e51-51b7594b6d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f32487fc-aa1a-4145-b753-ce10cc7f7db3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "037e3db0-23cb-4389-93c7-f35e5e3b2baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba1d90de-128e-4032-90d4-c1e2776d5eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e315b7ed-ebc0-4869-bd70-7e31893f5cdb",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "841a30cd-c9cc-463b-8d6d-96629836a737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65143cb6-b4ce-4a7e-b5ec-f3368a6505b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e217886-9fd7-4138-be13-b497279d903c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4867f2ce-ab52-4a3a-baa5-0cb79086f8f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b792301-becc-4e34-b756-f20ee81a4f5c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c83899-462a-4e8e-b947-c7cae60f659c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f3e683e-0533-4133-8b37-a48ac737b12a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76199a95-b96f-41a6-b226-2932f467507f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "daba8137-c654-4a31-a66d-fe851cf4c3ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1240c4cb-5217-401f-b9bd-cd77a23fa56c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4135e57-bd33-4aa1-b4a6-eef5899e52dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08511727-9c9b-4f56-8183-a00f325226f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5450c8b-1e7b-4313-9f4f-9bd51bc0db04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb39f3db-86e1-474e-9338-59ac0991e01d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e188bc1f-4f4d-4a87-b992-da0b39c8cfa0",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "094e08f8-cb8a-4d14-8431-3a8bd666b31b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeb705d7-3bea-4e75-9de3-6bbd3f8aaeb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec8f24f-7f9f-4540-8892-384c6712116e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f50b381-6ad4-4cc9-ae7a-71bd2c8bc862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4731fb3c-bf09-4b7d-b6b8-99faacfee607",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d37553-e043-4485-b8ff-b567e879bea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5614036-d4b7-437c-878f-3e93a9385df4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "026ae52a-d6fd-48de-8ad6-84e3f4114812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5158e08-3097-4ad5-b203-13a9d60f7e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4549ab9e-d692-4a4c-96fc-ae32d191014f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc875e6c-92a8-431d-90a5-43f5e769bcba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60dff526-cad3-4774-badb-65516901160c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8089440f-0998-4fe7-9f39-038d47d85818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e182199d-8eaf-416e-90ea-9ab375916e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58176759-7556-4b60-a57e-6287e011ba7b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a477c6-3c34-41b7-8741-dcfdd684c855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8278f3f3-3308-4106-987d-a8e3298d1877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15cce368-3f5a-4667-a3ce-cdbbce2406eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b79fcaef-d185-4cf4-b6bf-856d449e6ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d4f3fdd-56a6-44f8-a6c3-c2edb1c69407",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "378044df-9c30-43e1-959a-5f8ce170b091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cd345f9-79fe-4ca8-98f2-aa52f6d829df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d125d6-3d3b-404b-9da2-7141e9110a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cdef1e19-910b-486d-8ac4-c36b3cc9fb2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f5ee23-a910-49d3-b83c-77df995fad67",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a59bf8-7fe7-4703-b15c-156971251c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e67fd34-e730-4636-8ee1-6d2a0e9f2572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f34ba0-5211-40ef-b768-add244b4b80b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa9aa427-47c8-467d-894c-ed039e04f3c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2f2d12-3cd7-4d10-ab48-1997534819bb",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91f9937f-2356-45a8-925d-2533999d3456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca128562-4ade-44e7-aa6c-43f76fb6e399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30444e29-f90f-463f-8d0f-3dbe2966c857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "332e84bc-af14-4c73-817c-e4710648546d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5562e4c-03da-4fae-8f54-021fde311535",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f091324a-98ec-4fe8-8eb5-2de66d671af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02d3e938-6805-4876-bd8d-f3d8b31c7643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4058b80-f0ee-4a42-b14e-b0c64aa7c104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8408876d-9160-4dbb-834a-a454da9d15a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2061e785-9d35-4e74-9f4b-1278cf66a873",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f59e6279-da05-4e4a-97d8-a19adafb4751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21a2c8c9-6a38-47dc-b7c2-291deb60becc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ff7dff-732d-4af5-bb81-2c8f8586a46a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b73e3dda-6532-4833-9465-e78efbdef5c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84a8302-9e71-4d62-837c-3dc3fa1f41ea",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e3a446f-9cea-4911-8e9a-2fb3bcade80d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc2e81ac-db75-4777-9989-9556e7dc1d33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24495da-c935-440c-8489-69826628fea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ce7e618-e95a-4600-b29a-635a02a9566a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91818e20-fcd4-45e5-8513-daec5330e6d2",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea13966-6637-40b8-b182-69c44f672513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c8ff699-b4ce-4436-8184-7fecadae328d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81010d33-811b-472d-a18c-f5efec1260dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "eae530e6-8b41-42af-91e6-c4bcfe49c027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79beb7db-f102-4f31-8c49-db6ffc4405a0",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc368d2-6613-470f-bb84-c1426426205b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "778f7162-defb-4504-b89c-2a3149ecefe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b200b2-5c40-444d-b258-f67e8d695b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e8614d1-8a67-4ebb-b709-fd74a5113ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a972d115-4672-411c-b782-053fa3a8744a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b97d0aa-77c4-4e72-9cf1-98da94501178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf68dab1-4bdd-48dc-9706-e2a734b229c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0e6d9b-73e5-418e-aeb6-b741152bd001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b017a1dc-c260-428d-ad40-ebad8b01c693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e351907-18eb-4be0-bbec-3b3f8b15ab01",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2059449-41d5-4261-86af-bca7b4377f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b051a23-5c4a-48a1-a3c2-e446adb0fb0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83771f3a-9a88-4d06-992a-8b28323dbbfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "871eaf11-8919-4ac9-8bc8-41b0c25c9f79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af6beb25-ddc6-438e-b59c-f0bb32af6531",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a38a0542-6d2c-4c1b-8974-5b742a6a83a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d6a2681-e780-43bf-bd47-29abe79edf4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f92a790-41b4-4817-8ede-7074860cb775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc6d3cab-660a-4641-9330-1c17aac71035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92bb4da7-b9b4-4b90-a246-6f8093a170e6",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9118b675-71df-4e7f-9445-429beba526af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f85131f7-5b2c-4055-907b-8a3b42a9fff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "972d34cf-2a8e-4cdf-aea6-403461b6e2ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "111ea3f8-2ea7-4cfc-9e9d-9c80f2485fa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "609e0d28-20f0-4825-b6e7-77eb99e947aa",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1978807c-7b91-4809-a847-7bc88a749a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d9ab9b7-673b-471e-9100-d6e958e046c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ac3c15-87b7-4a5d-a50b-567534b02cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b09af49a-8e37-4394-87b7-750ed7552c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "120a2744-3d00-41ff-8be9-cb788ec1c106",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d07f3788-eb99-4809-9e47-8e748ab7b5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bef8869-5f00-44f7-acde-5fe33537c0e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "577cdb11-283a-40b1-a06c-92b4220174ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fecd623-5fa9-48cd-a511-9621e5448d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e3abfe-bb66-43db-9359-aa27a9f913f3",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92babf4b-47e4-4af4-a9ae-980f113a565d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "589b32bf-2795-449d-8936-6804005106c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff694bb5-a109-45bb-a696-c29e403a32b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe984f75-dabb-4128-a4d2-2db7dde36d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2d6354-8302-44d7-8c6b-a9f283094924",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc2878b7-2733-492c-8b18-54241fe1ca39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3bc0500-a89d-44c5-a313-2e9cd69266fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a88e327f-b57d-4221-9b7c-613012adb79e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e5c022f-90a0-42b5-84e6-02067f79e5ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75a723ad-ebdf-4e8d-ac21-d5bee80bba39",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5517907e-99f2-4be4-adc3-f7f64d05aa25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d0356e5-de70-4fb4-ae2f-2789a08dc9ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ceee1ad-bcb7-43ee-9370-b72adf077e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ca786a8-0209-44d9-b678-5290d1800549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da6993ec-a408-4d63-abeb-eb1b49265752",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64240f57-61b4-4ea5-90ff-c3376d9895b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27d3e797-1010-432c-b2b2-6c07a4ec871a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb5eaa12-dc73-426d-95fd-b4a1fb62f93f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd5bcf9e-ce41-4f1f-8c73-66a9f7300fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a7765d-7115-48a0-a257-10f79771418f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69dd311f-eefa-4ea6-806d-7621ca982c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c674a1e-608b-4cc1-aa2b-6ad101b53064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b13e7603-78e7-4a6e-845a-97182637bb80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "1abbcb84-1123-4a37-ba7e-5daef6c8b4b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814e9ce8-fbac-4982-8499-b26881a69c03",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de8558b5-4577-43f4-931a-da898185f012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "185cffce-90c4-4bc7-a131-ff390f988726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10be1297-4944-422b-aca8-2f319c97607c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e3a9efe-c6a1-4ff8-a366-828edaa9d9fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e053d5-1806-4136-80c9-16c5c2170af1",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f61403-4b72-473a-98d7-9bb56abc4bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55598093-c92c-44c8-97ed-521d27a07323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc07bc68-17ab-42ff-871e-e8b7f4e6cbf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bbfa637-3644-4b62-8864-cc1890b40fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b41f58a-c832-428b-bdef-fda0938f887d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a30072-5d77-4665-b5ad-3271c3e11af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b623c9d5-710a-4c74-afdc-154a04846d51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f230d9-1623-4410-89d5-773ee1891e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7cbfc0e-d843-4903-86b1-6a0256362aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33fa56f4-925c-4e97-97fe-3764f694d406",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae5a826-1a01-4331-9cee-899d97c0ec43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c55878f0-e640-4116-95f8-a8e49e72c2b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f9684c-ff71-422f-a8cb-a20544439186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5e3f449-3999-41e5-8f72-193bc3c406ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd7c4621-ab27-4d75-a078-f34918ad0942",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecaab67d-df20-4bcb-8454-87239720410c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7a41dd8-fe0f-47b8-8cc8-ed57fa9179e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f25bed3-3e3b-401e-b0f1-b72d547cd42b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "209f33dd-daef-4a75-83ca-f99fb29d4cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd2d0644-489a-470b-9922-299518ebe679",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b93a466-0d44-4d3c-afa0-2c5fcab42fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6b779b57-7b1c-4801-a827-b1a5d3e7a779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1579707-1645-4188-ab91-6926662c5231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1ca78609-bebb-44ac-b205-adf00720a045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cbdbdda-dc2a-4360-b5e8-23e163e1d133",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "681d7575-fb30-4110-9d8e-e6dd02b98003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08bd2637-8c82-4cb5-8c14-4a8d6f1e1409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea89291-da98-4811-8f2f-e5a1246fda40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "df670ac7-f6d0-4fe5-8078-1eb06fc2490f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41c13d30-b2a7-466f-b1c8-9acf04250130",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e6f1ac-51af-489b-b361-6570b625cfa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76d7e6b0-285c-4601-ad31-e630ec83bfa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ceb8e7-9d82-44c4-ae05-2c0b95903265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2347cfd-6e57-42fc-bded-646d16d0a6e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "700506fc-aef1-44ea-8441-ef690993a145",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09abc38e-1ed0-4a6d-85fb-d31ae0466ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c5c8617-f023-4728-8790-c92c1273a1ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "807f6108-6e86-431a-af19-5f336e88e013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b1dd33b-a133-488c-b87b-eb0e4319f488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2cf3129-b982-4e32-b892-2fe60db086bf",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bcfec2d-1c3b-49bf-ae68-fa1ef8d14988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "961bf731-60e9-46fd-b00f-1495c8540453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b297405-f1e0-4b55-9722-e329d581a3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0139c84-6e6b-4783-805e-95f02ec2307b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc70197-8af2-4f6b-ae45-974dfac6a949",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8918802f-2e33-4795-b71a-715be5952cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a70a03b6-d980-4d4e-8bf2-cddeee23d533"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e0ad85-77a9-4fb3-8ac8-7374eeefae76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "746d7597-b630-46d9-a81a-53f3e5270ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc369bf7-2e88-4ce8-a5fc-6cb2d0286646",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbea278a-754a-4bbd-830c-4b6fc3150897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d6d4792-a0dc-4e8c-a95e-d7a20e657008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cdeba7c-4b62-42e0-8754-099428803592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "4de0c6eb-ae9b-44b7-bff1-a93f10bde9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "798beb1a-2411-44ad-8ffe-7447061cfe3b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb9ab25b-06f7-4bb9-9024-08c9491f734b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62fee684-4cb2-4078-bd0f-70fc93ff2539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "593153ee-139f-4c86-ae35-7959b7880d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b42babe7-bd8e-4f7b-bede-e94b2b03d3bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b148eeb-bad3-49e4-a04c-33a7c1f1acd2",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4186ddfb-80c0-4afc-9d60-a0322521f283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a104a59-2c91-4d88-8938-1b9bd31ef0c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d781dc-26fc-4e8a-8bac-186ea1c4a1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "4311c232-d1fb-4f7f-81f6-7402ba915cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce02988-6c5b-49ce-8a91-0f3108130366",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff39dcf1-8779-4db0-be63-1f4dc538c33e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd8b1c5f-7a7c-40ed-867e-1c809d77b2de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47ca1857-0504-4e87-a23f-7a14e3be4846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0de6ceb0-28a2-40a1-8ea1-19d944164a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b9c78b-1508-45fc-aba2-0d57681337fd",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec070994-48bc-449b-b788-d4113f3fdfed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8d33480-5231-4d6e-ad4d-ea7f3b20a021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd3c56be-ee73-4501-b73d-688d05ad81db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1833d9f8-9a80-493f-aae8-40f981d8625d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c07094ea-ce3f-4794-bb33-ff8b617d649e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "047c26c0-575c-4323-a924-649818b96f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0434c0b-2ee7-4ee6-b604-c0fc8af062f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98cba8be-6803-4f0b-aab8-d91cf9f1fbc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc7b9b11-5781-4776-b0a6-21b2b208b26b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f65624d-5376-4475-bd7c-7de1f98cd478",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82cb041b-1cee-4af2-9dd3-16505cbe2590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6af1484-3867-4bfd-b93a-8f11861bcbe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2383694e-8a0b-470a-a796-1dea4a33a847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "688cbd5b-56bb-480f-b644-783816e43668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d33f56-715d-4f8e-9b04-4b4e5b1c5b6f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee0f3a2-ca3c-405d-be4a-71dc02bd7f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84cc2e78-6a5c-4773-888d-ede866b76cc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "583c4675-f461-4d49-a322-b67edc8c8aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ba3a7ec-4f4c-4dbc-b4ef-8b63cd6489d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd15475-971e-4159-abda-ebe0f3e43480",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cbfcf37-401e-4171-893b-fb271d9e1c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1185a4eb-cae4-4392-9117-9720598f5788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb8771cb-fead-499e-8cb1-0ae9aaac0a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9ce9537e-b58d-495d-a779-828b18ee0486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e7bd277-8266-4ff7-9082-02670d41536a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eee75a4-85e6-4dc9-99f9-e32901f6dfd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d89c875b-6aa3-4716-9701-edbf40032d6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7391d5f-90e8-40b1-ad4f-67a6ce7c22fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "679e421d-9c27-4d4e-bd32-17649fdbda56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "625565b5-9193-4f88-b249-dc4d2f7f7b5f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "686d934a-1aa5-412f-8a9c-1355eebfc209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a542a27a-a4a3-45f9-a36c-3cd027b1b664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e62a17a-e526-4041-8cdc-40268097dad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "be8610ad-6819-49c3-af43-f281d60ed87e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01825272-208f-4ddc-92a6-f7b6ef911c54",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ebc2ef-2116-4a92-80a8-b5405289ecfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79ab0e1d-b9b5-4dd7-a3ae-cef6cd40eff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd943d93-49eb-441b-83ea-4a2303dab972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "320d0d83-66a7-4268-b081-f495ac1cb535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21217241-31d7-453e-9fe5-187783324dc7",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e54de620-bb00-4be4-b4ae-4f6681db0f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6504312e-cdb0-40bf-8744-074a81b7382f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9a8bf06-1ff0-4970-9894-7f3e75241511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "865bca41-6711-48f9-b982-7ddd0b4b1dad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa73cf62-15de-461b-9616-72c0a8ace83c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "262a1756-40fb-4dc3-a2c6-0c7f70016b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93dd13e0-625d-4b4e-91e5-52a5376a7094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66dddc1c-46c3-43cf-88fe-3aaa84729385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc36538e-fe0f-462c-a745-7182255bef5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d6f165-ea1a-401f-b3a0-9687652cb521",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d7637f7-5c51-464d-8179-6dd7d9d49fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40c83f9f-9200-4479-816b-61b079f2ff36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e554e0-5649-43a1-80ed-b288a65e6f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a3a5f8cb-7320-4bf2-bdca-92b111806b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7745dc6-1dba-4f08-b11e-8391534be54b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d19a4b-1e62-4d4a-8e83-a76108290bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af21fbe2-791e-4099-897c-0e0351461997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57dd5e83-49d9-4381-99b4-6e9e83a17bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c362059-b392-4b10-b064-0caf0ea1bd1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ade352-05e9-4fb9-b12a-5f3514ec2597",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de4570b1-c22a-48d9-ae9a-332781c2b296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2d31db9-04a0-4744-b82f-04eba3bbbae4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54da611-85a2-4969-91c1-0d1bcbbe7fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "46575619-897b-4a70-ba44-cadefc8f2efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f896102b-b161-40e9-835c-aaab1c53443c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c16fc2a4-f1c7-4b0f-a38f-b471a6040326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19d201ca-ef32-42f3-a2ce-ea1b096e0438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d9e1132-1733-4845-807b-f70d0a432cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "22cdc988-087f-4f54-87de-2ae47da5ff9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef016c6-06eb-42ab-a3b8-10ee9e94f8c1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfbbc940-4b54-4d46-98af-03d2f1f1d813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c10e7bd4-bf50-4699-ab99-fc52397f21ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7747c93c-c8f7-4617-8dfb-65ce16e26206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f9aef67-815a-45f5-9771-b694fc586470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bfef237-daaf-4649-9e50-5f5ec3cdfc73",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "491e361a-5d7f-4b7f-8e75-1847433beaad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "670ac26e-920e-4d30-b3a8-88cc822ff3bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "505d701f-a12d-4e12-a1a9-18ca7251df92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4bffbe6-7361-4417-adf3-4f75e7b58959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc06cae-2f76-4e30-91ec-89c8621a5478",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f5e475-4794-4f85-b6ae-e8ab74ce1d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21801375-373e-4359-af4d-5ebb8f7bbd51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a316c4e8-0e7d-49c0-942b-0962868bc943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dafd791-f190-46df-a5fb-a662b83e52c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3119c181-70a7-4b99-8f0e-c1289c925379",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "569ea148-ee2e-4df3-bb5f-12d123571fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3c32122-8f02-4fa2-841f-8056ab14eedb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36325397-c715-44fd-8ed5-7a4c056d3879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "dec40463-3ccc-4d8e-baa2-5fe921c65db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1618c48f-bec3-4a58-aa9d-29cd2e73a2dd",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb2043d7-9483-4fb7-bc10-12b06b11103f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c9e47cc-9e53-45db-87f4-417e82a6a7bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d01fca-d703-48c4-b44e-cda9923573cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1e3f029-34f9-4098-9249-d9f3709b45e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dea33727-e053-4a9c-a18b-0eae04d51adf",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f3fac7c-560b-468f-b818-d610bc11e677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58923d94-ca15-43b6-84ab-f6fb1c407d9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425b1377-1e47-43d9-aa8e-585f1fd13bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce22d80c-0926-4cb1-907f-8aa52af60f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc030b1-ac8c-44f4-ab26-1c525eb8ad42",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "165ce3f0-00ff-41f2-8a9c-ce15b56682a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc0baabb-728a-4876-894a-85f52ec892ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99409f36-da21-4164-9288-004506c2e4b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "02dfae53-2563-49f6-8159-abc0ff76befe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95bcec06-fba8-46a0-9364-9a123ad77bda",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a3fa0a-7595-4c67-a444-5582074dd1be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1317f798-be7b-439e-9a7b-34e203587252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4447f119-a7d8-456b-8e4c-a83645e596d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e4f42bb3-d915-4e17-b7ad-eae306319f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41850af6-53d1-41e8-b07a-c6ae8dee5b54",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8369ff80-48a4-4c61-acea-f3b3864f914d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "312e98e1-c8b8-4ead-84e7-405909017c76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a1b561b-bbf2-49d7-a501-371c8b89220f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "aea6ca3f-43fd-4258-aba9-f3d85afe371d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2007c9e-b4e2-4429-a188-8b769505e599",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9239c8ca-f22f-4ae3-a5ce-de1b97955492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6771571e-441c-4f00-b404-a5b3bd3e961d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f601b755-6b6f-4af3-b2c1-758efc7d2626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c073719-6dd9-4fca-8a4b-f28b557feadb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f925a0-41dc-40f5-a24c-819c7312854a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f5e54b5-4201-46ce-a8b9-8f976ac6b83f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "237e9e4a-3a44-4364-9f54-13b0187f4b00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b88744a-ffbd-4dfa-b0ba-67e4e116f070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a1d7f53-b499-4973-a0f6-04ecc72ea2c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44067be9-1a01-47a5-8234-caed88ad7a72",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6258bd-0246-44f2-a143-cfb7a42a849d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f673cde-cc03-4044-8126-4e683b381e3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf32f36-6a44-421c-9e07-2500ccf32a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "62d940dd-2170-4ecc-bfa4-2f50e5c742ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d60d9c-7058-4558-a2f0-e46f2bdcd181",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc27f69-cc45-41d6-aa01-c416f7a85c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae04754e-693f-48eb-9a89-b104a9a40f12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e30180c1-eef6-40fc-8d85-8963806c67b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "89559c75-081d-467b-867d-cce303f742c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed06a93-ec70-47e2-b609-9ae4c59ab1e6",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dbad2a9-0d5b-4b68-a61c-c4f2cd4860b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64a3ab34-ac59-4113-b1e8-60bbe0c1a7dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46480a83-56c1-40bb-a5d7-a068b2f09b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce0480b7-0ded-4253-9643-3d9c678d90c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc9f820-2abd-4050-8338-b4c9982d41a4",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba874f0c-8367-411b-8c53-2e7c8828dad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05e23aaf-cd05-4884-9545-cb34aef92d9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b6adfb-c017-41df-be23-7dc2266f14e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3cc78b52-b31a-4807-84cd-5ce45bdd767e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc6e0153-e9ad-41ca-9245-c8440d1b4e63",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b1d7be-687e-44e2-bf2f-e46f2db463c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02d05c0a-8433-41f1-b990-86eb7f04f367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f758cb-2ea3-46ba-aa6b-803db1182462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "41300f35-d7fc-4eb2-a2ae-c94f9873851e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d68446c-f8f5-4c91-963d-4453188190fc",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "915f249e-3a5b-44a5-87bf-f6124ec3a3f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9897dcc4-4dc9-4bd6-b515-5c006bb88139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83129c49-ab13-4c73-8993-d30efa1857f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dddbd9bf-d9f0-4cf5-8243-fc9464b23d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed57027-a771-40bd-9897-655f4b38765f",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1249e426-6d68-49f5-a97e-272da5c624e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aed186b-03b9-4392-9c2d-38c98af6312f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ec261f-6420-490b-a092-be16d2891da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "54096382-41a9-488f-b729-780dc4ae4cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be43524-9f97-4b46-b953-27b091cedd19",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d8f9d3c-b488-4d8a-9177-c45e674be3f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f53c21a-03f3-4b9a-a232-7a3355a0e99d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f130aad2-9e09-47ee-a545-bf99e0dbb4be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "22a07594-7a01-4956-85b4-7aea1e13c6d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a6ce394-6f71-45a9-9482-feae687f8695",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f2daa5a-b494-4fa5-adbd-84b857d01c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c31dabbd-c150-45df-a5d5-9d6708512566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e9dc489-f3e6-4f8e-9567-6d480fe34692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b70402b-3d57-4f7f-9a27-43a3d5b70860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8fcade5-70c7-4c77-b4f2-2154f56704cf",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "205f1082-5b7f-4f44-abdf-b723225e89d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d2effc1-7ea7-4717-9a35-3d470fc80585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2866c1a2-ccd4-4c3e-9a94-b9a64db7b1f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "39ab1eab-6df1-4d06-98bc-5cf6896323f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c850831-a6ad-4022-83a3-7d0a0c84ae8f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00cfc9eb-8b5f-4d01-9897-cd9ec4b2cef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7411bc63-da65-475c-a3a3-58ad33f34b59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36bcc46f-5b03-4a1e-91dc-493b27b5b46d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "07355315-c74c-4adb-aaa9-2b6a51439b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83437765-c524-4697-8ec3-fc93522a78c6",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf5abc6-9b40-4b54-a6e9-2a6942442ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a8219e3-5fb1-4030-8ab2-3c057fd93cde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09cf41bd-5001-4656-8f4b-b328cc1ac43f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0589bcd6-d2f6-42e5-a27f-f53f02c74f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e64d9b1-db9c-4a72-afc9-2798345b2f52",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f67d55-117f-491d-801d-08b8773f021d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd4a151f-3869-4e2f-9494-219e20b22492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e254fb7-905c-4e59-9afb-1604fc6ffb6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8537ec76-05c9-4ddc-9804-87e136552c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a7778a-2236-49dc-9ad3-8bc6c887545c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef4709be-3e51-497c-b168-05c0bba04cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c858f640-cac8-4e8d-b538-f1a80a906b3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c964f1a1-6dad-46e8-bed1-84a55b2a4a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "49e6c8d2-472d-4d8e-a70c-eb2e61e332e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe1d953-a243-4534-a8f3-4769c1fc7310",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8fbb41-4575-4f93-8718-7a551fd7abcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61c03570-f01a-46d4-b110-c0902ffe4157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c98244b1-ed17-4ca5-9ce9-ef3dd423a453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1e926bd4-51ac-4dbb-b985-3c3271410341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01491328-06d0-4d75-8bd5-75cf477e7c26",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "037a3649-597c-4283-8daf-ef4e1eb2e3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1946afe2-7ca6-4ea1-ab1e-d00b287758b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf3165c-bd10-4256-a2ce-73c96610613f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1003e65-cc88-4130-8943-6289198cb7ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b02694-94be-42be-9353-6b0f9c7f22e9",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc6f11c-7fbf-4ca8-91e5-66e269cd5af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4cac0b4-f167-4495-8aec-d3e005a921b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1572d73f-fd56-428d-b6f4-25c540e8e59e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7fc0bbdc-b548-4b4a-b7a0-162dc0c98927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f80ad92-5e9f-48b7-8285-a5c0675dd2b9",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad72e9c-6758-4e6b-91c7-69faec8687af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6206990c-aabe-4724-8d38-00378f5a5584"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f778cc3a-9d3f-488c-8109-ada4cfff24eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7c4119b-8a37-4b34-a9e0-a5c277e43fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7070ea7-cd95-44f9-b7a6-5fcf21bf6923",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "333c86ed-bb89-4a79-83e6-19b65a11a3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f13c85e3-c302-449e-a7b3-3d449de8a5c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1357c2c9-8adb-4589-b147-68de6e25693e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b031b445-3f86-4633-83fa-39041de59c26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fec9599-f8d4-4f44-a776-7d7bfe6e253d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bbd118a-830e-436e-9662-b276de6b46e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa5cc4f0-359d-47b6-8683-1d83af3345e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a3cf76e-d285-4431-be85-3e58a7e5b13b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "86d59ea8-6c11-4f69-bf3a-4252af03a663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e234a4-0488-4170-89ff-c0914c02321f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e06b53-5360-420d-a851-b3c9c66e6f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dd1b8cc-54d2-4179-bd6d-d91ddceb2639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae9e9647-9ff1-48e3-b417-3fba5a0b6f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "546bf0d0-cc4d-4929-ac01-38ad0fd03b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2419441d-33d1-44f5-af5c-b73b9eebedb1",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6fe87a2-02d9-4212-badb-f042a2badb32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "16ec6e0e-664f-4289-b4ec-631f035f18ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255cd7a8-7090-42f6-87a1-110adb1b1d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7c63266-6091-4986-b7e5-c26ceecbaf5f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f0d7539c-5b89-4383-9fdb-c3c2e4fb1263",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "54ead9e8-e819-48ed-bb4d-39d54f3c952d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b93794d4-1881-4358-a4b0-31dd3fdebb3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e92c16e0-5859-4cb7-ac7a-8adc0581805c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d6c1b5-8fe5-47b1-a0f8-ca70eac846fb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7655f727-60ac-47dc-9b3a-dece1d6e01cb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "353490c7-4407-4ca0-9f6f-da8a3bd0f4dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a966613a-a175-4fc5-949e-ffdbca5ca7b8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "80c9c454-47e9-42e6-b0b5-822c6489e238",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "41206e49-7c0c-4247-b718-eb4508f43ef0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0252a6fb-306d-4c86-98d8-6eab5cb3314a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3ccb0483-fec0-4bf8-afc8-411a3688edaa"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "748794f8-c6c2-4279-97a2-bae15e681533",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2bfeec30-608f-476c-8262-8ff5abc50f9f"
                }
              }
            ]
          },
          {
            "id": "a4577330-d019-42d2-ab56-7de0ded1b4a1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3cd9d652-e135-4864-98e4-c5423280d95d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6331156d-6ac7-4d07-9373-c9f45f5f0311",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5c153080-dace-4672-8e06-d62f4d4bd71d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e4d9929e-12a2-4751-a36c-5acb008837b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f5361ecc-d9c2-4e91-9092-c8a25ef16e3f"
                    }
                  }
                ]
              },
              {
                "id": "ff74c9f5-b85f-4e1d-a0b4-0d464d21d9b1",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e40aeb12-dc37-4fde-951a-2ab022145852",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "77b59fac-1b29-414a-876a-aa07c7303926"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6cead76b-6b4c-40e3-b8b3-de107c2ff4f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6c7f9f12-605b-4c18-a4be-64d91c5106b4"
                    }
                  }
                ]
              },
              {
                "id": "4f42982d-3a5d-4415-b913-7b6be81416ef",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "55a70644-5133-495c-9f74-b968fc1961ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5d9de629-234d-402e-8ca0-30e41042c6b3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6fa27767-b280-4e41-be52-213d0160b5f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6549ebd9-fcbb-4492-895e-aa956cc03233"
                    }
                  }
                ]
              },
              {
                "id": "6a9fc844-7027-46ab-a1db-f096aa6512d3",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d32f3e55-2988-46af-a3b6-7726b1b42034",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a2591825-29d5-47dd-9ee3-ee8a6a8003f9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8638fa56-99cd-4071-9f43-05b1fb7363a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f7984e2a-7b06-4ca5-9402-af2e92cedeb2"
                    }
                  }
                ]
              },
              {
                "id": "70505f86-4287-4661-b593-6a9edff6b2eb",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f04c9e77-b034-422f-9797-0a14fba48c55",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "739b9def-be3a-4d35-a5eb-8cd5b6459bf0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e5e57ae6-d8e8-45d4-b16d-32b0ae0cef3d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e56acc35-3c49-4221-9b74-2233b8ed9b12"
                    }
                  }
                ]
              },
              {
                "id": "e315dc5c-f684-4a16-8c53-6f44b4f1f39f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c6b54fd-2355-4227-9496-c482956ce4e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f47338e3-6932-4abc-95ee-3dca736efe7c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a59934ee-66ff-4dca-a54d-768b32abfbec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2145c1a0-bab4-47ae-bafe-f87124a247e0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "11d5afca-4eef-4f33-b99d-a7f7da7e2c35",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eea70f59-483e-4bef-94a4-0b31e1a23608"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b94f4f59-faf9-45ee-af4d-9f99b4daf26b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0fb53501-a1af-4b7d-a1ab-c29464b948da"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3863d89b-5ff2-4b90-8793-1b6038a398a5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "98ea28f1-dbc6-4df6-8ff4-ccb882ade445"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bfc00647-1b86-4d37-a44f-6f76871c186b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bcf0f372-762b-4d3c-a217-696ac9e3b2c2"
            }
          }
        ]
      },
      {
        "id": "b7fcb85e-6e88-4f24-a6a6-96a9746d9645",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "62ede7d4-5ee8-43b3-9ea0-8cd593cee550",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b4ccfe4b-240b-4514-93d6-17eefa53bf46",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "37125d48-5f68-4070-b1c6-2ac582513e8f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fbf3586-ac7f-4193-b31b-6a967c684fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "007eadeb-db2e-4981-9320-ada08733c6be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ea870a-55b5-4f02-896a-384005734873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9470668c-365a-4bc1-91c4-04c3bb0baa7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c04dd635-325d-4117-8c2f-352d8d2f33ff",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a7c06f1-27c1-4eb8-9327-d730b586128d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c7cb33e-91c3-4110-8532-d35ac4695420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ba4931-df1f-4acc-a11f-f497d90360dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "afccb0fe-279d-4f3b-aa38-0bc806c657c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a87284-e606-4709-b372-12c0aefb596f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e9571ac-cfda-4ae2-bf0d-56c18c117d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec47b2fd-3bd7-436c-9611-85be9014904a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48c9d76-ecce-43db-ac4d-ba410f5336dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bacfde0-3060-4c23-9109-d06a017adf90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1148a73b-1a38-441a-b516-a0ea0dbc5343",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cdb2c85-5f2a-45c6-aee3-0dddac059760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fd3e814-906c-48b8-bba3-2e5e89e9e74b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1531089-a7e7-44fe-8550-e92e54b75d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b7a555c-d391-4834-8af5-dc21465a2da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8960649-9687-48c8-8e98-247eb1f60581",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "242eb55b-cc01-404f-bfe3-41a722ad13a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3710fd2c-e1f1-4cc5-8ab0-fbd1982bc10e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae4d9233-170f-47ce-95d1-f8abfe2b3dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad307c2c-8578-4ec2-ae60-afee42636f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d7bb59-6d1d-4e95-a978-2129656cb006",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "021dbe1b-a765-4d25-82a7-0326b5d08f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a875b52f-3750-41e6-8d24-73d8bdec423c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ba50ce-1cd9-4788-a413-a42911390fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "96712353-9c48-474c-b618-e3030186b5ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f69e29a8-70ab-45c9-8efe-3beb7bea8be6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ec82a5-7f97-4fea-b30b-9db2bc6944f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5577366b-b5a1-45ec-8316-f35837c5dbf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f93a43d0-9f0c-441e-80ac-4168ea47693c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "57e4a87d-30a9-4077-af1b-f89cd30f11e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c82a5842-bd24-4b81-a394-5b028a2ffd61",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2008851d-60f6-4572-bf50-62ae1b4919cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2caba81f-c1f1-4cb5-af72-36b30a370288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6df74ea-69ae-486c-bebd-5777b6e58fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "14fde5d6-1f49-4c05-93bb-ba913fe49f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b12255c-23ab-4e86-a7fb-ec175ca92344",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "834d45e4-03c2-424d-acef-b40a1d9dbff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "967e4928-6a30-4ad3-a75a-3eef9e6f2bb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e460b420-9115-4f2c-b9a3-2f40bb337037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8ac93e3-d3ca-4172-83ad-bb077a908c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d617db6f-7bc1-411a-b7f2-0c1bafa41021",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d002223-5ca8-47c6-b987-6bd1f26c485b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86221696-57c0-4a65-b65d-16ee3416db7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80144f0f-4032-499f-acbe-e711fbbdfdb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f627f549-6db9-4639-9334-8ebfc5b7ce86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b195a3ec-9722-49cc-a86e-1af72899c85f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d614e9-4399-4777-a1c1-5d55af7ff203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02d795a4-fa7d-415c-886c-6d651c05e12b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71361151-0cd3-4f70-8416-d1ccb3c7e1c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ed1a15a3-1673-4147-9cc4-1ce41a4a2123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0667a68-8537-4ea6-9736-361382c7d630",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c2ab93-95a8-4a75-9fb0-2b633aa1cc61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7532d2d-f0b0-459a-9fa2-1c07e15db792"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2386607f-4d1a-4ea7-be6e-86c5820fd3d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a6bf6307-de67-4d59-86f9-f0c040614f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcbcfe7a-6c6a-494d-8101-a9d383f5900f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f119e641-4149-4f3f-baff-732ae3d5bbd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b16c3cd6-0abd-4655-9acb-c42a27c4493e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e635b97-7644-49bc-9044-499f280e5bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ceff0e03-8cea-455b-84e0-ddabe575d6b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a2cf007-fee3-45bd-8e54-64f3f61d1304",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f147a06-c61d-4c88-9890-67546c446f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2356c99-d206-45ed-957a-75c7017fffdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f621f75a-466f-45f4-8723-b93f750f4de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "00fc3438-e8fe-43b9-882d-3ef662ae5085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab8a61ea-fe7b-4a5b-9539-d206e068049b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da576bf-c496-471b-b7a7-960ecf7f1c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5408e50f-e0a6-4939-ba74-c17f12ee7f42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3795201c-841e-4683-8b8b-b00982e21d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb86407d-fcdc-4d75-91a2-4bf6a30cc1ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f10a4123-c1d8-4273-8ef3-d73e0530ff14",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e680f330-9775-4a56-9e7c-f8e1ead3cc37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ed8308a-1394-4099-a85b-64d0ce84e520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf07dd1-85ec-4683-8be9-876b832f08da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "edd1cb0e-9d0f-493f-88ad-ec8f09a1edf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a8f572-a40f-4af1-b9b7-49f62be5365f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcdc4011-6277-422c-9f54-168d47fa8aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25aa1a8f-df14-4a55-ad54-a55c242e4362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29cc07f7-319b-4d9e-9483-3eae81b5234f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac9533ba-5683-46bc-a77c-5ae291a187e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e5834b-de2a-4864-9e7c-21e273f94384",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "219cad25-82ce-46eb-8a1a-8e27df85a368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91d054df-81c2-441b-801a-782b96da1615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f239ac-3eab-4777-9c65-23b1e3182361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed925fa7-ca86-4153-aaf8-42726e577e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "720e3d92-f7d3-4051-8218-fa65a3720a7b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d805c3cf-0c08-4eae-a199-4e3ad2348d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fbc9317-a24b-49a4-988e-71eae964ea35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f0ba8b-3269-4b86-94ee-dd023f93395f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1e3d9ae-74a3-4a01-993f-bd31389c3348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af9ce18c-e127-48c5-876b-7a9004ee17e8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db6aca8-6dd7-42cb-9f61-a2915facadb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84dcbc13-1ddc-4836-98e7-47944f38eef2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2eeb57d-2fa4-41df-88eb-ebc6ea633c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7852abe9-c5a4-421e-a8b7-32601bdc5248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15762caf-8372-4f48-ac4d-84c5e83e3d6c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dec5b9e-10b2-48ef-bc5c-ea9f6c98dc17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc30f8af-ccbb-4b7c-a2a9-3689f196e28c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0c3f5d-b0d4-46c9-a474-26f2411ef708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ab43540-a87f-412b-8388-483efb0a324a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ff5fdb-9788-4f82-9b8d-02a43a7107da",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa98fe54-f9da-4530-a018-0fc7e1e1a1c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c4bdf0d-7147-4804-9a53-88e03954e90e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca27649b-71b5-4bb1-9058-7433d054b948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42cc6386-52d0-4a33-b7f3-b31895d87b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dba9635-1846-4cf3-8da2-763a78ff9969",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "660bee9c-7fb9-4c6d-aa0b-906029a2ac16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c33a038-e34b-43af-bca7-12ade0c05ee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cbd38b1-e2b5-4002-9aca-dfd5f0aa9ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17aa1955-23d3-4a0e-b0da-7a27fa0cbc26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef3bc656-14c5-4e21-bede-bb46f6e105f7",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "667833b5-d9b8-4290-a234-dc554457df39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b23fcd91-983f-4a54-a402-a3103ddb45ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f777580-ab87-4109-84ee-a88c222576ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47ff6b2d-85f6-4f93-8547-4ea348a9350b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d409b9c-c66d-4b1b-a2f5-51d5aed67868",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe86049-8555-4240-8c70-0c25e30d9354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c426fdf-19bd-4c7c-afa6-75b3af84da22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d50c2a37-141e-402b-8207-d92c280de2f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7260d9b6-9a75-44fa-96bd-d32d60df5511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "020aea76-59b6-4414-87c2-234dca74d8ee",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e85373-b548-45e7-a07e-1994c82d38a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98f5b891-d1f8-422f-9b6a-7a22979c9b5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e717f3-5183-4e34-b6dd-2187a13b6031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9d7dc3f-1d3e-4f08-a28e-5ff7e3e35541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdfeb78d-449b-42f2-a052-d15dd15eac15",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7fa6507-54c3-4100-88e2-6d3761cd445e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0bcd512-4acb-46b7-8614-e334c3b00e16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d72d7f-1258-4bfe-8611-8db47694b820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c801823-0b3b-4aa6-ba09-98de8d896378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d2f0c8d-054d-45b2-89cc-95683725d3ba",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eaf0d54-59ce-48b4-a3f9-f81dd6e6ba3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8a9ef2c-02b6-4cd0-8701-3fa2b3460584"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b0a68b4-ff85-48e8-b529-ac40800c0a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa1f70b3-56d3-4da2-a308-d7150203cdd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b7ecdf1-7145-426e-81b4-42bde2b091e3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c327abf-51f6-4dad-ae54-1d33235414fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b4a0d2b-3ec5-4b98-ac3e-77139e697401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "055d5692-c0a3-4098-b366-0b8bddbf2db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1072f8d6-b541-4974-88f6-3f0803bc287b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17660782-1914-4aa4-b9c5-6271e7a8b931",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf700ed-8da0-4c0f-952a-b13ed709778f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15d4a236-f01a-491b-98f5-9c46a43c3337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a394dcb5-a691-426d-8dfb-ee5778296154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "416f3222-89d8-4a11-8693-a8931d3a5877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e4add4b-8f7d-4114-b33e-86471a0ce5bf",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde6bcc4-198b-43d2-b06c-b91762e3ec3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07d0495a-4d6c-4bf0-8cbd-210d2b3bef3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9987676e-c308-4a8d-a16a-9a7722ffd851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "456429fe-e77f-4cda-b9d3-d17ec48fdfb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a8dcdc-fae2-44f4-a7ea-5505b8571498",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34706553-01ae-47a5-9cfc-d201b6d1f2f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c97f300f-5ae1-4227-ac70-3cc369fe1323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e97a9fd2-54ed-4ba8-b5f1-1bf9dfdd21f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c59c7657-972b-442c-9abb-f87edc323573"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fccba02b-7262-4133-b842-758a7a5bc738",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c6331086-6c14-437a-a0ef-470706de12b1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f453b04-7507-4828-a286-aee14e023a46",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d93c3a0f-c69a-4f54-b5c4-276d85ab361e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b0717d-efb5-4fc4-9fae-1faaa483dcb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d2f42e7d-4e2b-470e-b3c4-5fe0c111c381"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7e19c3e-4c6d-4935-a96a-58d6e498319b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b83d38a-0acb-4997-9c0c-2a52713bca4b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c5dd0d8-01e2-481e-87c6-23fb5705f3ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "00472ea7-e9d9-4868-9a2f-1748071a6fcd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "51c6a0df-321b-4500-b075-7b83fbcfc50c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2d3b14ee-f2cd-4060-8777-a2d4e84be63a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f5540b9e-c8a1-463d-ac57-1d6c3401c50b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6d88fd1a-c13e-4ea7-bb77-7684fad1bf9e"
            }
          }
        ]
      },
      {
        "id": "bd9f3a98-2d6e-4c17-a19b-4dc03bc1415e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c63a3425-3a7b-4003-ab80-336c5189f06e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b5d09f19-d7b0-4fbe-b55f-eab69871afe8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9081a25d-ccc0-4fda-ae33-1650e223c285",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69484871-4265-45d5-a3cc-3f5cef7f1ab6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ce71a68-aab1-4dfd-b86b-069921af42cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e63d35ac-94b7-4202-9920-f0cab205d3d3",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b59d31ed-ad1e-4fb6-bb07-2aaa47cced92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0907fa54-28ba-4314-b5a3-3f0772c9dedc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "592d623a-9eba-47c5-a794-1703449d6dff",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cefcb65-1700-40e6-a535-ec77c0b7ff5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f96fadb4-30de-4794-ba06-4de3b2ec19b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe821036-8416-40a9-a364-9621610f1fb1",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e68f82-7fe6-42da-a608-132376aef955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b966558-a700-4dbd-a3f0-9e5d93e07758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c02da62-7e19-472f-957c-4e4f3824d0f2",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce1f5e1-9277-47e0-b154-f0b25817ee49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f2d04dc-7805-4f61-87e6-638f68a26277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74aefb08-e4f9-410c-94a9-b2c3a15a6530",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66baa24c-6f47-4762-986e-05d8f7d470d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df8f8c45-1888-4c80-8e4b-a7ecd08c0172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf146269-163b-47f9-80df-1e26bdad50c9",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba461249-e02a-4e73-8224-c43dab8281ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80e32410-7f8d-48d6-97a5-2002656044e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ffd65f9-c57d-49b4-a397-6bdae65d1ffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "483edb79-f7d8-4e16-9dff-b0dbb3e7d253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795efd16-f4ea-4278-81b9-3770d2e34eb1",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f92cf5-919f-4d18-bd77-e761c895bd20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8dc3b83a-44c5-41ab-a6e3-34be1b6931ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06102bdb-fb5d-4a39-b10d-b8c3a774cb47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4434aae-0a3e-4d27-9cea-2f7415412d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95eacb99-761d-45a0-b2a2-376b7226585a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de1aaa97-72d4-4597-bc43-f5767ec541c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0a0ce06-c20d-4e1c-8084-c7fcf7aa0777"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee1f58e0-9436-4c39-a716-364448236bc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8fe71c2-5f34-488b-b9aa-2706f87ddb13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0933b5e2-a485-4712-a0e9-724fbd517561",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca770bff-d041-4090-860d-922489d83414",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ccd18bb-1c1d-4d7c-ae58-9435a66584a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8099ecb2-8d8e-41d2-9e0a-8487a3e444e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6feafbdd-9bd6-48bd-af77-0aa266096825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "882be77a-c2a1-41e5-897a-9761edeb305d",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "719d5518-ef4f-4dd9-b6c0-cf47bc3b01fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4b19009-31e0-44bc-87b7-b45f82fe7712"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6ce10d-7df8-4dfe-a4b0-590cb65ea223",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0b34fb4-8210-4e69-ba65-bf7fb5cb84e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e861696-ec49-47c2-ac41-2423428f2ae0",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef67803f-7ade-4602-82c7-b1d7d94b52a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27f1f9ad-f166-4d67-8c75-919560ca6fea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f523a1b-3346-4286-ba59-4ade3eeb9b97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cdf3738-a6d9-4e19-b0ee-8f186b87aad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a59c84b-b6ad-4bfa-8fd7-4285597145be",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6885dca7-e5f8-40bd-b934-e27b2f759d01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06d20df4-2bf5-4bc1-b49a-2b5ae7d4fff9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3343d522-48d1-4c45-bcc2-d9a7e31636f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aac62cee-073e-45b7-9a4d-bfc7e5dd468d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f0fdc9-1062-4245-89d0-6f9ab1aa6ea9",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbc025f5-0f39-4aed-90e3-5a74a320b14f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22a21f97-c217-4b10-8d93-33c61d6d7a48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "781f1b04-21c2-4ddd-b55e-e14a7b3bf812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "154c6763-a71d-47ea-aca2-ea4fef05267a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51487a57-1b61-4a25-b0d5-59da1015f363",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11ea870f-dd79-4567-9f95-6c2baf32a1e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fccef5af-c4d4-44c6-8671-aa0ff234e14c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf06669d-fec8-493f-87d2-f6afa02b14a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4661f64d-8135-408a-99d1-92ee308678a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f23bda1-cde5-47f1-b752-fa82dcdd5e14",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16f6901-1d9a-4209-a8ac-a2961c41c6bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7c4a1da-1096-4d78-86b2-01ff61789c81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "547c523c-160a-4f00-af14-a03c41f71ef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b637184-5c26-4fdc-acef-8d378e6ac37e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a19626f6-80f3-49e5-b42b-754a8c2ed7d7",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba8271b-e213-41a2-8aa1-08149e603d05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dd4062f-47e9-488a-ac55-288191b30394"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f9a678-659f-4079-9ecd-6dce894841fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc763ddf-9124-4dcf-a6df-65c4373c8621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ecfad3a-105c-473f-928f-8c71190b078a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ee7af5-4768-4301-8ed4-fd07cab19a1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b6b43ef-dbad-483b-ac61-80c7aab6f824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57fc1bd2-1fe8-4b48-ac5e-db9718bd5486",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df6de87a-9484-434f-80ff-8360dead00c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c7f1557-d443-4c7e-bd0d-33c66f53715b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf5ed297-bea6-44b6-90e6-e419d85153a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92040af8-7651-44d4-b152-4b45d832e22c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb4019a-fa46-4da8-9a0a-a834d97eb547",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ada6949a-6359-470c-8bec-1f934d004413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e7f99b2-27c4-4a47-a742-9040467a834b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7abdd52-f12e-437d-beba-1a652c4caf97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "720d2178-8056-4eaa-b46c-5744683719df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63eaa7b9-a464-4dbe-a521-d4a8c1067627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf29eaac-bdec-4ec1-851d-bdf58ff7a312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b1a729-8bba-414e-9580-45ef8a82f744",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79fbb30e-4479-4b96-bef4-8d4d4cd4bf4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc08f24d-589e-496b-99f1-c92d46c1f8c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b53615-dc7a-4fd0-800d-bc0cbcb78bfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39088a18-0537-466b-a1c5-2f90af6fd8ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c069d9b-2ec5-4ba4-8026-d7efbbecb37c",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b6632ca-feee-41ba-893f-20bf594ed04f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2bd32af-ddfc-4f6c-bc57-3dbb19f21943"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b841f6-16cb-438f-b0b8-1c7d0b03f332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "761e7417-7217-45ba-8a0a-e2604db46c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "352683f7-6f65-4ff9-b3ab-3150fd7ba504",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d30ab2-4177-4498-9379-03df0a7f2221",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c1213b2-8ead-43cd-85a4-1470f041fd8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b04e16b-5459-43b8-80fa-305941961a92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4973d71c-7e04-4795-9a16-9d62d9041539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70100476-e780-4d91-9a94-d685ce02e4be",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a599687-f5c4-4751-95ce-91c0f2aedfec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68551780-1088-439c-9bfa-5c63f66fd635"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "297c98fd-8231-4b90-b7e9-d70fd508e8e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f4324ff-a507-45b9-a754-6545186f21e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c414ad-7973-4230-9b35-54a76b7bb879",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07edcdf3-c1e0-4ac4-800e-f9be7b3325dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b25454a3-53eb-4528-afa1-6929a765d41b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5cb874-ec53-44d9-af5a-facbf1a607fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af9c1015-d7c8-46c0-975a-95b13e18fd07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be482e2e-22c1-406a-a479-93d630974177",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d537a30-f01b-416b-ab71-a9ab78d6ad5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6915187-9b50-4cc9-958a-493ee4feacc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b056bd-9906-4d50-bfa7-7192af9af12a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d4ada64-bda2-4b4c-aa14-f228c1fbfa40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf8e9ba-cfce-4ea3-abf5-b22957c6c084",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66d6b848-f560-47dd-8fe7-a86d39d66b1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e52db824-5501-437d-9f67-7e9e1f60e3ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d9a5560-dfdf-45b4-b0f8-64bfa898f7b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74d2f0f9-72f1-4c89-9771-f0de9e114b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "937b5fde-9444-490c-b2c9-bb26011fb49e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3382da23-5114-4473-9409-c461e9fee40f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b60a9ca8-b0ee-40ec-9869-b38ca9e52c4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4936664-5d4c-41f7-8240-d1e018e95cbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3bcfb4c-00bd-4474-87b3-39ed2bfbaa4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e619b7b-5f71-4cfc-9cec-b6b71e2dd324",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fed0735-d4ba-4895-8610-b464c012c9d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34957e7d-e616-4913-9e49-647d5b20d590"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "533c76d1-e315-4806-8f8e-91a6b6456607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebde9f40-2119-440a-8b15-5bf8899d4324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "108bfde9-463a-4e90-8b23-5bc46e3824f9",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d26ca30-dfdb-4b19-9802-e47f2681af2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89eb4b3f-079f-4d2d-b656-52e7cc9e8509"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d1d71c-4aa9-4122-a889-5ae60d74472a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fed07107-50e5-4a73-8107-b85df278d500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8753303-a965-4a5e-8a23-4ab6f7e62898",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb1583ea-076f-4dd3-b002-9402fb48b6dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17e0629b-8ef7-4708-ad55-f7bbc8c45af5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46981de6-384c-4312-a2de-9dad7370a5e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54ccecd3-d365-4e70-921b-4f0f9a4f9661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c93d0d4-a0d5-4d7c-b384-caa89e1a2e10",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95354499-83df-4fac-9df1-0eaef56bec5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe254dcd-fbc0-4c87-a47d-1085c1e40bb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a8c050-5c3f-4cab-b398-d161c0972c39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d45b99b-092e-482b-ab33-ac28f70a976d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c0da41-fda7-4891-9b02-966120357234",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f1fbf2-6b9f-42a0-9cb3-ceded1e581ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dca566c2-ce89-4e7d-bbbe-e980621810e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0207b39b-60fc-4827-a216-905801a95cdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6ac2d42-3f28-49fd-89f6-6d9442860882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "756ab26f-9452-4f73-a7af-2edee4cdfa66",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa841ad-085a-46d8-af29-ec2effdf249f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a1bc304-a9dd-40c5-bb19-6d410c8aea58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f2794d-92d3-42f4-9898-39cf74febc7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17d3a9cb-08d5-4a0a-9b3f-37e9d6431122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa343a8-bb51-456c-aa11-4b403b795c55",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1cff742-7298-4e0a-8672-17552345515a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ef61e22-f239-4606-9011-4bab2fb46b73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c05e00e-8515-404f-a1ae-3a3ecf9cc61d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a42564b6-044f-440f-8020-faaf1684daba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8134936b-2e64-4bac-9986-7074cdc9f92c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb1c9da-17a6-433e-8002-1c298d2d7f0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3ed8ad9-d3d0-4e8b-9d47-af3799f47e61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb61455-355b-469d-869f-2a53184325a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2a01b06-553a-46c1-89b7-3ca299576821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd4a4ad-b37c-4d17-a8e5-194d283f5fb5",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d2b42d8-e408-4166-98ea-96ba2e9d1aff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ced89eb-808c-46ad-8982-478fc7ba412a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d10369-31db-4890-9c59-879715b4890f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "691e81d8-bbfd-40fa-95b4-78598e41e6fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d47718-2330-4e04-91e2-784bb9d52e47",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a3d2d79-5e98-4014-91a1-622eced0130d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45d30a71-d81c-483c-ac0e-e9a427949af9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c2c5d78-d618-488b-942a-02d19a35e777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d524a41-9da2-4789-bfe0-cffb9ab3a256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e65669-b084-4fce-add0-98a525859049",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb17671b-a5ec-4379-889f-191685d94f25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab99310b-b1a7-4d06-9695-db10a2ea1b16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e9af1de-3bf8-48b3-a53e-41c5885a9424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff3b4606-65ee-42b5-9ecb-411807e401e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a098f08-7220-481c-a7bd-d32b14ce7c21",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f85cbfe3-3d5f-4247-96ac-981afec7f5a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7df2c20-e8d1-4a16-b108-01bfcb599bbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "481fe9ea-5ebc-4f32-8520-ee3664e5a437",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9171466e-4543-434f-9735-895cf88f03da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d23be6d6-3e3c-427f-9592-5e9eb44657d0",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a64c4d95-d6bb-44f9-aba6-32abadff7ec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df80e34b-ccd9-447b-81e0-b7044c068563"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ee9f87-4300-4a91-9e84-80b7f8957593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dd11e88-4477-404d-82ce-011309b755fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dbe399d-f5d0-40f7-aea2-e55300ecce39",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c3f1509-c85c-4ed2-ba5e-1343d2467597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1529553-d90f-4097-aeb6-e83e997ad6c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1206ed2-c589-4bf3-91d8-3dee557746f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4be8b123-733e-4b50-8dd0-f4cf3acdd4f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e300d24-62a2-4097-aa61-fe7829606373",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "131b7ca9-c43c-4349-b416-65a75646e909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50151845-b2a2-49b2-8bd6-0673320e8970"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcedca4e-8f9a-4264-808a-877bc760f778",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04d5049d-83bc-43d7-9fb2-8d86c56141e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9839607-4b65-4032-bd6a-df077cbd3136",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd6def6c-2d3e-45a7-b119-4507e68a88d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "109cb167-25e4-4dfa-b11a-79f44f6b6460"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1b3f22-7593-4470-860f-cc9fafe489f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43a199ec-6b7d-40c6-9020-817f7297b7a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a11d9b-b43d-4981-a4e6-ca4548af42b7",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "110e8859-18ba-441c-8f15-ae0e3dd1a9bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfa17c1a-ff97-491c-9c42-e061d4270abb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91805e70-2a3f-4e3c-868a-676252c82e80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7ab6e68-7325-4648-9b0e-a40760ba360c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d1bd32-08e9-4cdd-85dd-886676f294d1",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9644f52c-7b57-4816-a3cf-673ded031564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b110bea1-c633-4da3-af3a-5196834bcde7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e19c3f72-613a-41c7-8d38-0b16cdf0f434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6e8d2d5-3c78-4a68-9da5-7e4ac6c64211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9455e1c4-b665-4de0-adeb-dec253a4c891",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c41265dc-5f0b-4c6b-8252-9470a4dbe5ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ba19259-d250-4b8d-b6a5-ddfc6a90feb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77edfff6-f0fb-49c3-85c2-e6ae26dfcc26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a8eca12-a29d-490d-a945-2f46d76386dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0294e10a-ebfb-4dc6-b30c-c382a50d364e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd82ac5-7bfa-4ff9-9fc7-6d0bfe020032",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a618709f-1f0f-4655-8277-3212a5087fd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf16dca-0793-4f7c-8a01-b0ac74a0fb17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73e5bc49-0c28-4b9e-9b83-65e8fd60a5b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5794ee85-9665-46d2-adf2-b580d0312002",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da5f559c-8bec-4607-b86e-7043496e37da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a383979b-9664-4735-90d2-eb2c8aea5014"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "547e8172-bc8c-4429-9a9c-1808651dbacd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dd08db5-eca3-4183-bf86-ff439dddc365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "561603fd-9ac9-42d0-b25b-de67f656c1c4",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7d59931-5d61-4ac5-8fc9-9fe2d9ae7701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54bf3f3d-2b46-472e-8afb-39a80414c0fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "948eaefe-0bde-4718-8860-c3590f420078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5b20348-49af-43d7-8575-8810ed85afb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce5a05a-5e27-4ba5-8f84-bb01b271ec1a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce061e23-ac73-4785-9b3d-ba512258010b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cf7d726-8020-4703-b1fd-f32c49a6ffa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c207c60-a09f-4bbd-804f-cc992ac41bbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d310bcde-1bee-43d4-aea3-ad39b9e4ed1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ac8015-eb42-48ce-b79a-f23d1a105991",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0570c4b3-f26b-4f40-9592-dd183a708139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d959a7f9-0b76-470c-b526-f68c3d874e42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "095531bc-3837-48d0-b31c-4acf61671f53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfccf7c4-6021-4163-8a14-d41e77270423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfdc2067-1881-4344-8779-f9c5686a40a7",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb69043-5cd6-451d-a204-664f28afc6ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9159d19-5534-4b8a-8c7b-14c346cd99aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef47966-9f13-48fa-a9a0-750ee1f69245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9acf0398-5d6d-413e-93be-9ff3cfb24d7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "554ba6ed-5e8a-4495-9d8f-0f23f9fe9a41",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8636b3dd-ba42-4e32-91aa-d41d1c294a07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c40bddb-7bbc-4b5a-bbf3-e9d0d0ff25f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e4eb6c4-2e3f-49e3-a56f-163f7f65e622",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ce88dab-07be-4b67-b749-ca6728abc0f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a14555-12dd-4881-b4b0-449c18895464",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61de85bc-1861-49bf-b344-f76f810fa422",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3559bc7-a55c-45dd-b583-89da38a032ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f05535cb-b1b8-4f54-b16d-3c0f90867129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e73e890-836a-495e-954d-c86fbdd4d002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f2eeb87-feac-48ca-a356-c4ec1b158be0",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56844ad3-bf7b-4f90-a01a-3fb5c6184a58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "013ce949-a575-4dcb-9d58-872989710bc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ca9de8-3201-4eb4-950d-f9c7d1c18340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cfcff26-2916-4f8b-8301-82102bd05dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ea25238-5344-41f4-a6f5-a50a31c6bc4e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f43d29-fd59-4502-abec-f6bcdf78f4f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d5842fb-664c-49eb-a222-de118594e67d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9d9776-b96e-4ceb-bbd7-fca55d27b737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d87ff232-7b0b-4f69-93eb-75ee0ae0fce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37efb5f-222c-4db8-b599-ccb1140c69eb",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c08211-d339-4af2-9386-babaec46c10b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "272e05d2-3e53-4b79-8569-8856decab4bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "864c8e7d-434b-42a7-8b71-8e03eb76c7d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63aafe41-7d44-400b-8407-a979aa757728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d30c57-b6aa-430f-9768-676e378ee0f9",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "812caf28-8615-4905-9a81-328d1c478858",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61601a9d-f4ed-4aed-85bc-746b2f94c77c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d22201-77be-404a-81bc-5722608ccf21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "238069f5-6fc0-48a6-b614-888d6711163d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d101c0-341a-4205-b499-f5ca0337bf98",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "868768a9-be03-4a0c-b835-bd42e2bc4768",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a51541ec-e6a5-4e22-b87b-139837efa278"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db938a98-dc74-4ed0-b042-f8f2f0d3ca46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a19b708-f920-45e3-9db3-d1aefc447a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74980618-a038-4176-96ad-2de0dcb72d7e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e08e12b1-f554-4b38-aefb-d30fad633148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bc84efb-194b-4630-b373-55b29167b03c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e8a26d-33ab-4a09-ab60-4e30bbd8297f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fd7a09f-452f-4c09-8f6b-eae13cd3ff76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e405db7-3661-4f25-a7fa-00079ee6d933",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5306784d-9669-4ebe-9a00-f5ed288214fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df43378d-6ddc-4e09-874a-e24431bd7e3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2473163-1d4d-4046-9bed-a446b277f354",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34d6c7ed-83ec-4039-9125-48b74987c680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053d62f7-c83e-424b-bf39-37299f7bc121",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c051289-b7e3-49a9-946f-59b9cb12f1d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ed24881-8b45-4c1f-89fb-e4fdade06420"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c440c94-5860-427e-9622-186d8fdb0d9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65085d0e-c0ff-4981-bcba-8e9d9cbf91aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0459b7e-4d9d-4a49-acd0-78d501306ad8",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9561ab49-6002-46cb-8f18-63e385d4dce7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20e198d9-2e03-4cb4-80ad-ee52be7cd0b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd2d330-afdd-4304-ae69-8a7380407952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6809c038-709e-4543-9d40-10e0d0991472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b53fe5-3ee7-44c0-ae4e-94eef15ae03d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc316dc3-985e-445d-bb77-ba0fa575a95a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f78bd06e-324a-459a-8883-76cde28a26fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "452ffffd-0f67-4686-bf85-d1f8d8cc60b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0f61c53-e3fd-4b3f-8697-847c7831e399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f75b8046-bb2b-4335-8ade-ed108da9a00d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be00d7b-b946-48c2-83ce-d4ce1ccf0eaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43946901-59a1-474f-a78e-d4b0f6e02ba5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f355d82-5716-4751-bd3b-c3cf764c0e4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "534ede61-8882-4e30-b469-ef7b8cae9830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d4c4419-02cc-4056-a286-fb3266c85d45",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb59735f-a69d-4c9e-b386-382cc1165be0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0efc7fa-98e5-45a2-a56f-21b3cacb7bac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2201e9-5fea-40e2-a6e9-09d53e6aee9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "057505e6-a3bc-4b8d-8524-76bc7196bb37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62853c96-08ed-4054-b9aa-8164e7e3d28c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e8f4f8-ebc6-4759-b246-be585c53268f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40f9200b-70fe-45df-8966-a39e7185723d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19101ba2-61af-40ef-bfc1-7ae3aef58bfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18506f85-7911-49af-a934-1e347d746b4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd6dfc8b-3eae-4f57-857d-3461ba102eb3",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608c52e6-8643-4200-a11e-70660a4a1399",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07c09856-d739-4459-9149-fefd1745f493"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a38dfffa-121c-46d6-aa6a-d25bfef475b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7709ab36-55bd-4fe3-9fc1-c51450a7255f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0846667-da6e-438e-ba5d-f3896613655b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e08b4e35-a0a6-4d24-82f7-9921c3bd246c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4da0673-bd4e-4968-a9b2-7fa857cbf521"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8adbd02-3b88-455a-a879-a6d8ac6a7e04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cf07549-c415-4c04-aa06-ea28adc117ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b1e115-62dc-40b0-9ff3-afb5222f5eb8",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e14ef3-2bf3-45c8-9fd9-56ee76b46137",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b30d7dba-283d-43ca-a955-17955356644f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fbbb3d2-1fa2-463b-ab62-92c5c38d8753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29e464b5-e3ac-4f45-9e07-be3b653e8c47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a5f841-adca-4317-ab6f-b05cc2d91409",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6028d2-5c20-4dfd-9c5d-82cfbab15641",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27295d52-4341-49d9-baf0-8de00f4372ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12aa985d-285c-40ab-a7f9-16f44a55b588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66b63d86-b414-453a-bb5f-59e80486bf7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "978b563a-d348-48cc-96f1-65586e97b94f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b81ad99-b588-46d6-94e1-0aae7c3dc88b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94a0a53f-f243-4c52-960a-b93af9b261cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5832711d-2fc6-4a9a-8685-db1c2a740646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83d65673-2879-4f3d-b0d3-413d57d9da9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5b3567-aadf-401f-803f-fb231a662fcb",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71af9cdf-a494-4213-a9d6-b5af1f072a18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16f68486-ec92-4b41-9645-e5bb5a8bd6c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f40cd4bb-fbd0-4ccf-a651-0e5ae7961117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e28c3cd-f437-42eb-8ca7-cd4d2c8dedce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2427cf-1133-4a9c-b9df-a0d4e3ef1025",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b4a6885-2466-4f40-aba6-13cb03d72a2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb84c627-dae7-4a82-b227-e28a8302594c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "699164c7-cf10-44f5-9b86-060fd19ccafd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44931463-74ee-4df4-81df-680535c215cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc5d7aa-4856-4ac8-8504-6650cce971fa",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe3b595f-709e-4d03-9fec-1a8b76985ab3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee075886-a6e5-4e72-ac01-b7f049b40bc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8483a59a-3c9c-4221-9153-69c2c327f0aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29504d17-f99c-4bae-98b0-5603c354f082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7494350a-d8b0-4e85-8743-2d266f413e86",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57be708a-b690-4aef-bb51-8b779bf24fea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dd42bbf-db75-43ca-8b52-7b98298eb352"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce847b46-dda1-4efd-b91a-1ee07828b225",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea35042e-3d6d-451e-a686-f345c8782bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bde0ffc-ebcf-45f8-9b9f-73184bb5af03",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "542d57b6-5118-4623-aae4-7a3c847e1b11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e6e3e4a-ee78-407c-86f9-fe8cc14f213e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e1468c-e35e-4514-8bbc-4e3a92cc3e4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a956e96-ff9d-4d5e-a2b3-358913d9ff7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e6451e-e363-4078-a0fd-b846a9595c95",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d5cd58-65e9-4a26-80e7-47d05f30cc4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4ba910c-dca4-421c-b22b-d2922b923a6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c079092-0c3c-452f-aa3d-c78250cb2fdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19fea1b5-df1e-4881-b61a-5c43337aba37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6257760b-fca3-44ca-8fb6-b1b26b9db824",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e48f45-db51-43ce-8f6d-7ad3cd46f7e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe069031-ff62-45ef-b036-35a0cd57aaf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6681b49-a3a0-42cf-9acf-9e8e3f4caee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32822def-8fef-4da4-9dd1-7cf82e54853d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d68f60-6983-48f3-a66b-15d73eac66fa",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc880f48-ce79-4b69-b558-60c530a915b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0240708-01af-4fed-82e7-0d39aff3b084"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b003e9-aefb-4574-b89a-35968ab4e02b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffaa63e4-2549-45c7-91ca-7c548d2fd28c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b0b8ec6-b15e-4c69-8dd4-70854198f419",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd35edab-5e66-4194-9272-a7764104b044",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c31f532c-d55f-4196-baa1-f1391d0e444a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad6b707f-5155-4df0-b818-fc22de9ae09b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "610b0b50-8bcf-450e-a3e9-b9801e465909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b65f8cd-d907-4c19-a630-78141e763637",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe20ce8-2a28-487c-8661-333ee82f5c60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "007c605e-c1ff-4fea-bc20-eee149ba3188"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8d9e17d-8e85-4eba-8a56-b5ca2fa144bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d243ad1-f639-4a76-8728-e2689b8b0f91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d67751-aa17-4796-80f9-407cf852b069",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53996b19-6bd7-47ae-87f8-0d6cca8bfa1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acebadce-8e22-4cb9-80ca-6bdf14932c55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99334808-f8d6-4274-a97c-487ecc2961cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "162c442b-99d3-47d6-9f09-dc2da4084a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ec5d8a-2a65-49c8-add0-e9abe2544473",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08fb5b1f-28b4-44a3-9b78-996b4efaceb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1f3b01c-14a3-4ae8-bc24-3fcc00b2d7cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5eef08a-8305-43dc-aa2c-b70955ebe9a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e85b47e-10a2-42d8-9f4d-b81d5defc032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7010df9-9bbe-4663-aab7-f7e272adde2b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35a881e-71f3-4c07-92d4-55600fc933e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1ea4295-05dd-4aea-8c4c-e5f03e4eebd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "445ce255-cbd7-423d-b4ae-8b85787da040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71a94d6e-7182-4c1f-aaad-c87a1f834021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0108aca0-7337-41aa-a224-b6f31c378de1",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "235e0711-33ba-436f-b3ac-1ce23c1984d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "197a8d8f-4348-4e5c-a184-cb337506b4f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd22446d-cd0d-4e0b-a266-8b4c0eacab37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1dfce93-d568-4b19-a2a2-8a447cac4042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d32d5851-a9d4-4aef-8318-374934f064da",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72398d2f-7e4b-4b21-a160-d5ddda85703b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c1be2cc-81d3-444f-a6e8-10b413f40333"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e31dbb6c-1d47-46e7-aec7-67983bb8ea8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f35a526-d817-4044-8240-268ea9deba59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a623cca6-ad93-4f26-85b6-606c104bd4fe",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ccfbab-50dd-4ce5-a211-6d73c93956f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "228dca6c-75a6-49b7-b660-9d7568f3e774"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "128774b8-06c7-44ae-b64b-cbed5212f440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1b23371-a33e-4855-8a80-6a2c5c9effe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3241e1-0477-4892-b923-f7bbd6199125",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c8546d0-a7e5-4832-b1ef-3ddf36c8bb10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d72744e-255f-42d6-a1ee-cc69a70cecee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "192660b5-a34d-42db-867d-d9443c0b01e1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e8dbbdb-39ab-4bee-9ed1-deddcaf4f8f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75eb18df-2439-4df3-a27a-a3d5dc743862",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c2eaf1-7b55-423a-b23c-4ceb0a668f08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a85f22fe-4077-4466-8eac-7d319b4f24bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e20d35-af45-4ee2-bf71-685f3e985b61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba356085-8705-4fb7-bfb7-70fb443717cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f529f29-1039-4343-bb4f-c27e411759de",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c1ffcdc-a2f1-4a61-8cc2-6417db899099",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "546fe1b2-0773-409a-9eaf-9720050e5cb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7862a82b-495a-4dad-85ba-6395e47c7760",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fcda15e-e5e9-4c75-a758-810d2046ce32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99cf52dc-897a-4715-8803-7c31f4193b57",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964f92bb-78fd-457d-8584-7b7cd955fbaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "123fea20-9420-4f49-ad5d-119e0b4fe01c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "502be710-8000-486d-bd16-4d3e8cdc9d60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "865d59f8-8241-4563-a1b7-d65bccf61620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45035a4e-ed0f-4699-b95f-d365e1cd7ad9",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90732d89-df2d-4120-951b-74edb46f522d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0c183cb-e835-4248-8648-0eb7c069e937"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "decea8fb-c375-4892-aff6-87f32f757f73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e47da71-ad05-4444-9c76-cf7b57cc06c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2eb8bc5-f6c1-4f06-99f0-3d18cb7d0271",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f4e686-ea95-4e82-a4f1-947d942f5d30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc75e926-0095-4f53-b45e-700fa6370b15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ec89ea-53a0-465c-bcbf-1226bd4d3d7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "723e0689-bed5-402c-92ce-4a86b4878b73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d047a7-e12c-4855-8530-434392ab6b7c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "defd28a7-e4a7-4b8f-8bd9-dc8240e8aeb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "478455b9-82a8-4dc1-94c9-db52fcfe289d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a294aac8-1399-4e8d-a0ae-c2db3fd7403f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03030dd4-9294-4b33-be32-bcf15242caed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1f6a9c-08a1-4417-b36e-c5a2d9167576",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "561e4b04-c6b0-4d75-930a-5c282904654f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65ea5445-90c4-4b05-8a2f-3c2f2ca7e3fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "828ff1d7-96bb-41a2-b130-3193d0240573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4529a861-c73e-4102-b56c-f3957b7631fa"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6e256d0-2b2c-4dbc-a0d1-ab537a45d2c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa4f29a7-b384-4eff-83ae-2cc48ff2a376"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "df591c70-196d-4d1b-b443-36d0bf307040",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "97bf15a8-5687-437e-8c47-dd88ebd04c77"
                    }
                  }
                ]
              },
              {
                "id": "9c56c2fd-695b-411d-816f-c639a6e70894",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "78f6070c-9a27-4da7-9351-92b8ce0453a3",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d012d05a-e5a9-4599-80d2-7b9e7df434b5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b3a81e07-e994-4ead-aa07-92d0dd467fd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5eccca8-f032-42f8-93d4-8e295781bd81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4fd2e82e-1fbe-4832-a15a-370b628cdbbb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "add9d3e0-b6d9-4a6d-9f16-31af48456d51",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c0d1a986-10db-41db-b095-ec70af8c2f63"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "045c1c31-e02f-4e15-8a4c-cd9de5385e1e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "92b70c83-2ffa-43ff-a6f4-6397804f4e9c"
                    }
                  }
                ]
              },
              {
                "id": "1aa1573b-7ba0-4931-90ff-0e42f5cec265",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "32840aca-42c5-4ba7-9d77-52ab1aa5b247",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d796ad-fdfb-4188-86a5-846113729dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "2a079b2e-0dc4-4936-b0ee-1baf38e1124f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d67496-5256-43df-94d4-a72b2e41318d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3b129a0-5d55-43ab-8ac4-6a6fad645368"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b123ceac-809e-48eb-9f80-92662e9356c7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f73e8133-fcc8-40c0-8d76-87c4d7509408",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "306e7613-07cc-4093-a14e-b00c2608531b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0bacda7b-1ab4-4d7d-92c4-df13fc5e9a25"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c2c1ba0-1869-4cd5-a1d2-2da83952b721",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac77bd12-4346-4677-b681-0621ba12add8"
                    }
                  }
                ]
              },
              {
                "id": "a925a515-073a-49d2-9845-693dbb8be32a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd07fb04-2e37-476a-a2fd-0e7eb419d94c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b4ee9e72-010a-40b1-804a-df72e8eda173"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "517ba4ed-218d-4350-b82b-a82c32cd78ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3dc919bb-f102-4477-96b2-b2f3c89286bf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "760aa9e9-04ef-4ac5-83a8-02775c1f375d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7b9d47f2-cd55-4cd9-9e98-f46d69cf856c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eed8affa-9387-43ca-a485-e6cbfa33186b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1fdb6cdb-6f4b-4db9-8fda-dc11ae482e84"
            }
          }
        ]
      },
      {
        "id": "29dcf64f-a684-4474-a048-67a514559301",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1eb863c1-a506-45ee-befc-2b0b373d5518",
            "name": "Negative Testing",
            "item": [
              {
                "id": "78d71a3e-adf8-4f28-a750-63ce488cb495",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cc07d5b1-17f0-410c-94ae-aabf1175bfda",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d4f258b-c546-4096-8888-07257709604a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "08b057de-56fe-4826-91eb-761febb6578c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e10488d-4388-476b-9419-743032e74831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3d00eb4f-0bcb-4cb1-8e07-31f2b9d661f3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e3e57f95-d894-4173-abb1-8858141998e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e51b782-7e07-4156-832e-4f7fddd1e823"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4abffba-6e1a-40b5-9907-6a59167f76a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9fdc2117-6bb0-4ed9-8a1b-2d2632037568"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5563ecf4-4d85-4f92-8f30-703934006d9d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "191eb259-d6dd-4ff5-8a46-bcf61eff46d2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5df33f72-2d1c-4032-b44f-e192eb187794",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5491590f-faa3-47b5-8b11-232ecadb93db"
            }
          }
        ]
      },
      {
        "id": "d9afb312-eb97-4ebe-9932-1ff3cf3e01bb",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "277fd518-db7a-47f5-9e9d-b7efd2845905",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2a10d8da-9e51-4b76-ae4e-c9706aa95b9c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e6b1d4d7-cfe6-4051-8109-1d04f399b8bc",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95a6efe-e623-4506-9450-4124f6d9977a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c715110a-35e9-4860-8ea5-bf5d1e18e08c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77dc114a-0d66-4292-b9f2-1e0008dff31f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7f8787c3-9b00-47b8-81d0-804a4bc0df6e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40dcbc27-4b62-4745-889b-8e6b77d4003b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a82badd8-a67b-4252-b209-b5027bc940c8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ac88e75-a232-40c1-b7bc-f761ad1f7ec3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d6232fc1-bea0-4430-aea4-7bf20cced0ab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c349fd10-f552-4955-9a55-e1d8bf301a9c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "df10ab98-9468-406d-be47-e39169001552"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "faa92724-7662-421f-b7ee-a69ed16943ba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9f75dd2f-c35a-4eae-afe1-ee1d203e50cc"
            }
          }
        ]
      },
      {
        "id": "c9753f11-be39-4e30-807e-d6d8e60d82ec",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "94156884-67d6-44a8-81a5-4e8f0a2a35aa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "99e6052c-bffe-486b-9186-39f17c6139c5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b77c3922-386b-4214-a985-737a823bd94f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9538719-7c05-4552-8012-205ae294e446",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "addcd880-d36a-427b-ac0e-a4d9fc22cfdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "925468fe-70f0-491a-aa47-c64134f13955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "92eff093-5282-4b55-b7c0-92d4d9180644"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80cab9f1-4fda-40aa-8e8c-dc00f5042371",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b9fa83f-7db4-4956-a0d7-4016ab3ea59e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf8074ee-a762-4fc1-9bb1-75c408e91f24",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ab5ae85-8aa8-4f94-8be2-735a8a01eb3d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "786ed950-05d3-465c-a583-f03e927269b6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4f24e677-ea5d-4337-b555-63f2b78bef4f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f196f4dd-e0f3-4fdc-af2b-610bd42c7006",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e659d0f7-c60c-424e-898d-00c634c9b67a"
            }
          }
        ]
      },
      {
        "id": "677e7814-a868-41ef-bc0c-39668e0a6b14",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "81f8d598-06a7-4e0b-9e84-ac7ac72263be",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2da4a63c-63f3-4a4e-b537-6240f7e98d16",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "cedb22a8-fa4c-4fa7-a957-6aa7c4727099",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8ba6f75a-1354-477f-ab0d-d8740f44b123",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eb7db7e6-ff47-4271-8e57-ff8729185477",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1853,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 246,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 495,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 931,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 922,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 756.4268292682926,
      "responseMin": 10,
      "responseMax": 7050,
      "responseSd": 901.1956515483313,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1686876157222,
      "completed": 1686876354292
    },
    "executions": [
      {
        "id": "63985e94-15f6-49e6-b06d-d9e6ce9c7891",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 244,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ad076929-9a59-4d60-8635-dfe79eb04980",
          "httpRequestId": "127e2fb1-1c83-4f63-904f-7c0993cb7403"
        },
        "item": {
          "id": "63985e94-15f6-49e6-b06d-d9e6ce9c7891",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "aed5e4db-968e-4f69-bdc7-47b7ebd5f288",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 0
        }
      },
      {
        "id": "a95286a5-7cf5-4874-abf6-972d59af22f1",
        "cursor": {
          "ref": "3975c2be-05e9-4335-b52a-e860f8da376f",
          "length": 244,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f99751ba-cf5a-4994-8fe7-f04bb3a639cf"
        },
        "item": {
          "id": "a95286a5-7cf5-4874-abf6-972d59af22f1",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "df4ef812-8cdf-4a70-83c2-87ea19f20b90",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "85e07d04-e058-47c9-817c-0539293641d7",
        "cursor": {
          "ref": "f6762708-b346-48c0-a093-4607740e35db",
          "length": 244,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b0ca1364-330b-4527-9112-7df59595bb4a"
        },
        "item": {
          "id": "85e07d04-e058-47c9-817c-0539293641d7",
          "name": "did_json"
        },
        "response": {
          "id": "ea510c45-93c7-41b5-bc1c-7b941a5b1a34",
          "status": "OK",
          "code": 200,
          "responseTime": 1165,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac50abf-2bed-4dab-af48-72a81047394f",
        "cursor": {
          "ref": "db81f087-8c3f-4be9-9bf4-e3cd3d12bb2d",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e3441946-23fb-4725-a546-4400c74124d1"
        },
        "item": {
          "id": "aac50abf-2bed-4dab-af48-72a81047394f",
          "name": "did:invalid"
        },
        "response": {
          "id": "30070930-923b-4058-b476-d9d92f11f9fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 814,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac50abf-2bed-4dab-af48-72a81047394f",
        "cursor": {
          "ref": "db81f087-8c3f-4be9-9bf4-e3cd3d12bb2d",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e3441946-23fb-4725-a546-4400c74124d1"
        },
        "item": {
          "id": "aac50abf-2bed-4dab-af48-72a81047394f",
          "name": "did:invalid"
        },
        "response": {
          "id": "30070930-923b-4058-b476-d9d92f11f9fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 814,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70445064-49c2-4c61-930b-2e6e83e41c20",
        "cursor": {
          "ref": "9096f7d2-22ff-41db-b5c0-a3de36bdbdcf",
          "length": 244,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e1497212-524e-4575-94fd-e693a87156ec"
        },
        "item": {
          "id": "70445064-49c2-4c61-930b-2e6e83e41c20",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "580586a3-0667-4bb4-a467-7ff852deda61",
          "status": "Not Found",
          "code": 404,
          "responseTime": 904,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "906fa7ec-59e7-4102-a7f2-f2b611e35b89",
        "cursor": {
          "ref": "c494075e-0c13-4d4b-b9e9-d62dc956bd64",
          "length": 244,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "68928c7c-66b5-4d66-b89a-6b589b2372c3"
        },
        "item": {
          "id": "906fa7ec-59e7-4102-a7f2-f2b611e35b89",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "3426a917-c31a-49b8-969d-89354be2dd79",
          "status": "Not Found",
          "code": 404,
          "responseTime": 692,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ae3b4e-8b3d-4c6b-9607-160bfde3a0eb",
        "cursor": {
          "ref": "678f9ba1-5518-4353-8940-a81ed57c2f28",
          "length": 244,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b51ac944-1c38-4874-86f9-4761d408b8fe"
        },
        "item": {
          "id": "20ae3b4e-8b3d-4c6b-9607-160bfde3a0eb",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c53f5419-b3fc-41b0-af9b-1742852feed7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43372aca-eee9-4b00-8c35-7897ecb43596",
        "cursor": {
          "ref": "328b86a6-817a-4323-878b-08e7bd58e9cd",
          "length": 244,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "744d71e7-76ad-4335-aeab-9d10a8491a75"
        },
        "item": {
          "id": "43372aca-eee9-4b00-8c35-7897ecb43596",
          "name": "identifiers"
        },
        "response": {
          "id": "c97fa3f5-0866-4ec7-98dc-977b5dec0e6b",
          "status": "OK",
          "code": 200,
          "responseTime": 1513,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9fd30cc-894d-4aab-babf-76129b8051cd",
        "cursor": {
          "ref": "ab779c16-3f61-4aac-baed-fb0643abadd4",
          "length": 244,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6da76103-f564-47a8-a2f7-bbdf5d566d18"
        },
        "item": {
          "id": "a9fd30cc-894d-4aab-babf-76129b8051cd",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f5b6571a-d50e-4930-b534-257d6ba2680a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcda657f-64ec-4aeb-baa6-6c9eb9635101",
        "cursor": {
          "ref": "1da3003a-a6ff-40a4-b2a2-5ce0e48468ac",
          "length": 244,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f5b78187-05cd-4781-a3f1-6625eabdd21e"
        },
        "item": {
          "id": "bcda657f-64ec-4aeb-baa6-6c9eb9635101",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "98f435a0-92c5-4a4b-b01b-20c2899f2a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a38dc2-b45d-4846-8802-da774cf4df73",
        "cursor": {
          "ref": "462c5c42-e746-4c9b-9451-ec5549279075",
          "length": 244,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "56fd3459-782d-4fe2-a144-3c29ed63b830"
        },
        "item": {
          "id": "f4a38dc2-b45d-4846-8802-da774cf4df73",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5d245d66-a7ca-4a7c-adce-3dc82b380a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a97cda-e5b1-4038-8b75-7de66ad9df08",
        "cursor": {
          "ref": "8acf9d23-6c86-413a-9298-fb5ee44d8607",
          "length": 244,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ca5eed9e-c293-49e9-998b-f1c9e87db97f"
        },
        "item": {
          "id": "a1a97cda-e5b1-4038-8b75-7de66ad9df08",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c0e7122d-524b-40c3-b62e-0773100d4f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e315b7ed-ebc0-4869-bd70-7e31893f5cdb",
        "cursor": {
          "ref": "737dae36-e572-41ac-adc7-c61f10e9a0b1",
          "length": 244,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "1e31eb12-6556-44cc-9dda-1c50bed5fe30"
        },
        "item": {
          "id": "e315b7ed-ebc0-4869-bd70-7e31893f5cdb",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "819edd87-4eb4-42d7-9234-ddf1a954e0b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b792301-becc-4e34-b756-f20ee81a4f5c",
        "cursor": {
          "ref": "cada8c22-8f03-41b2-a5ae-a422075166f5",
          "length": 244,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "1e6a07d8-6d83-435e-980a-368479690840"
        },
        "item": {
          "id": "9b792301-becc-4e34-b756-f20ee81a4f5c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "46403daf-b719-430e-9a26-bd794ce35ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1240c4cb-5217-401f-b9bd-cd77a23fa56c",
        "cursor": {
          "ref": "311878b9-96f8-4b04-a436-9de67da2b171",
          "length": 244,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "217962ea-c906-4bfa-bd12-c4aeadd3e0ff"
        },
        "item": {
          "id": "1240c4cb-5217-401f-b9bd-cd77a23fa56c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b60bb01d-8827-4540-a958-c1a0081fe988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e188bc1f-4f4d-4a87-b992-da0b39c8cfa0",
        "cursor": {
          "ref": "bba068ce-a77b-48aa-ba4a-3fcefcef9ebd",
          "length": 244,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "572fdb12-4998-4efc-b5f4-c1dd6e66acf4"
        },
        "item": {
          "id": "e188bc1f-4f4d-4a87-b992-da0b39c8cfa0",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "00163e4a-b699-4fb5-981b-e437cc20db36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4731fb3c-bf09-4b7d-b6b8-99faacfee607",
        "cursor": {
          "ref": "60e8ed07-8880-490f-8116-a09e964fa4a4",
          "length": 244,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "448e90db-39bf-4cff-99b3-4a93d5a690e8"
        },
        "item": {
          "id": "4731fb3c-bf09-4b7d-b6b8-99faacfee607",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9c5476ae-9a14-4304-9666-dabf04479b4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4549ab9e-d692-4a4c-96fc-ae32d191014f",
        "cursor": {
          "ref": "d12acbde-7e22-4bcb-832c-fb836f3394eb",
          "length": 244,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "51bc2e5b-be08-42d4-bc41-2ae0a2e8a38f"
        },
        "item": {
          "id": "4549ab9e-d692-4a4c-96fc-ae32d191014f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "4849cfbc-1158-4738-8e5c-fa7bc1a17bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58176759-7556-4b60-a57e-6287e011ba7b",
        "cursor": {
          "ref": "4a157bf4-b803-420b-8284-d10343fae98b",
          "length": 244,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "fc9782fd-b827-4f75-bfc1-07d81b9b1ab3"
        },
        "item": {
          "id": "58176759-7556-4b60-a57e-6287e011ba7b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "25780808-3dd3-4035-9f98-4c5634fa161c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d4f3fdd-56a6-44f8-a6c3-c2edb1c69407",
        "cursor": {
          "ref": "c0c0e42b-7cbd-4320-8e17-f00762b9092e",
          "length": 244,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e3a500ca-953b-4cf1-9f5a-7945e4f2257c"
        },
        "item": {
          "id": "0d4f3fdd-56a6-44f8-a6c3-c2edb1c69407",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "db8133d7-ef6c-46cb-9b02-cce72c5e3d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f5ee23-a910-49d3-b83c-77df995fad67",
        "cursor": {
          "ref": "2632e177-275d-45d7-b367-6ccf90ce6e42",
          "length": 244,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "02a8e33a-00ef-45c5-88f2-692af7e6213a"
        },
        "item": {
          "id": "17f5ee23-a910-49d3-b83c-77df995fad67",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e37b6d12-e9ef-470f-9cbe-31a69b46399c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2f2d12-3cd7-4d10-ab48-1997534819bb",
        "cursor": {
          "ref": "9e5d378e-f746-4d9d-b916-96e35a3eabed",
          "length": 244,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b2b3aa6e-8448-45ea-9582-375d9f172829"
        },
        "item": {
          "id": "4e2f2d12-3cd7-4d10-ab48-1997534819bb",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f95ef8d0-e1fb-4628-b3c0-41a381ed0e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5562e4c-03da-4fae-8f54-021fde311535",
        "cursor": {
          "ref": "5dee8e12-ed64-4924-9aec-4ef88a218d0a",
          "length": 244,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "9f645028-b6bf-47f8-958b-704bb4966abf"
        },
        "item": {
          "id": "a5562e4c-03da-4fae-8f54-021fde311535",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "8c5a6e4e-df3a-4752-bba1-eca25a91d3ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2061e785-9d35-4e74-9f4b-1278cf66a873",
        "cursor": {
          "ref": "aad52c38-c921-4561-bcfa-e7bcc3060749",
          "length": 244,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8c0c5424-4bd8-458e-af1c-0388b18a46e4"
        },
        "item": {
          "id": "2061e785-9d35-4e74-9f4b-1278cf66a873",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "4c0b19e2-e415-4d0a-9826-399e819cfe25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84a8302-9e71-4d62-837c-3dc3fa1f41ea",
        "cursor": {
          "ref": "2d9780a0-eed3-4314-b160-1fe086e64cf9",
          "length": 244,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "6f1a198d-5af4-43e4-b3b8-652bab3978ba"
        },
        "item": {
          "id": "c84a8302-9e71-4d62-837c-3dc3fa1f41ea",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a60ec832-91d3-4dc4-b3a8-17fae0ad8026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91818e20-fcd4-45e5-8513-daec5330e6d2",
        "cursor": {
          "ref": "115c192e-7ab7-4702-9770-07d1de252b18",
          "length": 244,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "1f17e033-f85b-44c1-b0ab-685305640534"
        },
        "item": {
          "id": "91818e20-fcd4-45e5-8513-daec5330e6d2",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "7cd0b0cd-c60c-4dad-9050-444ca85602cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79beb7db-f102-4f31-8c49-db6ffc4405a0",
        "cursor": {
          "ref": "4ca60713-cf94-4878-a2d3-4b078e068d35",
          "length": 244,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "4ec6ff47-ca18-435c-98ba-37c65d5c0a81"
        },
        "item": {
          "id": "79beb7db-f102-4f31-8c49-db6ffc4405a0",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c274c4e8-4a2a-45f6-996c-fecc09ead24e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a972d115-4672-411c-b782-053fa3a8744a",
        "cursor": {
          "ref": "2e8dbc76-28a5-42ea-bdaf-e7774990163f",
          "length": 244,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c7fff22f-8a71-4807-a9d7-77607d4bbb69"
        },
        "item": {
          "id": "a972d115-4672-411c-b782-053fa3a8744a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "48a12218-2584-4b34-bc4b-1cca14504f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e351907-18eb-4be0-bbec-3b3f8b15ab01",
        "cursor": {
          "ref": "2d1df7ae-c52b-4064-a537-60b8fc155d6b",
          "length": 244,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "168529cc-1b00-48b2-993d-a1b07e9c434f"
        },
        "item": {
          "id": "1e351907-18eb-4be0-bbec-3b3f8b15ab01",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7ca3e416-01af-4f65-a322-4125a336129d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af6beb25-ddc6-438e-b59c-f0bb32af6531",
        "cursor": {
          "ref": "db59c33b-f647-4802-b3cf-c7266e3d8345",
          "length": 244,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "45dec908-66cc-4e1a-961d-6e6f7864bbe2"
        },
        "item": {
          "id": "af6beb25-ddc6-438e-b59c-f0bb32af6531",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "363fcfa6-cdd9-4104-9c0c-899bcc9e356f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92bb4da7-b9b4-4b90-a246-6f8093a170e6",
        "cursor": {
          "ref": "c2fcb8cf-1883-4277-87c4-85d64d99c135",
          "length": 244,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "dd48c9c8-7eb7-4919-a65a-91ec709ff584"
        },
        "item": {
          "id": "92bb4da7-b9b4-4b90-a246-6f8093a170e6",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e3799a3a-11ec-44ce-837e-b1d13489099a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609e0d28-20f0-4825-b6e7-77eb99e947aa",
        "cursor": {
          "ref": "fe1df8bb-5205-4047-82f7-7d8448696e43",
          "length": 244,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "97791e28-eedf-4891-9557-f5678caefa2c"
        },
        "item": {
          "id": "609e0d28-20f0-4825-b6e7-77eb99e947aa",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "5be28a38-202c-479b-97eb-ac1730e7d53b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "120a2744-3d00-41ff-8be9-cb788ec1c106",
        "cursor": {
          "ref": "a1fff5a0-fb8b-46fd-9385-74310d997c57",
          "length": 244,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ec3f80ca-febb-45bb-822a-8b411861e714"
        },
        "item": {
          "id": "120a2744-3d00-41ff-8be9-cb788ec1c106",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "227d6585-0cdd-45a8-bccc-34781253b414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 724,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e3abfe-bb66-43db-9359-aa27a9f913f3",
        "cursor": {
          "ref": "aa578070-ce5c-42a4-bdcd-18b38c900a9b",
          "length": 244,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "040b3bc0-480e-4ff9-ac8d-35fb52a4d6a0"
        },
        "item": {
          "id": "71e3abfe-bb66-43db-9359-aa27a9f913f3",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ccdb70ef-a419-4ee7-a6f4-ae04c51bb762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2d6354-8302-44d7-8c6b-a9f283094924",
        "cursor": {
          "ref": "3ca4a6c1-e1dc-4f19-b21a-51ca30038458",
          "length": 244,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d90aee7c-db24-4b92-997f-3023c9b1c5d7"
        },
        "item": {
          "id": "ac2d6354-8302-44d7-8c6b-a9f283094924",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0e2fcc6d-3d63-4892-a0d3-c557c5ca2a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a723ad-ebdf-4e8d-ac21-d5bee80bba39",
        "cursor": {
          "ref": "5e5e8c3e-8257-49f3-a010-5c3beb24e369",
          "length": 244,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "56c42b59-18a4-493e-97d0-14e7c59a99f9"
        },
        "item": {
          "id": "75a723ad-ebdf-4e8d-ac21-d5bee80bba39",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "8b9ae100-cbb1-477b-a077-1b0225dcaa42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6993ec-a408-4d63-abeb-eb1b49265752",
        "cursor": {
          "ref": "08c0318f-c227-462e-aa79-b0ebf130aadc",
          "length": 244,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a5b9a849-b8e0-4c6e-9ee6-37e01e621562"
        },
        "item": {
          "id": "da6993ec-a408-4d63-abeb-eb1b49265752",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a8e5c390-85e4-41ab-aa22-ff91bf175fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a7765d-7115-48a0-a257-10f79771418f",
        "cursor": {
          "ref": "cc6938fb-4870-478a-a9e4-c4e812a4f2d0",
          "length": 244,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "79f4f331-6727-4739-95cc-24cc3f54e97c"
        },
        "item": {
          "id": "02a7765d-7115-48a0-a257-10f79771418f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "61b83af0-d14d-432d-860c-f7c5d5c68410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814e9ce8-fbac-4982-8499-b26881a69c03",
        "cursor": {
          "ref": "9c44d9de-da48-4d05-b773-1ef9635632a9",
          "length": 244,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e1dffdf3-686a-408d-862f-e95522d8b972"
        },
        "item": {
          "id": "814e9ce8-fbac-4982-8499-b26881a69c03",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c9c62493-d096-48e8-9d0e-7f2e3d038768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e053d5-1806-4136-80c9-16c5c2170af1",
        "cursor": {
          "ref": "bd397fda-a7b3-4867-ac0b-efef8a0ac313",
          "length": 244,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f3d5fe27-c580-4cd0-8372-92bfd8516e64"
        },
        "item": {
          "id": "87e053d5-1806-4136-80c9-16c5c2170af1",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "950356bb-7068-4cef-95c8-bda97eeca97f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 708,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b41f58a-c832-428b-bdef-fda0938f887d",
        "cursor": {
          "ref": "dbb18e4a-1415-4595-9e8c-5c67624f2e64",
          "length": 244,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "9b7c5054-97fe-41f9-a162-237192916b37"
        },
        "item": {
          "id": "5b41f58a-c832-428b-bdef-fda0938f887d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e892828d-c8a1-4acf-bf13-b57da1ccbdf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33fa56f4-925c-4e97-97fe-3764f694d406",
        "cursor": {
          "ref": "d7417138-6cb7-4e17-8a5f-7428bd4ef2f5",
          "length": 244,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f16fb613-4a7c-4666-8932-a7eea428b2d2"
        },
        "item": {
          "id": "33fa56f4-925c-4e97-97fe-3764f694d406",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "7cc7cd77-9b3b-4b7a-b9f3-7f8631ab93ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7c4621-ab27-4d75-a078-f34918ad0942",
        "cursor": {
          "ref": "a58a1c4d-797c-4c20-8251-a4efd1bf9d76",
          "length": 244,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "74c02ba2-0fe8-4de3-92d4-62feaab45092"
        },
        "item": {
          "id": "fd7c4621-ab27-4d75-a078-f34918ad0942",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "efb67c6c-7aaa-40b5-a6bd-bf103feb4fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd2d0644-489a-470b-9922-299518ebe679",
        "cursor": {
          "ref": "2d965a74-2010-4234-b567-2749d99cf04b",
          "length": 244,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "04193079-c48d-4dca-8527-1528ec1aecb4"
        },
        "item": {
          "id": "cd2d0644-489a-470b-9922-299518ebe679",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "94e34e74-30b4-4388-93ed-0c1e1dddc46c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 893,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cbdbdda-dc2a-4360-b5e8-23e163e1d133",
        "cursor": {
          "ref": "214da141-321f-4729-ad12-d16d71fef694",
          "length": 244,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "aabe34ee-7439-45d7-85aa-c4d10adfaf15"
        },
        "item": {
          "id": "0cbdbdda-dc2a-4360-b5e8-23e163e1d133",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "055cde51-03ac-4d85-adc8-824d26a280d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 996,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41c13d30-b2a7-466f-b1c8-9acf04250130",
        "cursor": {
          "ref": "8b8e33f7-9263-41f0-815e-597206b51e42",
          "length": 244,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a0bd4207-cb79-460a-8d69-149b15bd8751"
        },
        "item": {
          "id": "41c13d30-b2a7-466f-b1c8-9acf04250130",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5df366e6-ec49-4d38-8c3b-01f932d66a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1278,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "700506fc-aef1-44ea-8441-ef690993a145",
        "cursor": {
          "ref": "6fffdb1f-9bcc-4768-863d-79c1d831a39f",
          "length": 244,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "75e862cf-e628-4ae3-8b67-0f420e30ace0"
        },
        "item": {
          "id": "700506fc-aef1-44ea-8441-ef690993a145",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4a1303ba-87a3-470e-ad71-84fd41d2a3d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2cf3129-b982-4e32-b892-2fe60db086bf",
        "cursor": {
          "ref": "0c8267e5-1415-44bf-b340-358bbefb15e7",
          "length": 244,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "90a52d82-7f1a-4019-bcec-9aa9887f5bd1"
        },
        "item": {
          "id": "b2cf3129-b982-4e32-b892-2fe60db086bf",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "23b0c005-8e8b-48f4-9ddb-8d5f34410166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc70197-8af2-4f6b-ae45-974dfac6a949",
        "cursor": {
          "ref": "142843bc-29c2-4e84-b547-16249d5f219c",
          "length": 244,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "525ee2a8-05fa-4646-a051-9f178451c2fd"
        },
        "item": {
          "id": "ecc70197-8af2-4f6b-ae45-974dfac6a949",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "37a71d37-4850-4b7b-88ca-8a9a3e3d3cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 720,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc369bf7-2e88-4ce8-a5fc-6cb2d0286646",
        "cursor": {
          "ref": "27b80bbc-9c4b-4d70-905d-46312de59877",
          "length": 244,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "f29fe76b-bde3-4f28-a624-a2d7856a91b5"
        },
        "item": {
          "id": "cc369bf7-2e88-4ce8-a5fc-6cb2d0286646",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "1d89b196-4bd8-462e-bea9-1206e9afe5ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798beb1a-2411-44ad-8ffe-7447061cfe3b",
        "cursor": {
          "ref": "e7653c31-9564-4278-9f55-61af23bcdaef",
          "length": 244,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "bc940c24-4de6-4254-bbe8-6d05dacc3059"
        },
        "item": {
          "id": "798beb1a-2411-44ad-8ffe-7447061cfe3b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "70328005-d22d-4591-829d-e370449270fe",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 880,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b148eeb-bad3-49e4-a04c-33a7c1f1acd2",
        "cursor": {
          "ref": "9a1eebf8-b5cb-4e0b-a585-cf39c4ca4882",
          "length": 244,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9c7f5402-18d2-4a87-b81f-b514c908b5e3"
        },
        "item": {
          "id": "9b148eeb-bad3-49e4-a04c-33a7c1f1acd2",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "bfbcdd9f-00c5-413e-b03e-905e4deac766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 725,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce02988-6c5b-49ce-8a91-0f3108130366",
        "cursor": {
          "ref": "55b63895-1a4f-40a4-b443-660a81d2f827",
          "length": 244,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "6f8b9a5a-a44f-4e35-8f59-99d275adf38b"
        },
        "item": {
          "id": "7ce02988-6c5b-49ce-8a91-0f3108130366",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c2761378-00be-488d-b431-cc38f921b9bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b9c78b-1508-45fc-aba2-0d57681337fd",
        "cursor": {
          "ref": "7f39a5ec-7107-40d1-a985-9defd6fcf420",
          "length": 244,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "02893313-6d9a-494b-9eb1-919f3c2a31e7"
        },
        "item": {
          "id": "29b9c78b-1508-45fc-aba2-0d57681337fd",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "6e178612-016f-4617-b6f0-937499fd8361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07094ea-ce3f-4794-bb33-ff8b617d649e",
        "cursor": {
          "ref": "ea7be5af-b063-42d1-9c4a-253c59696bb7",
          "length": 244,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c14b7d18-f1c6-42b4-9f49-c3610ebf5dc6"
        },
        "item": {
          "id": "c07094ea-ce3f-4794-bb33-ff8b617d649e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "674ba482-58b5-4b69-bf7a-e8abb0e93c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f65624d-5376-4475-bd7c-7de1f98cd478",
        "cursor": {
          "ref": "77be81c7-8842-4b12-a1f7-027be4caecd5",
          "length": 244,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d639f17b-e7fa-460a-a307-9e3c52868bee"
        },
        "item": {
          "id": "2f65624d-5376-4475-bd7c-7de1f98cd478",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "695e433a-300a-49a6-a020-740a2c33961b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d33f56-715d-4f8e-9b04-4b4e5b1c5b6f",
        "cursor": {
          "ref": "b965ed98-ffe7-4a3b-a5c7-acc299d609fb",
          "length": 244,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8658905d-07bd-45c9-a85c-778cd61e8c17"
        },
        "item": {
          "id": "b6d33f56-715d-4f8e-9b04-4b4e5b1c5b6f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "75df3c51-7806-42bc-8ebe-7d89e3c1f953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd15475-971e-4159-abda-ebe0f3e43480",
        "cursor": {
          "ref": "efa12446-d205-4f29-a49e-9a5eee077a68",
          "length": 244,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8dc23311-18cd-44cc-8c34-4dd90fa2348d"
        },
        "item": {
          "id": "6dd15475-971e-4159-abda-ebe0f3e43480",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "43a9b192-6c06-4ce9-ba46-86cb9608c460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e7bd277-8266-4ff7-9082-02670d41536a",
        "cursor": {
          "ref": "65904846-f565-47ae-bec7-2bb94fb4ba91",
          "length": 244,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7fcefdcc-90b0-45ed-999b-02276c1b7626"
        },
        "item": {
          "id": "6e7bd277-8266-4ff7-9082-02670d41536a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6bf18b92-1fe0-4ed4-8783-01519b40d044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "625565b5-9193-4f88-b249-dc4d2f7f7b5f",
        "cursor": {
          "ref": "9db035de-c7d4-414b-bff8-60719a2ccd2b",
          "length": 244,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "5fb246fe-b343-4bd5-a640-4dbbcfd7fac9"
        },
        "item": {
          "id": "625565b5-9193-4f88-b249-dc4d2f7f7b5f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d03557ed-29b2-418b-ac61-ba0ee06aefd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01825272-208f-4ddc-92a6-f7b6ef911c54",
        "cursor": {
          "ref": "18f9929d-e277-45c6-b5af-c02f2d6861b5",
          "length": 244,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9de6e259-fd96-4562-9970-e4e876592477"
        },
        "item": {
          "id": "01825272-208f-4ddc-92a6-f7b6ef911c54",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "915df2dc-9778-4547-b541-5e3888c7c317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21217241-31d7-453e-9fe5-187783324dc7",
        "cursor": {
          "ref": "85120370-7099-4013-ac3c-54f243c75244",
          "length": 244,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "56740b0c-7a23-4b45-99dd-c7cc565127c2"
        },
        "item": {
          "id": "21217241-31d7-453e-9fe5-187783324dc7",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "802685d5-da7e-4f9a-991a-440155b05594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 724,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa73cf62-15de-461b-9616-72c0a8ace83c",
        "cursor": {
          "ref": "1e4fd254-ec97-4878-a1ed-5a4417d09060",
          "length": 244,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b7eea196-6f06-410e-a582-cf783f01a903"
        },
        "item": {
          "id": "aa73cf62-15de-461b-9616-72c0a8ace83c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "93d259e7-8ee0-4638-8c86-f7080de228ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d6f165-ea1a-401f-b3a0-9687652cb521",
        "cursor": {
          "ref": "ac0bb295-8e8c-4f61-b372-14adb5448eb3",
          "length": 244,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "69bb9a04-8fd0-46a8-a97f-1b8d38219b34"
        },
        "item": {
          "id": "89d6f165-ea1a-401f-b3a0-9687652cb521",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "11120175-21c4-469e-816a-26314d312029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7745dc6-1dba-4f08-b11e-8391534be54b",
        "cursor": {
          "ref": "006ec821-538c-416a-a5b1-4a9529fff9fe",
          "length": 244,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "40155fb4-152b-44c3-8e25-1928611be423"
        },
        "item": {
          "id": "b7745dc6-1dba-4f08-b11e-8391534be54b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e0b02b13-012c-4d83-b681-08730a434b48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ade352-05e9-4fb9-b12a-5f3514ec2597",
        "cursor": {
          "ref": "c9456f5d-99e8-4b1b-b33b-fd6e96782230",
          "length": 244,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8d6bd3e3-270d-4172-beea-4016194864f0"
        },
        "item": {
          "id": "39ade352-05e9-4fb9-b12a-5f3514ec2597",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3c9c7dd7-d799-444e-b1ba-3c3794c25fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f896102b-b161-40e9-835c-aaab1c53443c",
        "cursor": {
          "ref": "30c5d493-6e6b-4300-9f26-787fa0ce3765",
          "length": 244,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2d35a612-48e6-44e4-b011-8bc770f450aa"
        },
        "item": {
          "id": "f896102b-b161-40e9-835c-aaab1c53443c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e54ded19-ec1a-44fe-bb34-90dac8925003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 728,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef016c6-06eb-42ab-a3b8-10ee9e94f8c1",
        "cursor": {
          "ref": "b1c3155d-09e5-4537-bc18-6fa3f9fcc1bd",
          "length": 244,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e04490f0-e97a-49ef-a4fa-311e3b2f75f5"
        },
        "item": {
          "id": "6ef016c6-06eb-42ab-a3b8-10ee9e94f8c1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2f0c0c35-b3ac-41d7-b817-249e788bc0d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bfef237-daaf-4649-9e50-5f5ec3cdfc73",
        "cursor": {
          "ref": "1c245698-f498-4356-811f-a2f3c211a74d",
          "length": 244,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c0177346-3df6-415f-8cc8-6d6ad43a2fd6"
        },
        "item": {
          "id": "5bfef237-daaf-4649-9e50-5f5ec3cdfc73",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6f10fa41-be58-4a3e-8f05-97ffd4217c7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc06cae-2f76-4e30-91ec-89c8621a5478",
        "cursor": {
          "ref": "5d7ca2df-0535-44f6-b485-120acfd8faa1",
          "length": 244,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1b3790f6-cf59-4575-b9a8-b85b9159cdfd"
        },
        "item": {
          "id": "5dc06cae-2f76-4e30-91ec-89c8621a5478",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a0c04d2e-782f-48dc-a34c-c7a490baf579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3119c181-70a7-4b99-8f0e-c1289c925379",
        "cursor": {
          "ref": "4dc2cad5-6485-4975-b751-4beaa5304638",
          "length": 244,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "58b77a39-8fd0-4cf6-ba75-d402652cf60a"
        },
        "item": {
          "id": "3119c181-70a7-4b99-8f0e-c1289c925379",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "6cbae7ae-e833-4e88-8d0c-2c605cc60bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1618c48f-bec3-4a58-aa9d-29cd2e73a2dd",
        "cursor": {
          "ref": "b514e3a6-3476-4076-829d-9dac83d1c4d5",
          "length": 244,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "fb10580b-1c3b-43af-8c50-545355a1cec1"
        },
        "item": {
          "id": "1618c48f-bec3-4a58-aa9d-29cd2e73a2dd",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "7fce8ecc-db44-477e-a3ab-ff5c2badc929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea33727-e053-4a9c-a18b-0eae04d51adf",
        "cursor": {
          "ref": "e6dee3b2-1c43-4fea-a887-3a5f9f0d82c5",
          "length": 244,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "200c93ae-b782-4b64-a0c1-1a849d8b62b4"
        },
        "item": {
          "id": "dea33727-e053-4a9c-a18b-0eae04d51adf",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0c4ee75a-8b14-4147-8b18-f92ae920a44c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc030b1-ac8c-44f4-ab26-1c525eb8ad42",
        "cursor": {
          "ref": "b8502cf5-423b-4c49-80ff-bee538e1b7a4",
          "length": 244,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "074a3062-c07e-4516-84ef-8829eb19dcc0"
        },
        "item": {
          "id": "8dc030b1-ac8c-44f4-ab26-1c525eb8ad42",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "2e24382a-6fba-4f67-a15e-bb79588f8fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95bcec06-fba8-46a0-9364-9a123ad77bda",
        "cursor": {
          "ref": "1ccbaa86-adb7-4635-aadc-6e959569b63c",
          "length": 244,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "92ab1602-88b6-47f9-adca-d11fdda688de"
        },
        "item": {
          "id": "95bcec06-fba8-46a0-9364-9a123ad77bda",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b159eac8-2a83-457e-8baa-6aa1f80aaaa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41850af6-53d1-41e8-b07a-c6ae8dee5b54",
        "cursor": {
          "ref": "ed52669e-12dd-4431-837b-4a9f6bb3fe4e",
          "length": 244,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "4408bdb0-a47c-4a1e-aff8-242ab1af3b68"
        },
        "item": {
          "id": "41850af6-53d1-41e8-b07a-c6ae8dee5b54",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "97b10f21-89f5-461e-b603-9d7d0ed14c3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2007c9e-b4e2-4429-a188-8b769505e599",
        "cursor": {
          "ref": "941f3adb-225b-4b61-90b3-e257703130a6",
          "length": 244,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "eedbcd7b-cae8-41e1-bd05-55e86c5e3f0b"
        },
        "item": {
          "id": "f2007c9e-b4e2-4429-a188-8b769505e599",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "76179181-a995-4671-ad4e-4e9b1b490a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f925a0-41dc-40f5-a24c-819c7312854a",
        "cursor": {
          "ref": "f2e54e7d-f073-476d-beeb-6cca59877c46",
          "length": 244,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "378a24d1-1758-47a3-9b77-3d8a73de04cb"
        },
        "item": {
          "id": "59f925a0-41dc-40f5-a24c-819c7312854a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "84aa46ae-ab89-4de9-89de-d3ee81dfbf72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44067be9-1a01-47a5-8234-caed88ad7a72",
        "cursor": {
          "ref": "37788235-6960-4def-bbe8-0bbb60c4f18d",
          "length": 244,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "0d17d727-974f-40b5-9756-f85d9af9ec20"
        },
        "item": {
          "id": "44067be9-1a01-47a5-8234-caed88ad7a72",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c0e091c5-a94b-460c-a234-bcd23f3be099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d60d9c-7058-4558-a2f0-e46f2bdcd181",
        "cursor": {
          "ref": "6fc29334-893f-4707-9c80-86b202cb0880",
          "length": 244,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "207f34be-5c23-4393-a059-5694b0c24099"
        },
        "item": {
          "id": "f9d60d9c-7058-4558-a2f0-e46f2bdcd181",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "099b698b-dd82-4503-b419-522be210b378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed06a93-ec70-47e2-b609-9ae4c59ab1e6",
        "cursor": {
          "ref": "512fa3a6-fc22-4343-a1a4-239ef078e647",
          "length": 244,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "fe7fec21-6849-4624-8bec-a57a83ebd9b2"
        },
        "item": {
          "id": "8ed06a93-ec70-47e2-b609-9ae4c59ab1e6",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "119be99b-0482-4b37-ac03-96197ad194fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc9f820-2abd-4050-8338-b4c9982d41a4",
        "cursor": {
          "ref": "9811b6e8-a028-4582-b59c-8b5a01abe246",
          "length": 244,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "daf4b009-9224-4d58-9bba-ec10be600123"
        },
        "item": {
          "id": "fcc9f820-2abd-4050-8338-b4c9982d41a4",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "fb039340-da4e-4a16-8674-329bf55bff8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6e0153-e9ad-41ca-9245-c8440d1b4e63",
        "cursor": {
          "ref": "2f8ea70b-7e02-4c3c-accf-a29301d6fa2b",
          "length": 244,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "91c6b1f4-fbc5-4961-83f3-dd7bd0513349"
        },
        "item": {
          "id": "cc6e0153-e9ad-41ca-9245-c8440d1b4e63",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "443d09dc-d7d3-4596-880d-d71bc4565adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d68446c-f8f5-4c91-963d-4453188190fc",
        "cursor": {
          "ref": "293b3df4-f69a-444c-82c2-a93dda363da3",
          "length": 244,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "9eba4b79-25bb-4eb6-8e12-4fb1a2236950"
        },
        "item": {
          "id": "7d68446c-f8f5-4c91-963d-4453188190fc",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e54e413b-6563-4665-9db0-c2c5631ebd37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed57027-a771-40bd-9897-655f4b38765f",
        "cursor": {
          "ref": "cce354c1-2694-4135-88cc-5c9ea9f8c5aa",
          "length": 244,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "22d7818d-c956-434a-a6ac-ca6ce90fdfd5"
        },
        "item": {
          "id": "2ed57027-a771-40bd-9897-655f4b38765f",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "71a96e58-52b4-4ae8-9a4d-bfbc2efc4759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be43524-9f97-4b46-b953-27b091cedd19",
        "cursor": {
          "ref": "a3d68aa3-1302-4d04-962c-7138f347ecba",
          "length": 244,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e10d6b4d-3b81-43c8-a08f-b356d48d2e2d"
        },
        "item": {
          "id": "0be43524-9f97-4b46-b953-27b091cedd19",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "778de199-e1d7-436d-baa7-7a9b79b38e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a6ce394-6f71-45a9-9482-feae687f8695",
        "cursor": {
          "ref": "1c73bc6a-d3e3-4ddd-bf80-6f16b60cc975",
          "length": 244,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7cc30d10-7613-4cb0-a01f-db2fa40cba76"
        },
        "item": {
          "id": "0a6ce394-6f71-45a9-9482-feae687f8695",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "92baf2b0-d74a-4b43-ae89-7d6830a90417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8fcade5-70c7-4c77-b4f2-2154f56704cf",
        "cursor": {
          "ref": "84e895d7-1d79-4330-accb-fe5ac830cfc3",
          "length": 244,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8be71dad-ccd2-4b0d-8960-a8881ada0783"
        },
        "item": {
          "id": "a8fcade5-70c7-4c77-b4f2-2154f56704cf",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b5b47d8d-1e3d-440b-b454-c96eb63a78fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c850831-a6ad-4022-83a3-7d0a0c84ae8f",
        "cursor": {
          "ref": "328c282b-bb5e-4580-9490-d038a75153d0",
          "length": 244,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ba59251e-23ab-4c8d-8138-90875d4a6948"
        },
        "item": {
          "id": "5c850831-a6ad-4022-83a3-7d0a0c84ae8f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d042cfc8-1ecb-48b9-8a8a-1ce3891efea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 709,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83437765-c524-4697-8ec3-fc93522a78c6",
        "cursor": {
          "ref": "c5064cf5-2090-4f08-bdd4-3698846ed34a",
          "length": 244,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "78388d5e-5a54-49e5-bddc-58c72a53c2fc"
        },
        "item": {
          "id": "83437765-c524-4697-8ec3-fc93522a78c6",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "18c902aa-4bbd-4826-b30a-f5fa86791b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e64d9b1-db9c-4a72-afc9-2798345b2f52",
        "cursor": {
          "ref": "07eee889-0ef4-4ded-8220-19ec89fdd52a",
          "length": 244,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d86fd590-e5c9-4bd7-bcd4-f8c46c29fb63"
        },
        "item": {
          "id": "7e64d9b1-db9c-4a72-afc9-2798345b2f52",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "ac246c01-0fc8-41da-a550-8f04e71205f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a7778a-2236-49dc-9ad3-8bc6c887545c",
        "cursor": {
          "ref": "9104af2e-0b7b-4bbf-be11-8bceba081562",
          "length": 244,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "db933024-1f1e-4506-ae67-55dbdc3a905e"
        },
        "item": {
          "id": "76a7778a-2236-49dc-9ad3-8bc6c887545c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "13b1b569-d7e2-4b9d-a0bd-047bd6b6bce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe1d953-a243-4534-a8f3-4769c1fc7310",
        "cursor": {
          "ref": "3cf28e10-957e-419b-b833-e068059555c7",
          "length": 244,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b38134da-1ec1-4c5e-b770-ee3b3e5cb888"
        },
        "item": {
          "id": "cfe1d953-a243-4534-a8f3-4769c1fc7310",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e0c88d47-0813-4ab2-8c30-051352af9d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 708,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01491328-06d0-4d75-8bd5-75cf477e7c26",
        "cursor": {
          "ref": "6cae2eaf-bec2-4438-b50c-93eb24d232c5",
          "length": 244,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "48baef16-4ed5-4733-8952-5234866f58ed"
        },
        "item": {
          "id": "01491328-06d0-4d75-8bd5-75cf477e7c26",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "7e8c2991-2f37-4c1e-9e8c-0d8960d29091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b02694-94be-42be-9353-6b0f9c7f22e9",
        "cursor": {
          "ref": "edb454b8-b37e-4078-9979-39af619ea523",
          "length": 244,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "613a859b-ce2e-45ca-9e7c-bd81e8416eca"
        },
        "item": {
          "id": "45b02694-94be-42be-9353-6b0f9c7f22e9",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "438e3890-a0ed-4024-80af-852ddd4b6879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 706,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f80ad92-5e9f-48b7-8285-a5c0675dd2b9",
        "cursor": {
          "ref": "18006aea-728c-4322-8c08-7c79b6c2cb3d",
          "length": 244,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "4d2d7d12-3050-4b57-a950-0fec9f51b044"
        },
        "item": {
          "id": "0f80ad92-5e9f-48b7-8285-a5c0675dd2b9",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6235d4d5-1d1a-41cb-a571-2072b8423e4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 708,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7070ea7-cd95-44f9-b7a6-5fcf21bf6923",
        "cursor": {
          "ref": "2c3e5beb-a361-43e7-8626-0eb51d69bf68",
          "length": 244,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a57a4e13-4893-485c-bab7-eeb4902df896"
        },
        "item": {
          "id": "c7070ea7-cd95-44f9-b7a6-5fcf21bf6923",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "0dcf9056-bee0-4a1d-8b51-4d25a4253fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fec9599-f8d4-4f44-a776-7d7bfe6e253d",
        "cursor": {
          "ref": "0e96ab0a-7544-401d-81a0-97d94cea989a",
          "length": 244,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "117babad-3433-49b4-a184-56d71113d2a7"
        },
        "item": {
          "id": "9fec9599-f8d4-4f44-a776-7d7bfe6e253d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9a267c4d-672e-4733-8a71-9d71dd81cc37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e234a4-0488-4170-89ff-c0914c02321f",
        "cursor": {
          "ref": "738459f1-7561-4ea0-ab74-e2de62d1bfa5",
          "length": 244,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8694d342-28a6-4217-89fd-06d0d8050213"
        },
        "item": {
          "id": "00e234a4-0488-4170-89ff-c0914c02321f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "68d5875a-db51-4930-a214-950c7c70b17a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 725,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2419441d-33d1-44f5-af5c-b73b9eebedb1",
        "cursor": {
          "ref": "2874c601-59ce-4f0f-a190-8c684901a30e",
          "length": 244,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "deec1275-8012-42e5-a5b0-35d113b7a324"
        },
        "item": {
          "id": "2419441d-33d1-44f5-af5c-b73b9eebedb1",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "aa36f364-e152-4c71-bcb8-af07c8601047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ead9e8-e819-48ed-bb4d-39d54f3c952d",
        "cursor": {
          "ref": "3b954bc4-99e3-499d-8754-b02bf2e44df3",
          "length": 244,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a1c09f93-a2f4-40d6-b8eb-3ea0a6c59726"
        },
        "item": {
          "id": "54ead9e8-e819-48ed-bb4d-39d54f3c952d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "413ef29a-320e-482a-a4aa-90ad0edf2257",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd9d652-e135-4864-98e4-c5423280d95d",
        "cursor": {
          "ref": "6ca16b58-8bd3-4fdf-9297-58dc74a1ac1d",
          "length": 244,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d84fa2d9-e079-4a03-9c5e-03a4839c3ea2"
        },
        "item": {
          "id": "3cd9d652-e135-4864-98e4-c5423280d95d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "9e803d5d-33ca-43a9-bdc0-bc20bed0bb7d",
          "status": "Created",
          "code": 201,
          "responseTime": 6497,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff74c9f5-b85f-4e1d-a0b4-0d464d21d9b1",
        "cursor": {
          "ref": "b1e54383-91e6-4b64-947f-9a2bc0caf2a5",
          "length": 244,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b53d7a88-36e1-457f-b6d2-f7f830b32edc"
        },
        "item": {
          "id": "ff74c9f5-b85f-4e1d-a0b4-0d464d21d9b1",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "a5216ba6-cc5d-42f8-87b2-27a802483a89",
          "status": "Created",
          "code": 201,
          "responseTime": 6012,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f42982d-3a5d-4415-b913-7b6be81416ef",
        "cursor": {
          "ref": "3e330d36-53e4-47a8-9c03-56a5c2247427",
          "length": 244,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9c9dc06b-9fe2-4af4-9898-b7c7d4df4bab"
        },
        "item": {
          "id": "4f42982d-3a5d-4415-b913-7b6be81416ef",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "58c7dceb-3fe6-4de6-a0cf-7066bcbc7c70",
          "status": "Created",
          "code": 201,
          "responseTime": 6461,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9fc844-7027-46ab-a1db-f096aa6512d3",
        "cursor": {
          "ref": "a7670bc6-2f80-4ec7-b01b-f0b5ae15f192",
          "length": 244,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ad613563-322d-43be-963e-b9d9879b322f"
        },
        "item": {
          "id": "6a9fc844-7027-46ab-a1db-f096aa6512d3",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ce03ddae-8e55-4939-9aaf-7335f17c2978",
          "status": "Created",
          "code": 201,
          "responseTime": 5813,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "70505f86-4287-4661-b593-6a9edff6b2eb",
        "cursor": {
          "ref": "35f00a6b-d891-4971-ad49-b2c75e1c8d60",
          "length": 244,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6d9d53c8-4056-430b-929b-6e925190021c"
        },
        "item": {
          "id": "70505f86-4287-4661-b593-6a9edff6b2eb",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "141388ef-e29d-4c88-991d-41214a09c735",
          "status": "Created",
          "code": 201,
          "responseTime": 5970,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "e315dc5c-f684-4a16-8c53-6f44b4f1f39f",
        "cursor": {
          "ref": "3fded2da-e8fe-4143-9f3b-1df64588fb29",
          "length": 244,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "839d6cd7-ef25-4931-8f76-8cd70f5f46e7"
        },
        "item": {
          "id": "e315dc5c-f684-4a16-8c53-6f44b4f1f39f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "655d0087-2468-4325-be25-af2a32999bc8",
          "status": "Created",
          "code": 201,
          "responseTime": 7050,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37125d48-5f68-4070-b1c6-2ac582513e8f",
        "cursor": {
          "ref": "cc148e3b-5366-4488-8a3a-0684049517b4",
          "length": 244,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a26e1cce-dd95-4e2a-a72f-74fb27e4d1f8"
        },
        "item": {
          "id": "37125d48-5f68-4070-b1c6-2ac582513e8f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "de2332b8-be7d-4b1c-9c74-be8116ad98b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c04dd635-325d-4117-8c2f-352d8d2f33ff",
        "cursor": {
          "ref": "56f7e722-6c6c-4308-bbcb-10de058ee65c",
          "length": 244,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "8b5f67b9-3af2-46ca-9a4c-e9f6c8ed7107"
        },
        "item": {
          "id": "c04dd635-325d-4117-8c2f-352d8d2f33ff",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5cfa40e7-a442-45e7-a78d-6db553c19f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a87284-e606-4709-b372-12c0aefb596f",
        "cursor": {
          "ref": "80c7abbb-05a9-4678-8529-1f10fac8c641",
          "length": 244,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8b655ce1-a0aa-46d1-94bc-ec025f33d39f"
        },
        "item": {
          "id": "34a87284-e606-4709-b372-12c0aefb596f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6cb9c804-8cb7-456d-8aab-05e69c3cd7f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1148a73b-1a38-441a-b516-a0ea0dbc5343",
        "cursor": {
          "ref": "8dabe4b8-1471-4b0c-b8a9-cbe34ff3bc80",
          "length": 244,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "62ae9015-d472-4a20-b82d-21d3be77b8dc"
        },
        "item": {
          "id": "1148a73b-1a38-441a-b516-a0ea0dbc5343",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0d129c79-894c-457f-9140-43413fa124de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8960649-9687-48c8-8e98-247eb1f60581",
        "cursor": {
          "ref": "8e8b2d06-ee13-450d-83d6-45529d2d6b42",
          "length": 244,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "6c1a433a-e5bc-4bd0-9545-6b9f8ef29955"
        },
        "item": {
          "id": "a8960649-9687-48c8-8e98-247eb1f60581",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "46dc0448-89a0-41b5-95b9-e0358f29aa97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d7bb59-6d1d-4e95-a978-2129656cb006",
        "cursor": {
          "ref": "a44d8da9-7fce-4a74-96c1-cf6a0ac5bac7",
          "length": 244,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "4889b931-26e3-4d9f-835d-d0a917f730aa"
        },
        "item": {
          "id": "25d7bb59-6d1d-4e95-a978-2129656cb006",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6d825cf8-9994-4e26-b052-1e6516854aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69e29a8-70ab-45c9-8efe-3beb7bea8be6",
        "cursor": {
          "ref": "cb6a4581-aecc-4529-b928-b703aeb091d8",
          "length": 244,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0ad7ae0f-591e-4e65-ad0c-ba1d11ab4d7c"
        },
        "item": {
          "id": "f69e29a8-70ab-45c9-8efe-3beb7bea8be6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "44216e4c-3c38-4fba-8bab-91a8430b2e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c82a5842-bd24-4b81-a394-5b028a2ffd61",
        "cursor": {
          "ref": "f7fbdb7e-de6b-4c59-9ab3-213a5a9558dc",
          "length": 244,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "7babbaf9-0aea-4f50-9a63-5ba47a5211e8"
        },
        "item": {
          "id": "c82a5842-bd24-4b81-a394-5b028a2ffd61",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "52370fe9-9142-4eb4-8b35-1f907fecc990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b12255c-23ab-4e86-a7fb-ec175ca92344",
        "cursor": {
          "ref": "722b4d75-1698-436a-b099-1033d14d0be8",
          "length": 244,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "368e7f05-0a3a-4070-a0be-256c4fcbfd3c"
        },
        "item": {
          "id": "8b12255c-23ab-4e86-a7fb-ec175ca92344",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b3a76d30-5dd7-4f9d-a52b-917512a1cb9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d617db6f-7bc1-411a-b7f2-0c1bafa41021",
        "cursor": {
          "ref": "1869acc5-2fd6-4abb-ba47-b3bb1d5c8f06",
          "length": 244,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "fdbf5e26-c1d3-4ad6-b652-bb3b3e85e8cb"
        },
        "item": {
          "id": "d617db6f-7bc1-411a-b7f2-0c1bafa41021",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a857d6fb-1f06-4f7f-9a1a-411dcae46608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b195a3ec-9722-49cc-a86e-1af72899c85f",
        "cursor": {
          "ref": "3a03c580-5bc2-40bc-a031-a7aa0c67116e",
          "length": 244,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "58d6b1c9-2171-4edb-a49a-9e161e110b9a"
        },
        "item": {
          "id": "b195a3ec-9722-49cc-a86e-1af72899c85f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "55c63c1b-5a91-48ee-9891-a73c7ef2023c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0667a68-8537-4ea6-9736-361382c7d630",
        "cursor": {
          "ref": "bdfec55c-83d2-4d31-89ad-5a7a2b00fa6a",
          "length": 244,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6c4eb899-f3c5-4345-acc8-40f82a3a37b1"
        },
        "item": {
          "id": "f0667a68-8537-4ea6-9736-361382c7d630",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ed0a4274-a40f-4ea0-bfe5-f7d6cc10d3ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 709,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcbcfe7a-6c6a-494d-8101-a9d383f5900f",
        "cursor": {
          "ref": "79838db9-1206-42f3-b827-d11a9185910c",
          "length": 244,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "33a5628e-efda-4e36-9af6-76dffa67b3c0"
        },
        "item": {
          "id": "bcbcfe7a-6c6a-494d-8101-a9d383f5900f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "443ebd71-fa97-49dd-8a9d-cf870cf6849d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a2cf007-fee3-45bd-8e54-64f3f61d1304",
        "cursor": {
          "ref": "d9305e63-da4d-40dd-91ec-1fafbbf6cfb6",
          "length": 244,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e425be38-114e-40dd-8989-41a3c691a922"
        },
        "item": {
          "id": "7a2cf007-fee3-45bd-8e54-64f3f61d1304",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "dc0b7190-b892-4a90-8807-2b4fb0102b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 706,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8a61ea-fe7b-4a5b-9539-d206e068049b",
        "cursor": {
          "ref": "e0b88547-4ca3-479a-b19f-2469f92a21fc",
          "length": 244,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9bc1b466-afff-44f4-b0b9-b2f3ff14c7d2"
        },
        "item": {
          "id": "ab8a61ea-fe7b-4a5b-9539-d206e068049b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "525abcc5-5e74-4c13-af58-416717e18b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f10a4123-c1d8-4273-8ef3-d73e0530ff14",
        "cursor": {
          "ref": "0b9878fd-ce85-4650-a20f-c8c7b08c3ce2",
          "length": 244,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "546abe79-0910-415d-ad4b-bfa82d6f0809"
        },
        "item": {
          "id": "f10a4123-c1d8-4273-8ef3-d73e0530ff14",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b67f9cac-93b5-4502-9833-acbd792a1ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a8f572-a40f-4af1-b9b7-49f62be5365f",
        "cursor": {
          "ref": "d3688587-7b66-44bb-80c2-b97d92ee89ef",
          "length": 244,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6c66947b-6a68-4236-b1fe-165dff164125"
        },
        "item": {
          "id": "01a8f572-a40f-4af1-b9b7-49f62be5365f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "217a6410-5850-4e40-899d-3dd5299764d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e5834b-de2a-4864-9e7c-21e273f94384",
        "cursor": {
          "ref": "2d1d86a7-23b6-4772-9c29-353264d2e26d",
          "length": 244,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "903c5414-7012-4ab6-815e-dd230b5e5a87"
        },
        "item": {
          "id": "c2e5834b-de2a-4864-9e7c-21e273f94384",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6b334171-ec29-4cd0-b4ab-68ae5a1d19ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "720e3d92-f7d3-4051-8218-fa65a3720a7b",
        "cursor": {
          "ref": "ed95c04d-3d73-4b8e-b1f6-69f10cbacf99",
          "length": 244,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3db749df-ffb9-4c91-8550-591b75b99fd0"
        },
        "item": {
          "id": "720e3d92-f7d3-4051-8218-fa65a3720a7b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f1e21635-f341-46ed-aa76-69f33390ae5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 726,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af9ce18c-e127-48c5-876b-7a9004ee17e8",
        "cursor": {
          "ref": "68871cdb-3bbd-499e-afd5-480416e6fe9c",
          "length": 244,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "dbaac6b2-9776-4afc-a77d-78d5fe431bb4"
        },
        "item": {
          "id": "af9ce18c-e127-48c5-876b-7a9004ee17e8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "83b2033e-4ff4-4b72-9dd5-c28b6ec9d6eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15762caf-8372-4f48-ac4d-84c5e83e3d6c",
        "cursor": {
          "ref": "6aff49e9-e6a2-4d20-8750-4cf9b2e01c93",
          "length": 244,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d4d23f3b-18e3-42a7-b9cf-4e61c6f8e2f0"
        },
        "item": {
          "id": "15762caf-8372-4f48-ac4d-84c5e83e3d6c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "31e9bfe5-7171-492f-9edd-27cf29c358df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ff5fdb-9788-4f82-9b8d-02a43a7107da",
        "cursor": {
          "ref": "885eb700-0d75-4007-ab03-e35b642eeb31",
          "length": 244,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e0816954-67be-4ed1-9275-cee238513f79"
        },
        "item": {
          "id": "05ff5fdb-9788-4f82-9b8d-02a43a7107da",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ab8b9173-f57c-4c87-a6e6-677fbddc7131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dba9635-1846-4cf3-8da2-763a78ff9969",
        "cursor": {
          "ref": "03c52961-e2d0-4067-ab37-bb1b0d537f88",
          "length": 244,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "079664cf-2953-4bca-9209-0554a7828d0e"
        },
        "item": {
          "id": "5dba9635-1846-4cf3-8da2-763a78ff9969",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "37514d86-cfbd-4df8-8fc3-d437a79e467a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef3bc656-14c5-4e21-bede-bb46f6e105f7",
        "cursor": {
          "ref": "6bb276a4-c72c-40e4-9e38-643b1893d9a9",
          "length": 244,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c1f89442-4eea-4c6c-a730-158015ebc59c"
        },
        "item": {
          "id": "ef3bc656-14c5-4e21-bede-bb46f6e105f7",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "43e7b559-75f4-4cf3-be0a-7beaee0901cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d409b9c-c66d-4b1b-a2f5-51d5aed67868",
        "cursor": {
          "ref": "eec5c215-d053-401a-bb04-4d785208b2a2",
          "length": 244,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f7db5f62-31f8-48c4-962f-49b29e19a15b"
        },
        "item": {
          "id": "9d409b9c-c66d-4b1b-a2f5-51d5aed67868",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "07667f61-4739-46cb-be44-a0d8cea66131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020aea76-59b6-4414-87c2-234dca74d8ee",
        "cursor": {
          "ref": "cbb69833-b6d3-4997-9d01-4db7e5a7fd53",
          "length": 244,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "7558e899-6d69-4177-9e7f-e227a823ea42"
        },
        "item": {
          "id": "020aea76-59b6-4414-87c2-234dca74d8ee",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0894304b-aa46-4c33-b681-635b66e3d457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdfeb78d-449b-42f2-a052-d15dd15eac15",
        "cursor": {
          "ref": "67367f19-8649-4bab-a4ed-f5e6d43b1853",
          "length": 244,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "9f4b92b5-3324-4e5d-b8df-67e96fbe1878"
        },
        "item": {
          "id": "fdfeb78d-449b-42f2-a052-d15dd15eac15",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2919e6fb-138a-4c92-a6d2-9868770d95a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d2f0c8d-054d-45b2-89cc-95683725d3ba",
        "cursor": {
          "ref": "da7c7f9d-e7f4-4dfa-91b7-cf9fbf328de9",
          "length": 244,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "984e7c2a-2f74-4600-a5bd-df1e208a2481"
        },
        "item": {
          "id": "1d2f0c8d-054d-45b2-89cc-95683725d3ba",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5a158f6a-49db-4c18-9c30-65c5fe6852bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 706,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b7ecdf1-7145-426e-81b4-42bde2b091e3",
        "cursor": {
          "ref": "18fb2773-c8f7-4db2-8a1b-07d6cc44e4ba",
          "length": 244,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b705aa43-018c-4b2e-9451-73e9f527cae0"
        },
        "item": {
          "id": "4b7ecdf1-7145-426e-81b4-42bde2b091e3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "57cb3325-bfef-43cb-b00d-f1ad000f80fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 708,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17660782-1914-4aa4-b9c5-6271e7a8b931",
        "cursor": {
          "ref": "2a7bb63a-7dc2-4601-b754-bb6e9a3c60d9",
          "length": 244,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "28f34dfd-571e-4ea4-92da-9925962c6873"
        },
        "item": {
          "id": "17660782-1914-4aa4-b9c5-6271e7a8b931",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3bc6509b-7a60-47ec-96c7-15fb04bedb9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e4add4b-8f7d-4114-b33e-86471a0ce5bf",
        "cursor": {
          "ref": "659fc767-2461-4dc9-a430-83812d751416",
          "length": 244,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f0918295-faeb-43ea-8f6e-0ca071fec98a"
        },
        "item": {
          "id": "6e4add4b-8f7d-4114-b33e-86471a0ce5bf",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "45e81770-950a-4ca0-be09-f79578b5992f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 725,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a8dcdc-fae2-44f4-a7ea-5505b8571498",
        "cursor": {
          "ref": "ac92b367-3fcb-4153-a21c-7a54c376cad1",
          "length": 244,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "43f0214a-3e4b-402e-aeb5-abf609a1c32f"
        },
        "item": {
          "id": "09a8dcdc-fae2-44f4-a7ea-5505b8571498",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "6e6a6407-ea50-41f7-8f51-2f455a076f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 720,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6331086-6c14-437a-a0ef-470706de12b1",
        "cursor": {
          "ref": "49a5e4ab-5f60-4121-b5af-dea7cf7ec5d0",
          "length": 244,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1a3705d7-e5c3-4445-a7a5-04bb91db4b15"
        },
        "item": {
          "id": "c6331086-6c14-437a-a0ef-470706de12b1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6bc8c3bb-c17e-4bc3-a151-5d7430669a93",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9081a25d-ccc0-4fda-ae33-1650e223c285",
        "cursor": {
          "ref": "6c6af27f-6a2a-46c2-8728-b479b255af47",
          "length": 244,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "824dd372-41eb-4afd-a951-14d690b24ba2"
        },
        "item": {
          "id": "9081a25d-ccc0-4fda-ae33-1650e223c285",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7847b7c7-e0a6-4cc4-b3ca-160824d4f772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e63d35ac-94b7-4202-9920-f0cab205d3d3",
        "cursor": {
          "ref": "06ec49cc-898a-4c54-a30e-b410cb2d5590",
          "length": 244,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1ff36479-aca8-4e49-aaf0-11a6345929f1"
        },
        "item": {
          "id": "e63d35ac-94b7-4202-9920-f0cab205d3d3",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "761485ff-99eb-4196-a5f0-f2228f820a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "592d623a-9eba-47c5-a794-1703449d6dff",
        "cursor": {
          "ref": "a03a434a-9429-4577-b037-7d6309446c47",
          "length": 244,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "68f59bb4-a77b-48db-bf40-07005e29b2b1"
        },
        "item": {
          "id": "592d623a-9eba-47c5-a794-1703449d6dff",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "8fcda202-704c-4001-9be3-14f58b277ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe821036-8416-40a9-a364-9621610f1fb1",
        "cursor": {
          "ref": "fef70401-7e4b-449d-aeaf-e4bb6c9f15ac",
          "length": 244,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "2553e61d-c6ff-4e31-81b2-83697c9db35f"
        },
        "item": {
          "id": "fe821036-8416-40a9-a364-9621610f1fb1",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5eb02058-4eff-46b4-8d0d-b85f34b5d296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c02da62-7e19-472f-957c-4e4f3824d0f2",
        "cursor": {
          "ref": "7887a341-005d-4864-b0ac-fc3684825b62",
          "length": 244,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a81817c0-6f46-464c-affe-1e142c0f73a2"
        },
        "item": {
          "id": "3c02da62-7e19-472f-957c-4e4f3824d0f2",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c7cb9f7d-ad92-4fb4-a63d-a33d99ce5274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74aefb08-e4f9-410c-94a9-b2c3a15a6530",
        "cursor": {
          "ref": "997f0e62-d249-4e15-aa1a-d3a5527af476",
          "length": 244,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "8fe8ded0-7c77-4239-9eaf-72086fd30b66"
        },
        "item": {
          "id": "74aefb08-e4f9-410c-94a9-b2c3a15a6530",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "be62cdf8-72e1-4db1-bb54-3802c79c8bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf146269-163b-47f9-80df-1e26bdad50c9",
        "cursor": {
          "ref": "6c71ffb9-66aa-4cc7-bf11-c95c0d93cf4a",
          "length": 244,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "79a72f61-95ed-4d57-b0b7-a623e64c011d"
        },
        "item": {
          "id": "cf146269-163b-47f9-80df-1e26bdad50c9",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1971abf4-c9c1-4a79-8f28-938daa6f2d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795efd16-f4ea-4278-81b9-3770d2e34eb1",
        "cursor": {
          "ref": "9436a784-c080-47ed-9395-37da1018c3b0",
          "length": 244,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "230cedc4-aad2-4db7-bda0-83ae6cc00af1"
        },
        "item": {
          "id": "795efd16-f4ea-4278-81b9-3770d2e34eb1",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "780aa1c0-4bb8-4f78-8555-2c8ac6998043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95eacb99-761d-45a0-b2a2-376b7226585a",
        "cursor": {
          "ref": "8d3be979-94bc-4e38-b812-2ae4f66bd618",
          "length": 244,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e1776d20-2de6-4e6a-853c-65c388f5d561"
        },
        "item": {
          "id": "95eacb99-761d-45a0-b2a2-376b7226585a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "54e56c66-e6de-4aa5-9c67-26e383271596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0933b5e2-a485-4712-a0e9-724fbd517561",
        "cursor": {
          "ref": "e4a08a68-93aa-47f9-bb70-7dabe3c47e21",
          "length": 244,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7e44825e-ea11-4ea8-be11-16a23544be05"
        },
        "item": {
          "id": "0933b5e2-a485-4712-a0e9-724fbd517561",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "636dbaf5-1ed4-41e4-b086-043e0c500484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "882be77a-c2a1-41e5-897a-9761edeb305d",
        "cursor": {
          "ref": "a494e686-31e8-409d-bdeb-9828dd41a4b4",
          "length": 244,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "16c46f64-8932-4905-bb83-c983725c9699"
        },
        "item": {
          "id": "882be77a-c2a1-41e5-897a-9761edeb305d",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a5db1974-1362-4bf6-ab7f-69cbb437f02e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e861696-ec49-47c2-ac41-2423428f2ae0",
        "cursor": {
          "ref": "046bfc15-525e-4b7d-8f08-5d84a8923370",
          "length": 244,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "25f4b4ff-9e42-4043-8524-2ddb0293a56c"
        },
        "item": {
          "id": "5e861696-ec49-47c2-ac41-2423428f2ae0",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "631672b8-e691-48e3-9116-5f40a9e8e666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a59c84b-b6ad-4bfa-8fd7-4285597145be",
        "cursor": {
          "ref": "d992c2bd-5951-4403-8b0e-e3fb8205dcf1",
          "length": 244,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "19f956f5-0b23-4e00-9052-d913f87474bf"
        },
        "item": {
          "id": "6a59c84b-b6ad-4bfa-8fd7-4285597145be",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1152be10-67cc-42bb-8afc-474519eb2818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f0fdc9-1062-4245-89d0-6f9ab1aa6ea9",
        "cursor": {
          "ref": "0954ac3f-5534-42d7-9676-41c79126fff0",
          "length": 244,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "0b548fc5-55bf-4b43-aae8-884c0f495693"
        },
        "item": {
          "id": "31f0fdc9-1062-4245-89d0-6f9ab1aa6ea9",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d69616f8-3e72-4218-9ff6-715dd5c0786e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51487a57-1b61-4a25-b0d5-59da1015f363",
        "cursor": {
          "ref": "f1a20fc9-63d9-49f6-8e04-1f2f39f95931",
          "length": 244,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "66776d37-d5d4-44e4-9193-06505b874619"
        },
        "item": {
          "id": "51487a57-1b61-4a25-b0d5-59da1015f363",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "90428ed8-e074-4f5a-8dbf-836da69a8bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f23bda1-cde5-47f1-b752-fa82dcdd5e14",
        "cursor": {
          "ref": "9c2866cb-48de-4a25-af42-296a9bd2795e",
          "length": 244,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "4d4f6ad4-1dd2-4f41-8de1-d9f1c1997707"
        },
        "item": {
          "id": "2f23bda1-cde5-47f1-b752-fa82dcdd5e14",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d313415a-8493-4fb8-841a-06b3e54fb3c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a19626f6-80f3-49e5-b42b-754a8c2ed7d7",
        "cursor": {
          "ref": "45848a45-4452-4e96-94eb-94d365b746b0",
          "length": 244,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ef0cd016-5b3a-4628-ab9c-be0c9a674793"
        },
        "item": {
          "id": "a19626f6-80f3-49e5-b42b-754a8c2ed7d7",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a8f2605e-0482-4ca8-97e0-0f6d2d503740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ecfad3a-105c-473f-928f-8c71190b078a",
        "cursor": {
          "ref": "5cb0536d-9240-4766-af5c-13b10091a403",
          "length": 244,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "2447e668-8e18-4389-bb76-e7360a056679"
        },
        "item": {
          "id": "6ecfad3a-105c-473f-928f-8c71190b078a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "0a61c7ee-c081-4e49-81cb-ced3f52b54c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c7f1557-d443-4c7e-bd0d-33c66f53715b",
        "cursor": {
          "ref": "b1c06d20-4fda-42aa-b51f-07f206940483",
          "length": 244,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c4fc7b05-e498-425f-a2ed-6ed87a2b833e"
        },
        "item": {
          "id": "4c7f1557-d443-4c7e-bd0d-33c66f53715b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ac978b95-4fd2-4998-9399-3393875de194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e7f99b2-27c4-4a47-a742-9040467a834b",
        "cursor": {
          "ref": "01d5be07-583c-468b-af5b-b83ab09b1302",
          "length": 244,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d0fec1ff-ed38-4965-850b-7f6a3df5dee8"
        },
        "item": {
          "id": "4e7f99b2-27c4-4a47-a742-9040467a834b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f5061df0-cd1a-4783-8cee-98ac7d567770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b1a729-8bba-414e-9580-45ef8a82f744",
        "cursor": {
          "ref": "c8d94b71-57b5-45f4-942d-c17e5e762d2c",
          "length": 244,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e121fb8f-10a3-42a3-950f-e1003f31b4e3"
        },
        "item": {
          "id": "63b1a729-8bba-414e-9580-45ef8a82f744",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "65026640-3d11-4bca-b692-09a4226dd348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c069d9b-2ec5-4ba4-8026-d7efbbecb37c",
        "cursor": {
          "ref": "020d0533-4d14-460a-bc5f-c303dbbdc707",
          "length": 244,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f812e222-37d4-4b98-bb38-ece70e7fc99d"
        },
        "item": {
          "id": "4c069d9b-2ec5-4ba4-8026-d7efbbecb37c",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "169ef83d-5129-46e9-815b-7b31152e2018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "352683f7-6f65-4ff9-b3ab-3150fd7ba504",
        "cursor": {
          "ref": "af2ffcce-c862-46c4-bd3b-a302971d54ea",
          "length": 244,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "99413dc0-b8b5-4369-bf85-8784343c3ae2"
        },
        "item": {
          "id": "352683f7-6f65-4ff9-b3ab-3150fd7ba504",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "57b39366-2108-465a-af46-5ae7b101790a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70100476-e780-4d91-9a94-d685ce02e4be",
        "cursor": {
          "ref": "f8cdad26-06ac-44a1-b73b-60334ce326ec",
          "length": 244,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "66136c2d-e0ca-4ba7-81e5-0f2756a0ef41"
        },
        "item": {
          "id": "70100476-e780-4d91-9a94-d685ce02e4be",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "dccb5d90-9f03-4f69-81c2-907072c14491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c414ad-7973-4230-9b35-54a76b7bb879",
        "cursor": {
          "ref": "3af94a8b-1d93-4dbb-b176-f7e2ab670632",
          "length": 244,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ed5276cf-60d0-4897-af21-ce27f8480a9b"
        },
        "item": {
          "id": "c0c414ad-7973-4230-9b35-54a76b7bb879",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "51e4d294-2f76-4ff3-9b9e-66f91a331796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be482e2e-22c1-406a-a479-93d630974177",
        "cursor": {
          "ref": "6a1998e5-2839-4458-b2ff-efe6fa304be8",
          "length": 244,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "80532e41-6db2-47aa-855a-1b89dc2dea09"
        },
        "item": {
          "id": "be482e2e-22c1-406a-a479-93d630974177",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1f64baae-bd1a-4826-850b-c92ab17ddf16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf8e9ba-cfce-4ea3-abf5-b22957c6c084",
        "cursor": {
          "ref": "db31fca2-aa4d-4fa9-ad3e-a9127cb871eb",
          "length": 244,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "2dde54f5-bb73-49dd-9a88-2fdbefcebab6"
        },
        "item": {
          "id": "7cf8e9ba-cfce-4ea3-abf5-b22957c6c084",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b474ac7d-72f0-4e86-98a7-35bd0997346b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "937b5fde-9444-490c-b2c9-bb26011fb49e",
        "cursor": {
          "ref": "c6e22af7-1706-4880-99a2-ae741c91e82f",
          "length": 244,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "38f27834-9a3b-455d-96f7-63ca564ab657"
        },
        "item": {
          "id": "937b5fde-9444-490c-b2c9-bb26011fb49e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c61d39c2-f7ac-45d9-8de7-d98fb3638eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e619b7b-5f71-4cfc-9cec-b6b71e2dd324",
        "cursor": {
          "ref": "64205306-3515-4840-ba58-995da828a5e5",
          "length": 244,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "db95bf9a-b109-4213-9dbb-71ae4b9e2f54"
        },
        "item": {
          "id": "4e619b7b-5f71-4cfc-9cec-b6b71e2dd324",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "b6daa7a0-9dcb-4cba-834c-825c5797e0c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "108bfde9-463a-4e90-8b23-5bc46e3824f9",
        "cursor": {
          "ref": "d73c1a9b-1684-4a46-81f9-aaa2d2c9d4e0",
          "length": 244,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "54e4f8fc-3b45-4e9a-b1dc-0e819cf295f9"
        },
        "item": {
          "id": "108bfde9-463a-4e90-8b23-5bc46e3824f9",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "601a0a9f-670b-409f-bb10-3bf396f7e77e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8753303-a965-4a5e-8a23-4ab6f7e62898",
        "cursor": {
          "ref": "9b2b6bd9-7cdf-43dd-8dc4-6d47743ec48a",
          "length": 244,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "96c63610-dafb-4888-9f78-49784fe5c69d"
        },
        "item": {
          "id": "a8753303-a965-4a5e-8a23-4ab6f7e62898",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "652f2e9c-aa7e-4563-bbec-2b1d7d089cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c93d0d4-a0d5-4d7c-b384-caa89e1a2e10",
        "cursor": {
          "ref": "37924536-ee90-4a61-b066-d50f3f1fbe7c",
          "length": 244,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "4575f4d2-a88c-4327-91d0-c424507ac017"
        },
        "item": {
          "id": "9c93d0d4-a0d5-4d7c-b384-caa89e1a2e10",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d45d4c60-4043-43a0-a0ac-8d22ffdd8bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c0da41-fda7-4891-9b02-966120357234",
        "cursor": {
          "ref": "d5fc1d39-16dc-4f8b-8193-42c2a187081a",
          "length": 244,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2494d84f-1776-447f-8703-d21ca74f9806"
        },
        "item": {
          "id": "c6c0da41-fda7-4891-9b02-966120357234",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b3dc443f-9840-44c4-b57a-ed3c671db321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "756ab26f-9452-4f73-a7af-2edee4cdfa66",
        "cursor": {
          "ref": "5243af2c-3494-46c7-b29f-ffcfd0c75220",
          "length": 244,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e079033f-c896-406f-899e-64a0e44ab527"
        },
        "item": {
          "id": "756ab26f-9452-4f73-a7af-2edee4cdfa66",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0c9bf445-af2d-41eb-899a-392c578f7d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa343a8-bb51-456c-aa11-4b403b795c55",
        "cursor": {
          "ref": "f0fccc30-7ed1-4fd2-8c13-028b605dd616",
          "length": 244,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "01879737-3452-4e0c-baf3-e33ad380e9f8"
        },
        "item": {
          "id": "7aa343a8-bb51-456c-aa11-4b403b795c55",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "4ce24703-2196-4f6d-9492-d5677ae8a686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8134936b-2e64-4bac-9986-7074cdc9f92c",
        "cursor": {
          "ref": "afd232a1-320d-4993-8347-e70220e76fde",
          "length": 244,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c1e0572d-678d-4b9a-b3ac-36c8061345e9"
        },
        "item": {
          "id": "8134936b-2e64-4bac-9986-7074cdc9f92c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "44bcd6a4-846d-4544-af5f-f4011647aeb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd4a4ad-b37c-4d17-a8e5-194d283f5fb5",
        "cursor": {
          "ref": "7217e0de-6f9c-460f-b910-4fbb370388f5",
          "length": 244,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b5f3de6f-fa35-426f-bb22-348d00b56210"
        },
        "item": {
          "id": "acd4a4ad-b37c-4d17-a8e5-194d283f5fb5",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1181fee0-145b-48d3-a803-b3b6d8049bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d47718-2330-4e04-91e2-784bb9d52e47",
        "cursor": {
          "ref": "1ff56f1d-0f2b-4e66-8522-07e1b6d54717",
          "length": 244,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e5c78d1c-5a96-40da-84aa-315284e10fc9"
        },
        "item": {
          "id": "01d47718-2330-4e04-91e2-784bb9d52e47",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4cc2d029-414b-4cfb-88e2-15181bd1118b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e65669-b084-4fce-add0-98a525859049",
        "cursor": {
          "ref": "025f1fa3-2f02-4334-9a70-4159b250b7b3",
          "length": 244,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "9c273ae2-b184-438e-b0cb-366767136cb4"
        },
        "item": {
          "id": "68e65669-b084-4fce-add0-98a525859049",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c2556ae3-41ca-4259-96fa-21f9f6b2f6c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a098f08-7220-481c-a7bd-d32b14ce7c21",
        "cursor": {
          "ref": "4e0a25e1-847c-462b-b58f-063b371e1c9d",
          "length": 244,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "86fb40c7-fb47-42d4-8734-8d129db1ca1a"
        },
        "item": {
          "id": "8a098f08-7220-481c-a7bd-d32b14ce7c21",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "9327fac1-1592-4774-b4af-2c8252dbb4f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d23be6d6-3e3c-427f-9592-5e9eb44657d0",
        "cursor": {
          "ref": "76f45e74-2f0f-41af-88f5-444285a59702",
          "length": 244,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "98d82e23-e4ce-49ad-a61a-759284c72b79"
        },
        "item": {
          "id": "d23be6d6-3e3c-427f-9592-5e9eb44657d0",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "4e68c0fc-3c74-4ac5-bf46-51de998bfd81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dbe399d-f5d0-40f7-aea2-e55300ecce39",
        "cursor": {
          "ref": "d7b462c3-5b05-4e75-8283-30436c30ec95",
          "length": 244,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "14df1009-edd1-4db7-b5e0-9c995927a601"
        },
        "item": {
          "id": "4dbe399d-f5d0-40f7-aea2-e55300ecce39",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a0b5802b-986c-4974-8e48-5fe789b0f7a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e300d24-62a2-4097-aa61-fe7829606373",
        "cursor": {
          "ref": "ac318912-fecb-4e5d-b27f-39f763657e94",
          "length": 244,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "df186dec-ccf2-490c-a6a9-7946a39e7c98"
        },
        "item": {
          "id": "5e300d24-62a2-4097-aa61-fe7829606373",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "317481ea-a6dd-48cf-a886-a1375d706ed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9839607-4b65-4032-bd6a-df077cbd3136",
        "cursor": {
          "ref": "2763880e-9b3f-475a-90ab-1d31de008e14",
          "length": 244,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "eb218121-ef06-4b86-9cd0-8e83cb457564"
        },
        "item": {
          "id": "d9839607-4b65-4032-bd6a-df077cbd3136",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "cf7a967d-3ec5-49b2-b5f6-99b49c20607e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a11d9b-b43d-4981-a4e6-ca4548af42b7",
        "cursor": {
          "ref": "6d76ea21-5e67-4217-8f56-fa332c649a06",
          "length": 244,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b26973c6-2b8c-40bf-b912-def8b83e3c6f"
        },
        "item": {
          "id": "09a11d9b-b43d-4981-a4e6-ca4548af42b7",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "2549efa1-4009-4ed5-b238-b105bb9a23b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d1bd32-08e9-4cdd-85dd-886676f294d1",
        "cursor": {
          "ref": "21e1ba99-c13f-4fe6-a150-67c703bea80b",
          "length": 244,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d5cfa630-8cd5-4f56-a221-db2439f7af78"
        },
        "item": {
          "id": "d6d1bd32-08e9-4cdd-85dd-886676f294d1",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5a722e90-7125-425f-9a9c-7ec145d2159a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9455e1c4-b665-4de0-adeb-dec253a4c891",
        "cursor": {
          "ref": "6f023379-4da6-430f-ae45-f97485027bb9",
          "length": 244,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "0f74e9e5-1b29-40d8-923d-b370e3069b32"
        },
        "item": {
          "id": "9455e1c4-b665-4de0-adeb-dec253a4c891",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "36b1befe-06fe-4409-bb22-2e00eeafdbfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0294e10a-ebfb-4dc6-b30c-c382a50d364e",
        "cursor": {
          "ref": "919072d8-6efd-4333-a4ee-f4d771d45e8f",
          "length": 244,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8de482ce-1deb-4dd9-98a5-27df828f0d3a"
        },
        "item": {
          "id": "0294e10a-ebfb-4dc6-b30c-c382a50d364e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a7da738d-c8fc-4ba1-af61-b6d695b712cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5794ee85-9665-46d2-adf2-b580d0312002",
        "cursor": {
          "ref": "ff1929dd-7d0f-4d41-8fb8-e13766e6c183",
          "length": 244,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "417feaec-4975-40d2-a38d-5c0b6b4a3173"
        },
        "item": {
          "id": "5794ee85-9665-46d2-adf2-b580d0312002",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3e6102d4-d0c7-4d93-8b08-0f485d058cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561603fd-9ac9-42d0-b25b-de67f656c1c4",
        "cursor": {
          "ref": "c1b64685-6833-44b7-94fd-e573822e3c6e",
          "length": 244,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "7d8b919b-1a8e-4512-8fd9-66d202e6d6fe"
        },
        "item": {
          "id": "561603fd-9ac9-42d0-b25b-de67f656c1c4",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "afb2a3e6-b96e-4536-8dca-537388960b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce5a05a-5e27-4ba5-8f84-bb01b271ec1a",
        "cursor": {
          "ref": "6af0b3c1-f558-47ea-8eaf-dc1bb4be018b",
          "length": 244,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "8b4219e7-b6d4-471f-8d9e-ac8fe9f69de7"
        },
        "item": {
          "id": "7ce5a05a-5e27-4ba5-8f84-bb01b271ec1a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d54e97c4-4a70-4b95-aa34-6c9f8e26e636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ac8015-eb42-48ce-b79a-f23d1a105991",
        "cursor": {
          "ref": "1a01b0b3-ffc1-4084-8471-488637c3ca5d",
          "length": 244,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "799ca5ce-df3c-4c0e-99f5-cb0850ea593a"
        },
        "item": {
          "id": "58ac8015-eb42-48ce-b79a-f23d1a105991",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "24fd058a-e5f2-486c-881e-4340fe7f153d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfdc2067-1881-4344-8779-f9c5686a40a7",
        "cursor": {
          "ref": "163e8ef9-1339-4f8f-8b46-f45dc3db427f",
          "length": 244,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "563bc051-7341-43c8-9510-7f630072d2ee"
        },
        "item": {
          "id": "cfdc2067-1881-4344-8779-f9c5686a40a7",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "89493c33-8722-449b-8575-dd7b2cdf0f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "554ba6ed-5e8a-4495-9d8f-0f23f9fe9a41",
        "cursor": {
          "ref": "7690ab93-10f0-43e5-9272-6076d69d3fc5",
          "length": 244,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "dd1ea0fc-0269-4164-9f65-5c868ea4967b"
        },
        "item": {
          "id": "554ba6ed-5e8a-4495-9d8f-0f23f9fe9a41",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6984dcb9-704d-4c81-84bd-dbb834df0474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a14555-12dd-4881-b4b0-449c18895464",
        "cursor": {
          "ref": "8b69c85e-4f61-4bb3-93de-ac1083ab487c",
          "length": 244,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "71be06f4-c76c-46b9-ad73-58920133fe9f"
        },
        "item": {
          "id": "15a14555-12dd-4881-b4b0-449c18895464",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5e8e0d3c-ba53-466b-b9fc-0393432cb4ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2eeb87-feac-48ca-a356-c4ec1b158be0",
        "cursor": {
          "ref": "7dd6434b-1567-4d0c-8f09-d622bd7afd4c",
          "length": 244,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "bc11e045-0cc4-4560-9aa2-5ae712cca1a2"
        },
        "item": {
          "id": "2f2eeb87-feac-48ca-a356-c4ec1b158be0",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "6b00da53-a809-44e9-82e0-fad35b0c40f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea25238-5344-41f4-a6f5-a50a31c6bc4e",
        "cursor": {
          "ref": "c8dcfd2a-1c1f-43d1-9ad2-b8879221622d",
          "length": 244,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "1208c45c-4b3c-4d7e-b14d-526d106d19f8"
        },
        "item": {
          "id": "9ea25238-5344-41f4-a6f5-a50a31c6bc4e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f71fb09b-ac94-47b3-a04f-3417f1d97a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37efb5f-222c-4db8-b599-ccb1140c69eb",
        "cursor": {
          "ref": "873313f0-d5d7-4d88-be0b-c7ab27d30f4a",
          "length": 244,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a1f20f8b-9a1a-4261-9cfe-474af0b82a7c"
        },
        "item": {
          "id": "b37efb5f-222c-4db8-b599-ccb1140c69eb",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "956a6a92-1892-422f-b369-23aac879f73a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d30c57-b6aa-430f-9768-676e378ee0f9",
        "cursor": {
          "ref": "f97f4b83-4f19-4768-803d-4658f30a636c",
          "length": 244,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "6c137287-b58d-4ce0-8a68-ac98a46b0f60"
        },
        "item": {
          "id": "e0d30c57-b6aa-430f-9768-676e378ee0f9",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1c389e89-9740-4a73-a44f-145cd8bce828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d101c0-341a-4205-b499-f5ca0337bf98",
        "cursor": {
          "ref": "8a95c173-ceae-48ad-a299-e47d319036f3",
          "length": 244,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c177e965-1778-4e1f-8e59-6b098b9e6101"
        },
        "item": {
          "id": "77d101c0-341a-4205-b499-f5ca0337bf98",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "5af13a7b-f1f9-4e96-ba98-308f12feb3f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74980618-a038-4176-96ad-2de0dcb72d7e",
        "cursor": {
          "ref": "a7bb438e-63bc-4019-9c57-7a4ccec1b1f4",
          "length": 244,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "10b5eeb3-b8f3-433c-b7a5-58e32a34eada"
        },
        "item": {
          "id": "74980618-a038-4176-96ad-2de0dcb72d7e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b82c9601-cb3d-42ed-bdb0-6aafe4f7fd98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e405db7-3661-4f25-a7fa-00079ee6d933",
        "cursor": {
          "ref": "7f2e8560-6628-4cea-91d0-2e066feeeea7",
          "length": 244,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "9a1762d0-adda-412c-af31-24e9b86cfea1"
        },
        "item": {
          "id": "8e405db7-3661-4f25-a7fa-00079ee6d933",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "580e3413-3eec-454c-a0af-b5404f9f7f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053d62f7-c83e-424b-bf39-37299f7bc121",
        "cursor": {
          "ref": "f8737332-f4c6-418f-8fe6-81e9edf1e359",
          "length": 244,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "6d54358d-6dc8-4bc2-857c-d870101ee02d"
        },
        "item": {
          "id": "053d62f7-c83e-424b-bf39-37299f7bc121",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "95fc8dd9-665e-4f2f-bd16-09f211c01b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0459b7e-4d9d-4a49-acd0-78d501306ad8",
        "cursor": {
          "ref": "ef8f538e-1b4b-4db1-a5ff-d328f329eea8",
          "length": 244,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6c334864-8fee-4acb-b262-5aca99db6c9a"
        },
        "item": {
          "id": "c0459b7e-4d9d-4a49-acd0-78d501306ad8",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "377396fe-dd5e-42aa-9d20-955a8f4e9832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b53fe5-3ee7-44c0-ae4e-94eef15ae03d",
        "cursor": {
          "ref": "e98b7b20-c135-472d-9238-2bd2365f0de2",
          "length": 244,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8a511a68-9ecf-459a-8c7e-d2345709390e"
        },
        "item": {
          "id": "98b53fe5-3ee7-44c0-ae4e-94eef15ae03d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f0254402-42b9-4548-8202-cac9511634eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f75b8046-bb2b-4335-8ade-ed108da9a00d",
        "cursor": {
          "ref": "e1cba83f-5080-4cdf-91d2-3f0152e6c60b",
          "length": 244,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "041bfaba-88bd-40e7-a869-8f2c28c00177"
        },
        "item": {
          "id": "f75b8046-bb2b-4335-8ade-ed108da9a00d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4d9acb6b-27a6-41ef-821d-c44f8d906d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d4c4419-02cc-4056-a286-fb3266c85d45",
        "cursor": {
          "ref": "8cab57ec-5fc8-4163-937e-596c75957f5f",
          "length": 244,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d3f24550-4b70-4572-b6ca-a73a5df84bd5"
        },
        "item": {
          "id": "4d4c4419-02cc-4056-a286-fb3266c85d45",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e63d681d-3f98-4514-84b4-a1d10d289bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62853c96-08ed-4054-b9aa-8164e7e3d28c",
        "cursor": {
          "ref": "3a78c77a-a43f-4104-a2af-1106cff54476",
          "length": 244,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2b2e2137-d312-42bb-acf8-c1874476e405"
        },
        "item": {
          "id": "62853c96-08ed-4054-b9aa-8164e7e3d28c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "344f54e0-4ee8-461f-abd4-d172b69dc67f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd6dfc8b-3eae-4f57-857d-3461ba102eb3",
        "cursor": {
          "ref": "744e3b4d-fb9a-45f2-a1ce-a947e74028aa",
          "length": 244,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "9f76cc2d-4256-49b6-96e8-4bb922e98837"
        },
        "item": {
          "id": "fd6dfc8b-3eae-4f57-857d-3461ba102eb3",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "37ea6ded-a8cf-4cf2-b5bd-4b2a0c24d843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0846667-da6e-438e-ba5d-f3896613655b",
        "cursor": {
          "ref": "6383f501-9609-4da7-a5ca-d5635d76aaf2",
          "length": 244,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "11b18a04-bbc9-4ba1-8531-829d848a3cda"
        },
        "item": {
          "id": "b0846667-da6e-438e-ba5d-f3896613655b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b885d1cb-d007-4fa8-938a-2e0e03a84ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b1e115-62dc-40b0-9ff3-afb5222f5eb8",
        "cursor": {
          "ref": "25e280fd-0a18-46fa-8379-4383c06dca06",
          "length": 244,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "724a4ebe-978c-4904-a836-70759792e92f"
        },
        "item": {
          "id": "33b1e115-62dc-40b0-9ff3-afb5222f5eb8",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "79cdd550-5901-408c-9835-860c5a2b6f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a5f841-adca-4317-ab6f-b05cc2d91409",
        "cursor": {
          "ref": "e72e926c-6c22-492e-a84f-3a516b966349",
          "length": 244,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "99a0afd8-2d94-4855-8b2d-8208e29e96d7"
        },
        "item": {
          "id": "47a5f841-adca-4317-ab6f-b05cc2d91409",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ef05ad81-32c2-491b-99f3-450fe65b9446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "978b563a-d348-48cc-96f1-65586e97b94f",
        "cursor": {
          "ref": "9bb172a5-94af-4dc4-912b-16c49cf05b65",
          "length": 244,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "3610d5ac-81ba-4a4a-a2e8-59cc5bc580cb"
        },
        "item": {
          "id": "978b563a-d348-48cc-96f1-65586e97b94f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "cb0b996e-2787-4780-bbe4-3999de2c8ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5b3567-aadf-401f-803f-fb231a662fcb",
        "cursor": {
          "ref": "2b33dd17-37d8-4706-84d4-0dd0a35ce4d9",
          "length": 244,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "3e86a7fe-5c58-4bb7-8458-0f5f07fd0156"
        },
        "item": {
          "id": "4e5b3567-aadf-401f-803f-fb231a662fcb",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "10adb6e7-345c-4610-b9e5-2ad40bda0bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2427cf-1133-4a9c-b9df-a0d4e3ef1025",
        "cursor": {
          "ref": "78a1776b-293c-4e90-8de1-b2aaf405e02a",
          "length": 244,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "68299195-13fe-42d1-8136-5d1343ff098d"
        },
        "item": {
          "id": "1e2427cf-1133-4a9c-b9df-a0d4e3ef1025",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "05be4c91-a61f-4f20-9d6d-249b2c6db0a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc5d7aa-4856-4ac8-8504-6650cce971fa",
        "cursor": {
          "ref": "b9a3d483-2120-4946-9623-0a03b926d84e",
          "length": 244,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "39376c0e-f56d-489a-9bef-0c9ab1bad15e"
        },
        "item": {
          "id": "adc5d7aa-4856-4ac8-8504-6650cce971fa",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "6d131c29-585f-409c-8027-932f017781e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7494350a-d8b0-4e85-8743-2d266f413e86",
        "cursor": {
          "ref": "56d8b500-38da-41dd-b5d3-09ab74459efd",
          "length": 244,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "68cc8526-236a-45a8-b1b3-89b88ecb6489"
        },
        "item": {
          "id": "7494350a-d8b0-4e85-8743-2d266f413e86",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4f1fd64e-bbe5-42d0-b163-38aeb0d1be19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bde0ffc-ebcf-45f8-9b9f-73184bb5af03",
        "cursor": {
          "ref": "6eedf675-e2c6-411c-aee8-6d41cc446504",
          "length": 244,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4a013e2c-22a1-4e4b-895d-9eabcd7a486b"
        },
        "item": {
          "id": "5bde0ffc-ebcf-45f8-9b9f-73184bb5af03",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "be99f138-e315-4376-8f9d-6dfce86ed292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e6451e-e363-4078-a0fd-b846a9595c95",
        "cursor": {
          "ref": "e0488900-7fc3-4211-9d42-2eab54505ee2",
          "length": 244,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "9dd01495-2b90-4014-9063-9f5f6f88ac84"
        },
        "item": {
          "id": "12e6451e-e363-4078-a0fd-b846a9595c95",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6a3d0f9b-a20e-45da-b3bc-d353091612e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6257760b-fca3-44ca-8fb6-b1b26b9db824",
        "cursor": {
          "ref": "0590b159-fd70-42a2-acf0-b39c563757ae",
          "length": 244,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0abecb81-a399-4cab-9c2f-deecb2f76172"
        },
        "item": {
          "id": "6257760b-fca3-44ca-8fb6-b1b26b9db824",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "39c7f5a2-380c-4596-9d4e-0b7161e94c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d68f60-6983-48f3-a66b-15d73eac66fa",
        "cursor": {
          "ref": "bfdfaf6c-4b45-441d-bf7e-8df048d5502e",
          "length": 244,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "72ea057e-9150-4990-a06c-5fa8570be196"
        },
        "item": {
          "id": "78d68f60-6983-48f3-a66b-15d73eac66fa",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a55529da-ca86-42f1-a566-5b00430c446d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b0b8ec6-b15e-4c69-8dd4-70854198f419",
        "cursor": {
          "ref": "e88212ba-4139-42e1-a8a5-0ec982f3941a",
          "length": 244,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c4d4ab3e-5d3d-4a9b-ae6a-0d60fb56e1ab"
        },
        "item": {
          "id": "6b0b8ec6-b15e-4c69-8dd4-70854198f419",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "440757ac-96e2-4466-99b3-763b0c95b5af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b65f8cd-d907-4c19-a630-78141e763637",
        "cursor": {
          "ref": "edfe5bbb-392c-453e-ad89-1ffaceb0f9e5",
          "length": 244,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "151a6f07-a5f2-481e-bdb3-6dcc359e3885"
        },
        "item": {
          "id": "4b65f8cd-d907-4c19-a630-78141e763637",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3f2fb73f-1696-4575-bc8d-155fbbf19899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d67751-aa17-4796-80f9-407cf852b069",
        "cursor": {
          "ref": "5dd25ef4-afad-4802-90ed-1ae65c9cf5e8",
          "length": 244,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e4d88cbc-461e-4b32-b428-e9f0f8eac934"
        },
        "item": {
          "id": "16d67751-aa17-4796-80f9-407cf852b069",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "35f626df-c4b9-4e6f-b048-874ee37ebfdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ec5d8a-2a65-49c8-add0-e9abe2544473",
        "cursor": {
          "ref": "9cd8d001-c8f1-47e8-a76a-f4a877006bc6",
          "length": 244,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "1c6507a7-93ac-4460-a0af-519226717da6"
        },
        "item": {
          "id": "d2ec5d8a-2a65-49c8-add0-e9abe2544473",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e5371cf5-4913-4895-96f6-673c19b69e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7010df9-9bbe-4663-aab7-f7e272adde2b",
        "cursor": {
          "ref": "af6260fa-c011-4882-ab30-f547b519db45",
          "length": 244,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "015fe0dc-e7b4-4461-a190-6f0a9a6889f8"
        },
        "item": {
          "id": "e7010df9-9bbe-4663-aab7-f7e272adde2b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e9d2f2f5-ccbb-446a-8949-04a8f4452b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0108aca0-7337-41aa-a224-b6f31c378de1",
        "cursor": {
          "ref": "f73ba06b-ead1-4895-9242-cd2bd694ba94",
          "length": 244,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "0e4c58fc-1305-4655-bdab-fe8dd9b5ebdc"
        },
        "item": {
          "id": "0108aca0-7337-41aa-a224-b6f31c378de1",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "73227d79-e352-4369-a8cc-73db523e9ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d32d5851-a9d4-4aef-8318-374934f064da",
        "cursor": {
          "ref": "147864bf-862e-4014-a1fe-8a1fa2d512d5",
          "length": 244,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8cd80c9e-b4b1-4e7c-a6c3-ede9f1cb961b"
        },
        "item": {
          "id": "d32d5851-a9d4-4aef-8318-374934f064da",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "52efca6a-633b-49fa-9440-7ac24f20e8d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a623cca6-ad93-4f26-85b6-606c104bd4fe",
        "cursor": {
          "ref": "9226029f-4ff1-42eb-9558-2c83509e4804",
          "length": 244,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6bab163a-024f-4aff-b17d-0bcfea537a0a"
        },
        "item": {
          "id": "a623cca6-ad93-4f26-85b6-606c104bd4fe",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "250b2f2a-6843-478e-bb92-68526ace8682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3241e1-0477-4892-b923-f7bbd6199125",
        "cursor": {
          "ref": "177c060c-229a-4a20-ad79-b16213d7e4e4",
          "length": 244,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "8e5366c9-5c4b-4498-9bfa-c9f47b11b880"
        },
        "item": {
          "id": "7c3241e1-0477-4892-b923-f7bbd6199125",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a3228411-c204-46f5-a436-e480abfe7a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75eb18df-2439-4df3-a27a-a3d5dc743862",
        "cursor": {
          "ref": "58dc0977-86be-4c6f-8113-cea23ed0d587",
          "length": 244,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "407e17f2-e874-45a2-9bdf-c72b806fce0d"
        },
        "item": {
          "id": "75eb18df-2439-4df3-a27a-a3d5dc743862",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "77dfbc39-bd91-424d-9538-15aba0beade4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f529f29-1039-4343-bb4f-c27e411759de",
        "cursor": {
          "ref": "f5b04c31-a0db-462b-aeed-04ef1d96ce8a",
          "length": 244,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e079a663-8f26-442f-9568-e108679c1dd5"
        },
        "item": {
          "id": "0f529f29-1039-4343-bb4f-c27e411759de",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "639a4b04-7e26-4fd9-8306-4dc5054b7f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99cf52dc-897a-4715-8803-7c31f4193b57",
        "cursor": {
          "ref": "df4af70d-b53e-489f-bde3-13cdd54849b7",
          "length": 244,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b2e622e4-51a6-49bb-a1e6-f2a3ab5f5ab9"
        },
        "item": {
          "id": "99cf52dc-897a-4715-8803-7c31f4193b57",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7bf8d0dd-4b33-46dc-90b2-786154717de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45035a4e-ed0f-4699-b95f-d365e1cd7ad9",
        "cursor": {
          "ref": "dbd15405-22e3-49e7-9ce4-0213831ac26d",
          "length": 244,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "24c47e0a-c6a1-4f69-848b-7f02ead0287a"
        },
        "item": {
          "id": "45035a4e-ed0f-4699-b95f-d365e1cd7ad9",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "106b0d90-a81b-491d-81ba-fbbc5f5aadb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2eb8bc5-f6c1-4f06-99f0-3d18cb7d0271",
        "cursor": {
          "ref": "2acb42ae-b9fa-4c6e-8c18-34374bea8c90",
          "length": 244,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "169c0d0c-7c65-4b3b-9a90-a5d419264a7d"
        },
        "item": {
          "id": "f2eb8bc5-f6c1-4f06-99f0-3d18cb7d0271",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "946cb62b-0355-4303-a646-9d0f329ed6ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d047a7-e12c-4855-8530-434392ab6b7c",
        "cursor": {
          "ref": "def043ad-a74b-4dd2-987c-05b67ba3e74c",
          "length": 244,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f094b0aa-0c99-4751-9e4d-3bf0246e4ba4"
        },
        "item": {
          "id": "63d047a7-e12c-4855-8530-434392ab6b7c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9f0dfa1c-d2e8-42e4-b868-22d0d2d13bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1f6a9c-08a1-4417-b36e-c5a2d9167576",
        "cursor": {
          "ref": "209553c3-7b2b-4921-9ea9-f3b757df0072",
          "length": 244,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "36ecbe13-575d-4957-bfd3-258a249b915c"
        },
        "item": {
          "id": "8d1f6a9c-08a1-4417-b36e-c5a2d9167576",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "7239bdb0-9a01-48a1-aef5-32a6e29b1d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f6070c-9a27-4da7-9351-92b8ce0453a3",
        "cursor": {
          "ref": "a5c8b447-0641-4d47-bd93-b1c2c090e2d9",
          "length": 244,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "c2e37df7-7deb-4e99-baee-9c08a6996c4c"
        },
        "item": {
          "id": "78f6070c-9a27-4da7-9351-92b8ce0453a3",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "16bded0c-bdbd-4486-938b-2d550a4c256e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32840aca-42c5-4ba7-9d77-52ab1aa5b247",
        "cursor": {
          "ref": "6b338b49-f61e-4c70-864f-66ac9cf6dfdb",
          "length": 244,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e91759c1-4904-4478-aa6a-4119b499a4b3"
        },
        "item": {
          "id": "32840aca-42c5-4ba7-9d77-52ab1aa5b247",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "bd920469-fb5c-46d5-b541-cc60af09343c",
          "status": "OK",
          "code": 200,
          "responseTime": 562,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73e8133-fcc8-40c0-8d76-87c4d7509408",
        "cursor": {
          "ref": "4282011e-1e90-46be-a0a5-eca0a54b505c",
          "length": 244,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "07c0c1a6-6abd-4f5b-bcb2-a75d93c59fbd"
        },
        "item": {
          "id": "f73e8133-fcc8-40c0-8d76-87c4d7509408",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d58e9513-2776-427a-a026-6f6d2733599d",
          "status": "OK",
          "code": 200,
          "responseTime": 1708,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a925a515-073a-49d2-9845-693dbb8be32a",
        "cursor": {
          "ref": "88148d73-6444-4e91-8a22-e0c96eee78f8",
          "length": 244,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "4823a515-6f91-4744-94ed-b3c05344d237"
        },
        "item": {
          "id": "a925a515-073a-49d2-9845-693dbb8be32a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "21e06a88-9b72-4cd6-b09f-4eb0d98b02ba",
          "status": "OK",
          "code": 200,
          "responseTime": 1692,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc07d5b1-17f0-410c-94ae-aabf1175bfda",
        "cursor": {
          "ref": "1dd51c46-5f25-4446-9cb7-d198a6ea5d13",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3f2935b9-a563-42e4-bd30-5d364ad1c24e"
        },
        "item": {
          "id": "cc07d5b1-17f0-410c-94ae-aabf1175bfda",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "218152d4-6116-4ebb-b743-72439e66fa03",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc07d5b1-17f0-410c-94ae-aabf1175bfda",
        "cursor": {
          "ref": "1dd51c46-5f25-4446-9cb7-d198a6ea5d13",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3f2935b9-a563-42e4-bd30-5d364ad1c24e"
        },
        "item": {
          "id": "cc07d5b1-17f0-410c-94ae-aabf1175bfda",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "218152d4-6116-4ebb-b743-72439e66fa03",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6b1d4d7-cfe6-4051-8109-1d04f399b8bc",
        "cursor": {
          "ref": "85f736b1-89bf-4e75-a4a5-9475fa0457f7",
          "length": 244,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "60a79b61-47b5-43db-a497-3044d1f9f25b"
        },
        "item": {
          "id": "e6b1d4d7-cfe6-4051-8109-1d04f399b8bc",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d2a09de4-a719-47d8-829d-8e1e64cc8db0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b77c3922-386b-4214-a985-737a823bd94f",
        "cursor": {
          "ref": "7240b8ec-5ed7-4bf2-9730-de283ce2b2b4",
          "length": 244,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "17bca80c-9270-4d60-ba03-33431e373a4e"
        },
        "item": {
          "id": "b77c3922-386b-4214-a985-737a823bd94f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "bfa9d89d-e4f0-4eea-ae57-56e0eb9e37ac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}